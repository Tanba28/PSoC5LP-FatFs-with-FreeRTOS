ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ff.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ld_word,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	ld_word, %function
  24              	ld_word:
  25              	.LFB0:
  26              		.file 1 "..\\..\\ff14\\source\\ff.c"
   1:..\..\ff14\source/ff.c **** /*----------------------------------------------------------------------------/
   2:..\..\ff14\source/ff.c **** /  FatFs - Generic FAT Filesystem Module  R0.14                               /
   3:..\..\ff14\source/ff.c **** /-----------------------------------------------------------------------------/
   4:..\..\ff14\source/ff.c **** /
   5:..\..\ff14\source/ff.c **** / Copyright (C) 2019, ChaN, all right reserved.
   6:..\..\ff14\source/ff.c **** /
   7:..\..\ff14\source/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:..\..\ff14\source/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:..\..\ff14\source/ff.c **** / that the following condition is met:
  10:..\..\ff14\source/ff.c **** /
  11:..\..\ff14\source/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:..\..\ff14\source/ff.c **** /    this condition and the following disclaimer.
  13:..\..\ff14\source/ff.c **** /
  14:..\..\ff14\source/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:..\..\ff14\source/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:..\..\ff14\source/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:..\..\ff14\source/ff.c **** / by use of this software.
  18:..\..\ff14\source/ff.c **** /
  19:..\..\ff14\source/ff.c **** /----------------------------------------------------------------------------*/
  20:..\..\ff14\source/ff.c **** 
  21:..\..\ff14\source/ff.c **** 
  22:..\..\ff14\source/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  23:..\..\ff14\source/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  24:..\..\ff14\source/ff.c **** 
  25:..\..\ff14\source/ff.c **** 
  26:..\..\ff14\source/ff.c **** /*--------------------------------------------------------------------------
  27:..\..\ff14\source/ff.c **** 
  28:..\..\ff14\source/ff.c ****    Module Private Definitions
  29:..\..\ff14\source/ff.c **** 
  30:..\..\ff14\source/ff.c **** ---------------------------------------------------------------------------*/
  31:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 2


  32:..\..\ff14\source/ff.c **** #if FF_DEFINED != 86606	/* Revision ID */
  33:..\..\ff14\source/ff.c **** #error Wrong include file (ff.h).
  34:..\..\ff14\source/ff.c **** #endif
  35:..\..\ff14\source/ff.c **** 
  36:..\..\ff14\source/ff.c **** 
  37:..\..\ff14\source/ff.c **** /* Limits and boundaries */
  38:..\..\ff14\source/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
  39:..\..\ff14\source/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
  40:..\..\ff14\source/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but right for real DOS/Windows
  41:..\..\ff14\source/ff.c **** #define MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but right for real DOS/Window
  42:..\..\ff14\source/ff.c **** #define MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
  43:..\..\ff14\source/ff.c **** #define MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
  44:..\..\ff14\source/ff.c **** 
  45:..\..\ff14\source/ff.c **** 
  46:..\..\ff14\source/ff.c **** /* Character code support macros */
  47:..\..\ff14\source/ff.c **** #define IsUpper(c)		((c) >= 'A' && (c) <= 'Z')
  48:..\..\ff14\source/ff.c **** #define IsLower(c)		((c) >= 'a' && (c) <= 'z')
  49:..\..\ff14\source/ff.c **** #define IsDigit(c)		((c) >= '0' && (c) <= '9')
  50:..\..\ff14\source/ff.c **** #define IsSurrogate(c)	((c) >= 0xD800 && (c) <= 0xDFFF)
  51:..\..\ff14\source/ff.c **** #define IsSurrogateH(c)	((c) >= 0xD800 && (c) <= 0xDBFF)
  52:..\..\ff14\source/ff.c **** #define IsSurrogateL(c)	((c) >= 0xDC00 && (c) <= 0xDFFF)
  53:..\..\ff14\source/ff.c **** 
  54:..\..\ff14\source/ff.c **** 
  55:..\..\ff14\source/ff.c **** /* Additional file access control and file status flags for internal use */
  56:..\..\ff14\source/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
  57:..\..\ff14\source/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
  58:..\..\ff14\source/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
  59:..\..\ff14\source/ff.c **** 
  60:..\..\ff14\source/ff.c **** 
  61:..\..\ff14\source/ff.c **** /* Additional file attribute bits for internal use */
  62:..\..\ff14\source/ff.c **** #define AM_VOL		0x08	/* Volume label */
  63:..\..\ff14\source/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
  64:..\..\ff14\source/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
  65:..\..\ff14\source/ff.c **** 
  66:..\..\ff14\source/ff.c **** 
  67:..\..\ff14\source/ff.c **** /* Name status flags in fn[11] */
  68:..\..\ff14\source/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
  69:..\..\ff14\source/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
  70:..\..\ff14\source/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
  71:..\..\ff14\source/ff.c **** #define NS_LAST		0x04	/* Last segment */
  72:..\..\ff14\source/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
  73:..\..\ff14\source/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
  74:..\..\ff14\source/ff.c **** #define NS_DOT		0x20	/* Dot entry */
  75:..\..\ff14\source/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
  76:..\..\ff14\source/ff.c **** #define NS_NONAME	0x80	/* Not followed */
  77:..\..\ff14\source/ff.c **** 
  78:..\..\ff14\source/ff.c **** 
  79:..\..\ff14\source/ff.c **** /* exFAT directory entry types */
  80:..\..\ff14\source/ff.c **** #define	ET_BITMAP	0x81	/* Allocation bitmap */
  81:..\..\ff14\source/ff.c **** #define	ET_UPCASE	0x82	/* Up-case table */
  82:..\..\ff14\source/ff.c **** #define	ET_VLABEL	0x83	/* Volume label */
  83:..\..\ff14\source/ff.c **** #define	ET_FILEDIR	0x85	/* File and directory */
  84:..\..\ff14\source/ff.c **** #define	ET_STREAM	0xC0	/* Stream extension */
  85:..\..\ff14\source/ff.c **** #define	ET_FILENAME	0xC1	/* Name extension */
  86:..\..\ff14\source/ff.c **** 
  87:..\..\ff14\source/ff.c **** 
  88:..\..\ff14\source/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 3


  89:..\..\ff14\source/ff.c **** / because the C structure is not binary compatible between different platforms */
  90:..\..\ff14\source/ff.c **** 
  91:..\..\ff14\source/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
  92:..\..\ff14\source/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
  93:..\..\ff14\source/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
  94:..\..\ff14\source/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
  95:..\..\ff14\source/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
  96:..\..\ff14\source/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
  97:..\..\ff14\source/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT [entry] (WORD) */
  98:..\..\ff14\source/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
  99:..\..\ff14\source/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
 100:..\..\ff14\source/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
 101:..\..\ff14\source/ff.c **** #define BPB_SecPerTrk		24		/* Number of sectors per track for int13h [sector] (WORD) */
 102:..\..\ff14\source/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
 103:..\..\ff14\source/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
 104:..\..\ff14\source/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
 105:..\..\ff14\source/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
 106:..\..\ff14\source/ff.c **** #define BS_NTres			37		/* WindowsNT error flag (BYTE) */
 107:..\..\ff14\source/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
 108:..\..\ff14\source/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 109:..\..\ff14\source/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 110:..\..\ff14\source/ff.c **** #define BS_FilSysType		54		/* Filesystem type string (8-byte) */
 111:..\..\ff14\source/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 112:..\..\ff14\source/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 113:..\..\ff14\source/ff.c **** 
 114:..\..\ff14\source/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 115:..\..\ff14\source/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 116:..\..\ff14\source/ff.c **** #define BPB_FSVer32			42		/* FAT32: Filesystem version (WORD) */
 117:..\..\ff14\source/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 118:..\..\ff14\source/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 119:..\..\ff14\source/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 120:..\..\ff14\source/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 121:..\..\ff14\source/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 122:..\..\ff14\source/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 123:..\..\ff14\source/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 124:..\..\ff14\source/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 125:..\..\ff14\source/ff.c **** #define BS_FilSysType32		82		/* FAT32: Filesystem type string (8-byte) */
 126:..\..\ff14\source/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 127:..\..\ff14\source/ff.c **** 
 128:..\..\ff14\source/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 129:..\..\ff14\source/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
 130:..\..\ff14\source/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 131:..\..\ff14\source/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 132:..\..\ff14\source/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 133:..\..\ff14\source/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 134:..\..\ff14\source/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 135:..\..\ff14\source/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 136:..\..\ff14\source/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 137:..\..\ff14\source/ff.c **** #define BPB_FSVerEx			104		/* exFAT: Filesystem version (WORD) */
 138:..\..\ff14\source/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (WORD) */
 139:..\..\ff14\source/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 140:..\..\ff14\source/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 141:..\..\ff14\source/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 142:..\..\ff14\source/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 143:..\..\ff14\source/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 144:..\..\ff14\source/ff.c **** #define BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 145:..\..\ff14\source/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 4


 146:..\..\ff14\source/ff.c **** 
 147:..\..\ff14\source/ff.c **** #define DIR_Name			0		/* Short file name (11-byte) */
 148:..\..\ff14\source/ff.c **** #define DIR_Attr			11		/* Attribute (BYTE) */
 149:..\..\ff14\source/ff.c **** #define DIR_NTres			12		/* Lower case flag (BYTE) */
 150:..\..\ff14\source/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 151:..\..\ff14\source/ff.c **** #define DIR_CrtTime			14		/* Created time (DWORD) */
 152:..\..\ff14\source/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 153:..\..\ff14\source/ff.c **** #define DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 154:..\..\ff14\source/ff.c **** #define DIR_ModTime			22		/* Modified time (DWORD) */
 155:..\..\ff14\source/ff.c **** #define DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 156:..\..\ff14\source/ff.c **** #define DIR_FileSize		28		/* File size (DWORD) */
 157:..\..\ff14\source/ff.c **** #define LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 158:..\..\ff14\source/ff.c **** #define LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 159:..\..\ff14\source/ff.c **** #define LDIR_Type			12		/* LFN: Entry type (BYTE) */
 160:..\..\ff14\source/ff.c **** #define LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 161:..\..\ff14\source/ff.c **** #define LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 162:..\..\ff14\source/ff.c **** #define XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 163:..\..\ff14\source/ff.c **** #define XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 164:..\..\ff14\source/ff.c **** #define XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 165:..\..\ff14\source/ff.c **** #define XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 166:..\..\ff14\source/ff.c **** #define XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 167:..\..\ff14\source/ff.c **** #define XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 168:..\..\ff14\source/ff.c **** #define XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 169:..\..\ff14\source/ff.c **** #define XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 170:..\..\ff14\source/ff.c **** #define XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 171:..\..\ff14\source/ff.c **** #define XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 172:..\..\ff14\source/ff.c **** #define XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 173:..\..\ff14\source/ff.c **** #define XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 174:..\..\ff14\source/ff.c **** #define XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 175:..\..\ff14\source/ff.c **** #define XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 176:..\..\ff14\source/ff.c **** #define XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 177:..\..\ff14\source/ff.c **** #define XDIR_GenFlags		33		/* exFAT: General secondary flags (BYTE) */
 178:..\..\ff14\source/ff.c **** #define XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 179:..\..\ff14\source/ff.c **** #define XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 180:..\..\ff14\source/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 181:..\..\ff14\source/ff.c **** #define XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 182:..\..\ff14\source/ff.c **** #define XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 183:..\..\ff14\source/ff.c **** 
 184:..\..\ff14\source/ff.c **** #define SZDIRE				32		/* Size of a directory entry */
 185:..\..\ff14\source/ff.c **** #define DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
 186:..\..\ff14\source/ff.c **** #define RDDEM				0x05	/* Replacement of the character collides with DDEM */
 187:..\..\ff14\source/ff.c **** #define LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 188:..\..\ff14\source/ff.c **** 
 189:..\..\ff14\source/ff.c **** #define FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 190:..\..\ff14\source/ff.c **** #define FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 191:..\..\ff14\source/ff.c **** #define FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 192:..\..\ff14\source/ff.c **** #define FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 193:..\..\ff14\source/ff.c **** 
 194:..\..\ff14\source/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 195:..\..\ff14\source/ff.c **** #define SZ_PTE				16		/* MBR: Size of a partition table entry */
 196:..\..\ff14\source/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 197:..\..\ff14\source/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 198:..\..\ff14\source/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 199:..\..\ff14\source/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 200:..\..\ff14\source/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 201:..\..\ff14\source/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 202:..\..\ff14\source/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 5


 203:..\..\ff14\source/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 204:..\..\ff14\source/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 205:..\..\ff14\source/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 206:..\..\ff14\source/ff.c **** 
 207:..\..\ff14\source/ff.c **** #define GPTH_Sign			0		/* GPT: Header signature (8-byte) */
 208:..\..\ff14\source/ff.c **** #define GPTH_Rev			8		/* GPT: Revision (DWORD) */
 209:..\..\ff14\source/ff.c **** #define GPTH_Size			12		/* GPT: Header size (DWORD) */
 210:..\..\ff14\source/ff.c **** #define GPTH_Bcc			16		/* GPT: Header BCC (DWORD) */
 211:..\..\ff14\source/ff.c **** #define GPTH_CurLba			24		/* GPT: Main header LBA (QWORD) */
 212:..\..\ff14\source/ff.c **** #define GPTH_BakLba			32		/* GPT: Backup header LBA (QWORD) */
 213:..\..\ff14\source/ff.c **** #define GPTH_FstLba			40		/* GPT: First LBA for partitions (QWORD) */
 214:..\..\ff14\source/ff.c **** #define GPTH_LstLba			48		/* GPT: Last LBA for partitions (QWORD) */
 215:..\..\ff14\source/ff.c **** #define GPTH_DskGuid		56		/* GPT: Disk GUID (16-byte) */
 216:..\..\ff14\source/ff.c **** #define GPTH_PtOfs			72		/* GPT: Partation table LBA (QWORD) */
 217:..\..\ff14\source/ff.c **** #define GPTH_PtNum			80		/* GPT: Number of table entries (DWORD) */
 218:..\..\ff14\source/ff.c **** #define GPTH_PteSize		84		/* GPT: Size of table entry (DWORD) */
 219:..\..\ff14\source/ff.c **** #define GPTH_PtBcc			88		/* GPT: Partation table BCC (DWORD) */
 220:..\..\ff14\source/ff.c **** #define SZ_GPTE				128		/* GPT: Size of partition table entry */
 221:..\..\ff14\source/ff.c **** #define GPTE_PtGuid			0		/* GPT PTE: Partition type GUID (16-byte) */
 222:..\..\ff14\source/ff.c **** #define GPTE_UpGuid			16		/* GPT PTE: Partition unique GUID (16-byte) */
 223:..\..\ff14\source/ff.c **** #define GPTE_FstLba			32		/* GPT PTE: First LBA (QWORD) */
 224:..\..\ff14\source/ff.c **** #define GPTE_LstLba			40		/* GPT PTE: Last LBA inclusive (QWORD) */
 225:..\..\ff14\source/ff.c **** #define GPTE_Flags			48		/* GPT PTE: Flags (QWORD) */
 226:..\..\ff14\source/ff.c **** #define GPTE_Name			56		/* GPT PTE: Name */
 227:..\..\ff14\source/ff.c **** 
 228:..\..\ff14\source/ff.c **** 
 229:..\..\ff14\source/ff.c **** /* Post process on fatal error in the file operations */
 230:..\..\ff14\source/ff.c **** #define ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 231:..\..\ff14\source/ff.c **** 
 232:..\..\ff14\source/ff.c **** 
 233:..\..\ff14\source/ff.c **** /* Re-entrancy related */
 234:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT
 235:..\..\ff14\source/ff.c **** #if FF_USE_LFN == 1
 236:..\..\ff14\source/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 237:..\..\ff14\source/ff.c **** #endif
 238:..\..\ff14\source/ff.c **** #define LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 239:..\..\ff14\source/ff.c **** #else
 240:..\..\ff14\source/ff.c **** #define LEAVE_FF(fs, res)	return res
 241:..\..\ff14\source/ff.c **** #endif
 242:..\..\ff14\source/ff.c **** 
 243:..\..\ff14\source/ff.c **** 
 244:..\..\ff14\source/ff.c **** /* Definitions of logical drive - physical location conversion */
 245:..\..\ff14\source/ff.c **** #if FF_MULTI_PARTITION
 246:..\..\ff14\source/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 247:..\..\ff14\source/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 248:..\..\ff14\source/ff.c **** #else
 249:..\..\ff14\source/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is associated with the same physical drive num
 250:..\..\ff14\source/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 251:..\..\ff14\source/ff.c **** #endif
 252:..\..\ff14\source/ff.c **** 
 253:..\..\ff14\source/ff.c **** 
 254:..\..\ff14\source/ff.c **** /* Definitions of sector size */
 255:..\..\ff14\source/ff.c **** #if (FF_MAX_SS < FF_MIN_SS) || (FF_MAX_SS != 512 && FF_MAX_SS != 1024 && FF_MAX_SS != 2048 && FF_MA
 256:..\..\ff14\source/ff.c **** #error Wrong sector size configuration
 257:..\..\ff14\source/ff.c **** #endif
 258:..\..\ff14\source/ff.c **** #if FF_MAX_SS == FF_MIN_SS
 259:..\..\ff14\source/ff.c **** #define SS(fs)	((UINT)FF_MAX_SS)	/* Fixed sector size */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 6


 260:..\..\ff14\source/ff.c **** #else
 261:..\..\ff14\source/ff.c **** #define SS(fs)	((fs)->ssize)	/* Variable sector size */
 262:..\..\ff14\source/ff.c **** #endif
 263:..\..\ff14\source/ff.c **** 
 264:..\..\ff14\source/ff.c **** 
 265:..\..\ff14\source/ff.c **** /* Timestamp */
 266:..\..\ff14\source/ff.c **** #if FF_FS_NORTC == 1
 267:..\..\ff14\source/ff.c **** #if FF_NORTC_YEAR < 1980 || FF_NORTC_YEAR > 2107 || FF_NORTC_MON < 1 || FF_NORTC_MON > 12 || FF_NOR
 268:..\..\ff14\source/ff.c **** #error Invalid FF_FS_NORTC settings
 269:..\..\ff14\source/ff.c **** #endif
 270:..\..\ff14\source/ff.c **** #define GET_FATTIME()	((DWORD)(FF_NORTC_YEAR - 1980) << 25 | (DWORD)FF_NORTC_MON << 21 | (DWORD)FF_
 271:..\..\ff14\source/ff.c **** #else
 272:..\..\ff14\source/ff.c **** #define GET_FATTIME()	get_fattime()
 273:..\..\ff14\source/ff.c **** #endif
 274:..\..\ff14\source/ff.c **** 
 275:..\..\ff14\source/ff.c **** 
 276:..\..\ff14\source/ff.c **** /* File lock controls */
 277:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
 278:..\..\ff14\source/ff.c **** #if FF_FS_READONLY
 279:..\..\ff14\source/ff.c **** #error FF_FS_LOCK must be 0 at read-only configuration
 280:..\..\ff14\source/ff.c **** #endif
 281:..\..\ff14\source/ff.c **** typedef struct {
 282:..\..\ff14\source/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 283:..\..\ff14\source/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 284:..\..\ff14\source/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 285:..\..\ff14\source/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 286:..\..\ff14\source/ff.c **** } FILESEM;
 287:..\..\ff14\source/ff.c **** #endif
 288:..\..\ff14\source/ff.c **** 
 289:..\..\ff14\source/ff.c **** 
 290:..\..\ff14\source/ff.c **** /* SBCS up-case tables (\x80-\xFF) */
 291:..\..\ff14\source/ff.c **** #define TBL_CT437  {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
 292:..\..\ff14\source/ff.c **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 293:..\..\ff14\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 294:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 295:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 296:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 297:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 298:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 299:..\..\ff14\source/ff.c **** #define TBL_CT720  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 300:..\..\ff14\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 301:..\..\ff14\source/ff.c **** 					0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 302:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 303:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 304:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 305:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 306:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 307:..\..\ff14\source/ff.c **** #define TBL_CT737  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 308:..\..\ff14\source/ff.c **** 					0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 309:..\..\ff14\source/ff.c **** 					0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 310:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 311:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 312:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 313:..\..\ff14\source/ff.c **** 					0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 314:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 315:..\..\ff14\source/ff.c **** #define TBL_CT771  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 316:..\..\ff14\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 7


 317:..\..\ff14\source/ff.c **** 					0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 318:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 319:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 320:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 321:..\..\ff14\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 322:..\..\ff14\source/ff.c **** 					0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 323:..\..\ff14\source/ff.c **** #define TBL_CT775  {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F
 324:..\..\ff14\source/ff.c **** 					0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 325:..\..\ff14\source/ff.c **** 					0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 326:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 327:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 328:..\..\ff14\source/ff.c **** 					0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 329:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 330:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 331:..\..\ff14\source/ff.c **** #define TBL_CT850  {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41
 332:..\..\ff14\source/ff.c **** 					0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 333:..\..\ff14\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 334:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 335:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 336:..\..\ff14\source/ff.c **** 					0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 337:..\..\ff14\source/ff.c **** 					0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 338:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 339:..\..\ff14\source/ff.c **** #define TBL_CT852  {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F
 340:..\..\ff14\source/ff.c **** 					0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 341:..\..\ff14\source/ff.c **** 					0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 342:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 343:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 344:..\..\ff14\source/ff.c **** 					0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 345:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 346:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 347:..\..\ff14\source/ff.c **** #define TBL_CT855  {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F
 348:..\..\ff14\source/ff.c **** 					0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 349:..\..\ff14\source/ff.c **** 					0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 350:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 351:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 352:..\..\ff14\source/ff.c **** 					0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 353:..\..\ff14\source/ff.c **** 					0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 354:..\..\ff14\source/ff.c **** 					0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 355:..\..\ff14\source/ff.c **** #define TBL_CT857  {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F
 356:..\..\ff14\source/ff.c **** 					0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 357:..\..\ff14\source/ff.c **** 					0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 358:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 359:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 360:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 361:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 362:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 363:..\..\ff14\source/ff.c **** #define TBL_CT860  {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F
 364:..\..\ff14\source/ff.c **** 					0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 365:..\..\ff14\source/ff.c **** 					0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 366:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 367:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 368:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 369:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 370:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 371:..\..\ff14\source/ff.c **** #define TBL_CT861  {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F
 372:..\..\ff14\source/ff.c **** 					0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 373:..\..\ff14\source/ff.c **** 					0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 8


 374:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 375:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 376:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 377:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 378:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 379:..\..\ff14\source/ff.c **** #define TBL_CT862  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 380:..\..\ff14\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 381:..\..\ff14\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 382:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 383:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 384:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 385:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 386:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 387:..\..\ff14\source/ff.c **** #define TBL_CT863  {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F
 388:..\..\ff14\source/ff.c **** 					0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 389:..\..\ff14\source/ff.c **** 					0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 390:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 391:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 392:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 393:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 394:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 395:..\..\ff14\source/ff.c **** #define TBL_CT864  {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
 396:..\..\ff14\source/ff.c **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 397:..\..\ff14\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 398:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 399:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 400:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 401:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 402:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 403:..\..\ff14\source/ff.c **** #define TBL_CT865  {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
 404:..\..\ff14\source/ff.c **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 405:..\..\ff14\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 406:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 407:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 408:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 409:..\..\ff14\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 410:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 411:..\..\ff14\source/ff.c **** #define TBL_CT866  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 412:..\..\ff14\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 413:..\..\ff14\source/ff.c **** 					0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 414:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 415:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 416:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 417:..\..\ff14\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 418:..\..\ff14\source/ff.c **** 					0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 419:..\..\ff14\source/ff.c **** #define TBL_CT869  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 420:..\..\ff14\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 421:..\..\ff14\source/ff.c **** 					0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 422:..\..\ff14\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 423:..\..\ff14\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 424:..\..\ff14\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 425:..\..\ff14\source/ff.c **** 					0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 426:..\..\ff14\source/ff.c **** 					0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 427:..\..\ff14\source/ff.c **** 
 428:..\..\ff14\source/ff.c **** 
 429:..\..\ff14\source/ff.c **** /* DBCS code range |----- 1st byte -----|  |----------- 2nd byte -----------| */
 430:..\..\ff14\source/ff.c **** /*                  <------>    <------>    <------>    <------>    <------>  */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 9


 431:..\..\ff14\source/ff.c **** #define TBL_DC932 {0x81, 0x9F, 0xE0, 0xFC, 0x40, 0x7E, 0x80, 0xFC, 0x00, 0x00}
 432:..\..\ff14\source/ff.c **** #define TBL_DC936 {0x81, 0xFE, 0x00, 0x00, 0x40, 0x7E, 0x80, 0xFE, 0x00, 0x00}
 433:..\..\ff14\source/ff.c **** #define TBL_DC949 {0x81, 0xFE, 0x00, 0x00, 0x41, 0x5A, 0x61, 0x7A, 0x81, 0xFE}
 434:..\..\ff14\source/ff.c **** #define TBL_DC950 {0x81, 0xFE, 0x00, 0x00, 0x40, 0x7E, 0xA1, 0xFE, 0x00, 0x00}
 435:..\..\ff14\source/ff.c **** 
 436:..\..\ff14\source/ff.c **** 
 437:..\..\ff14\source/ff.c **** /* Macros for table definitions */
 438:..\..\ff14\source/ff.c **** #define MERGE_2STR(a, b) a ## b
 439:..\..\ff14\source/ff.c **** #define MKCVTBL(hd, cp) MERGE_2STR(hd, cp)
 440:..\..\ff14\source/ff.c **** 
 441:..\..\ff14\source/ff.c **** 
 442:..\..\ff14\source/ff.c **** 
 443:..\..\ff14\source/ff.c **** 
 444:..\..\ff14\source/ff.c **** /*--------------------------------------------------------------------------
 445:..\..\ff14\source/ff.c **** 
 446:..\..\ff14\source/ff.c ****    Module Private Work Area
 447:..\..\ff14\source/ff.c **** 
 448:..\..\ff14\source/ff.c **** ---------------------------------------------------------------------------*/
 449:..\..\ff14\source/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 450:..\..\ff14\source/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 451:..\..\ff14\source/ff.c **** /  not compliance with C standard. */
 452:..\..\ff14\source/ff.c **** 
 453:..\..\ff14\source/ff.c **** /*--------------------------------*/
 454:..\..\ff14\source/ff.c **** /* File/Volume controls           */
 455:..\..\ff14\source/ff.c **** /*--------------------------------*/
 456:..\..\ff14\source/ff.c **** 
 457:..\..\ff14\source/ff.c **** #if FF_VOLUMES < 1 || FF_VOLUMES > 10
 458:..\..\ff14\source/ff.c **** #error Wrong FF_VOLUMES setting
 459:..\..\ff14\source/ff.c **** #endif
 460:..\..\ff14\source/ff.c **** static FATFS* FatFs[FF_VOLUMES];	/* Pointer to the filesystem objects (logical drives) */
 461:..\..\ff14\source/ff.c **** static WORD Fsid;					/* Filesystem mount ID */
 462:..\..\ff14\source/ff.c **** 
 463:..\..\ff14\source/ff.c **** #if FF_FS_RPATH != 0
 464:..\..\ff14\source/ff.c **** static BYTE CurrVol;				/* Current drive */
 465:..\..\ff14\source/ff.c **** #endif
 466:..\..\ff14\source/ff.c **** 
 467:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
 468:..\..\ff14\source/ff.c **** static FILESEM Files[FF_FS_LOCK];	/* Open object lock semaphores */
 469:..\..\ff14\source/ff.c **** #endif
 470:..\..\ff14\source/ff.c **** 
 471:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID
 472:..\..\ff14\source/ff.c **** #ifdef FF_VOLUME_STRS
 473:..\..\ff14\source/ff.c **** static const char* const VolumeStr[FF_VOLUMES] = {FF_VOLUME_STRS};	/* Pre-defined volume ID */
 474:..\..\ff14\source/ff.c **** #endif
 475:..\..\ff14\source/ff.c **** #endif
 476:..\..\ff14\source/ff.c **** 
 477:..\..\ff14\source/ff.c **** #if FF_LBA64
 478:..\..\ff14\source/ff.c **** #if FF_MIN_GPT > 0x100000000
 479:..\..\ff14\source/ff.c **** #error Wrong FF_MIN_GPT setting
 480:..\..\ff14\source/ff.c **** #endif
 481:..\..\ff14\source/ff.c **** static const BYTE GUID_MS_Basic[16] = {0xA2,0xA0,0xD0,0xEB,0xE5,0xB9,0x33,0x44,0x87,0xC0,0x68,0xB6,
 482:..\..\ff14\source/ff.c **** #endif
 483:..\..\ff14\source/ff.c **** 
 484:..\..\ff14\source/ff.c **** 
 485:..\..\ff14\source/ff.c **** 
 486:..\..\ff14\source/ff.c **** /*--------------------------------*/
 487:..\..\ff14\source/ff.c **** /* LFN/Directory working buffer   */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 10


 488:..\..\ff14\source/ff.c **** /*--------------------------------*/
 489:..\..\ff14\source/ff.c **** 
 490:..\..\ff14\source/ff.c **** #if FF_USE_LFN == 0		/* Non-LFN configuration */
 491:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 492:..\..\ff14\source/ff.c **** #error LFN must be enabled when enable exFAT
 493:..\..\ff14\source/ff.c **** #endif
 494:..\..\ff14\source/ff.c **** #define DEF_NAMBUF
 495:..\..\ff14\source/ff.c **** #define INIT_NAMBUF(fs)
 496:..\..\ff14\source/ff.c **** #define FREE_NAMBUF()
 497:..\..\ff14\source/ff.c **** #define LEAVE_MKFS(res)	return res
 498:..\..\ff14\source/ff.c **** 
 499:..\..\ff14\source/ff.c **** #else					/* LFN configurations */
 500:..\..\ff14\source/ff.c **** #if FF_MAX_LFN < 12 || FF_MAX_LFN > 255
 501:..\..\ff14\source/ff.c **** #error Wrong setting of FF_MAX_LFN
 502:..\..\ff14\source/ff.c **** #endif
 503:..\..\ff14\source/ff.c **** #if FF_LFN_BUF < FF_SFN_BUF || FF_SFN_BUF < 12
 504:..\..\ff14\source/ff.c **** #error Wrong setting of FF_LFN_BUF or FF_SFN_BUF
 505:..\..\ff14\source/ff.c **** #endif
 506:..\..\ff14\source/ff.c **** #if FF_LFN_UNICODE < 0 || FF_LFN_UNICODE > 3
 507:..\..\ff14\source/ff.c **** #error Wrong setting of FF_LFN_UNICODE
 508:..\..\ff14\source/ff.c **** #endif
 509:..\..\ff14\source/ff.c **** static const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* FAT: Offset of LFN characters 
 510:..\..\ff14\source/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)	/* exFAT: Size of directory entry block scratchpad b
 511:..\..\ff14\source/ff.c **** 
 512:..\..\ff14\source/ff.c **** #if FF_USE_LFN == 1		/* LFN enabled with static working buffer */
 513:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 514:..\..\ff14\source/ff.c **** static BYTE	DirBuf[MAXDIRB(FF_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 515:..\..\ff14\source/ff.c **** #endif
 516:..\..\ff14\source/ff.c **** static WCHAR LfnBuf[FF_MAX_LFN + 1];		/* LFN working buffer */
 517:..\..\ff14\source/ff.c **** #define DEF_NAMBUF
 518:..\..\ff14\source/ff.c **** #define INIT_NAMBUF(fs)
 519:..\..\ff14\source/ff.c **** #define FREE_NAMBUF()
 520:..\..\ff14\source/ff.c **** #define LEAVE_MKFS(res)	return res
 521:..\..\ff14\source/ff.c **** 
 522:..\..\ff14\source/ff.c **** #elif FF_USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 523:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 524:..\..\ff14\source/ff.c **** #define DEF_NAMBUF		WCHAR lbuf[FF_MAX_LFN+1]; BYTE dbuf[MAXDIRB(FF_MAX_LFN)];	/* LFN working buffer
 525:..\..\ff14\source/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 526:..\..\ff14\source/ff.c **** #define FREE_NAMBUF()
 527:..\..\ff14\source/ff.c **** #else
 528:..\..\ff14\source/ff.c **** #define DEF_NAMBUF		WCHAR lbuf[FF_MAX_LFN+1];	/* LFN working buffer */
 529:..\..\ff14\source/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 530:..\..\ff14\source/ff.c **** #define FREE_NAMBUF()
 531:..\..\ff14\source/ff.c **** #endif
 532:..\..\ff14\source/ff.c **** #define LEAVE_MKFS(res)	return res
 533:..\..\ff14\source/ff.c **** 
 534:..\..\ff14\source/ff.c **** #elif FF_USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 535:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 536:..\..\ff14\source/ff.c **** #define DEF_NAMBUF		WCHAR *lfn;	/* Pointer to LFN working buffer and directory entry block scratchp
 537:..\..\ff14\source/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((FF_MAX_LFN+1)*2 + MAXDIRB(FF_MAX_LFN)); if (!lfn) LEAV
 538:..\..\ff14\source/ff.c **** #define FREE_NAMBUF()	ff_memfree(lfn)
 539:..\..\ff14\source/ff.c **** #else
 540:..\..\ff14\source/ff.c **** #define DEF_NAMBUF		WCHAR *lfn;	/* Pointer to LFN working buffer */
 541:..\..\ff14\source/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((FF_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH
 542:..\..\ff14\source/ff.c **** #define FREE_NAMBUF()	ff_memfree(lfn)
 543:..\..\ff14\source/ff.c **** #endif
 544:..\..\ff14\source/ff.c **** #define LEAVE_MKFS(res)	{ if (!work) ff_memfree(buf); return res; }
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 11


 545:..\..\ff14\source/ff.c **** #define MAX_MALLOC	0x8000	/* Must be >=FF_MAX_SS */
 546:..\..\ff14\source/ff.c **** 
 547:..\..\ff14\source/ff.c **** #else
 548:..\..\ff14\source/ff.c **** #error Wrong setting of FF_USE_LFN
 549:..\..\ff14\source/ff.c **** 
 550:..\..\ff14\source/ff.c **** #endif	/* FF_USE_LFN == 1 */
 551:..\..\ff14\source/ff.c **** #endif	/* FF_USE_LFN == 0 */
 552:..\..\ff14\source/ff.c **** 
 553:..\..\ff14\source/ff.c **** 
 554:..\..\ff14\source/ff.c **** 
 555:..\..\ff14\source/ff.c **** /*--------------------------------*/
 556:..\..\ff14\source/ff.c **** /* Code conversion tables         */
 557:..\..\ff14\source/ff.c **** /*--------------------------------*/
 558:..\..\ff14\source/ff.c **** 
 559:..\..\ff14\source/ff.c **** #if FF_CODE_PAGE == 0		/* Run-time code page configuration */
 560:..\..\ff14\source/ff.c **** #define CODEPAGE CodePage
 561:..\..\ff14\source/ff.c **** static WORD CodePage;	/* Current code page */
 562:..\..\ff14\source/ff.c **** static const BYTE *ExCvt, *DbcTbl;	/* Pointer to current SBCS up-case table and DBCS code range tab
 563:..\..\ff14\source/ff.c **** 
 564:..\..\ff14\source/ff.c **** static const BYTE Ct437[] = TBL_CT437;
 565:..\..\ff14\source/ff.c **** static const BYTE Ct720[] = TBL_CT720;
 566:..\..\ff14\source/ff.c **** static const BYTE Ct737[] = TBL_CT737;
 567:..\..\ff14\source/ff.c **** static const BYTE Ct771[] = TBL_CT771;
 568:..\..\ff14\source/ff.c **** static const BYTE Ct775[] = TBL_CT775;
 569:..\..\ff14\source/ff.c **** static const BYTE Ct850[] = TBL_CT850;
 570:..\..\ff14\source/ff.c **** static const BYTE Ct852[] = TBL_CT852;
 571:..\..\ff14\source/ff.c **** static const BYTE Ct855[] = TBL_CT855;
 572:..\..\ff14\source/ff.c **** static const BYTE Ct857[] = TBL_CT857;
 573:..\..\ff14\source/ff.c **** static const BYTE Ct860[] = TBL_CT860;
 574:..\..\ff14\source/ff.c **** static const BYTE Ct861[] = TBL_CT861;
 575:..\..\ff14\source/ff.c **** static const BYTE Ct862[] = TBL_CT862;
 576:..\..\ff14\source/ff.c **** static const BYTE Ct863[] = TBL_CT863;
 577:..\..\ff14\source/ff.c **** static const BYTE Ct864[] = TBL_CT864;
 578:..\..\ff14\source/ff.c **** static const BYTE Ct865[] = TBL_CT865;
 579:..\..\ff14\source/ff.c **** static const BYTE Ct866[] = TBL_CT866;
 580:..\..\ff14\source/ff.c **** static const BYTE Ct869[] = TBL_CT869;
 581:..\..\ff14\source/ff.c **** static const BYTE Dc932[] = TBL_DC932;
 582:..\..\ff14\source/ff.c **** static const BYTE Dc936[] = TBL_DC936;
 583:..\..\ff14\source/ff.c **** static const BYTE Dc949[] = TBL_DC949;
 584:..\..\ff14\source/ff.c **** static const BYTE Dc950[] = TBL_DC950;
 585:..\..\ff14\source/ff.c **** 
 586:..\..\ff14\source/ff.c **** #elif FF_CODE_PAGE < 900	/* Static code page configuration (SBCS) */
 587:..\..\ff14\source/ff.c **** #define CODEPAGE FF_CODE_PAGE
 588:..\..\ff14\source/ff.c **** static const BYTE ExCvt[] = MKCVTBL(TBL_CT, FF_CODE_PAGE);
 589:..\..\ff14\source/ff.c **** 
 590:..\..\ff14\source/ff.c **** #else					/* Static code page configuration (DBCS) */
 591:..\..\ff14\source/ff.c **** #define CODEPAGE FF_CODE_PAGE
 592:..\..\ff14\source/ff.c **** static const BYTE DbcTbl[] = MKCVTBL(TBL_DC, FF_CODE_PAGE);
 593:..\..\ff14\source/ff.c **** 
 594:..\..\ff14\source/ff.c **** #endif
 595:..\..\ff14\source/ff.c **** 
 596:..\..\ff14\source/ff.c **** 
 597:..\..\ff14\source/ff.c **** 
 598:..\..\ff14\source/ff.c **** 
 599:..\..\ff14\source/ff.c **** /*--------------------------------------------------------------------------
 600:..\..\ff14\source/ff.c **** 
 601:..\..\ff14\source/ff.c ****    Module Private Functions
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 12


 602:..\..\ff14\source/ff.c **** 
 603:..\..\ff14\source/ff.c **** ---------------------------------------------------------------------------*/
 604:..\..\ff14\source/ff.c **** 
 605:..\..\ff14\source/ff.c **** 
 606:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
 607:..\..\ff14\source/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 608:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
 609:..\..\ff14\source/ff.c **** 
 610:..\..\ff14\source/ff.c **** static WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 611:..\..\ff14\source/ff.c **** {
  27              		.loc 1 611 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 612:..\..\ff14\source/ff.c **** 	WORD rv;
 613:..\..\ff14\source/ff.c **** 
 614:..\..\ff14\source/ff.c **** 	rv = ptr[1];
  33              		.loc 1 614 0
  34 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  35              	.LVL1:
 615:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 615 0
  37 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  38              	.LVL2:
 616:..\..\ff14\source/ff.c **** 	return rv;
 617:..\..\ff14\source/ff.c **** }
  39              		.loc 1 617 0
  40 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  41              	.LVL3:
  42 0008 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE0:
  45              		.size	ld_word, .-ld_word
  46 000a 00BF     		.section	.text.ld_dword,"ax",%progbits
  47              		.align	2
  48              		.thumb
  49              		.thumb_func
  50              		.type	ld_dword, %function
  51              	ld_dword:
  52              	.LFB1:
 618:..\..\ff14\source/ff.c **** 
 619:..\..\ff14\source/ff.c **** static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 620:..\..\ff14\source/ff.c **** {
  53              		.loc 1 620 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL4:
 621:..\..\ff14\source/ff.c **** 	DWORD rv;
 622:..\..\ff14\source/ff.c **** 
 623:..\..\ff14\source/ff.c **** 	rv = ptr[3];
  59              		.loc 1 623 0
  60 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  61              	.LVL5:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 13


 624:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[2];
  62              		.loc 1 624 0
  63 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  64 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  65              	.LVL6:
 625:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[1];
  66              		.loc 1 625 0
  67 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  68 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  69              	.LVL7:
 626:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[0];
  70              		.loc 1 626 0
  71 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  72              	.LVL8:
 627:..\..\ff14\source/ff.c **** 	return rv;
 628:..\..\ff14\source/ff.c **** }
  73              		.loc 1 628 0
  74 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  75              	.LVL9:
  76 0014 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE1:
  79              		.size	ld_dword, .-ld_dword
  80 0016 00BF     		.section	.text.st_word,"ax",%progbits
  81              		.align	2
  82              		.thumb
  83              		.thumb_func
  84              		.type	st_word, %function
  85              	st_word:
  86              	.LFB2:
 629:..\..\ff14\source/ff.c **** 
 630:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 631:..\..\ff14\source/ff.c **** static QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 632:..\..\ff14\source/ff.c **** {
 633:..\..\ff14\source/ff.c **** 	QWORD rv;
 634:..\..\ff14\source/ff.c **** 
 635:..\..\ff14\source/ff.c **** 	rv = ptr[7];
 636:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[6];
 637:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[5];
 638:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[4];
 639:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[3];
 640:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[2];
 641:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[1];
 642:..\..\ff14\source/ff.c **** 	rv = rv << 8 | ptr[0];
 643:..\..\ff14\source/ff.c **** 	return rv;
 644:..\..\ff14\source/ff.c **** }
 645:..\..\ff14\source/ff.c **** #endif
 646:..\..\ff14\source/ff.c **** 
 647:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
 648:..\..\ff14\source/ff.c **** static void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 649:..\..\ff14\source/ff.c **** {
  87              		.loc 1 649 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL10:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 14


 650:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
  93              		.loc 1 650 0
  94 0000 0170     		strb	r1, [r0]
  95              	.LVL11:
 651:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val;
  96              		.loc 1 651 0
  97 0002 090A     		lsrs	r1, r1, #8
  98              	.LVL12:
  99 0004 4170     		strb	r1, [r0, #1]
 100 0006 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE2:
 103              		.size	st_word, .-st_word
 104              		.section	.text.st_dword,"ax",%progbits
 105              		.align	2
 106              		.thumb
 107              		.thumb_func
 108              		.type	st_dword, %function
 109              	st_dword:
 110              	.LFB3:
 652:..\..\ff14\source/ff.c **** }
 653:..\..\ff14\source/ff.c **** 
 654:..\..\ff14\source/ff.c **** static void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 655:..\..\ff14\source/ff.c **** {
 111              		.loc 1 655 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.LVL13:
 656:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 117              		.loc 1 656 0
 118 0000 0170     		strb	r1, [r0]
 119              	.LVL14:
 657:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 120              		.loc 1 657 0
 121 0002 C1F30723 		ubfx	r3, r1, #8, #8
 122 0006 4370     		strb	r3, [r0, #1]
 123              	.LVL15:
 658:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 124              		.loc 1 658 0
 125 0008 C1F30743 		ubfx	r3, r1, #16, #8
 126 000c 8370     		strb	r3, [r0, #2]
 127              	.LVL16:
 659:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val;
 128              		.loc 1 659 0
 129 000e 090E     		lsrs	r1, r1, #24
 130              	.LVL17:
 131 0010 C170     		strb	r1, [r0, #3]
 132 0012 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE3:
 135              		.size	st_dword, .-st_dword
 136              		.section	.text.mem_cpy,"ax",%progbits
 137              		.align	2
 138              		.thumb
 139              		.thumb_func
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 15


 140              		.type	mem_cpy, %function
 141              	mem_cpy:
 142              	.LFB4:
 660:..\..\ff14\source/ff.c **** }
 661:..\..\ff14\source/ff.c **** 
 662:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 663:..\..\ff14\source/ff.c **** static void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 664:..\..\ff14\source/ff.c **** {
 665:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 666:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 667:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 668:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 669:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 670:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 671:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 672:..\..\ff14\source/ff.c **** 	*ptr++ = (BYTE)val;
 673:..\..\ff14\source/ff.c **** }
 674:..\..\ff14\source/ff.c **** #endif
 675:..\..\ff14\source/ff.c **** #endif	/* !FF_FS_READONLY */
 676:..\..\ff14\source/ff.c **** 
 677:..\..\ff14\source/ff.c **** 
 678:..\..\ff14\source/ff.c **** 
 679:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
 680:..\..\ff14\source/ff.c **** /* String functions                                                      */
 681:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
 682:..\..\ff14\source/ff.c **** 
 683:..\..\ff14\source/ff.c **** /* Copy memory to memory */
 684:..\..\ff14\source/ff.c **** static void mem_cpy (void* dst, const void* src, UINT cnt)
 685:..\..\ff14\source/ff.c **** {
 143              		.loc 1 685 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148              	.LVL18:
 686:..\..\ff14\source/ff.c **** 	BYTE *d = (BYTE*)dst;
 687:..\..\ff14\source/ff.c **** 	const BYTE *s = (const BYTE*)src;
 688:..\..\ff14\source/ff.c **** 
 689:..\..\ff14\source/ff.c **** 	if (cnt != 0) {
 149              		.loc 1 689 0
 150 0000 1346     		mov	r3, r2
 151 0002 2AB1     		cbz	r2, .L5
 152              	.LVL19:
 153              	.L7:
 690:..\..\ff14\source/ff.c **** 		do {
 691:..\..\ff14\source/ff.c **** 			*d++ = *s++;
 154              		.loc 1 691 0 discriminator 1
 155 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 156 0006 0270     		strb	r2, [r0]
 157              	.LVL20:
 158 0008 0130     		adds	r0, r0, #1
 159              	.LVL21:
 160 000a 0131     		adds	r1, r1, #1
 161              	.LVL22:
 692:..\..\ff14\source/ff.c **** 		} while (--cnt);
 162              		.loc 1 692 0 discriminator 1
 163 000c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 16


 164              	.LVL23:
 165 000e F9D1     		bne	.L7
 166              	.L5:
 167 0010 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE4:
 170              		.size	mem_cpy, .-mem_cpy
 171 0012 00BF     		.section	.text.mem_set,"ax",%progbits
 172              		.align	2
 173              		.thumb
 174              		.thumb_func
 175              		.type	mem_set, %function
 176              	mem_set:
 177              	.LFB5:
 693:..\..\ff14\source/ff.c **** 	}
 694:..\..\ff14\source/ff.c **** }
 695:..\..\ff14\source/ff.c **** 
 696:..\..\ff14\source/ff.c **** 
 697:..\..\ff14\source/ff.c **** /* Fill memory block */
 698:..\..\ff14\source/ff.c **** static void mem_set (void* dst, int val, UINT cnt)
 699:..\..\ff14\source/ff.c **** {
 178              		.loc 1 699 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL24:
 184              	.L9:
 700:..\..\ff14\source/ff.c **** 	BYTE *d = (BYTE*)dst;
 701:..\..\ff14\source/ff.c **** 
 702:..\..\ff14\source/ff.c **** 	do {
 703:..\..\ff14\source/ff.c **** 		*d++ = (BYTE)val;
 185              		.loc 1 703 0 discriminator 1
 186 0000 0170     		strb	r1, [r0]
 187              	.LVL25:
 188 0002 0130     		adds	r0, r0, #1
 189              	.LVL26:
 704:..\..\ff14\source/ff.c **** 	} while (--cnt);
 190              		.loc 1 704 0 discriminator 1
 191 0004 013A     		subs	r2, r2, #1
 192              	.LVL27:
 193 0006 FBD1     		bne	.L9
 705:..\..\ff14\source/ff.c **** }
 194              		.loc 1 705 0
 195 0008 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE5:
 198              		.size	mem_set, .-mem_set
 199 000a 00BF     		.section	.text.mem_cmp,"ax",%progbits
 200              		.align	2
 201              		.thumb
 202              		.thumb_func
 203              		.type	mem_cmp, %function
 204              	mem_cmp:
 205              	.LFB6:
 706:..\..\ff14\source/ff.c **** 
 707:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 17


 708:..\..\ff14\source/ff.c **** /* Compare memory block */
 709:..\..\ff14\source/ff.c **** static int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
 710:..\..\ff14\source/ff.c **** {
 206              		.loc 1 710 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LVL28:
 212 0000 30B4     		push	{r4, r5}
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 4, -8
 215              		.cfi_offset 5, -4
 216              	.LVL29:
 217              	.L12:
 711:..\..\ff14\source/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 712:..\..\ff14\source/ff.c **** 	int r = 0;
 713:..\..\ff14\source/ff.c **** 
 714:..\..\ff14\source/ff.c **** 	do {
 715:..\..\ff14\source/ff.c **** 		r = *d++ - *s++;
 218              		.loc 1 715 0 discriminator 2
 219 0002 451C     		adds	r5, r0, #1
 220              	.LVL30:
 221 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 222              	.LVL31:
 223 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 224 0008 1B1A     		subs	r3, r3, r0
 225              	.LVL32:
 716:..\..\ff14\source/ff.c **** 	} while (--cnt && r == 0);
 226              		.loc 1 716 0 discriminator 2
 227 000a 013A     		subs	r2, r2, #1
 228              	.LVL33:
 229 000c 04D0     		beq	.L11
 230 000e 4C1C     		adds	r4, r1, #1
 231              	.LVL34:
 715:..\..\ff14\source/ff.c **** 	} while (--cnt && r == 0);
 232              		.loc 1 715 0 discriminator 1
 233 0010 2846     		mov	r0, r5
 234 0012 2146     		mov	r1, r4
 235              		.loc 1 716 0 discriminator 1
 236 0014 002B     		cmp	r3, #0
 237 0016 F4D0     		beq	.L12
 238              	.LVL35:
 239              	.L11:
 717:..\..\ff14\source/ff.c **** 
 718:..\..\ff14\source/ff.c **** 	return r;
 719:..\..\ff14\source/ff.c **** }
 240              		.loc 1 719 0
 241 0018 1846     		mov	r0, r3
 242 001a 30BC     		pop	{r4, r5}
 243              		.cfi_restore 5
 244              		.cfi_restore 4
 245              		.cfi_def_cfa_offset 0
 246              	.LVL36:
 247 001c 7047     		bx	lr
 248              		.cfi_endproc
 249              	.LFE6:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 18


 250              		.size	mem_cmp, .-mem_cmp
 251 001e 00BF     		.section	.text.chk_chr,"ax",%progbits
 252              		.align	2
 253              		.thumb
 254              		.thumb_func
 255              		.type	chk_chr, %function
 256              	chk_chr:
 257              	.LFB7:
 720:..\..\ff14\source/ff.c **** 
 721:..\..\ff14\source/ff.c **** 
 722:..\..\ff14\source/ff.c **** /* Check if chr is contained in the string */
 723:..\..\ff14\source/ff.c **** static int chk_chr (const char* str, int chr)	/* NZ:contained, ZR:not contained */
 724:..\..\ff14\source/ff.c **** {
 258              		.loc 1 724 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              	.LVL37:
 725:..\..\ff14\source/ff.c **** 	while (*str && *str != chr) str++;
 264              		.loc 1 725 0
 265 0000 00E0     		b	.L15
 266              	.L17:
 267              		.loc 1 725 0 is_stmt 0 discriminator 3
 268 0002 0130     		adds	r0, r0, #1
 269              	.LVL38:
 270              	.L15:
 271              		.loc 1 725 0 discriminator 1
 272 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 273 0006 0BB1     		cbz	r3, .L16
 274              		.loc 1 725 0 discriminator 2
 275 0008 8B42     		cmp	r3, r1
 276 000a FAD1     		bne	.L17
 277              	.L16:
 726:..\..\ff14\source/ff.c **** 	return *str;
 727:..\..\ff14\source/ff.c **** }
 278              		.loc 1 727 0 is_stmt 1
 279 000c 1846     		mov	r0, r3
 280              	.LVL39:
 281 000e 7047     		bx	lr
 282              		.cfi_endproc
 283              	.LFE7:
 284              		.size	chk_chr, .-chk_chr
 285              		.section	.text.dbc_1st,"ax",%progbits
 286              		.align	2
 287              		.thumb
 288              		.thumb_func
 289              		.type	dbc_1st, %function
 290              	dbc_1st:
 291              	.LFB8:
 728:..\..\ff14\source/ff.c **** 
 729:..\..\ff14\source/ff.c **** 
 730:..\..\ff14\source/ff.c **** /* Test if the byte is DBC 1st byte */
 731:..\..\ff14\source/ff.c **** static int dbc_1st (BYTE c)
 732:..\..\ff14\source/ff.c **** {
 292              		.loc 1 732 0
 293              		.cfi_startproc
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 19


 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297              	.LVL40:
 733:..\..\ff14\source/ff.c **** #if FF_CODE_PAGE == 0		/* Variable code page */
 734:..\..\ff14\source/ff.c **** 	if (DbcTbl && c >= DbcTbl[0]) {
 735:..\..\ff14\source/ff.c **** 		if (c <= DbcTbl[1]) return 1;					/* 1st byte range 1 */
 736:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;	/* 1st byte range 2 */
 737:..\..\ff14\source/ff.c **** 	}
 738:..\..\ff14\source/ff.c **** #elif FF_CODE_PAGE >= 900	/* DBCS fixed code page */
 739:..\..\ff14\source/ff.c **** 	if (c >= DbcTbl[0]) {
 298              		.loc 1 739 0
 299 0000 8028     		cmp	r0, #128
 300 0002 07D9     		bls	.L20
 740:..\..\ff14\source/ff.c **** 		if (c <= DbcTbl[1]) return 1;
 301              		.loc 1 740 0
 302 0004 9F28     		cmp	r0, #159
 303 0006 07D9     		bls	.L21
 741:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 304              		.loc 1 741 0
 305 0008 DF28     		cmp	r0, #223
 306 000a 07D9     		bls	.L22
 307              		.loc 1 741 0 is_stmt 0 discriminator 1
 308 000c FC28     		cmp	r0, #252
 309 000e 07D9     		bls	.L23
 742:..\..\ff14\source/ff.c **** 	}
 743:..\..\ff14\source/ff.c **** #else						/* SBCS fixed code page */
 744:..\..\ff14\source/ff.c **** 	if (c != 0) return 0;	/* Always false */
 745:..\..\ff14\source/ff.c **** #endif
 746:..\..\ff14\source/ff.c **** 	return 0;
 310              		.loc 1 746 0 is_stmt 1
 311 0010 0020     		movs	r0, #0
 312              	.LVL41:
 313 0012 7047     		bx	lr
 314              	.LVL42:
 315              	.L20:
 316 0014 0020     		movs	r0, #0
 317              	.LVL43:
 318 0016 7047     		bx	lr
 319              	.LVL44:
 320              	.L21:
 740:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 321              		.loc 1 740 0
 322 0018 0120     		movs	r0, #1
 323              	.LVL45:
 324 001a 7047     		bx	lr
 325              	.LVL46:
 326              	.L22:
 327              		.loc 1 746 0
 328 001c 0020     		movs	r0, #0
 329              	.LVL47:
 330 001e 7047     		bx	lr
 331              	.LVL48:
 332              	.L23:
 741:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 333              		.loc 1 741 0
 334 0020 0120     		movs	r0, #1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 20


 335              	.LVL49:
 747:..\..\ff14\source/ff.c **** }
 336              		.loc 1 747 0
 337 0022 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE8:
 340              		.size	dbc_1st, .-dbc_1st
 341              		.section	.text.dbc_2nd,"ax",%progbits
 342              		.align	2
 343              		.thumb
 344              		.thumb_func
 345              		.type	dbc_2nd, %function
 346              	dbc_2nd:
 347              	.LFB9:
 748:..\..\ff14\source/ff.c **** 
 749:..\..\ff14\source/ff.c **** 
 750:..\..\ff14\source/ff.c **** /* Test if the byte is DBC 2nd byte */
 751:..\..\ff14\source/ff.c **** static int dbc_2nd (BYTE c)
 752:..\..\ff14\source/ff.c **** {
 348              		.loc 1 752 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              	.LVL50:
 753:..\..\ff14\source/ff.c **** #if FF_CODE_PAGE == 0		/* Variable code page */
 754:..\..\ff14\source/ff.c **** 	if (DbcTbl && c >= DbcTbl[4]) {
 755:..\..\ff14\source/ff.c **** 		if (c <= DbcTbl[5]) return 1;					/* 2nd byte range 1 */
 756:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;	/* 2nd byte range 2 */
 757:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;	/* 2nd byte range 3 */
 758:..\..\ff14\source/ff.c **** 	}
 759:..\..\ff14\source/ff.c **** #elif FF_CODE_PAGE >= 900	/* DBCS fixed code page */
 760:..\..\ff14\source/ff.c **** 	if (c >= DbcTbl[4]) {
 354              		.loc 1 760 0
 355 0000 3F28     		cmp	r0, #63
 356 0002 08D9     		bls	.L27
 761:..\..\ff14\source/ff.c **** 		if (c <= DbcTbl[5]) return 1;
 357              		.loc 1 761 0
 358 0004 7E28     		cmp	r0, #126
 359 0006 08D9     		bls	.L28
 762:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 360              		.loc 1 762 0
 361 0008 8028     		cmp	r0, #128
 362 000a 01D3     		bcc	.L26
 363              		.loc 1 762 0 is_stmt 0 discriminator 1
 364 000c FC28     		cmp	r0, #252
 365 000e 06D9     		bls	.L29
 366              	.L26:
 763:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 367              		.loc 1 763 0 is_stmt 1 discriminator 1
 368 0010 38B1     		cbz	r0, .L30
 764:..\..\ff14\source/ff.c **** 	}
 765:..\..\ff14\source/ff.c **** #else						/* SBCS fixed code page */
 766:..\..\ff14\source/ff.c **** 	if (c != 0) return 0;	/* Always false */
 767:..\..\ff14\source/ff.c **** #endif
 768:..\..\ff14\source/ff.c **** 	return 0;
 369              		.loc 1 768 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 21


 370 0012 0020     		movs	r0, #0
 371              	.LVL51:
 372 0014 7047     		bx	lr
 373              	.LVL52:
 374              	.L27:
 375 0016 0020     		movs	r0, #0
 376              	.LVL53:
 377 0018 7047     		bx	lr
 378              	.LVL54:
 379              	.L28:
 761:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 380              		.loc 1 761 0
 381 001a 0120     		movs	r0, #1
 382              	.LVL55:
 383 001c 7047     		bx	lr
 384              	.LVL56:
 385              	.L29:
 762:..\..\ff14\source/ff.c **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 386              		.loc 1 762 0
 387 001e 0120     		movs	r0, #1
 388              	.LVL57:
 389 0020 7047     		bx	lr
 390              	.LVL58:
 391              	.L30:
 763:..\..\ff14\source/ff.c **** 	}
 392              		.loc 1 763 0
 393 0022 0120     		movs	r0, #1
 394              	.LVL59:
 769:..\..\ff14\source/ff.c **** }
 395              		.loc 1 769 0
 396 0024 7047     		bx	lr
 397              		.cfi_endproc
 398              	.LFE9:
 399              		.size	dbc_2nd, .-dbc_2nd
 400 0026 00BF     		.section	.text.clst2sect,"ax",%progbits
 401              		.align	2
 402              		.thumb
 403              		.thumb_func
 404              		.type	clst2sect, %function
 405              	clst2sect:
 406              	.LFB13:
 770:..\..\ff14\source/ff.c **** 
 771:..\..\ff14\source/ff.c **** 
 772:..\..\ff14\source/ff.c **** #if FF_USE_LFN
 773:..\..\ff14\source/ff.c **** 
 774:..\..\ff14\source/ff.c **** /* Get a Unicode code point from the TCHAR string in defined API encodeing */
 775:..\..\ff14\source/ff.c **** static DWORD tchar2uni (	/* Returns a character in UTF-16 encoding (>=0x10000 on surrogate pair, 0x
 776:..\..\ff14\source/ff.c **** 	const TCHAR** str		/* Pointer to pointer to TCHAR string in configured encoding */
 777:..\..\ff14\source/ff.c **** )
 778:..\..\ff14\source/ff.c **** {
 779:..\..\ff14\source/ff.c **** 	DWORD uc;
 780:..\..\ff14\source/ff.c **** 	const TCHAR *p = *str;
 781:..\..\ff14\source/ff.c **** 
 782:..\..\ff14\source/ff.c **** #if FF_LFN_UNICODE == 1		/* UTF-16 input */
 783:..\..\ff14\source/ff.c **** 	WCHAR wc;
 784:..\..\ff14\source/ff.c **** 
 785:..\..\ff14\source/ff.c **** 	uc = *p++;	/* Get a unit */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 22


 786:..\..\ff14\source/ff.c **** 	if (IsSurrogate(uc)) {	/* Surrogate? */
 787:..\..\ff14\source/ff.c **** 		wc = *p++;		/* Get low surrogate */
 788:..\..\ff14\source/ff.c **** 		if (!IsSurrogateH(uc) || !IsSurrogateL(wc)) return 0xFFFFFFFF;	/* Wrong surrogate? */
 789:..\..\ff14\source/ff.c **** 		uc = uc << 16 | wc;
 790:..\..\ff14\source/ff.c **** 	}
 791:..\..\ff14\source/ff.c **** 
 792:..\..\ff14\source/ff.c **** #elif FF_LFN_UNICODE == 2	/* UTF-8 input */
 793:..\..\ff14\source/ff.c **** 	BYTE b;
 794:..\..\ff14\source/ff.c **** 	int nf;
 795:..\..\ff14\source/ff.c **** 
 796:..\..\ff14\source/ff.c **** 	uc = (BYTE)*p++;	/* Get an encoding unit */
 797:..\..\ff14\source/ff.c **** 	if (uc & 0x80) {	/* Multiple byte code? */
 798:..\..\ff14\source/ff.c **** 		if ((uc & 0xE0) == 0xC0) {	/* 2-byte sequence? */
 799:..\..\ff14\source/ff.c **** 			uc &= 0x1F; nf = 1;
 800:..\..\ff14\source/ff.c **** 		} else {
 801:..\..\ff14\source/ff.c **** 			if ((uc & 0xF0) == 0xE0) {	/* 3-byte sequence? */
 802:..\..\ff14\source/ff.c **** 				uc &= 0x0F; nf = 2;
 803:..\..\ff14\source/ff.c **** 			} else {
 804:..\..\ff14\source/ff.c **** 				if ((uc & 0xF8) == 0xF0) {	/* 4-byte sequence? */
 805:..\..\ff14\source/ff.c **** 					uc &= 0x07; nf = 3;
 806:..\..\ff14\source/ff.c **** 				} else {					/* Wrong sequence */
 807:..\..\ff14\source/ff.c **** 					return 0xFFFFFFFF;
 808:..\..\ff14\source/ff.c **** 				}
 809:..\..\ff14\source/ff.c **** 			}
 810:..\..\ff14\source/ff.c **** 		}
 811:..\..\ff14\source/ff.c **** 		do {	/* Get trailing bytes */
 812:..\..\ff14\source/ff.c **** 			b = (BYTE)*p++;
 813:..\..\ff14\source/ff.c **** 			if ((b & 0xC0) != 0x80) return 0xFFFFFFFF;	/* Wrong sequence? */
 814:..\..\ff14\source/ff.c **** 			uc = uc << 6 | (b & 0x3F);
 815:..\..\ff14\source/ff.c **** 		} while (--nf != 0);
 816:..\..\ff14\source/ff.c **** 		if (uc < 0x80 || IsSurrogate(uc) || uc >= 0x110000) return 0xFFFFFFFF;	/* Wrong code? */
 817:..\..\ff14\source/ff.c **** 		if (uc >= 0x010000) uc = 0xD800DC00 | ((uc - 0x10000) << 6 & 0x3FF0000) | (uc & 0x3FF);	/* Make a
 818:..\..\ff14\source/ff.c **** 	}
 819:..\..\ff14\source/ff.c **** 
 820:..\..\ff14\source/ff.c **** #elif FF_LFN_UNICODE == 3	/* UTF-32 input */
 821:..\..\ff14\source/ff.c **** 	uc = (TCHAR)*p++;	/* Get a unit */
 822:..\..\ff14\source/ff.c **** 	if (uc >= 0x110000 || IsSurrogate(uc)) return 0xFFFFFFFF;	/* Wrong code? */
 823:..\..\ff14\source/ff.c **** 	if (uc >= 0x010000) uc = 0xD800DC00 | ((uc - 0x10000) << 6 & 0x3FF0000) | (uc & 0x3FF);	/* Make a 
 824:..\..\ff14\source/ff.c **** 
 825:..\..\ff14\source/ff.c **** #else		/* ANSI/OEM input */
 826:..\..\ff14\source/ff.c **** 	BYTE b;
 827:..\..\ff14\source/ff.c **** 	WCHAR wc;
 828:..\..\ff14\source/ff.c **** 
 829:..\..\ff14\source/ff.c **** 	wc = (BYTE)*p++;			/* Get a byte */
 830:..\..\ff14\source/ff.c **** 	if (dbc_1st((BYTE)wc)) {	/* Is it a DBC 1st byte? */
 831:..\..\ff14\source/ff.c **** 		b = (BYTE)*p++;			/* Get 2nd byte */
 832:..\..\ff14\source/ff.c **** 		if (!dbc_2nd(b)) return 0xFFFFFFFF;	/* Invalid code? */
 833:..\..\ff14\source/ff.c **** 		wc = (wc << 8) + b;		/* Make a DBC */
 834:..\..\ff14\source/ff.c **** 	}
 835:..\..\ff14\source/ff.c **** 	if (wc != 0) {
 836:..\..\ff14\source/ff.c **** 		wc = ff_oem2uni(wc, CODEPAGE);	/* ANSI/OEM ==> Unicode */
 837:..\..\ff14\source/ff.c **** 		if (wc == 0) return 0xFFFFFFFF;	/* Invalid code? */
 838:..\..\ff14\source/ff.c **** 	}
 839:..\..\ff14\source/ff.c **** 	uc = wc;
 840:..\..\ff14\source/ff.c **** 
 841:..\..\ff14\source/ff.c **** #endif
 842:..\..\ff14\source/ff.c **** 	*str = p;	/* Next read pointer */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 23


 843:..\..\ff14\source/ff.c **** 	return uc;
 844:..\..\ff14\source/ff.c **** }
 845:..\..\ff14\source/ff.c **** 
 846:..\..\ff14\source/ff.c **** 
 847:..\..\ff14\source/ff.c **** /* Output a TCHAR string in defined API encoding */
 848:..\..\ff14\source/ff.c **** static BYTE put_utf (	/* Returns number of encoding units written (0:buffer overflow or wrong encod
 849:..\..\ff14\source/ff.c **** 	DWORD chr,	/* UTF-16 encoded character (Surrogate pair if >=0x10000) */
 850:..\..\ff14\source/ff.c **** 	TCHAR* buf,	/* Output buffer */
 851:..\..\ff14\source/ff.c **** 	UINT szb	/* Size of the buffer */
 852:..\..\ff14\source/ff.c **** )
 853:..\..\ff14\source/ff.c **** {
 854:..\..\ff14\source/ff.c **** #if FF_LFN_UNICODE == 1	/* UTF-16 output */
 855:..\..\ff14\source/ff.c **** 	WCHAR hs, wc;
 856:..\..\ff14\source/ff.c **** 
 857:..\..\ff14\source/ff.c **** 	hs = (WCHAR)(chr >> 16);
 858:..\..\ff14\source/ff.c **** 	wc = (WCHAR)chr;
 859:..\..\ff14\source/ff.c **** 	if (hs == 0) {	/* Single encoding unit? */
 860:..\..\ff14\source/ff.c **** 		if (szb < 1 || IsSurrogate(wc)) return 0;	/* Buffer overflow or wrong code? */
 861:..\..\ff14\source/ff.c **** 		*buf = wc;
 862:..\..\ff14\source/ff.c **** 		return 1;
 863:..\..\ff14\source/ff.c **** 	}
 864:..\..\ff14\source/ff.c **** 	if (szb < 2 || !IsSurrogateH(hs) || !IsSurrogateL(wc)) return 0;	/* Buffer overflow or wrong surro
 865:..\..\ff14\source/ff.c **** 	*buf++ = hs;
 866:..\..\ff14\source/ff.c **** 	*buf++ = wc;
 867:..\..\ff14\source/ff.c **** 	return 2;
 868:..\..\ff14\source/ff.c **** 
 869:..\..\ff14\source/ff.c **** #elif FF_LFN_UNICODE == 2	/* UTF-8 output */
 870:..\..\ff14\source/ff.c **** 	DWORD hc;
 871:..\..\ff14\source/ff.c **** 
 872:..\..\ff14\source/ff.c **** 	if (chr < 0x80) {	/* Single byte code? */
 873:..\..\ff14\source/ff.c **** 		if (szb < 1) return 0;	/* Buffer overflow? */
 874:..\..\ff14\source/ff.c **** 		*buf = (TCHAR)chr;
 875:..\..\ff14\source/ff.c **** 		return 1;
 876:..\..\ff14\source/ff.c **** 	}
 877:..\..\ff14\source/ff.c **** 	if (chr < 0x800) {	/* 2-byte sequence? */
 878:..\..\ff14\source/ff.c **** 		if (szb < 2) return 0;	/* Buffer overflow? */
 879:..\..\ff14\source/ff.c **** 		*buf++ = (TCHAR)(0xC0 | (chr >> 6 & 0x1F));
 880:..\..\ff14\source/ff.c **** 		*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
 881:..\..\ff14\source/ff.c **** 		return 2;
 882:..\..\ff14\source/ff.c **** 	}
 883:..\..\ff14\source/ff.c **** 	if (chr < 0x10000) {	/* 3-byte sequence? */
 884:..\..\ff14\source/ff.c **** 		if (szb < 3 || IsSurrogate(chr)) return 0;	/* Buffer overflow or wrong code? */
 885:..\..\ff14\source/ff.c **** 		*buf++ = (TCHAR)(0xE0 | (chr >> 12 & 0x0F));
 886:..\..\ff14\source/ff.c **** 		*buf++ = (TCHAR)(0x80 | (chr >> 6 & 0x3F));
 887:..\..\ff14\source/ff.c **** 		*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
 888:..\..\ff14\source/ff.c **** 		return 3;
 889:..\..\ff14\source/ff.c **** 	}
 890:..\..\ff14\source/ff.c **** 	/* 4-byte sequence */
 891:..\..\ff14\source/ff.c **** 	if (szb < 4) return 0;	/* Buffer overflow? */
 892:..\..\ff14\source/ff.c **** 	hc = ((chr & 0xFFFF0000) - 0xD8000000) >> 6;	/* Get high 10 bits */
 893:..\..\ff14\source/ff.c **** 	chr = (chr & 0xFFFF) - 0xDC00;					/* Get low 10 bits */
 894:..\..\ff14\source/ff.c **** 	if (hc >= 0x100000 || chr >= 0x400) return 0;	/* Wrong surrogate? */
 895:..\..\ff14\source/ff.c **** 	chr = (hc | chr) + 0x10000;
 896:..\..\ff14\source/ff.c **** 	*buf++ = (TCHAR)(0xF0 | (chr >> 18 & 0x07));
 897:..\..\ff14\source/ff.c **** 	*buf++ = (TCHAR)(0x80 | (chr >> 12 & 0x3F));
 898:..\..\ff14\source/ff.c **** 	*buf++ = (TCHAR)(0x80 | (chr >> 6 & 0x3F));
 899:..\..\ff14\source/ff.c **** 	*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 24


 900:..\..\ff14\source/ff.c **** 	return 4;
 901:..\..\ff14\source/ff.c **** 
 902:..\..\ff14\source/ff.c **** #elif FF_LFN_UNICODE == 3	/* UTF-32 output */
 903:..\..\ff14\source/ff.c **** 	DWORD hc;
 904:..\..\ff14\source/ff.c **** 
 905:..\..\ff14\source/ff.c **** 	if (szb < 1) return 0;	/* Buffer overflow? */
 906:..\..\ff14\source/ff.c **** 	if (chr >= 0x10000) {	/* Out of BMP? */
 907:..\..\ff14\source/ff.c **** 		hc = ((chr & 0xFFFF0000) - 0xD8000000) >> 6;	/* Get high 10 bits */
 908:..\..\ff14\source/ff.c **** 		chr = (chr & 0xFFFF) - 0xDC00;					/* Get low 10 bits */
 909:..\..\ff14\source/ff.c **** 		if (hc >= 0x100000 || chr >= 0x400) return 0;	/* Wrong surrogate? */
 910:..\..\ff14\source/ff.c **** 		chr = (hc | chr) + 0x10000;
 911:..\..\ff14\source/ff.c **** 	}
 912:..\..\ff14\source/ff.c **** 	*buf++ = (TCHAR)chr;
 913:..\..\ff14\source/ff.c **** 	return 1;
 914:..\..\ff14\source/ff.c **** 
 915:..\..\ff14\source/ff.c **** #else						/* ANSI/OEM output */
 916:..\..\ff14\source/ff.c **** 	WCHAR wc;
 917:..\..\ff14\source/ff.c **** 
 918:..\..\ff14\source/ff.c **** 	wc = ff_uni2oem(chr, CODEPAGE);
 919:..\..\ff14\source/ff.c **** 	if (wc >= 0x100) {	/* Is this a DBC? */
 920:..\..\ff14\source/ff.c **** 		if (szb < 2) return 0;
 921:..\..\ff14\source/ff.c **** 		*buf++ = (char)(wc >> 8);	/* Store DBC 1st byte */
 922:..\..\ff14\source/ff.c **** 		*buf++ = (TCHAR)wc;			/* Store DBC 2nd byte */
 923:..\..\ff14\source/ff.c **** 		return 2;
 924:..\..\ff14\source/ff.c **** 	}
 925:..\..\ff14\source/ff.c **** 	if (wc == 0 || szb < 1) return 0;	/* Invalid char or buffer overflow? */
 926:..\..\ff14\source/ff.c **** 	*buf++ = (TCHAR)wc;					/* Store the character */
 927:..\..\ff14\source/ff.c **** 	return 1;
 928:..\..\ff14\source/ff.c **** #endif
 929:..\..\ff14\source/ff.c **** }
 930:..\..\ff14\source/ff.c **** #endif	/* FF_USE_LFN */
 931:..\..\ff14\source/ff.c **** 
 932:..\..\ff14\source/ff.c **** 
 933:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT
 934:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
 935:..\..\ff14\source/ff.c **** /* Request/Release grant to access the volume                            */
 936:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
 937:..\..\ff14\source/ff.c **** static int lock_fs (		/* 1:Ok, 0:timeout */
 938:..\..\ff14\source/ff.c **** 	FATFS* fs		/* Filesystem object */
 939:..\..\ff14\source/ff.c **** )
 940:..\..\ff14\source/ff.c **** {
 941:..\..\ff14\source/ff.c **** 	return ff_req_grant(fs->sobj);
 942:..\..\ff14\source/ff.c **** }
 943:..\..\ff14\source/ff.c **** 
 944:..\..\ff14\source/ff.c **** 
 945:..\..\ff14\source/ff.c **** static void unlock_fs (
 946:..\..\ff14\source/ff.c **** 	FATFS* fs,		/* Filesystem object */
 947:..\..\ff14\source/ff.c **** 	FRESULT res		/* Result code to be returned */
 948:..\..\ff14\source/ff.c **** )
 949:..\..\ff14\source/ff.c **** {
 950:..\..\ff14\source/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 951:..\..\ff14\source/ff.c **** 		ff_rel_grant(fs->sobj);
 952:..\..\ff14\source/ff.c **** 	}
 953:..\..\ff14\source/ff.c **** }
 954:..\..\ff14\source/ff.c **** 
 955:..\..\ff14\source/ff.c **** #endif
 956:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 25


 957:..\..\ff14\source/ff.c **** 
 958:..\..\ff14\source/ff.c **** 
 959:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
 960:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
 961:..\..\ff14\source/ff.c **** /* File lock control functions                                           */
 962:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
 963:..\..\ff14\source/ff.c **** 
 964:..\..\ff14\source/ff.c **** static FRESULT chk_lock (	/* Check if the file can be accessed */
 965:..\..\ff14\source/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 966:..\..\ff14\source/ff.c **** 	int acc			/* Desired access type (0:Read mode open, 1:Write mode open, 2:Delete or rename) */
 967:..\..\ff14\source/ff.c **** )
 968:..\..\ff14\source/ff.c **** {
 969:..\..\ff14\source/ff.c **** 	UINT i, be;
 970:..\..\ff14\source/ff.c **** 
 971:..\..\ff14\source/ff.c **** 	/* Search open object table for the object */
 972:..\..\ff14\source/ff.c **** 	be = 0;
 973:..\..\ff14\source/ff.c **** 	for (i = 0; i < FF_FS_LOCK; i++) {
 974:..\..\ff14\source/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 975:..\..\ff14\source/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matches with an open object */
 976:..\..\ff14\source/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 977:..\..\ff14\source/ff.c **** 				Files[i].ofs == dp->dptr) break;
 978:..\..\ff14\source/ff.c **** 		} else {			/* Blank entry */
 979:..\..\ff14\source/ff.c **** 			be = 1;
 980:..\..\ff14\source/ff.c **** 		}
 981:..\..\ff14\source/ff.c **** 	}
 982:..\..\ff14\source/ff.c **** 	if (i == FF_FS_LOCK) {	/* The object has not been opened */
 983:..\..\ff14\source/ff.c **** 		return (!be && acc != 2) ? FR_TOO_MANY_OPEN_FILES : FR_OK;	/* Is there a blank entry for new obje
 984:..\..\ff14\source/ff.c **** 	}
 985:..\..\ff14\source/ff.c **** 
 986:..\..\ff14\source/ff.c **** 	/* The object was opened. Reject any open against writing file and all write mode open */
 987:..\..\ff14\source/ff.c **** 	return (acc != 0 || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 988:..\..\ff14\source/ff.c **** }
 989:..\..\ff14\source/ff.c **** 
 990:..\..\ff14\source/ff.c **** 
 991:..\..\ff14\source/ff.c **** static int enq_lock (void)	/* Check if an entry is available for a new object */
 992:..\..\ff14\source/ff.c **** {
 993:..\..\ff14\source/ff.c **** 	UINT i;
 994:..\..\ff14\source/ff.c **** 
 995:..\..\ff14\source/ff.c **** 	for (i = 0; i < FF_FS_LOCK && Files[i].fs; i++) ;
 996:..\..\ff14\source/ff.c **** 	return (i == FF_FS_LOCK) ? 0 : 1;
 997:..\..\ff14\source/ff.c **** }
 998:..\..\ff14\source/ff.c **** 
 999:..\..\ff14\source/ff.c **** 
1000:..\..\ff14\source/ff.c **** static UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
1001:..\..\ff14\source/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
1002:..\..\ff14\source/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
1003:..\..\ff14\source/ff.c **** )
1004:..\..\ff14\source/ff.c **** {
1005:..\..\ff14\source/ff.c **** 	UINT i;
1006:..\..\ff14\source/ff.c **** 
1007:..\..\ff14\source/ff.c **** 
1008:..\..\ff14\source/ff.c **** 	for (i = 0; i < FF_FS_LOCK; i++) {	/* Find the object */
1009:..\..\ff14\source/ff.c **** 		if (Files[i].fs == dp->obj.fs
1010:..\..\ff14\source/ff.c **** 		 && Files[i].clu == dp->obj.sclust
1011:..\..\ff14\source/ff.c **** 		 && Files[i].ofs == dp->dptr) break;
1012:..\..\ff14\source/ff.c **** 	}
1013:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 26


1014:..\..\ff14\source/ff.c **** 	if (i == FF_FS_LOCK) {				/* Not opened. Register it as new. */
1015:..\..\ff14\source/ff.c **** 		for (i = 0; i < FF_FS_LOCK && Files[i].fs; i++) ;
1016:..\..\ff14\source/ff.c **** 		if (i == FF_FS_LOCK) return 0;	/* No free entry to register (int err) */
1017:..\..\ff14\source/ff.c **** 		Files[i].fs = dp->obj.fs;
1018:..\..\ff14\source/ff.c **** 		Files[i].clu = dp->obj.sclust;
1019:..\..\ff14\source/ff.c **** 		Files[i].ofs = dp->dptr;
1020:..\..\ff14\source/ff.c **** 		Files[i].ctr = 0;
1021:..\..\ff14\source/ff.c **** 	}
1022:..\..\ff14\source/ff.c **** 
1023:..\..\ff14\source/ff.c **** 	if (acc >= 1 && Files[i].ctr) return 0;	/* Access violation (int err) */
1024:..\..\ff14\source/ff.c **** 
1025:..\..\ff14\source/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
1026:..\..\ff14\source/ff.c **** 
1027:..\..\ff14\source/ff.c **** 	return i + 1;	/* Index number origin from 1 */
1028:..\..\ff14\source/ff.c **** }
1029:..\..\ff14\source/ff.c **** 
1030:..\..\ff14\source/ff.c **** 
1031:..\..\ff14\source/ff.c **** static FRESULT dec_lock (	/* Decrement object open counter */
1032:..\..\ff14\source/ff.c **** 	UINT i			/* Semaphore index (1..) */
1033:..\..\ff14\source/ff.c **** )
1034:..\..\ff14\source/ff.c **** {
1035:..\..\ff14\source/ff.c **** 	WORD n;
1036:..\..\ff14\source/ff.c **** 	FRESULT res;
1037:..\..\ff14\source/ff.c **** 
1038:..\..\ff14\source/ff.c **** 
1039:..\..\ff14\source/ff.c **** 	if (--i < FF_FS_LOCK) {	/* Index number origin from 0 */
1040:..\..\ff14\source/ff.c **** 		n = Files[i].ctr;
1041:..\..\ff14\source/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
1042:..\..\ff14\source/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
1043:..\..\ff14\source/ff.c **** 		Files[i].ctr = n;
1044:..\..\ff14\source/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
1045:..\..\ff14\source/ff.c **** 		res = FR_OK;
1046:..\..\ff14\source/ff.c **** 	} else {
1047:..\..\ff14\source/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
1048:..\..\ff14\source/ff.c **** 	}
1049:..\..\ff14\source/ff.c **** 	return res;
1050:..\..\ff14\source/ff.c **** }
1051:..\..\ff14\source/ff.c **** 
1052:..\..\ff14\source/ff.c **** 
1053:..\..\ff14\source/ff.c **** static void clear_lock (	/* Clear lock entries of the volume */
1054:..\..\ff14\source/ff.c **** 	FATFS *fs
1055:..\..\ff14\source/ff.c **** )
1056:..\..\ff14\source/ff.c **** {
1057:..\..\ff14\source/ff.c **** 	UINT i;
1058:..\..\ff14\source/ff.c **** 
1059:..\..\ff14\source/ff.c **** 	for (i = 0; i < FF_FS_LOCK; i++) {
1060:..\..\ff14\source/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
1061:..\..\ff14\source/ff.c **** 	}
1062:..\..\ff14\source/ff.c **** }
1063:..\..\ff14\source/ff.c **** 
1064:..\..\ff14\source/ff.c **** #endif	/* FF_FS_LOCK != 0 */
1065:..\..\ff14\source/ff.c **** 
1066:..\..\ff14\source/ff.c **** 
1067:..\..\ff14\source/ff.c **** 
1068:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1069:..\..\ff14\source/ff.c **** /* Move/Flush disk access window in the filesystem object                */
1070:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 27


1071:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1072:..\..\ff14\source/ff.c **** static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
1073:..\..\ff14\source/ff.c **** 	FATFS* fs			/* Filesystem object */
1074:..\..\ff14\source/ff.c **** )
1075:..\..\ff14\source/ff.c **** {
1076:..\..\ff14\source/ff.c **** 	FRESULT res = FR_OK;
1077:..\..\ff14\source/ff.c **** 
1078:..\..\ff14\source/ff.c **** 
1079:..\..\ff14\source/ff.c **** 	if (fs->wflag) {	/* Is the disk access window dirty? */
1080:..\..\ff14\source/ff.c **** 		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write it back into the volume *
1081:..\..\ff14\source/ff.c **** 			fs->wflag = 0;	/* Clear window dirty flag */
1082:..\..\ff14\source/ff.c **** 			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
1083:..\..\ff14\source/ff.c **** 				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it t
1084:..\..\ff14\source/ff.c **** 			}
1085:..\..\ff14\source/ff.c **** 		} else {
1086:..\..\ff14\source/ff.c **** 			res = FR_DISK_ERR;
1087:..\..\ff14\source/ff.c **** 		}
1088:..\..\ff14\source/ff.c **** 	}
1089:..\..\ff14\source/ff.c **** 	return res;
1090:..\..\ff14\source/ff.c **** }
1091:..\..\ff14\source/ff.c **** #endif
1092:..\..\ff14\source/ff.c **** 
1093:..\..\ff14\source/ff.c **** 
1094:..\..\ff14\source/ff.c **** static FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERR */
1095:..\..\ff14\source/ff.c **** 	FATFS* fs,		/* Filesystem object */
1096:..\..\ff14\source/ff.c **** 	LBA_t sect		/* Sector LBA to make appearance in the fs->win[] */
1097:..\..\ff14\source/ff.c **** )
1098:..\..\ff14\source/ff.c **** {
1099:..\..\ff14\source/ff.c **** 	FRESULT res = FR_OK;
1100:..\..\ff14\source/ff.c **** 
1101:..\..\ff14\source/ff.c **** 
1102:..\..\ff14\source/ff.c **** 	if (sect != fs->winsect) {	/* Window offset changed? */
1103:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1104:..\..\ff14\source/ff.c **** 		res = sync_window(fs);		/* Flush the window */
1105:..\..\ff14\source/ff.c **** #endif
1106:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
1107:..\..\ff14\source/ff.c **** 			if (disk_read(fs->pdrv, fs->win, sect, 1) != RES_OK) {
1108:..\..\ff14\source/ff.c **** 				sect = (LBA_t)0 - 1;	/* Invalidate window if read data is not valid */
1109:..\..\ff14\source/ff.c **** 				res = FR_DISK_ERR;
1110:..\..\ff14\source/ff.c **** 			}
1111:..\..\ff14\source/ff.c **** 			fs->winsect = sect;
1112:..\..\ff14\source/ff.c **** 		}
1113:..\..\ff14\source/ff.c **** 	}
1114:..\..\ff14\source/ff.c **** 	return res;
1115:..\..\ff14\source/ff.c **** }
1116:..\..\ff14\source/ff.c **** 
1117:..\..\ff14\source/ff.c **** 
1118:..\..\ff14\source/ff.c **** 
1119:..\..\ff14\source/ff.c **** 
1120:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1121:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1122:..\..\ff14\source/ff.c **** /* Synchronize filesystem and data on the storage                        */
1123:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1124:..\..\ff14\source/ff.c **** 
1125:..\..\ff14\source/ff.c **** static FRESULT sync_fs (	/* Returns FR_OK or FR_DISK_ERR */
1126:..\..\ff14\source/ff.c **** 	FATFS* fs		/* Filesystem object */
1127:..\..\ff14\source/ff.c **** )
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 28


1128:..\..\ff14\source/ff.c **** {
1129:..\..\ff14\source/ff.c **** 	FRESULT res;
1130:..\..\ff14\source/ff.c **** 
1131:..\..\ff14\source/ff.c **** 
1132:..\..\ff14\source/ff.c **** 	res = sync_window(fs);
1133:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
1134:..\..\ff14\source/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
1135:..\..\ff14\source/ff.c **** 			/* Create FSInfo structure */
1136:..\..\ff14\source/ff.c **** 			mem_set(fs->win, 0, sizeof fs->win);
1137:..\..\ff14\source/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
1138:..\..\ff14\source/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
1139:..\..\ff14\source/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
1140:..\..\ff14\source/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
1141:..\..\ff14\source/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
1142:..\..\ff14\source/ff.c **** 			/* Write it into the FSInfo sector */
1143:..\..\ff14\source/ff.c **** 			fs->winsect = fs->volbase + 1;
1144:..\..\ff14\source/ff.c **** 			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
1145:..\..\ff14\source/ff.c **** 			fs->fsi_flag = 0;
1146:..\..\ff14\source/ff.c **** 		}
1147:..\..\ff14\source/ff.c **** 		/* Make sure that no pending write process in the lower layer */
1148:..\..\ff14\source/ff.c **** 		if (disk_ioctl(fs->pdrv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
1149:..\..\ff14\source/ff.c **** 	}
1150:..\..\ff14\source/ff.c **** 
1151:..\..\ff14\source/ff.c **** 	return res;
1152:..\..\ff14\source/ff.c **** }
1153:..\..\ff14\source/ff.c **** 
1154:..\..\ff14\source/ff.c **** #endif
1155:..\..\ff14\source/ff.c **** 
1156:..\..\ff14\source/ff.c **** 
1157:..\..\ff14\source/ff.c **** 
1158:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1159:..\..\ff14\source/ff.c **** /* Get physical sector number from cluster number                        */
1160:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1161:..\..\ff14\source/ff.c **** 
1162:..\..\ff14\source/ff.c **** static LBA_t clst2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
1163:..\..\ff14\source/ff.c **** 	FATFS* fs,		/* Filesystem object */
1164:..\..\ff14\source/ff.c **** 	DWORD clst		/* Cluster# to be converted */
1165:..\..\ff14\source/ff.c **** )
1166:..\..\ff14\source/ff.c **** {
 407              		.loc 1 1166 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL60:
1167:..\..\ff14\source/ff.c **** 	clst -= 2;		/* Cluster number is origin from 2 */
 413              		.loc 1 1167 0
 414 0000 0239     		subs	r1, r1, #2
 415              	.LVL61:
1168:..\..\ff14\source/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
 416              		.loc 1 1168 0
 417 0002 4369     		ldr	r3, [r0, #20]
 418 0004 023B     		subs	r3, r3, #2
 419 0006 9942     		cmp	r1, r3
 420 0008 04D2     		bcs	.L33
1169:..\..\ff14\source/ff.c **** 	return fs->database + (LBA_t)fs->csize * clst;	/* Start sector number of the cluster */
 421              		.loc 1 1169 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 29


 422 000a 836A     		ldr	r3, [r0, #40]
 423 000c 4089     		ldrh	r0, [r0, #10]
 424              	.LVL62:
 425 000e 00FB0130 		mla	r0, r0, r1, r3
 426 0012 7047     		bx	lr
 427              	.LVL63:
 428              	.L33:
1168:..\..\ff14\source/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
 429              		.loc 1 1168 0
 430 0014 0020     		movs	r0, #0
 431              	.LVL64:
1170:..\..\ff14\source/ff.c **** }
 432              		.loc 1 1170 0
 433 0016 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE13:
 436              		.size	clst2sect, .-clst2sect
 437              		.section	.text.ld_clust,"ax",%progbits
 438              		.align	2
 439              		.thumb
 440              		.thumb_func
 441              		.type	ld_clust, %function
 442              	ld_clust:
 443              	.LFB22:
1171:..\..\ff14\source/ff.c **** 
1172:..\..\ff14\source/ff.c **** 
1173:..\..\ff14\source/ff.c **** 
1174:..\..\ff14\source/ff.c **** 
1175:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1176:..\..\ff14\source/ff.c **** /* FAT access - Read value of a FAT entry                                */
1177:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1178:..\..\ff14\source/ff.c **** 
1179:..\..\ff14\source/ff.c **** static DWORD get_fat (		/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1180:..\..\ff14\source/ff.c **** 	FFOBJID* obj,	/* Corresponding object */
1181:..\..\ff14\source/ff.c **** 	DWORD clst		/* Cluster number to get the value */
1182:..\..\ff14\source/ff.c **** )
1183:..\..\ff14\source/ff.c **** {
1184:..\..\ff14\source/ff.c **** 	UINT wc, bc;
1185:..\..\ff14\source/ff.c **** 	DWORD val;
1186:..\..\ff14\source/ff.c **** 	FATFS *fs = obj->fs;
1187:..\..\ff14\source/ff.c **** 
1188:..\..\ff14\source/ff.c **** 
1189:..\..\ff14\source/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1190:..\..\ff14\source/ff.c **** 		val = 1;	/* Internal error */
1191:..\..\ff14\source/ff.c **** 
1192:..\..\ff14\source/ff.c **** 	} else {
1193:..\..\ff14\source/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1194:..\..\ff14\source/ff.c **** 
1195:..\..\ff14\source/ff.c **** 		switch (fs->fs_type) {
1196:..\..\ff14\source/ff.c **** 		case FS_FAT12 :
1197:..\..\ff14\source/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1198:..\..\ff14\source/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1199:..\..\ff14\source/ff.c **** 			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
1200:..\..\ff14\source/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1201:..\..\ff14\source/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
1202:..\..\ff14\source/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
1203:..\..\ff14\source/ff.c **** 			break;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 30


1204:..\..\ff14\source/ff.c **** 
1205:..\..\ff14\source/ff.c **** 		case FS_FAT16 :
1206:..\..\ff14\source/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1207:..\..\ff14\source/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
1208:..\..\ff14\source/ff.c **** 			break;
1209:..\..\ff14\source/ff.c **** 
1210:..\..\ff14\source/ff.c **** 		case FS_FAT32 :
1211:..\..\ff14\source/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1212:..\..\ff14\source/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upp
1213:..\..\ff14\source/ff.c **** 			break;
1214:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
1215:..\..\ff14\source/ff.c **** 		case FS_EXFAT :
1216:..\..\ff14\source/ff.c **** 			if ((obj->objsize != 0 && obj->sclust != 0) || obj->stat == 0) {	/* Object except root dir must 
1217:..\..\ff14\source/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1218:..\..\ff14\source/ff.c **** 				DWORD clen = (DWORD)((LBA_t)((obj->objsize - 1) / SS(fs)) / fs->csize);	/* Number of clusters -
1219:..\..\ff14\source/ff.c **** 
1220:..\..\ff14\source/ff.c **** 				if (obj->stat == 2 && cofs <= clen) {	/* Is it a contiguous chain? */
1221:..\..\ff14\source/ff.c **** 					val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* No data on the FAT, generate the value */
1222:..\..\ff14\source/ff.c **** 					break;
1223:..\..\ff14\source/ff.c **** 				}
1224:..\..\ff14\source/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1225:..\..\ff14\source/ff.c **** 					val = clst + 1; 	/* Generate the value */
1226:..\..\ff14\source/ff.c **** 					break;
1227:..\..\ff14\source/ff.c **** 				}
1228:..\..\ff14\source/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1229:..\..\ff14\source/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1230:..\..\ff14\source/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1231:..\..\ff14\source/ff.c **** 					} else {
1232:..\..\ff14\source/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1233:..\..\ff14\source/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1234:..\..\ff14\source/ff.c **** 					}
1235:..\..\ff14\source/ff.c **** 					break;
1236:..\..\ff14\source/ff.c **** 				}
1237:..\..\ff14\source/ff.c **** 			}
1238:..\..\ff14\source/ff.c **** 			/* go to default */
1239:..\..\ff14\source/ff.c **** #endif
1240:..\..\ff14\source/ff.c **** 		default:
1241:..\..\ff14\source/ff.c **** 			val = 1;	/* Internal error */
1242:..\..\ff14\source/ff.c **** 		}
1243:..\..\ff14\source/ff.c **** 	}
1244:..\..\ff14\source/ff.c **** 
1245:..\..\ff14\source/ff.c **** 	return val;
1246:..\..\ff14\source/ff.c **** }
1247:..\..\ff14\source/ff.c **** 
1248:..\..\ff14\source/ff.c **** 
1249:..\..\ff14\source/ff.c **** 
1250:..\..\ff14\source/ff.c **** 
1251:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1252:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1253:..\..\ff14\source/ff.c **** /* FAT access - Change value of a FAT entry                              */
1254:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1255:..\..\ff14\source/ff.c **** 
1256:..\..\ff14\source/ff.c **** static FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1257:..\..\ff14\source/ff.c **** 	FATFS* fs,		/* Corresponding filesystem object */
1258:..\..\ff14\source/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1259:..\..\ff14\source/ff.c **** 	DWORD val		/* New value to be set to the entry */
1260:..\..\ff14\source/ff.c **** )
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 31


1261:..\..\ff14\source/ff.c **** {
1262:..\..\ff14\source/ff.c **** 	UINT bc;
1263:..\..\ff14\source/ff.c **** 	BYTE *p;
1264:..\..\ff14\source/ff.c **** 	FRESULT res = FR_INT_ERR;
1265:..\..\ff14\source/ff.c **** 
1266:..\..\ff14\source/ff.c **** 
1267:..\..\ff14\source/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1268:..\..\ff14\source/ff.c **** 		switch (fs->fs_type) {
1269:..\..\ff14\source/ff.c **** 		case FS_FAT12 :
1270:..\..\ff14\source/ff.c **** 			bc = (UINT)clst; bc += bc / 2;	/* bc: byte offset of the entry */
1271:..\..\ff14\source/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1272:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
1273:..\..\ff14\source/ff.c **** 			p = fs->win + bc++ % SS(fs);
1274:..\..\ff14\source/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Update 1st byte */
1275:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
1276:..\..\ff14\source/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1277:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
1278:..\..\ff14\source/ff.c **** 			p = fs->win + bc % SS(fs);
1279:..\..\ff14\source/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Update 2nd by
1280:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
1281:..\..\ff14\source/ff.c **** 			break;
1282:..\..\ff14\source/ff.c **** 
1283:..\..\ff14\source/ff.c **** 		case FS_FAT16 :
1284:..\..\ff14\source/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1285:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
1286:..\..\ff14\source/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
1287:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
1288:..\..\ff14\source/ff.c **** 			break;
1289:..\..\ff14\source/ff.c **** 
1290:..\..\ff14\source/ff.c **** 		case FS_FAT32 :
1291:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
1292:..\..\ff14\source/ff.c **** 		case FS_EXFAT :
1293:..\..\ff14\source/ff.c **** #endif
1294:..\..\ff14\source/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1295:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
1296:..\..\ff14\source/ff.c **** 			if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1297:..\..\ff14\source/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1298:..\..\ff14\source/ff.c **** 			}
1299:..\..\ff14\source/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1300:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
1301:..\..\ff14\source/ff.c **** 			break;
1302:..\..\ff14\source/ff.c **** 		}
1303:..\..\ff14\source/ff.c **** 	}
1304:..\..\ff14\source/ff.c **** 	return res;
1305:..\..\ff14\source/ff.c **** }
1306:..\..\ff14\source/ff.c **** 
1307:..\..\ff14\source/ff.c **** #endif /* !FF_FS_READONLY */
1308:..\..\ff14\source/ff.c **** 
1309:..\..\ff14\source/ff.c **** 
1310:..\..\ff14\source/ff.c **** 
1311:..\..\ff14\source/ff.c **** 
1312:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT && !FF_FS_READONLY
1313:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1314:..\..\ff14\source/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1315:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1316:..\..\ff14\source/ff.c **** 
1317:..\..\ff14\source/ff.c **** /*--------------------------------------*/
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 32


1318:..\..\ff14\source/ff.c **** /* Find a contiguous free cluster block */
1319:..\..\ff14\source/ff.c **** /*--------------------------------------*/
1320:..\..\ff14\source/ff.c **** 
1321:..\..\ff14\source/ff.c **** static DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1322:..\..\ff14\source/ff.c **** 	FATFS* fs,	/* Filesystem object */
1323:..\..\ff14\source/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1324:..\..\ff14\source/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1325:..\..\ff14\source/ff.c **** )
1326:..\..\ff14\source/ff.c **** {
1327:..\..\ff14\source/ff.c **** 	BYTE bm, bv;
1328:..\..\ff14\source/ff.c **** 	UINT i;
1329:..\..\ff14\source/ff.c **** 	DWORD val, scl, ctr;
1330:..\..\ff14\source/ff.c **** 
1331:..\..\ff14\source/ff.c **** 
1332:..\..\ff14\source/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1333:..\..\ff14\source/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1334:..\..\ff14\source/ff.c **** 	scl = val = clst; ctr = 0;
1335:..\..\ff14\source/ff.c **** 	for (;;) {
1336:..\..\ff14\source/ff.c **** 		if (move_window(fs, fs->bitbase + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;
1337:..\..\ff14\source/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1338:..\..\ff14\source/ff.c **** 		do {
1339:..\..\ff14\source/ff.c **** 			do {
1340:..\..\ff14\source/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1341:..\..\ff14\source/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1342:..\..\ff14\source/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1343:..\..\ff14\source/ff.c **** 				}
1344:..\..\ff14\source/ff.c **** 				if (bv == 0) {	/* Is it a free cluster? */
1345:..\..\ff14\source/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1346:..\..\ff14\source/ff.c **** 				} else {
1347:..\..\ff14\source/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1348:..\..\ff14\source/ff.c **** 				}
1349:..\..\ff14\source/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1350:..\..\ff14\source/ff.c **** 			} while (bm != 0);
1351:..\..\ff14\source/ff.c **** 			bm = 1;
1352:..\..\ff14\source/ff.c **** 		} while (++i < SS(fs));
1353:..\..\ff14\source/ff.c **** 	}
1354:..\..\ff14\source/ff.c **** }
1355:..\..\ff14\source/ff.c **** 
1356:..\..\ff14\source/ff.c **** 
1357:..\..\ff14\source/ff.c **** /*----------------------------------------*/
1358:..\..\ff14\source/ff.c **** /* Set/Clear a block of allocation bitmap */
1359:..\..\ff14\source/ff.c **** /*----------------------------------------*/
1360:..\..\ff14\source/ff.c **** 
1361:..\..\ff14\source/ff.c **** static FRESULT change_bitmap (
1362:..\..\ff14\source/ff.c **** 	FATFS* fs,	/* Filesystem object */
1363:..\..\ff14\source/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1364:..\..\ff14\source/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1365:..\..\ff14\source/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1366:..\..\ff14\source/ff.c **** )
1367:..\..\ff14\source/ff.c **** {
1368:..\..\ff14\source/ff.c **** 	BYTE bm;
1369:..\..\ff14\source/ff.c **** 	UINT i;
1370:..\..\ff14\source/ff.c **** 	LBA_t sect;
1371:..\..\ff14\source/ff.c **** 
1372:..\..\ff14\source/ff.c **** 
1373:..\..\ff14\source/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1374:..\..\ff14\source/ff.c **** 	sect = fs->bitbase + clst / 8 / SS(fs);	/* Sector address */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 33


1375:..\..\ff14\source/ff.c **** 	i = clst / 8 % SS(fs);					/* Byte offset in the sector */
1376:..\..\ff14\source/ff.c **** 	bm = 1 << (clst % 8);					/* Bit mask in the byte */
1377:..\..\ff14\source/ff.c **** 	for (;;) {
1378:..\..\ff14\source/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1379:..\..\ff14\source/ff.c **** 		do {
1380:..\..\ff14\source/ff.c **** 			do {
1381:..\..\ff14\source/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1382:..\..\ff14\source/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1383:..\..\ff14\source/ff.c **** 				fs->wflag = 1;
1384:..\..\ff14\source/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1385:..\..\ff14\source/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1386:..\..\ff14\source/ff.c **** 			bm = 1;
1387:..\..\ff14\source/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1388:..\..\ff14\source/ff.c **** 		i = 0;
1389:..\..\ff14\source/ff.c **** 	}
1390:..\..\ff14\source/ff.c **** }
1391:..\..\ff14\source/ff.c **** 
1392:..\..\ff14\source/ff.c **** 
1393:..\..\ff14\source/ff.c **** /*---------------------------------------------*/
1394:..\..\ff14\source/ff.c **** /* Fill the first fragment of the FAT chain    */
1395:..\..\ff14\source/ff.c **** /*---------------------------------------------*/
1396:..\..\ff14\source/ff.c **** 
1397:..\..\ff14\source/ff.c **** static FRESULT fill_first_frag (
1398:..\..\ff14\source/ff.c **** 	FFOBJID* obj	/* Pointer to the corresponding object */
1399:..\..\ff14\source/ff.c **** )
1400:..\..\ff14\source/ff.c **** {
1401:..\..\ff14\source/ff.c **** 	FRESULT res;
1402:..\..\ff14\source/ff.c **** 	DWORD cl, n;
1403:..\..\ff14\source/ff.c **** 
1404:..\..\ff14\source/ff.c **** 
1405:..\..\ff14\source/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented' in this session? */
1406:..\..\ff14\source/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1407:..\..\ff14\source/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1408:..\..\ff14\source/ff.c **** 			if (res != FR_OK) return res;
1409:..\..\ff14\source/ff.c **** 		}
1410:..\..\ff14\source/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1411:..\..\ff14\source/ff.c **** 	}
1412:..\..\ff14\source/ff.c **** 	return FR_OK;
1413:..\..\ff14\source/ff.c **** }
1414:..\..\ff14\source/ff.c **** 
1415:..\..\ff14\source/ff.c **** 
1416:..\..\ff14\source/ff.c **** /*---------------------------------------------*/
1417:..\..\ff14\source/ff.c **** /* Fill the last fragment of the FAT chain     */
1418:..\..\ff14\source/ff.c **** /*---------------------------------------------*/
1419:..\..\ff14\source/ff.c **** 
1420:..\..\ff14\source/ff.c **** static FRESULT fill_last_frag (
1421:..\..\ff14\source/ff.c **** 	FFOBJID* obj,	/* Pointer to the corresponding object */
1422:..\..\ff14\source/ff.c **** 	DWORD lcl,		/* Last cluster of the fragment */
1423:..\..\ff14\source/ff.c **** 	DWORD term		/* Value to set the last FAT entry */
1424:..\..\ff14\source/ff.c **** )
1425:..\..\ff14\source/ff.c **** {
1426:..\..\ff14\source/ff.c **** 	FRESULT res;
1427:..\..\ff14\source/ff.c **** 
1428:..\..\ff14\source/ff.c **** 
1429:..\..\ff14\source/ff.c **** 	while (obj->n_frag > 0) {	/* Create the chain of last fragment */
1430:..\..\ff14\source/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1431:..\..\ff14\source/ff.c **** 		if (res != FR_OK) return res;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 34


1432:..\..\ff14\source/ff.c **** 		obj->n_frag--;
1433:..\..\ff14\source/ff.c **** 	}
1434:..\..\ff14\source/ff.c **** 	return FR_OK;
1435:..\..\ff14\source/ff.c **** }
1436:..\..\ff14\source/ff.c **** 
1437:..\..\ff14\source/ff.c **** #endif	/* FF_FS_EXFAT && !FF_FS_READONLY */
1438:..\..\ff14\source/ff.c **** 
1439:..\..\ff14\source/ff.c **** 
1440:..\..\ff14\source/ff.c **** 
1441:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1442:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1443:..\..\ff14\source/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1444:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1445:..\..\ff14\source/ff.c **** 
1446:..\..\ff14\source/ff.c **** static FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1447:..\..\ff14\source/ff.c **** 	FFOBJID* obj,		/* Corresponding object */
1448:..\..\ff14\source/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1449:..\..\ff14\source/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0 if entire chain) */
1450:..\..\ff14\source/ff.c **** )
1451:..\..\ff14\source/ff.c **** {
1452:..\..\ff14\source/ff.c **** 	FRESULT res = FR_OK;
1453:..\..\ff14\source/ff.c **** 	DWORD nxt;
1454:..\..\ff14\source/ff.c **** 	FATFS *fs = obj->fs;
1455:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT || FF_USE_TRIM
1456:..\..\ff14\source/ff.c **** 	DWORD scl = clst, ecl = clst;
1457:..\..\ff14\source/ff.c **** #endif
1458:..\..\ff14\source/ff.c **** #if FF_USE_TRIM
1459:..\..\ff14\source/ff.c **** 	LBA_t rt[2];
1460:..\..\ff14\source/ff.c **** #endif
1461:..\..\ff14\source/ff.c **** 
1462:..\..\ff14\source/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1463:..\..\ff14\source/ff.c **** 
1464:..\..\ff14\source/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1465:..\..\ff14\source/ff.c **** 	if (pclst != 0 && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1466:..\..\ff14\source/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1467:..\..\ff14\source/ff.c **** 		if (res != FR_OK) return res;
1468:..\..\ff14\source/ff.c **** 	}
1469:..\..\ff14\source/ff.c **** 
1470:..\..\ff14\source/ff.c **** 	/* Remove the chain */
1471:..\..\ff14\source/ff.c **** 	do {
1472:..\..\ff14\source/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1473:..\..\ff14\source/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1474:..\..\ff14\source/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1475:..\..\ff14\source/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1476:..\..\ff14\source/ff.c **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1477:..\..\ff14\source/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1478:..\..\ff14\source/ff.c **** 			if (res != FR_OK) return res;
1479:..\..\ff14\source/ff.c **** 		}
1480:..\..\ff14\source/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1481:..\..\ff14\source/ff.c **** 			fs->free_clst++;
1482:..\..\ff14\source/ff.c **** 			fs->fsi_flag |= 1;
1483:..\..\ff14\source/ff.c **** 		}
1484:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT || FF_USE_TRIM
1485:..\..\ff14\source/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1486:..\..\ff14\source/ff.c **** 			ecl = nxt;
1487:..\..\ff14\source/ff.c **** 		} else {				/* End of contiguous cluster block */
1488:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 35


1489:..\..\ff14\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1490:..\..\ff14\source/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1491:..\..\ff14\source/ff.c **** 				if (res != FR_OK) return res;
1492:..\..\ff14\source/ff.c **** 			}
1493:..\..\ff14\source/ff.c **** #endif
1494:..\..\ff14\source/ff.c **** #if FF_USE_TRIM
1495:..\..\ff14\source/ff.c **** 			rt[0] = clst2sect(fs, scl);					/* Start of data area to be freed */
1496:..\..\ff14\source/ff.c **** 			rt[1] = clst2sect(fs, ecl) + fs->csize - 1;	/* End of data area to be freed */
1497:..\..\ff14\source/ff.c **** 			disk_ioctl(fs->pdrv, CTRL_TRIM, rt);		/* Inform storage device that the data in the block may be
1498:..\..\ff14\source/ff.c **** #endif
1499:..\..\ff14\source/ff.c **** 			scl = ecl = nxt;
1500:..\..\ff14\source/ff.c **** 		}
1501:..\..\ff14\source/ff.c **** #endif
1502:..\..\ff14\source/ff.c **** 		clst = nxt;					/* Next cluster */
1503:..\..\ff14\source/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1504:..\..\ff14\source/ff.c **** 
1505:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
1506:..\..\ff14\source/ff.c **** 	/* Some post processes for chain status */
1507:..\..\ff14\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1508:..\..\ff14\source/ff.c **** 		if (pclst == 0) {	/* Has the entire chain been removed? */
1509:..\..\ff14\source/ff.c **** 			obj->stat = 0;		/* Change the chain status 'initial' */
1510:..\..\ff14\source/ff.c **** 		} else {
1511:..\..\ff14\source/ff.c **** 			if (obj->stat == 0) {	/* Is it a fragmented chain from the beginning of this session? */
1512:..\..\ff14\source/ff.c **** 				clst = obj->sclust;		/* Follow the chain to check if it gets contiguous */
1513:..\..\ff14\source/ff.c **** 				while (clst != pclst) {
1514:..\..\ff14\source/ff.c **** 					nxt = get_fat(obj, clst);
1515:..\..\ff14\source/ff.c **** 					if (nxt < 2) return FR_INT_ERR;
1516:..\..\ff14\source/ff.c **** 					if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
1517:..\..\ff14\source/ff.c **** 					if (nxt != clst + 1) break;	/* Not contiguous? */
1518:..\..\ff14\source/ff.c **** 					clst++;
1519:..\..\ff14\source/ff.c **** 				}
1520:..\..\ff14\source/ff.c **** 				if (clst == pclst) {	/* Has the chain got contiguous again? */
1521:..\..\ff14\source/ff.c **** 					obj->stat = 2;		/* Change the chain status 'contiguous' */
1522:..\..\ff14\source/ff.c **** 				}
1523:..\..\ff14\source/ff.c **** 			} else {
1524:..\..\ff14\source/ff.c **** 				if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Was the 
1525:..\..\ff14\source/ff.c **** 					obj->stat = 2;	/* Change the chain status 'contiguous' */
1526:..\..\ff14\source/ff.c **** 				}
1527:..\..\ff14\source/ff.c **** 			}
1528:..\..\ff14\source/ff.c **** 		}
1529:..\..\ff14\source/ff.c **** 	}
1530:..\..\ff14\source/ff.c **** #endif
1531:..\..\ff14\source/ff.c **** 	return FR_OK;
1532:..\..\ff14\source/ff.c **** }
1533:..\..\ff14\source/ff.c **** 
1534:..\..\ff14\source/ff.c **** 
1535:..\..\ff14\source/ff.c **** 
1536:..\..\ff14\source/ff.c **** 
1537:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1538:..\..\ff14\source/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1539:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1540:..\..\ff14\source/ff.c **** 
1541:..\..\ff14\source/ff.c **** static DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New 
1542:..\..\ff14\source/ff.c **** 	FFOBJID* obj,		/* Corresponding object */
1543:..\..\ff14\source/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1544:..\..\ff14\source/ff.c **** )
1545:..\..\ff14\source/ff.c **** {
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 36


1546:..\..\ff14\source/ff.c **** 	DWORD cs, ncl, scl;
1547:..\..\ff14\source/ff.c **** 	FRESULT res;
1548:..\..\ff14\source/ff.c **** 	FATFS *fs = obj->fs;
1549:..\..\ff14\source/ff.c **** 
1550:..\..\ff14\source/ff.c **** 
1551:..\..\ff14\source/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1552:..\..\ff14\source/ff.c **** 		scl = fs->last_clst;				/* Suggested cluster to start to find */
1553:..\..\ff14\source/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1554:..\..\ff14\source/ff.c **** 	}
1555:..\..\ff14\source/ff.c **** 	else {				/* Stretch a chain */
1556:..\..\ff14\source/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1557:..\..\ff14\source/ff.c **** 		if (cs < 2) return 1;				/* Test for insanity */
1558:..\..\ff14\source/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
1559:..\..\ff14\source/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1560:..\..\ff14\source/ff.c **** 		scl = clst;							/* Cluster to start to find */
1561:..\..\ff14\source/ff.c **** 	}
1562:..\..\ff14\source/ff.c **** 	if (fs->free_clst == 0) return 0;		/* No free cluster */
1563:..\..\ff14\source/ff.c **** 
1564:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
1565:..\..\ff14\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1566:..\..\ff14\source/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1567:..\..\ff14\source/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1568:..\..\ff14\source/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1569:..\..\ff14\source/ff.c **** 		if (res == FR_INT_ERR) return 1;
1570:..\..\ff14\source/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1571:..\..\ff14\source/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1572:..\..\ff14\source/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1573:..\..\ff14\source/ff.c **** 		} else {									/* It is a stretched chain */
1574:..\..\ff14\source/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1575:..\..\ff14\source/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1576:..\..\ff14\source/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1577:..\..\ff14\source/ff.c **** 			}
1578:..\..\ff14\source/ff.c **** 		}
1579:..\..\ff14\source/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1580:..\..\ff14\source/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1581:..\..\ff14\source/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1582:..\..\ff14\source/ff.c **** 			} else {				/* New fragment */
1583:..\..\ff14\source/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1584:..\..\ff14\source/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1585:..\..\ff14\source/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1586:..\..\ff14\source/ff.c **** 			}
1587:..\..\ff14\source/ff.c **** 		}
1588:..\..\ff14\source/ff.c **** 	} else
1589:..\..\ff14\source/ff.c **** #endif
1590:..\..\ff14\source/ff.c **** 	{	/* On the FAT/FAT32 volume */
1591:..\..\ff14\source/ff.c **** 		ncl = 0;
1592:..\..\ff14\source/ff.c **** 		if (scl == clst) {						/* Stretching an existing chain? */
1593:..\..\ff14\source/ff.c **** 			ncl = scl + 1;						/* Test if next cluster is free */
1594:..\..\ff14\source/ff.c **** 			if (ncl >= fs->n_fatent) ncl = 2;
1595:..\..\ff14\source/ff.c **** 			cs = get_fat(obj, ncl);				/* Get next cluster status */
1596:..\..\ff14\source/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
1597:..\..\ff14\source/ff.c **** 			if (cs != 0) {						/* Not free? */
1598:..\..\ff14\source/ff.c **** 				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
1599:..\..\ff14\source/ff.c **** 				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
1600:..\..\ff14\source/ff.c **** 				ncl = 0;
1601:..\..\ff14\source/ff.c **** 			}
1602:..\..\ff14\source/ff.c **** 		}
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 37


1603:..\..\ff14\source/ff.c **** 		if (ncl == 0) {	/* The new cluster cannot be contiguous and find another fragment */
1604:..\..\ff14\source/ff.c **** 			ncl = scl;	/* Start cluster */
1605:..\..\ff14\source/ff.c **** 			for (;;) {
1606:..\..\ff14\source/ff.c **** 				ncl++;							/* Next cluster */
1607:..\..\ff14\source/ff.c **** 				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1608:..\..\ff14\source/ff.c **** 					ncl = 2;
1609:..\..\ff14\source/ff.c **** 					if (ncl > scl) return 0;	/* No free cluster found? */
1610:..\..\ff14\source/ff.c **** 				}
1611:..\..\ff14\source/ff.c **** 				cs = get_fat(obj, ncl);			/* Get the cluster status */
1612:..\..\ff14\source/ff.c **** 				if (cs == 0) break;				/* Found a free cluster? */
1613:..\..\ff14\source/ff.c **** 				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
1614:..\..\ff14\source/ff.c **** 				if (ncl == scl) return 0;		/* No free cluster found? */
1615:..\..\ff14\source/ff.c **** 			}
1616:..\..\ff14\source/ff.c **** 		}
1617:..\..\ff14\source/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);		/* Mark the new cluster 'EOC' */
1618:..\..\ff14\source/ff.c **** 		if (res == FR_OK && clst != 0) {
1619:..\..\ff14\source/ff.c **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
1620:..\..\ff14\source/ff.c **** 		}
1621:..\..\ff14\source/ff.c **** 	}
1622:..\..\ff14\source/ff.c **** 
1623:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1624:..\..\ff14\source/ff.c **** 		fs->last_clst = ncl;
1625:..\..\ff14\source/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1626:..\..\ff14\source/ff.c **** 		fs->fsi_flag |= 1;
1627:..\..\ff14\source/ff.c **** 	} else {
1628:..\..\ff14\source/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1629:..\..\ff14\source/ff.c **** 	}
1630:..\..\ff14\source/ff.c **** 
1631:..\..\ff14\source/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1632:..\..\ff14\source/ff.c **** }
1633:..\..\ff14\source/ff.c **** 
1634:..\..\ff14\source/ff.c **** #endif /* !FF_FS_READONLY */
1635:..\..\ff14\source/ff.c **** 
1636:..\..\ff14\source/ff.c **** 
1637:..\..\ff14\source/ff.c **** 
1638:..\..\ff14\source/ff.c **** 
1639:..\..\ff14\source/ff.c **** #if FF_USE_FASTSEEK
1640:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1641:..\..\ff14\source/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1642:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1643:..\..\ff14\source/ff.c **** 
1644:..\..\ff14\source/ff.c **** static DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1645:..\..\ff14\source/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1646:..\..\ff14\source/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1647:..\..\ff14\source/ff.c **** )
1648:..\..\ff14\source/ff.c **** {
1649:..\..\ff14\source/ff.c **** 	DWORD cl, ncl, *tbl;
1650:..\..\ff14\source/ff.c **** 	FATFS *fs = fp->obj.fs;
1651:..\..\ff14\source/ff.c **** 
1652:..\..\ff14\source/ff.c **** 
1653:..\..\ff14\source/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
1654:..\..\ff14\source/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
1655:..\..\ff14\source/ff.c **** 	for (;;) {
1656:..\..\ff14\source/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
1657:..\..\ff14\source/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
1658:..\..\ff14\source/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
1659:..\..\ff14\source/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 38


1660:..\..\ff14\source/ff.c **** 	}
1661:..\..\ff14\source/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
1662:..\..\ff14\source/ff.c **** }
1663:..\..\ff14\source/ff.c **** 
1664:..\..\ff14\source/ff.c **** #endif	/* FF_USE_FASTSEEK */
1665:..\..\ff14\source/ff.c **** 
1666:..\..\ff14\source/ff.c **** 
1667:..\..\ff14\source/ff.c **** 
1668:..\..\ff14\source/ff.c **** 
1669:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1670:..\..\ff14\source/ff.c **** /* Directory handling - Fill a cluster with zeros                        */
1671:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1672:..\..\ff14\source/ff.c **** 
1673:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1674:..\..\ff14\source/ff.c **** static FRESULT dir_clear (	/* Returns FR_OK or FR_DISK_ERR */
1675:..\..\ff14\source/ff.c **** 	FATFS *fs,		/* Filesystem object */
1676:..\..\ff14\source/ff.c **** 	DWORD clst		/* Directory table to clear */
1677:..\..\ff14\source/ff.c **** )
1678:..\..\ff14\source/ff.c **** {
1679:..\..\ff14\source/ff.c **** 	LBA_t sect;
1680:..\..\ff14\source/ff.c **** 	UINT n, szb;
1681:..\..\ff14\source/ff.c **** 	BYTE *ibuf;
1682:..\..\ff14\source/ff.c **** 
1683:..\..\ff14\source/ff.c **** 
1684:..\..\ff14\source/ff.c **** 	if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1685:..\..\ff14\source/ff.c **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
1686:..\..\ff14\source/ff.c **** 	fs->winsect = sect;				/* Set window to top of the cluster */
1687:..\..\ff14\source/ff.c **** 	mem_set(fs->win, 0, sizeof fs->win);	/* Clear window buffer */
1688:..\..\ff14\source/ff.c **** #if FF_USE_LFN == 3		/* Quick table clear by using multi-secter write */
1689:..\..\ff14\source/ff.c **** 	/* Allocate a temporary buffer */
1690:..\..\ff14\source/ff.c **** 	for (szb = ((DWORD)fs->csize * SS(fs) >= MAX_MALLOC) ? MAX_MALLOC : fs->csize * SS(fs), ibuf = 0; 
1691:..\..\ff14\source/ff.c **** 	if (szb > SS(fs)) {		/* Buffer allocated? */
1692:..\..\ff14\source/ff.c **** 		mem_set(ibuf, 0, szb);
1693:..\..\ff14\source/ff.c **** 		szb /= SS(fs);		/* Bytes -> Sectors */
1694:..\..\ff14\source/ff.c **** 		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* 
1695:..\..\ff14\source/ff.c **** 		ff_memfree(ibuf);
1696:..\..\ff14\source/ff.c **** 	} else
1697:..\..\ff14\source/ff.c **** #endif
1698:..\..\ff14\source/ff.c **** 	{
1699:..\..\ff14\source/ff.c **** 		ibuf = fs->win; szb = 1;	/* Use window buffer (many single-sector writes may take a time) */
1700:..\..\ff14\source/ff.c **** 		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* 
1701:..\..\ff14\source/ff.c **** 	}
1702:..\..\ff14\source/ff.c **** 	return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
1703:..\..\ff14\source/ff.c **** }
1704:..\..\ff14\source/ff.c **** #endif	/* !FF_FS_READONLY */
1705:..\..\ff14\source/ff.c **** 
1706:..\..\ff14\source/ff.c **** 
1707:..\..\ff14\source/ff.c **** 
1708:..\..\ff14\source/ff.c **** 
1709:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1710:..\..\ff14\source/ff.c **** /* Directory handling - Set directory index                              */
1711:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1712:..\..\ff14\source/ff.c **** 
1713:..\..\ff14\source/ff.c **** static FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1714:..\..\ff14\source/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1715:..\..\ff14\source/ff.c **** 	DWORD ofs		/* Offset of directory table */
1716:..\..\ff14\source/ff.c **** )
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 39


1717:..\..\ff14\source/ff.c **** {
1718:..\..\ff14\source/ff.c **** 	DWORD csz, clst;
1719:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
1720:..\..\ff14\source/ff.c **** 
1721:..\..\ff14\source/ff.c **** 
1722:..\..\ff14\source/ff.c **** 	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIR
1723:..\..\ff14\source/ff.c **** 		return FR_INT_ERR;
1724:..\..\ff14\source/ff.c **** 	}
1725:..\..\ff14\source/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1726:..\..\ff14\source/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1727:..\..\ff14\source/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1728:..\..\ff14\source/ff.c **** 		clst = (DWORD)fs->dirbase;
1729:..\..\ff14\source/ff.c **** 		if (FF_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1730:..\..\ff14\source/ff.c **** 	}
1731:..\..\ff14\source/ff.c **** 
1732:..\..\ff14\source/ff.c **** 	if (clst == 0) {	/* Static table (root-directory on the FAT volume) */
1733:..\..\ff14\source/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
1734:..\..\ff14\source/ff.c **** 		dp->sect = fs->dirbase;
1735:..\..\ff14\source/ff.c **** 
1736:..\..\ff14\source/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory on the FAT32/exFAT volume) */
1737:..\..\ff14\source/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1738:..\..\ff14\source/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1739:..\..\ff14\source/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1740:..\..\ff14\source/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1741:..\..\ff14\source/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1742:..\..\ff14\source/ff.c **** 			ofs -= csz;
1743:..\..\ff14\source/ff.c **** 		}
1744:..\..\ff14\source/ff.c **** 		dp->sect = clst2sect(fs, clst);
1745:..\..\ff14\source/ff.c **** 	}
1746:..\..\ff14\source/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1747:..\..\ff14\source/ff.c **** 	if (dp->sect == 0) return FR_INT_ERR;
1748:..\..\ff14\source/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1749:..\..\ff14\source/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1750:..\..\ff14\source/ff.c **** 
1751:..\..\ff14\source/ff.c **** 	return FR_OK;
1752:..\..\ff14\source/ff.c **** }
1753:..\..\ff14\source/ff.c **** 
1754:..\..\ff14\source/ff.c **** 
1755:..\..\ff14\source/ff.c **** 
1756:..\..\ff14\source/ff.c **** 
1757:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1758:..\..\ff14\source/ff.c **** /* Directory handling - Move directory table index next                  */
1759:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1760:..\..\ff14\source/ff.c **** 
1761:..\..\ff14\source/ff.c **** static FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stret
1762:..\..\ff14\source/ff.c **** 	DIR* dp,				/* Pointer to the directory object */
1763:..\..\ff14\source/ff.c **** 	int stretch				/* 0: Do not stretch table, 1: Stretch table if needed */
1764:..\..\ff14\source/ff.c **** )
1765:..\..\ff14\source/ff.c **** {
1766:..\..\ff14\source/ff.c **** 	DWORD ofs, clst;
1767:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
1768:..\..\ff14\source/ff.c **** 
1769:..\..\ff14\source/ff.c **** 
1770:..\..\ff14\source/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1771:..\..\ff14\source/ff.c **** 	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) dp->sect = 0;
1772:..\..\ff14\source/ff.c **** 	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
1773:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 40


1774:..\..\ff14\source/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1775:..\..\ff14\source/ff.c **** 		dp->sect++;				/* Next sector */
1776:..\..\ff14\source/ff.c **** 
1777:..\..\ff14\source/ff.c **** 		if (dp->clust == 0) {	/* Static table */
1778:..\..\ff14\source/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1779:..\..\ff14\source/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1780:..\..\ff14\source/ff.c **** 			}
1781:..\..\ff14\source/ff.c **** 		}
1782:..\..\ff14\source/ff.c **** 		else {					/* Dynamic table */
1783:..\..\ff14\source/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
1784:..\..\ff14\source/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
1785:..\..\ff14\source/ff.c **** 				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
1786:..\..\ff14\source/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1787:..\..\ff14\source/ff.c **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
1788:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1789:..\..\ff14\source/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1790:..\..\ff14\source/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1791:..\..\ff14\source/ff.c **** 					}
1792:..\..\ff14\source/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1793:..\..\ff14\source/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1794:..\..\ff14\source/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1795:..\..\ff14\source/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1796:..\..\ff14\source/ff.c **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
1797:..\..\ff14\source/ff.c **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
1798:..\..\ff14\source/ff.c **** #else
1799:..\..\ff14\source/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1800:..\..\ff14\source/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1801:..\..\ff14\source/ff.c **** #endif
1802:..\..\ff14\source/ff.c **** 				}
1803:..\..\ff14\source/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1804:..\..\ff14\source/ff.c **** 				dp->sect = clst2sect(fs, clst);
1805:..\..\ff14\source/ff.c **** 			}
1806:..\..\ff14\source/ff.c **** 		}
1807:..\..\ff14\source/ff.c **** 	}
1808:..\..\ff14\source/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1809:..\..\ff14\source/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1810:..\..\ff14\source/ff.c **** 
1811:..\..\ff14\source/ff.c **** 	return FR_OK;
1812:..\..\ff14\source/ff.c **** }
1813:..\..\ff14\source/ff.c **** 
1814:..\..\ff14\source/ff.c **** 
1815:..\..\ff14\source/ff.c **** 
1816:..\..\ff14\source/ff.c **** 
1817:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1818:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1819:..\..\ff14\source/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1820:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1821:..\..\ff14\source/ff.c **** 
1822:..\..\ff14\source/ff.c **** static FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1823:..\..\ff14\source/ff.c **** 	DIR* dp,				/* Pointer to the directory object */
1824:..\..\ff14\source/ff.c **** 	UINT nent				/* Number of contiguous entries to allocate */
1825:..\..\ff14\source/ff.c **** )
1826:..\..\ff14\source/ff.c **** {
1827:..\..\ff14\source/ff.c **** 	FRESULT res;
1828:..\..\ff14\source/ff.c **** 	UINT n;
1829:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
1830:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 41


1831:..\..\ff14\source/ff.c **** 
1832:..\..\ff14\source/ff.c **** 	res = dir_sdi(dp, 0);
1833:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
1834:..\..\ff14\source/ff.c **** 		n = 0;
1835:..\..\ff14\source/ff.c **** 		do {
1836:..\..\ff14\source/ff.c **** 			res = move_window(fs, dp->sect);
1837:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
1838:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
1839:..\..\ff14\source/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1840:..\..\ff14\source/ff.c **** #else
1841:..\..\ff14\source/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1842:..\..\ff14\source/ff.c **** #endif
1843:..\..\ff14\source/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1844:..\..\ff14\source/ff.c **** 			} else {
1845:..\..\ff14\source/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1846:..\..\ff14\source/ff.c **** 			}
1847:..\..\ff14\source/ff.c **** 			res = dir_next(dp, 1);
1848:..\..\ff14\source/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1849:..\..\ff14\source/ff.c **** 	}
1850:..\..\ff14\source/ff.c **** 
1851:..\..\ff14\source/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1852:..\..\ff14\source/ff.c **** 	return res;
1853:..\..\ff14\source/ff.c **** }
1854:..\..\ff14\source/ff.c **** 
1855:..\..\ff14\source/ff.c **** #endif	/* !FF_FS_READONLY */
1856:..\..\ff14\source/ff.c **** 
1857:..\..\ff14\source/ff.c **** 
1858:..\..\ff14\source/ff.c **** 
1859:..\..\ff14\source/ff.c **** 
1860:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1861:..\..\ff14\source/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1862:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
1863:..\..\ff14\source/ff.c **** 
1864:..\..\ff14\source/ff.c **** static DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1865:..\..\ff14\source/ff.c **** 	FATFS* fs,			/* Pointer to the fs object */
1866:..\..\ff14\source/ff.c **** 	const BYTE* dir		/* Pointer to the key entry */
1867:..\..\ff14\source/ff.c **** )
1868:..\..\ff14\source/ff.c **** {
 444              		.loc 1 1868 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              	.LVL65:
 449 0000 70B5     		push	{r4, r5, r6, lr}
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 4, -16
 452              		.cfi_offset 5, -12
 453              		.cfi_offset 6, -8
 454              		.cfi_offset 14, -4
 455 0002 0646     		mov	r6, r0
 456 0004 0D46     		mov	r5, r1
1869:..\..\ff14\source/ff.c **** 	DWORD cl;
1870:..\..\ff14\source/ff.c **** 
1871:..\..\ff14\source/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 457              		.loc 1 1871 0
 458 0006 01F11A00 		add	r0, r1, #26
 459              	.LVL66:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 42


 460 000a FFF7FEFF 		bl	ld_word
 461              	.LVL67:
 462 000e 0446     		mov	r4, r0
 463              	.LVL68:
1872:..\..\ff14\source/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 464              		.loc 1 1872 0
 465 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 466 0012 032B     		cmp	r3, #3
 467 0014 05D1     		bne	.L35
1873:..\..\ff14\source/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 468              		.loc 1 1873 0
 469 0016 05F11400 		add	r0, r5, #20
 470              	.LVL69:
 471 001a FFF7FEFF 		bl	ld_word
 472              	.LVL70:
 473 001e 44EA0040 		orr	r0, r4, r0, lsl #16
 474              	.LVL71:
 475              	.L35:
1874:..\..\ff14\source/ff.c **** 	}
1875:..\..\ff14\source/ff.c **** 
1876:..\..\ff14\source/ff.c **** 	return cl;
1877:..\..\ff14\source/ff.c **** }
 476              		.loc 1 1877 0
 477 0022 70BD     		pop	{r4, r5, r6, pc}
 478              		.cfi_endproc
 479              	.LFE22:
 480              		.size	ld_clust, .-ld_clust
 481              		.section	.text.st_clust,"ax",%progbits
 482              		.align	2
 483              		.thumb
 484              		.thumb_func
 485              		.type	st_clust, %function
 486              	st_clust:
 487              	.LFB23:
1878:..\..\ff14\source/ff.c **** 
1879:..\..\ff14\source/ff.c **** 
1880:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1881:..\..\ff14\source/ff.c **** static void st_clust (
1882:..\..\ff14\source/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1883:..\..\ff14\source/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1884:..\..\ff14\source/ff.c **** 	DWORD cl	/* Value to be set */
1885:..\..\ff14\source/ff.c **** )
1886:..\..\ff14\source/ff.c **** {
 488              		.loc 1 1886 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              	.LVL72:
 493 0000 70B5     		push	{r4, r5, r6, lr}
 494              		.cfi_def_cfa_offset 16
 495              		.cfi_offset 4, -16
 496              		.cfi_offset 5, -12
 497              		.cfi_offset 6, -8
 498              		.cfi_offset 14, -4
 499 0002 0646     		mov	r6, r0
 500 0004 0C46     		mov	r4, r1
 501 0006 1546     		mov	r5, r2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 43


1887:..\..\ff14\source/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 502              		.loc 1 1887 0
 503 0008 91B2     		uxth	r1, r2
 504              	.LVL73:
 505 000a 04F11A00 		add	r0, r4, #26
 506              	.LVL74:
 507 000e FFF7FEFF 		bl	st_word
 508              	.LVL75:
1888:..\..\ff14\source/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 509              		.loc 1 1888 0
 510 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 511 0014 032B     		cmp	r3, #3
 512 0016 04D1     		bne	.L37
1889:..\..\ff14\source/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 513              		.loc 1 1889 0
 514 0018 290C     		lsrs	r1, r5, #16
 515 001a 04F11400 		add	r0, r4, #20
 516 001e FFF7FEFF 		bl	st_word
 517              	.LVL76:
 518              	.L37:
 519 0022 70BD     		pop	{r4, r5, r6, pc}
 520              		.cfi_endproc
 521              	.LFE23:
 522              		.size	st_clust, .-st_clust
 523              		.section	.text.get_fileinfo,"ax",%progbits
 524              		.align	2
 525              		.thumb
 526              		.thumb_func
 527              		.type	get_fileinfo, %function
 528              	get_fileinfo:
 529              	.LFB28:
1890:..\..\ff14\source/ff.c **** 	}
1891:..\..\ff14\source/ff.c **** }
1892:..\..\ff14\source/ff.c **** #endif
1893:..\..\ff14\source/ff.c **** 
1894:..\..\ff14\source/ff.c **** 
1895:..\..\ff14\source/ff.c **** 
1896:..\..\ff14\source/ff.c **** #if FF_USE_LFN
1897:..\..\ff14\source/ff.c **** /*--------------------------------------------------------*/
1898:..\..\ff14\source/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1899:..\..\ff14\source/ff.c **** /*--------------------------------------------------------*/
1900:..\..\ff14\source/ff.c **** 
1901:..\..\ff14\source/ff.c **** static int cmp_lfn (		/* 1:matched, 0:not matched */
1902:..\..\ff14\source/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1903:..\..\ff14\source/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1904:..\..\ff14\source/ff.c **** )
1905:..\..\ff14\source/ff.c **** {
1906:..\..\ff14\source/ff.c **** 	UINT i, s;
1907:..\..\ff14\source/ff.c **** 	WCHAR wc, uc;
1908:..\..\ff14\source/ff.c **** 
1909:..\..\ff14\source/ff.c **** 
1910:..\..\ff14\source/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1911:..\..\ff14\source/ff.c **** 
1912:..\..\ff14\source/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1913:..\..\ff14\source/ff.c **** 
1914:..\..\ff14\source/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1915:..\..\ff14\source/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 44


1916:..\..\ff14\source/ff.c **** 		if (wc != 0) {
1917:..\..\ff14\source/ff.c **** 			if (i >= FF_MAX_LFN + 1 || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1918:..\..\ff14\source/ff.c **** 				return 0;					/* Not matched */
1919:..\..\ff14\source/ff.c **** 			}
1920:..\..\ff14\source/ff.c **** 			wc = uc;
1921:..\..\ff14\source/ff.c **** 		} else {
1922:..\..\ff14\source/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1923:..\..\ff14\source/ff.c **** 		}
1924:..\..\ff14\source/ff.c **** 	}
1925:..\..\ff14\source/ff.c **** 
1926:..\..\ff14\source/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1927:..\..\ff14\source/ff.c **** 
1928:..\..\ff14\source/ff.c **** 	return 1;		/* The part of LFN matched */
1929:..\..\ff14\source/ff.c **** }
1930:..\..\ff14\source/ff.c **** 
1931:..\..\ff14\source/ff.c **** 
1932:..\..\ff14\source/ff.c **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 || FF_USE_LABEL || FF_FS_EXFAT
1933:..\..\ff14\source/ff.c **** /*-----------------------------------------------------*/
1934:..\..\ff14\source/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1935:..\..\ff14\source/ff.c **** /*-----------------------------------------------------*/
1936:..\..\ff14\source/ff.c **** 
1937:..\..\ff14\source/ff.c **** static int pick_lfn (	/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1938:..\..\ff14\source/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1939:..\..\ff14\source/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1940:..\..\ff14\source/ff.c **** )
1941:..\..\ff14\source/ff.c **** {
1942:..\..\ff14\source/ff.c **** 	UINT i, s;
1943:..\..\ff14\source/ff.c **** 	WCHAR wc, uc;
1944:..\..\ff14\source/ff.c **** 
1945:..\..\ff14\source/ff.c **** 
1946:..\..\ff14\source/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1947:..\..\ff14\source/ff.c **** 
1948:..\..\ff14\source/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1949:..\..\ff14\source/ff.c **** 
1950:..\..\ff14\source/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1951:..\..\ff14\source/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1952:..\..\ff14\source/ff.c **** 		if (wc != 0) {
1953:..\..\ff14\source/ff.c **** 			if (i >= FF_MAX_LFN + 1) return 0;	/* Buffer overflow? */
1954:..\..\ff14\source/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1955:..\..\ff14\source/ff.c **** 		} else {
1956:..\..\ff14\source/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1957:..\..\ff14\source/ff.c **** 		}
1958:..\..\ff14\source/ff.c **** 	}
1959:..\..\ff14\source/ff.c **** 
1960:..\..\ff14\source/ff.c **** 	if (dir[LDIR_Ord] & LLEF && wc != 0) {	/* Put terminator if it is the last LFN part and not termin
1961:..\..\ff14\source/ff.c **** 		if (i >= FF_MAX_LFN + 1) return 0;	/* Buffer overflow? */
1962:..\..\ff14\source/ff.c **** 		lfnbuf[i] = 0;
1963:..\..\ff14\source/ff.c **** 	}
1964:..\..\ff14\source/ff.c **** 
1965:..\..\ff14\source/ff.c **** 	return 1;		/* The part of LFN is valid */
1966:..\..\ff14\source/ff.c **** }
1967:..\..\ff14\source/ff.c **** #endif
1968:..\..\ff14\source/ff.c **** 
1969:..\..\ff14\source/ff.c **** 
1970:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
1971:..\..\ff14\source/ff.c **** /*-----------------------------------------*/
1972:..\..\ff14\source/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 45


1973:..\..\ff14\source/ff.c **** /*-----------------------------------------*/
1974:..\..\ff14\source/ff.c **** 
1975:..\..\ff14\source/ff.c **** static void put_lfn (
1976:..\..\ff14\source/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1977:..\..\ff14\source/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1978:..\..\ff14\source/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1979:..\..\ff14\source/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1980:..\..\ff14\source/ff.c **** )
1981:..\..\ff14\source/ff.c **** {
1982:..\..\ff14\source/ff.c **** 	UINT i, s;
1983:..\..\ff14\source/ff.c **** 	WCHAR wc;
1984:..\..\ff14\source/ff.c **** 
1985:..\..\ff14\source/ff.c **** 
1986:..\..\ff14\source/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1987:..\..\ff14\source/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1988:..\..\ff14\source/ff.c **** 	dir[LDIR_Type] = 0;
1989:..\..\ff14\source/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1990:..\..\ff14\source/ff.c **** 
1991:..\..\ff14\source/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1992:..\..\ff14\source/ff.c **** 	s = wc = 0;
1993:..\..\ff14\source/ff.c **** 	do {
1994:..\..\ff14\source/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1995:..\..\ff14\source/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1996:..\..\ff14\source/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for following items */
1997:..\..\ff14\source/ff.c **** 	} while (++s < 13);
1998:..\..\ff14\source/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1999:..\..\ff14\source/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
2000:..\..\ff14\source/ff.c **** }
2001:..\..\ff14\source/ff.c **** 
2002:..\..\ff14\source/ff.c **** #endif	/* !FF_FS_READONLY */
2003:..\..\ff14\source/ff.c **** #endif	/* FF_USE_LFN */
2004:..\..\ff14\source/ff.c **** 
2005:..\..\ff14\source/ff.c **** 
2006:..\..\ff14\source/ff.c **** 
2007:..\..\ff14\source/ff.c **** #if FF_USE_LFN && !FF_FS_READONLY
2008:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2009:..\..\ff14\source/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
2010:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2011:..\..\ff14\source/ff.c **** 
2012:..\..\ff14\source/ff.c **** static void gen_numname (
2013:..\..\ff14\source/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
2014:..\..\ff14\source/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
2015:..\..\ff14\source/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
2016:..\..\ff14\source/ff.c **** 	UINT seq			/* Sequence number */
2017:..\..\ff14\source/ff.c **** )
2018:..\..\ff14\source/ff.c **** {
2019:..\..\ff14\source/ff.c **** 	BYTE ns[8], c;
2020:..\..\ff14\source/ff.c **** 	UINT i, j;
2021:..\..\ff14\source/ff.c **** 	WCHAR wc;
2022:..\..\ff14\source/ff.c **** 	DWORD sreg;
2023:..\..\ff14\source/ff.c **** 
2024:..\..\ff14\source/ff.c **** 
2025:..\..\ff14\source/ff.c **** 	mem_cpy(dst, src, 11);
2026:..\..\ff14\source/ff.c **** 
2027:..\..\ff14\source/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
2028:..\..\ff14\source/ff.c **** 		sreg = seq;
2029:..\..\ff14\source/ff.c **** 		while (*lfn) {	/* Create a CRC as hash value */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 46


2030:..\..\ff14\source/ff.c **** 			wc = *lfn++;
2031:..\..\ff14\source/ff.c **** 			for (i = 0; i < 16; i++) {
2032:..\..\ff14\source/ff.c **** 				sreg = (sreg << 1) + (wc & 1);
2033:..\..\ff14\source/ff.c **** 				wc >>= 1;
2034:..\..\ff14\source/ff.c **** 				if (sreg & 0x10000) sreg ^= 0x11021;
2035:..\..\ff14\source/ff.c **** 			}
2036:..\..\ff14\source/ff.c **** 		}
2037:..\..\ff14\source/ff.c **** 		seq = (UINT)sreg;
2038:..\..\ff14\source/ff.c **** 	}
2039:..\..\ff14\source/ff.c **** 
2040:..\..\ff14\source/ff.c **** 	/* itoa (hexdecimal) */
2041:..\..\ff14\source/ff.c **** 	i = 7;
2042:..\..\ff14\source/ff.c **** 	do {
2043:..\..\ff14\source/ff.c **** 		c = (BYTE)((seq % 16) + '0');
2044:..\..\ff14\source/ff.c **** 		if (c > '9') c += 7;
2045:..\..\ff14\source/ff.c **** 		ns[i--] = c;
2046:..\..\ff14\source/ff.c **** 		seq /= 16;
2047:..\..\ff14\source/ff.c **** 	} while (seq);
2048:..\..\ff14\source/ff.c **** 	ns[i] = '~';
2049:..\..\ff14\source/ff.c **** 
2050:..\..\ff14\source/ff.c **** 	/* Append the number to the SFN body */
2051:..\..\ff14\source/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
2052:..\..\ff14\source/ff.c **** 		if (dbc_1st(dst[j])) {
2053:..\..\ff14\source/ff.c **** 			if (j == i - 1) break;
2054:..\..\ff14\source/ff.c **** 			j++;
2055:..\..\ff14\source/ff.c **** 		}
2056:..\..\ff14\source/ff.c **** 	}
2057:..\..\ff14\source/ff.c **** 	do {
2058:..\..\ff14\source/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
2059:..\..\ff14\source/ff.c **** 	} while (j < 8);
2060:..\..\ff14\source/ff.c **** }
2061:..\..\ff14\source/ff.c **** #endif	/* FF_USE_LFN && !FF_FS_READONLY */
2062:..\..\ff14\source/ff.c **** 
2063:..\..\ff14\source/ff.c **** 
2064:..\..\ff14\source/ff.c **** 
2065:..\..\ff14\source/ff.c **** #if FF_USE_LFN
2066:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2067:..\..\ff14\source/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
2068:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2069:..\..\ff14\source/ff.c **** 
2070:..\..\ff14\source/ff.c **** static BYTE sum_sfn (
2071:..\..\ff14\source/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
2072:..\..\ff14\source/ff.c **** )
2073:..\..\ff14\source/ff.c **** {
2074:..\..\ff14\source/ff.c **** 	BYTE sum = 0;
2075:..\..\ff14\source/ff.c **** 	UINT n = 11;
2076:..\..\ff14\source/ff.c **** 
2077:..\..\ff14\source/ff.c **** 	do {
2078:..\..\ff14\source/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
2079:..\..\ff14\source/ff.c **** 	} while (--n);
2080:..\..\ff14\source/ff.c **** 	return sum;
2081:..\..\ff14\source/ff.c **** }
2082:..\..\ff14\source/ff.c **** 
2083:..\..\ff14\source/ff.c **** #endif	/* FF_USE_LFN */
2084:..\..\ff14\source/ff.c **** 
2085:..\..\ff14\source/ff.c **** 
2086:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 47


2087:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
2088:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2089:..\..\ff14\source/ff.c **** /* exFAT: Checksum                                                       */
2090:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2091:..\..\ff14\source/ff.c **** 
2092:..\..\ff14\source/ff.c **** static WORD xdir_sum (	/* Get checksum of the directoly entry block */
2093:..\..\ff14\source/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
2094:..\..\ff14\source/ff.c **** )
2095:..\..\ff14\source/ff.c **** {
2096:..\..\ff14\source/ff.c **** 	UINT i, szblk;
2097:..\..\ff14\source/ff.c **** 	WORD sum;
2098:..\..\ff14\source/ff.c **** 
2099:..\..\ff14\source/ff.c **** 
2100:..\..\ff14\source/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;	/* Number of bytes of the entry block */
2101:..\..\ff14\source/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
2102:..\..\ff14\source/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip 2-byte sum field */
2103:..\..\ff14\source/ff.c **** 			i++;
2104:..\..\ff14\source/ff.c **** 		} else {
2105:..\..\ff14\source/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
2106:..\..\ff14\source/ff.c **** 		}
2107:..\..\ff14\source/ff.c **** 	}
2108:..\..\ff14\source/ff.c **** 	return sum;
2109:..\..\ff14\source/ff.c **** }
2110:..\..\ff14\source/ff.c **** 
2111:..\..\ff14\source/ff.c **** 
2112:..\..\ff14\source/ff.c **** 
2113:..\..\ff14\source/ff.c **** static WORD xname_sum (	/* Get check sum (to be used as hash) of the file name */
2114:..\..\ff14\source/ff.c **** 	const WCHAR* name	/* File name to be calculated */
2115:..\..\ff14\source/ff.c **** )
2116:..\..\ff14\source/ff.c **** {
2117:..\..\ff14\source/ff.c **** 	WCHAR chr;
2118:..\..\ff14\source/ff.c **** 	WORD sum = 0;
2119:..\..\ff14\source/ff.c **** 
2120:..\..\ff14\source/ff.c **** 
2121:..\..\ff14\source/ff.c **** 	while ((chr = *name++) != 0) {
2122:..\..\ff14\source/ff.c **** 		chr = (WCHAR)ff_wtoupper(chr);		/* File name needs to be up-case converted */
2123:..\..\ff14\source/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
2124:..\..\ff14\source/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
2125:..\..\ff14\source/ff.c **** 	}
2126:..\..\ff14\source/ff.c **** 	return sum;
2127:..\..\ff14\source/ff.c **** }
2128:..\..\ff14\source/ff.c **** 
2129:..\..\ff14\source/ff.c **** 
2130:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY && FF_USE_MKFS
2131:..\..\ff14\source/ff.c **** static DWORD xsum32 (	/* Returns 32-bit checksum */
2132:..\..\ff14\source/ff.c **** 	BYTE  dat,			/* Byte to be calculated (byte-by-byte processing) */
2133:..\..\ff14\source/ff.c **** 	DWORD sum			/* Previous sum value */
2134:..\..\ff14\source/ff.c **** )
2135:..\..\ff14\source/ff.c **** {
2136:..\..\ff14\source/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
2137:..\..\ff14\source/ff.c **** 	return sum;
2138:..\..\ff14\source/ff.c **** }
2139:..\..\ff14\source/ff.c **** #endif
2140:..\..\ff14\source/ff.c **** 
2141:..\..\ff14\source/ff.c **** 
2142:..\..\ff14\source/ff.c **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2
2143:..\..\ff14\source/ff.c **** /*------------------------------------------------------*/
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 48


2144:..\..\ff14\source/ff.c **** /* exFAT: Get object information from a directory block */
2145:..\..\ff14\source/ff.c **** /*------------------------------------------------------*/
2146:..\..\ff14\source/ff.c **** 
2147:..\..\ff14\source/ff.c **** static void get_xfileinfo (
2148:..\..\ff14\source/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
2149:..\..\ff14\source/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
2150:..\..\ff14\source/ff.c **** )
2151:..\..\ff14\source/ff.c **** {
2152:..\..\ff14\source/ff.c **** 	WCHAR wc, hs;
2153:..\..\ff14\source/ff.c **** 	UINT di, si, nc;
2154:..\..\ff14\source/ff.c **** 
2155:..\..\ff14\source/ff.c **** 	/* Get file name from the entry block */
2156:..\..\ff14\source/ff.c **** 	si = SZDIRE * 2;	/* 1st C1 entry */
2157:..\..\ff14\source/ff.c **** 	nc = 0; hs = 0; di = 0;
2158:..\..\ff14\source/ff.c **** 	while (nc < dirb[XDIR_NumName]) {
2159:..\..\ff14\source/ff.c **** 		if (si >= MAXDIRB(FF_MAX_LFN)) { di = 0; break; }	/* Truncated directory block? */
2160:..\..\ff14\source/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
2161:..\..\ff14\source/ff.c **** 		wc = ld_word(dirb + si); si += 2; nc++;	/* Get a character */
2162:..\..\ff14\source/ff.c **** 		if (hs == 0 && IsSurrogate(wc)) {	/* Is it a surrogate? */
2163:..\..\ff14\source/ff.c **** 			hs = wc; continue;	/* Get low surrogate */
2164:..\..\ff14\source/ff.c **** 		}
2165:..\..\ff14\source/ff.c **** 		wc = put_utf((DWORD)hs << 16 | wc, &fno->fname[di], FF_LFN_BUF - di);	/* Store it in API encoding
2166:..\..\ff14\source/ff.c **** 		if (wc == 0) { di = 0; break; }	/* Buffer overflow or wrong encoding? */
2167:..\..\ff14\source/ff.c **** 		di += wc;
2168:..\..\ff14\source/ff.c **** 		hs = 0;
2169:..\..\ff14\source/ff.c **** 	}
2170:..\..\ff14\source/ff.c **** 	if (hs != 0) di = 0;					/* Broken surrogate pair? */
2171:..\..\ff14\source/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
2172:..\..\ff14\source/ff.c **** 	fno->fname[di] = 0;						/* Terminate the name */
2173:..\..\ff14\source/ff.c **** 	fno->altname[0] = 0;					/* exFAT does not support SFN */
2174:..\..\ff14\source/ff.c **** 
2175:..\..\ff14\source/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];			/* Attribute */
2176:..\..\ff14\source/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
2177:..\..\ff14\source/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
2178:..\..\ff14\source/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
2179:..\..\ff14\source/ff.c **** }
2180:..\..\ff14\source/ff.c **** 
2181:..\..\ff14\source/ff.c **** #endif	/* FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 */
2182:..\..\ff14\source/ff.c **** 
2183:..\..\ff14\source/ff.c **** 
2184:..\..\ff14\source/ff.c **** /*-----------------------------------*/
2185:..\..\ff14\source/ff.c **** /* exFAT: Get a directry entry block */
2186:..\..\ff14\source/ff.c **** /*-----------------------------------*/
2187:..\..\ff14\source/ff.c **** 
2188:..\..\ff14\source/ff.c **** static FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
2189:..\..\ff14\source/ff.c **** 	DIR* dp					/* Reading direcotry object pointing top of the entry block to load */
2190:..\..\ff14\source/ff.c **** )
2191:..\..\ff14\source/ff.c **** {
2192:..\..\ff14\source/ff.c **** 	FRESULT res;
2193:..\..\ff14\source/ff.c **** 	UINT i, sz_ent;
2194:..\..\ff14\source/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
2195:..\..\ff14\source/ff.c **** 
2196:..\..\ff14\source/ff.c **** 
2197:..\..\ff14\source/ff.c **** 	/* Load file-directory entry */
2198:..\..\ff14\source/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
2199:..\..\ff14\source/ff.c **** 	if (res != FR_OK) return res;
2200:..\..\ff14\source/ff.c **** 	if (dp->dir[XDIR_Type] != ET_FILEDIR) return FR_INT_ERR;	/* Invalid order */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 49


2201:..\..\ff14\source/ff.c **** 	mem_cpy(dirb + 0 * SZDIRE, dp->dir, SZDIRE);
2202:..\..\ff14\source/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
2203:..\..\ff14\source/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
2204:..\..\ff14\source/ff.c **** 
2205:..\..\ff14\source/ff.c **** 	/* Load stream-extension entry */
2206:..\..\ff14\source/ff.c **** 	res = dir_next(dp, 0);
2207:..\..\ff14\source/ff.c **** 	if (res == FR_NO_FILE) res = FR_INT_ERR;	/* It cannot be */
2208:..\..\ff14\source/ff.c **** 	if (res != FR_OK) return res;
2209:..\..\ff14\source/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
2210:..\..\ff14\source/ff.c **** 	if (res != FR_OK) return res;
2211:..\..\ff14\source/ff.c **** 	if (dp->dir[XDIR_Type] != ET_STREAM) return FR_INT_ERR;	/* Invalid order */
2212:..\..\ff14\source/ff.c **** 	mem_cpy(dirb + 1 * SZDIRE, dp->dir, SZDIRE);
2213:..\..\ff14\source/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2214:..\..\ff14\source/ff.c **** 
2215:..\..\ff14\source/ff.c **** 	/* Load file-name entries */
2216:..\..\ff14\source/ff.c **** 	i = 2 * SZDIRE;	/* Name offset to load */
2217:..\..\ff14\source/ff.c **** 	do {
2218:..\..\ff14\source/ff.c **** 		res = dir_next(dp, 0);
2219:..\..\ff14\source/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;	/* It cannot be */
2220:..\..\ff14\source/ff.c **** 		if (res != FR_OK) return res;
2221:..\..\ff14\source/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2222:..\..\ff14\source/ff.c **** 		if (res != FR_OK) return res;
2223:..\..\ff14\source/ff.c **** 		if (dp->dir[XDIR_Type] != ET_FILENAME) return FR_INT_ERR;	/* Invalid order */
2224:..\..\ff14\source/ff.c **** 		if (i < MAXDIRB(FF_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2225:..\..\ff14\source/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2226:..\..\ff14\source/ff.c **** 
2227:..\..\ff14\source/ff.c **** 	/* Sanity check (do it for only accessible object) */
2228:..\..\ff14\source/ff.c **** 	if (i <= MAXDIRB(FF_MAX_LFN)) {
2229:..\..\ff14\source/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2230:..\..\ff14\source/ff.c **** 	}
2231:..\..\ff14\source/ff.c **** 	return FR_OK;
2232:..\..\ff14\source/ff.c **** }
2233:..\..\ff14\source/ff.c **** 
2234:..\..\ff14\source/ff.c **** 
2235:..\..\ff14\source/ff.c **** /*------------------------------------------------------------------*/
2236:..\..\ff14\source/ff.c **** /* exFAT: Initialize object allocation info with loaded entry block */
2237:..\..\ff14\source/ff.c **** /*------------------------------------------------------------------*/
2238:..\..\ff14\source/ff.c **** 
2239:..\..\ff14\source/ff.c **** static void init_alloc_info (
2240:..\..\ff14\source/ff.c **** 	FATFS* fs,		/* Filesystem object */
2241:..\..\ff14\source/ff.c **** 	FFOBJID* obj	/* Object allocation information to be initialized */
2242:..\..\ff14\source/ff.c **** )
2243:..\..\ff14\source/ff.c **** {
2244:..\..\ff14\source/ff.c **** 	obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Start cluster */
2245:..\..\ff14\source/ff.c **** 	obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);	/* Size */
2246:..\..\ff14\source/ff.c **** 	obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;				/* Allocation status */
2247:..\..\ff14\source/ff.c **** 	obj->n_frag = 0;										/* No last fragment info */
2248:..\..\ff14\source/ff.c **** }
2249:..\..\ff14\source/ff.c **** 
2250:..\..\ff14\source/ff.c **** 
2251:..\..\ff14\source/ff.c **** 
2252:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY || FF_FS_RPATH != 0
2253:..\..\ff14\source/ff.c **** /*------------------------------------------------*/
2254:..\..\ff14\source/ff.c **** /* exFAT: Load the object's directory entry block */
2255:..\..\ff14\source/ff.c **** /*------------------------------------------------*/
2256:..\..\ff14\source/ff.c **** 
2257:..\..\ff14\source/ff.c **** static FRESULT load_obj_xdir (
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 50


2258:..\..\ff14\source/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2259:..\..\ff14\source/ff.c **** 	const FFOBJID* obj	/* Object with its containing directory information */
2260:..\..\ff14\source/ff.c **** )
2261:..\..\ff14\source/ff.c **** {
2262:..\..\ff14\source/ff.c **** 	FRESULT res;
2263:..\..\ff14\source/ff.c **** 
2264:..\..\ff14\source/ff.c **** 	/* Open object containing directory */
2265:..\..\ff14\source/ff.c **** 	dp->obj.fs = obj->fs;
2266:..\..\ff14\source/ff.c **** 	dp->obj.sclust = obj->c_scl;
2267:..\..\ff14\source/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2268:..\..\ff14\source/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2269:..\..\ff14\source/ff.c **** 	dp->obj.n_frag = 0;
2270:..\..\ff14\source/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2271:..\..\ff14\source/ff.c **** 
2272:..\..\ff14\source/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2273:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
2274:..\..\ff14\source/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2275:..\..\ff14\source/ff.c **** 	}
2276:..\..\ff14\source/ff.c **** 	return res;
2277:..\..\ff14\source/ff.c **** }
2278:..\..\ff14\source/ff.c **** #endif
2279:..\..\ff14\source/ff.c **** 
2280:..\..\ff14\source/ff.c **** 
2281:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
2282:..\..\ff14\source/ff.c **** /*----------------------------------------*/
2283:..\..\ff14\source/ff.c **** /* exFAT: Store the directory entry block */
2284:..\..\ff14\source/ff.c **** /*----------------------------------------*/
2285:..\..\ff14\source/ff.c **** 
2286:..\..\ff14\source/ff.c **** static FRESULT store_xdir (
2287:..\..\ff14\source/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
2288:..\..\ff14\source/ff.c **** )
2289:..\..\ff14\source/ff.c **** {
2290:..\..\ff14\source/ff.c **** 	FRESULT res;
2291:..\..\ff14\source/ff.c **** 	UINT nent;
2292:..\..\ff14\source/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2293:..\..\ff14\source/ff.c **** 
2294:..\..\ff14\source/ff.c **** 	/* Create set sum */
2295:..\..\ff14\source/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2296:..\..\ff14\source/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2297:..\..\ff14\source/ff.c **** 
2298:..\..\ff14\source/ff.c **** 	/* Store the direcotry entry block to the directory */
2299:..\..\ff14\source/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2300:..\..\ff14\source/ff.c **** 	while (res == FR_OK) {
2301:..\..\ff14\source/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2302:..\..\ff14\source/ff.c **** 		if (res != FR_OK) break;
2303:..\..\ff14\source/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2304:..\..\ff14\source/ff.c **** 		dp->obj.fs->wflag = 1;
2305:..\..\ff14\source/ff.c **** 		if (--nent == 0) break;
2306:..\..\ff14\source/ff.c **** 		dirb += SZDIRE;
2307:..\..\ff14\source/ff.c **** 		res = dir_next(dp, 0);
2308:..\..\ff14\source/ff.c **** 	}
2309:..\..\ff14\source/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2310:..\..\ff14\source/ff.c **** }
2311:..\..\ff14\source/ff.c **** 
2312:..\..\ff14\source/ff.c **** 
2313:..\..\ff14\source/ff.c **** 
2314:..\..\ff14\source/ff.c **** /*-------------------------------------------*/
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 51


2315:..\..\ff14\source/ff.c **** /* exFAT: Create a new directory enrty block */
2316:..\..\ff14\source/ff.c **** /*-------------------------------------------*/
2317:..\..\ff14\source/ff.c **** 
2318:..\..\ff14\source/ff.c **** static void create_xdir (
2319:..\..\ff14\source/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2320:..\..\ff14\source/ff.c **** 	const WCHAR* lfn	/* Pointer to the object name */
2321:..\..\ff14\source/ff.c **** )
2322:..\..\ff14\source/ff.c **** {
2323:..\..\ff14\source/ff.c **** 	UINT i;
2324:..\..\ff14\source/ff.c **** 	BYTE nc1, nlen;
2325:..\..\ff14\source/ff.c **** 	WCHAR wc;
2326:..\..\ff14\source/ff.c **** 
2327:..\..\ff14\source/ff.c **** 
2328:..\..\ff14\source/ff.c **** 	/* Create file-directory and stream-extension entry */
2329:..\..\ff14\source/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2330:..\..\ff14\source/ff.c **** 	dirb[0 * SZDIRE + XDIR_Type] = ET_FILEDIR;
2331:..\..\ff14\source/ff.c **** 	dirb[1 * SZDIRE + XDIR_Type] = ET_STREAM;
2332:..\..\ff14\source/ff.c **** 
2333:..\..\ff14\source/ff.c **** 	/* Create file-name entries */
2334:..\..\ff14\source/ff.c **** 	i = SZDIRE * 2;	/* Top of file_name entries */
2335:..\..\ff14\source/ff.c **** 	nlen = nc1 = 0; wc = 1;
2336:..\..\ff14\source/ff.c **** 	do {
2337:..\..\ff14\source/ff.c **** 		dirb[i++] = ET_FILENAME; dirb[i++] = 0;
2338:..\..\ff14\source/ff.c **** 		do {	/* Fill name field */
2339:..\..\ff14\source/ff.c **** 			if (wc != 0 && (wc = lfn[nlen]) != 0) nlen++;	/* Get a character if exist */
2340:..\..\ff14\source/ff.c **** 			st_word(dirb + i, wc); 		/* Store it */
2341:..\..\ff14\source/ff.c **** 			i += 2;
2342:..\..\ff14\source/ff.c **** 		} while (i % SZDIRE != 0);
2343:..\..\ff14\source/ff.c **** 		nc1++;
2344:..\..\ff14\source/ff.c **** 	} while (lfn[nlen]);	/* Fill next entry if any char follows */
2345:..\..\ff14\source/ff.c **** 
2346:..\..\ff14\source/ff.c **** 	dirb[XDIR_NumName] = nlen;		/* Set name length */
2347:..\..\ff14\source/ff.c **** 	dirb[XDIR_NumSec] = 1 + nc1;	/* Set secondary count (C0 + C1s) */
2348:..\..\ff14\source/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2349:..\..\ff14\source/ff.c **** }
2350:..\..\ff14\source/ff.c **** 
2351:..\..\ff14\source/ff.c **** #endif	/* !FF_FS_READONLY */
2352:..\..\ff14\source/ff.c **** #endif	/* FF_FS_EXFAT */
2353:..\..\ff14\source/ff.c **** 
2354:..\..\ff14\source/ff.c **** 
2355:..\..\ff14\source/ff.c **** 
2356:..\..\ff14\source/ff.c **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 || FF_USE_LABEL || FF_FS_EXFAT
2357:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2358:..\..\ff14\source/ff.c **** /* Read an object from the directory                                     */
2359:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2360:..\..\ff14\source/ff.c **** 
2361:..\..\ff14\source/ff.c **** #define DIR_READ_FILE(dp) dir_read(dp, 0)
2362:..\..\ff14\source/ff.c **** #define DIR_READ_LABEL(dp) dir_read(dp, 1)
2363:..\..\ff14\source/ff.c **** 
2364:..\..\ff14\source/ff.c **** static FRESULT dir_read (
2365:..\..\ff14\source/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2366:..\..\ff14\source/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2367:..\..\ff14\source/ff.c **** )
2368:..\..\ff14\source/ff.c **** {
2369:..\..\ff14\source/ff.c **** 	FRESULT res = FR_NO_FILE;
2370:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2371:..\..\ff14\source/ff.c **** 	BYTE attr, b;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 52


2372:..\..\ff14\source/ff.c **** #if FF_USE_LFN
2373:..\..\ff14\source/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2374:..\..\ff14\source/ff.c **** #endif
2375:..\..\ff14\source/ff.c **** 
2376:..\..\ff14\source/ff.c **** 	while (dp->sect) {
2377:..\..\ff14\source/ff.c **** 		res = move_window(fs, dp->sect);
2378:..\..\ff14\source/ff.c **** 		if (res != FR_OK) break;
2379:..\..\ff14\source/ff.c **** 		b = dp->dir[DIR_Name];	/* Test for the entry type */
2380:..\..\ff14\source/ff.c **** 		if (b == 0) {
2381:..\..\ff14\source/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2382:..\..\ff14\source/ff.c **** 		}
2383:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
2384:..\..\ff14\source/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2385:..\..\ff14\source/ff.c **** 			if (FF_USE_LABEL && vol) {
2386:..\..\ff14\source/ff.c **** 				if (b == ET_VLABEL) break;	/* Volume label entry? */
2387:..\..\ff14\source/ff.c **** 			} else {
2388:..\..\ff14\source/ff.c **** 				if (b == ET_FILEDIR) {		/* Start of the file entry block? */
2389:..\..\ff14\source/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2390:..\..\ff14\source/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2391:..\..\ff14\source/ff.c **** 					if (res == FR_OK) {
2392:..\..\ff14\source/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2393:..\..\ff14\source/ff.c **** 					}
2394:..\..\ff14\source/ff.c **** 					break;
2395:..\..\ff14\source/ff.c **** 				}
2396:..\..\ff14\source/ff.c **** 			}
2397:..\..\ff14\source/ff.c **** 		} else
2398:..\..\ff14\source/ff.c **** #endif
2399:..\..\ff14\source/ff.c **** 		{	/* On the FAT/FAT32 volume */
2400:..\..\ff14\source/ff.c **** 			dp->obj.attr = attr = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2401:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2402:..\..\ff14\source/ff.c **** 			if (b == DDEM || b == '.' || (int)((attr & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without val
2403:..\..\ff14\source/ff.c **** 				ord = 0xFF;
2404:..\..\ff14\source/ff.c **** 			} else {
2405:..\..\ff14\source/ff.c **** 				if (attr == AM_LFN) {			/* An LFN entry is found */
2406:..\..\ff14\source/ff.c **** 					if (b & LLEF) {			/* Is it start of an LFN sequence? */
2407:..\..\ff14\source/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2408:..\..\ff14\source/ff.c **** 						b &= (BYTE)~LLEF; ord = b;
2409:..\..\ff14\source/ff.c **** 						dp->blk_ofs = dp->dptr;
2410:..\..\ff14\source/ff.c **** 					}
2411:..\..\ff14\source/ff.c **** 					/* Check LFN validity and capture it */
2412:..\..\ff14\source/ff.c **** 					ord = (b == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2413:..\..\ff14\source/ff.c **** 				} else {					/* An SFN entry is found */
2414:..\..\ff14\source/ff.c **** 					if (ord != 0 || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2415:..\..\ff14\source/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2416:..\..\ff14\source/ff.c **** 					}
2417:..\..\ff14\source/ff.c **** 					break;
2418:..\..\ff14\source/ff.c **** 				}
2419:..\..\ff14\source/ff.c **** 			}
2420:..\..\ff14\source/ff.c **** #else		/* Non LFN configuration */
2421:..\..\ff14\source/ff.c **** 			if (b != DDEM && b != '.' && attr != AM_LFN && (int)((attr & ~AM_ARC) == AM_VOL) == vol) {	/* Is
2422:..\..\ff14\source/ff.c **** 				break;
2423:..\..\ff14\source/ff.c **** 			}
2424:..\..\ff14\source/ff.c **** #endif
2425:..\..\ff14\source/ff.c **** 		}
2426:..\..\ff14\source/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2427:..\..\ff14\source/ff.c **** 		if (res != FR_OK) break;
2428:..\..\ff14\source/ff.c **** 	}
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 53


2429:..\..\ff14\source/ff.c **** 
2430:..\..\ff14\source/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2431:..\..\ff14\source/ff.c **** 	return res;
2432:..\..\ff14\source/ff.c **** }
2433:..\..\ff14\source/ff.c **** 
2434:..\..\ff14\source/ff.c **** #endif	/* FF_FS_MINIMIZE <= 1 || FF_USE_LABEL || FF_FS_RPATH >= 2 */
2435:..\..\ff14\source/ff.c **** 
2436:..\..\ff14\source/ff.c **** 
2437:..\..\ff14\source/ff.c **** 
2438:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2439:..\..\ff14\source/ff.c **** /* Directory handling - Find an object in the directory                  */
2440:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2441:..\..\ff14\source/ff.c **** 
2442:..\..\ff14\source/ff.c **** static FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2443:..\..\ff14\source/ff.c **** 	DIR* dp					/* Pointer to the directory object with the file name */
2444:..\..\ff14\source/ff.c **** )
2445:..\..\ff14\source/ff.c **** {
2446:..\..\ff14\source/ff.c **** 	FRESULT res;
2447:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2448:..\..\ff14\source/ff.c **** 	BYTE c;
2449:..\..\ff14\source/ff.c **** #if FF_USE_LFN
2450:..\..\ff14\source/ff.c **** 	BYTE a, ord, sum;
2451:..\..\ff14\source/ff.c **** #endif
2452:..\..\ff14\source/ff.c **** 
2453:..\..\ff14\source/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2454:..\..\ff14\source/ff.c **** 	if (res != FR_OK) return res;
2455:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
2456:..\..\ff14\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2457:..\..\ff14\source/ff.c **** 		BYTE nc;
2458:..\..\ff14\source/ff.c **** 		UINT di, ni;
2459:..\..\ff14\source/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2460:..\..\ff14\source/ff.c **** 
2461:..\..\ff14\source/ff.c **** 		while ((res = DIR_READ_FILE(dp)) == FR_OK) {	/* Read an item */
2462:..\..\ff14\source/ff.c **** #if FF_MAX_LFN < 255
2463:..\..\ff14\source/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > FF_MAX_LFN) continue;			/* Skip comparison if inaccessible object
2464:..\..\ff14\source/ff.c **** #endif
2465:..\..\ff14\source/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2466:..\..\ff14\source/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2467:..\..\ff14\source/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2468:..\..\ff14\source/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2469:..\..\ff14\source/ff.c **** 			}
2470:..\..\ff14\source/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2471:..\..\ff14\source/ff.c **** 		}
2472:..\..\ff14\source/ff.c **** 		return res;
2473:..\..\ff14\source/ff.c **** 	}
2474:..\..\ff14\source/ff.c **** #endif
2475:..\..\ff14\source/ff.c **** 	/* On the FAT/FAT32 volume */
2476:..\..\ff14\source/ff.c **** #if FF_USE_LFN
2477:..\..\ff14\source/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2478:..\..\ff14\source/ff.c **** #endif
2479:..\..\ff14\source/ff.c **** 	do {
2480:..\..\ff14\source/ff.c **** 		res = move_window(fs, dp->sect);
2481:..\..\ff14\source/ff.c **** 		if (res != FR_OK) break;
2482:..\..\ff14\source/ff.c **** 		c = dp->dir[DIR_Name];
2483:..\..\ff14\source/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2484:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2485:..\..\ff14\source/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 54


2486:..\..\ff14\source/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2487:..\..\ff14\source/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2488:..\..\ff14\source/ff.c **** 		} else {
2489:..\..\ff14\source/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2490:..\..\ff14\source/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2491:..\..\ff14\source/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2492:..\..\ff14\source/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2493:..\..\ff14\source/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2494:..\..\ff14\source/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2495:..\..\ff14\source/ff.c **** 					}
2496:..\..\ff14\source/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2497:..\..\ff14\source/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2498:..\..\ff14\source/ff.c **** 				}
2499:..\..\ff14\source/ff.c **** 			} else {					/* An SFN entry is found */
2500:..\..\ff14\source/ff.c **** 				if (ord == 0 && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2501:..\..\ff14\source/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2502:..\..\ff14\source/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2503:..\..\ff14\source/ff.c **** 			}
2504:..\..\ff14\source/ff.c **** 		}
2505:..\..\ff14\source/ff.c **** #else		/* Non LFN configuration */
2506:..\..\ff14\source/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2507:..\..\ff14\source/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2508:..\..\ff14\source/ff.c **** #endif
2509:..\..\ff14\source/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2510:..\..\ff14\source/ff.c **** 	} while (res == FR_OK);
2511:..\..\ff14\source/ff.c **** 
2512:..\..\ff14\source/ff.c **** 	return res;
2513:..\..\ff14\source/ff.c **** }
2514:..\..\ff14\source/ff.c **** 
2515:..\..\ff14\source/ff.c **** 
2516:..\..\ff14\source/ff.c **** 
2517:..\..\ff14\source/ff.c **** 
2518:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
2519:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2520:..\..\ff14\source/ff.c **** /* Register an object to the directory                                   */
2521:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2522:..\..\ff14\source/ff.c **** 
2523:..\..\ff14\source/ff.c **** static FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision
2524:..\..\ff14\source/ff.c **** 	DIR* dp						/* Target directory with object name to be created */
2525:..\..\ff14\source/ff.c **** )
2526:..\..\ff14\source/ff.c **** {
2527:..\..\ff14\source/ff.c **** 	FRESULT res;
2528:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2529:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2530:..\..\ff14\source/ff.c **** 	UINT n, nlen, nent;
2531:..\..\ff14\source/ff.c **** 	BYTE sn[12], sum;
2532:..\..\ff14\source/ff.c **** 
2533:..\..\ff14\source/ff.c **** 
2534:..\..\ff14\source/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2535:..\..\ff14\source/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2536:..\..\ff14\source/ff.c **** 
2537:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
2538:..\..\ff14\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2539:..\..\ff14\source/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2540:..\..\ff14\source/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate directory entries */
2541:..\..\ff14\source/ff.c **** 		if (res != FR_OK) return res;
2542:..\..\ff14\source/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 55


2543:..\..\ff14\source/ff.c **** 
2544:..\..\ff14\source/ff.c **** 		if (dp->obj.stat & 4) {			/* Has the directory been stretched by new allocation? */
2545:..\..\ff14\source/ff.c **** 			dp->obj.stat &= ~4;
2546:..\..\ff14\source/ff.c **** 			res = fill_first_frag(&dp->obj);	/* Fill the first fragment on the FAT if needed */
2547:..\..\ff14\source/ff.c **** 			if (res != FR_OK) return res;
2548:..\..\ff14\source/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill the last fragment on the FAT if n
2549:..\..\ff14\source/ff.c **** 			if (res != FR_OK) return res;
2550:..\..\ff14\source/ff.c **** 			if (dp->obj.sclust != 0) {		/* Is it a sub-directory? */
2551:..\..\ff14\source/ff.c **** 				DIR dj;
2552:..\..\ff14\source/ff.c **** 
2553:..\..\ff14\source/ff.c **** 				res = load_obj_xdir(&dj, &dp->obj);	/* Load the object status */
2554:..\..\ff14\source/ff.c **** 				if (res != FR_OK) return res;
2555:..\..\ff14\source/ff.c **** 				dp->obj.objsize += (DWORD)fs->csize * SS(fs);			/* Increase the directory size by cluster size 
2556:..\..\ff14\source/ff.c **** 				st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);
2557:..\..\ff14\source/ff.c **** 				st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2558:..\..\ff14\source/ff.c **** 				fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;			/* Update the allocation status */
2559:..\..\ff14\source/ff.c **** 				res = store_xdir(&dj);				/* Store the object status */
2560:..\..\ff14\source/ff.c **** 				if (res != FR_OK) return res;
2561:..\..\ff14\source/ff.c **** 			}
2562:..\..\ff14\source/ff.c **** 		}
2563:..\..\ff14\source/ff.c **** 
2564:..\..\ff14\source/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2565:..\..\ff14\source/ff.c **** 		return FR_OK;
2566:..\..\ff14\source/ff.c **** 	}
2567:..\..\ff14\source/ff.c **** #endif
2568:..\..\ff14\source/ff.c **** 	/* On the FAT/FAT32 volume */
2569:..\..\ff14\source/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2570:..\..\ff14\source/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2571:..\..\ff14\source/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2572:..\..\ff14\source/ff.c **** 		for (n = 1; n < 100; n++) {
2573:..\..\ff14\source/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2574:..\..\ff14\source/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2575:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
2576:..\..\ff14\source/ff.c **** 		}
2577:..\..\ff14\source/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2578:..\..\ff14\source/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2579:..\..\ff14\source/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2580:..\..\ff14\source/ff.c **** 	}
2581:..\..\ff14\source/ff.c **** 
2582:..\..\ff14\source/ff.c **** 	/* Create an SFN with/without LFNs. */
2583:..\..\ff14\source/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2584:..\..\ff14\source/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2585:..\..\ff14\source/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2586:..\..\ff14\source/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2587:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
2588:..\..\ff14\source/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2589:..\..\ff14\source/ff.c **** 			do {					/* Store LFN entries in bottom first */
2590:..\..\ff14\source/ff.c **** 				res = move_window(fs, dp->sect);
2591:..\..\ff14\source/ff.c **** 				if (res != FR_OK) break;
2592:..\..\ff14\source/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2593:..\..\ff14\source/ff.c **** 				fs->wflag = 1;
2594:..\..\ff14\source/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2595:..\..\ff14\source/ff.c **** 			} while (res == FR_OK && --nent);
2596:..\..\ff14\source/ff.c **** 		}
2597:..\..\ff14\source/ff.c **** 	}
2598:..\..\ff14\source/ff.c **** 
2599:..\..\ff14\source/ff.c **** #else	/* Non LFN configuration */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 56


2600:..\..\ff14\source/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2601:..\..\ff14\source/ff.c **** 
2602:..\..\ff14\source/ff.c **** #endif
2603:..\..\ff14\source/ff.c **** 
2604:..\..\ff14\source/ff.c **** 	/* Set SFN entry */
2605:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
2606:..\..\ff14\source/ff.c **** 		res = move_window(fs, dp->sect);
2607:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
2608:..\..\ff14\source/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2609:..\..\ff14\source/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2610:..\..\ff14\source/ff.c **** #if FF_USE_LFN
2611:..\..\ff14\source/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2612:..\..\ff14\source/ff.c **** #endif
2613:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
2614:..\..\ff14\source/ff.c **** 		}
2615:..\..\ff14\source/ff.c **** 	}
2616:..\..\ff14\source/ff.c **** 
2617:..\..\ff14\source/ff.c **** 	return res;
2618:..\..\ff14\source/ff.c **** }
2619:..\..\ff14\source/ff.c **** 
2620:..\..\ff14\source/ff.c **** #endif /* !FF_FS_READONLY */
2621:..\..\ff14\source/ff.c **** 
2622:..\..\ff14\source/ff.c **** 
2623:..\..\ff14\source/ff.c **** 
2624:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY && FF_FS_MINIMIZE == 0
2625:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2626:..\..\ff14\source/ff.c **** /* Remove an object from the directory                                   */
2627:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2628:..\..\ff14\source/ff.c **** 
2629:..\..\ff14\source/ff.c **** static FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2630:..\..\ff14\source/ff.c **** 	DIR* dp					/* Directory object pointing the entry to be removed */
2631:..\..\ff14\source/ff.c **** )
2632:..\..\ff14\source/ff.c **** {
2633:..\..\ff14\source/ff.c **** 	FRESULT res;
2634:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2635:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2636:..\..\ff14\source/ff.c **** 	DWORD last = dp->dptr;
2637:..\..\ff14\source/ff.c **** 
2638:..\..\ff14\source/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2639:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
2640:..\..\ff14\source/ff.c **** 		do {
2641:..\..\ff14\source/ff.c **** 			res = move_window(fs, dp->sect);
2642:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
2643:..\..\ff14\source/ff.c **** 			if (FF_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2644:..\..\ff14\source/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;	/* Clear the entry InUse flag. */
2645:..\..\ff14\source/ff.c **** 			} else {									/* On the FAT/FAT32 volume */
2646:..\..\ff14\source/ff.c **** 				dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'. */
2647:..\..\ff14\source/ff.c **** 			}
2648:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
2649:..\..\ff14\source/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2650:..\..\ff14\source/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2651:..\..\ff14\source/ff.c **** 		} while (res == FR_OK);
2652:..\..\ff14\source/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2653:..\..\ff14\source/ff.c **** 	}
2654:..\..\ff14\source/ff.c **** #else			/* Non LFN configuration */
2655:..\..\ff14\source/ff.c **** 
2656:..\..\ff14\source/ff.c **** 	res = move_window(fs, dp->sect);
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 57


2657:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
2658:..\..\ff14\source/ff.c **** 		dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'.*/
2659:..\..\ff14\source/ff.c **** 		fs->wflag = 1;
2660:..\..\ff14\source/ff.c **** 	}
2661:..\..\ff14\source/ff.c **** #endif
2662:..\..\ff14\source/ff.c **** 
2663:..\..\ff14\source/ff.c **** 	return res;
2664:..\..\ff14\source/ff.c **** }
2665:..\..\ff14\source/ff.c **** 
2666:..\..\ff14\source/ff.c **** #endif /* !FF_FS_READONLY && FF_FS_MINIMIZE == 0 */
2667:..\..\ff14\source/ff.c **** 
2668:..\..\ff14\source/ff.c **** 
2669:..\..\ff14\source/ff.c **** 
2670:..\..\ff14\source/ff.c **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2
2671:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2672:..\..\ff14\source/ff.c **** /* Get file information from directory entry                             */
2673:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2674:..\..\ff14\source/ff.c **** 
2675:..\..\ff14\source/ff.c **** static void get_fileinfo (
2676:..\..\ff14\source/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2677:..\..\ff14\source/ff.c **** 	FILINFO* fno		/* Pointer to the file information to be filled */
2678:..\..\ff14\source/ff.c **** )
2679:..\..\ff14\source/ff.c **** {
 530              		.loc 1 2679 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              	.LVL77:
2680:..\..\ff14\source/ff.c **** 	UINT si, di;
2681:..\..\ff14\source/ff.c **** #if FF_USE_LFN
2682:..\..\ff14\source/ff.c **** 	BYTE lcf;
2683:..\..\ff14\source/ff.c **** 	WCHAR wc, hs;
2684:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2685:..\..\ff14\source/ff.c **** #else
2686:..\..\ff14\source/ff.c **** 	TCHAR c;
2687:..\..\ff14\source/ff.c **** #endif
2688:..\..\ff14\source/ff.c **** 
2689:..\..\ff14\source/ff.c **** 
2690:..\..\ff14\source/ff.c **** 	fno->fname[0] = 0;			/* Invaidate file info */
 535              		.loc 1 2690 0
 536 0000 0023     		movs	r3, #0
 537 0002 4B72     		strb	r3, [r1, #9]
2691:..\..\ff14\source/ff.c **** 	if (dp->sect == 0) return;	/* Exit if read pointer has reached end of directory */
 538              		.loc 1 2691 0
 539 0004 8369     		ldr	r3, [r0, #24]
 540 0006 7BB3     		cbz	r3, .L49
2679:..\..\ff14\source/ff.c **** 	UINT si, di;
 541              		.loc 1 2679 0
 542 0008 70B5     		push	{r4, r5, r6, lr}
 543              		.cfi_def_cfa_offset 16
 544              		.cfi_offset 4, -16
 545              		.cfi_offset 5, -12
 546              		.cfi_offset 6, -8
 547              		.cfi_offset 14, -4
 548 000a 0024     		movs	r4, #0
 549 000c 2346     		mov	r3, r4
 550 000e 11E0     		b	.L42
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 58


 551              	.LVL78:
 552              	.L46:
2692:..\..\ff14\source/ff.c **** 
2693:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2694:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
2695:..\..\ff14\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2696:..\..\ff14\source/ff.c **** 		get_xfileinfo(fs->dirbuf, fno);
2697:..\..\ff14\source/ff.c **** 		return;
2698:..\..\ff14\source/ff.c **** 	} else
2699:..\..\ff14\source/ff.c **** #endif
2700:..\..\ff14\source/ff.c **** 	{	/* On the FAT/FAT32 volume */
2701:..\..\ff14\source/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2702:..\..\ff14\source/ff.c **** 			si = di = hs = 0;
2703:..\..\ff14\source/ff.c **** 			while (fs->lfnbuf[si] != 0) {
2704:..\..\ff14\source/ff.c **** 				wc = fs->lfnbuf[si++];		/* Get an LFN character (UTF-16) */
2705:..\..\ff14\source/ff.c **** 				if (hs == 0 && IsSurrogate(wc)) {	/* Is it a surrogate? */
2706:..\..\ff14\source/ff.c **** 					hs = wc; continue;		/* Get low surrogate */
2707:..\..\ff14\source/ff.c **** 				}
2708:..\..\ff14\source/ff.c **** 				wc = put_utf((DWORD)hs << 16 | wc, &fno->fname[di], FF_LFN_BUF - di);	/* Store it in UTF-16 or 
2709:..\..\ff14\source/ff.c **** 				if (wc == 0) { di = 0; break; }	/* Invalid char or buffer overflow? */
2710:..\..\ff14\source/ff.c **** 				di += wc;
2711:..\..\ff14\source/ff.c **** 				hs = 0;
2712:..\..\ff14\source/ff.c **** 			}
2713:..\..\ff14\source/ff.c **** 			if (hs != 0) di = 0;	/* Broken surrogate pair? */
2714:..\..\ff14\source/ff.c **** 			fno->fname[di] = 0;		/* Terminate the LFN (null string means LFN is invalid) */
2715:..\..\ff14\source/ff.c **** 		}
2716:..\..\ff14\source/ff.c **** 	}
2717:..\..\ff14\source/ff.c **** 
2718:..\..\ff14\source/ff.c **** 	si = di = 0;
2719:..\..\ff14\source/ff.c **** 	while (si < 11) {		/* Get SFN from SFN entry */
2720:..\..\ff14\source/ff.c **** 		wc = dp->dir[si++];			/* Get a char */
2721:..\..\ff14\source/ff.c **** 		if (wc == ' ') continue;	/* Skip padding spaces */
2722:..\..\ff14\source/ff.c **** 		if (wc == RDDEM) wc = DDEM;	/* Restore replaced DDEM character */
2723:..\..\ff14\source/ff.c **** 		if (si == 9 && di < FF_SFN_BUF) fno->altname[di++] = '.';	/* Insert a . if extension is exist */
2724:..\..\ff14\source/ff.c **** #if FF_LFN_UNICODE >= 1	/* Unicode output */
2725:..\..\ff14\source/ff.c **** 		if (dbc_1st((BYTE)wc) && si != 8 && si != 11 && dbc_2nd(dp->dir[si])) {	/* Make a DBC if needed *
2726:..\..\ff14\source/ff.c **** 			wc = wc << 8 | dp->dir[si++];
2727:..\..\ff14\source/ff.c **** 		}
2728:..\..\ff14\source/ff.c **** 		wc = ff_oem2uni(wc, CODEPAGE);		/* ANSI/OEM -> Unicode */
2729:..\..\ff14\source/ff.c **** 		if (wc == 0) { di = 0; break; }		/* Wrong char in the current code page? */
2730:..\..\ff14\source/ff.c **** 		wc = put_utf(wc, &fno->altname[di], FF_SFN_BUF - di);	/* Store it in Unicode */
2731:..\..\ff14\source/ff.c **** 		if (wc == 0) { di = 0; break; }		/* Buffer overflow? */
2732:..\..\ff14\source/ff.c **** 		di += wc;
2733:..\..\ff14\source/ff.c **** #else					/* ANSI/OEM output */
2734:..\..\ff14\source/ff.c **** 		fno->altname[di++] = (TCHAR)wc;	/* Store it without any conversion */
2735:..\..\ff14\source/ff.c **** #endif
2736:..\..\ff14\source/ff.c **** 	}
2737:..\..\ff14\source/ff.c **** 	fno->altname[di] = 0;	/* Terminate the SFN  (null string means SFN is invalid) */
2738:..\..\ff14\source/ff.c **** 
2739:..\..\ff14\source/ff.c **** 	if (fno->fname[0] == 0) {	/* If LFN is invalid, altname[] needs to be copied to fname[] */
2740:..\..\ff14\source/ff.c **** 		if (di == 0) {	/* If LFN and SFN both are invalid, this object is inaccesible */
2741:..\..\ff14\source/ff.c **** 			fno->fname[di++] = '?';
2742:..\..\ff14\source/ff.c **** 		} else {
2743:..\..\ff14\source/ff.c **** 			for (si = di = 0, lcf = NS_BODY; fno->altname[si]; si++, di++) {	/* Copy altname[] to fname[] wi
2744:..\..\ff14\source/ff.c **** 				wc = (WCHAR)fno->altname[si];
2745:..\..\ff14\source/ff.c **** 				if (wc == '.') lcf = NS_EXT;
2746:..\..\ff14\source/ff.c **** 				if (IsUpper(wc) && (dp->dir[DIR_NTres] & lcf)) wc += 0x20;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 59


2747:..\..\ff14\source/ff.c **** 				fno->fname[di] = (TCHAR)wc;
2748:..\..\ff14\source/ff.c **** 			}
2749:..\..\ff14\source/ff.c **** 		}
2750:..\..\ff14\source/ff.c **** 		fno->fname[di] = 0;	/* Terminate the LFN */
2751:..\..\ff14\source/ff.c **** 		if (!dp->dir[DIR_NTres]) fno->altname[0] = 0;	/* Altname is not needed if neither LFN nor case in
2752:..\..\ff14\source/ff.c **** 	}
2753:..\..\ff14\source/ff.c **** 
2754:..\..\ff14\source/ff.c **** #else	/* Non-LFN configuration */
2755:..\..\ff14\source/ff.c **** 	si = di = 0;
2756:..\..\ff14\source/ff.c **** 	while (si < 11) {		/* Copy name body and extension */
2757:..\..\ff14\source/ff.c **** 		c = (TCHAR)dp->dir[si++];
 553              		.loc 1 2757 0
 554 0010 C569     		ldr	r5, [r0, #28]
 555 0012 5A1C     		adds	r2, r3, #1
 556              	.LVL79:
 557 0014 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 558              	.LVL80:
2758:..\..\ff14\source/ff.c **** 		if (c == ' ') continue;		/* Skip padding spaces */
 559              		.loc 1 2758 0
 560 0016 202B     		cmp	r3, #32
 561 0018 0BD0     		beq	.L43
2759:..\..\ff14\source/ff.c **** 		if (c == RDDEM) c = DDEM;	/* Restore replaced DDEM character */
 562              		.loc 1 2759 0
 563 001a 052B     		cmp	r3, #5
 564 001c 00D1     		bne	.L44
 565 001e E523     		movs	r3, #229
 566              	.LVL81:
 567              	.L44:
2760:..\..\ff14\source/ff.c **** 		if (si == 9) fno->fname[di++] = '.';/* Insert a . if extension is exist */
 568              		.loc 1 2760 0
 569 0020 092A     		cmp	r2, #9
 570 0022 03D1     		bne	.L45
 571              	.LVL82:
 572              		.loc 1 2760 0 is_stmt 0 discriminator 1
 573 0024 0D19     		adds	r5, r1, r4
 574 0026 2E26     		movs	r6, #46
 575 0028 6E72     		strb	r6, [r5, #9]
 576 002a 0134     		adds	r4, r4, #1
 577              	.LVL83:
 578              	.L45:
2761:..\..\ff14\source/ff.c **** 		fno->fname[di++] = c;
 579              		.loc 1 2761 0 is_stmt 1
 580 002c 0D19     		adds	r5, r1, r4
 581 002e 6B72     		strb	r3, [r5, #9]
 582 0030 0134     		adds	r4, r4, #1
 583              	.LVL84:
 584              	.L43:
 585 0032 1346     		mov	r3, r2
 586              	.LVL85:
 587              	.L42:
2756:..\..\ff14\source/ff.c **** 		c = (TCHAR)dp->dir[si++];
 588              		.loc 1 2756 0
 589 0034 0A2B     		cmp	r3, #10
 590 0036 EBD9     		bls	.L46
 591 0038 0E46     		mov	r6, r1
 592 003a 0546     		mov	r5, r0
2762:..\..\ff14\source/ff.c **** 	}
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 60


2763:..\..\ff14\source/ff.c **** 	fno->fname[di] = 0;
 593              		.loc 1 2763 0
 594 003c 0C44     		add	r4, r4, r1
 595              	.LVL86:
 596 003e 0023     		movs	r3, #0
 597              	.LVL87:
 598 0040 6372     		strb	r3, [r4, #9]
2764:..\..\ff14\source/ff.c **** #endif
2765:..\..\ff14\source/ff.c **** 
2766:..\..\ff14\source/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];					/* Attribute */
 599              		.loc 1 2766 0
 600 0042 C369     		ldr	r3, [r0, #28]
 601 0044 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 602 0046 0B72     		strb	r3, [r1, #8]
2767:..\..\ff14\source/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);		/* Size */
 603              		.loc 1 2767 0
 604 0048 C069     		ldr	r0, [r0, #28]
 605              	.LVL88:
 606 004a 1C30     		adds	r0, r0, #28
 607 004c FFF7FEFF 		bl	ld_dword
 608              	.LVL89:
 609 0050 3060     		str	r0, [r6]
2768:..\..\ff14\source/ff.c **** 	fno->ftime = ld_word(dp->dir + DIR_ModTime + 0);	/* Time */
 610              		.loc 1 2768 0
 611 0052 E869     		ldr	r0, [r5, #28]
 612 0054 1630     		adds	r0, r0, #22
 613 0056 FFF7FEFF 		bl	ld_word
 614              	.LVL90:
 615 005a F080     		strh	r0, [r6, #6]	@ movhi
2769:..\..\ff14\source/ff.c **** 	fno->fdate = ld_word(dp->dir + DIR_ModTime + 2);	/* Date */
 616              		.loc 1 2769 0
 617 005c E869     		ldr	r0, [r5, #28]
 618 005e 1830     		adds	r0, r0, #24
 619 0060 FFF7FEFF 		bl	ld_word
 620              	.LVL91:
 621 0064 B080     		strh	r0, [r6, #4]	@ movhi
 622 0066 70BD     		pop	{r4, r5, r6, pc}
 623              	.LVL92:
 624              	.L49:
 625              		.cfi_def_cfa_offset 0
 626              		.cfi_restore 4
 627              		.cfi_restore 5
 628              		.cfi_restore 6
 629              		.cfi_restore 14
 630 0068 7047     		bx	lr
 631              		.cfi_endproc
 632              	.LFE28:
 633              		.size	get_fileinfo, .-get_fileinfo
 634 006a 00BF     		.section	.text.create_name,"ax",%progbits
 635              		.align	2
 636              		.thumb
 637              		.thumb_func
 638              		.type	create_name, %function
 639              	create_name:
 640              	.LFB29:
2770:..\..\ff14\source/ff.c **** }
2771:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 61


2772:..\..\ff14\source/ff.c **** #endif /* FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 */
2773:..\..\ff14\source/ff.c **** 
2774:..\..\ff14\source/ff.c **** 
2775:..\..\ff14\source/ff.c **** 
2776:..\..\ff14\source/ff.c **** #if FF_USE_FIND && FF_FS_MINIMIZE <= 1
2777:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2778:..\..\ff14\source/ff.c **** /* Pattern matching                                                      */
2779:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2780:..\..\ff14\source/ff.c **** 
2781:..\..\ff14\source/ff.c **** static DWORD get_achar (	/* Get a character and advances ptr */
2782:..\..\ff14\source/ff.c **** 	const TCHAR** ptr		/* Pointer to pointer to the ANSI/OEM or Unicode string */
2783:..\..\ff14\source/ff.c **** )
2784:..\..\ff14\source/ff.c **** {
2785:..\..\ff14\source/ff.c **** 	DWORD chr;
2786:..\..\ff14\source/ff.c **** 
2787:..\..\ff14\source/ff.c **** 
2788:..\..\ff14\source/ff.c **** #if FF_USE_LFN && FF_LFN_UNICODE >= 1	/* Unicode input */
2789:..\..\ff14\source/ff.c **** 	chr = tchar2uni(ptr);
2790:..\..\ff14\source/ff.c **** 	if (chr == 0xFFFFFFFF) chr = 0;		/* Wrong UTF encoding is recognized as end of the string */
2791:..\..\ff14\source/ff.c **** 	chr = ff_wtoupper(chr);
2792:..\..\ff14\source/ff.c **** 
2793:..\..\ff14\source/ff.c **** #else									/* ANSI/OEM input */
2794:..\..\ff14\source/ff.c **** 	chr = (BYTE)*(*ptr)++;				/* Get a byte */
2795:..\..\ff14\source/ff.c **** 	if (IsLower(chr)) chr -= 0x20;		/* To upper ASCII char */
2796:..\..\ff14\source/ff.c **** #if FF_CODE_PAGE == 0
2797:..\..\ff14\source/ff.c **** 	if (ExCvt && chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2798:..\..\ff14\source/ff.c **** #elif FF_CODE_PAGE < 900
2799:..\..\ff14\source/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2800:..\..\ff14\source/ff.c **** #endif
2801:..\..\ff14\source/ff.c **** #if FF_CODE_PAGE == 0 || FF_CODE_PAGE >= 900
2802:..\..\ff14\source/ff.c **** 	if (dbc_1st((BYTE)chr)) {	/* Get DBC 2nd byte if needed */
2803:..\..\ff14\source/ff.c **** 		chr = dbc_2nd((BYTE)**ptr) ? chr << 8 | (BYTE)*(*ptr)++ : 0;
2804:..\..\ff14\source/ff.c **** 	}
2805:..\..\ff14\source/ff.c **** #endif
2806:..\..\ff14\source/ff.c **** 
2807:..\..\ff14\source/ff.c **** #endif
2808:..\..\ff14\source/ff.c **** 	return chr;
2809:..\..\ff14\source/ff.c **** }
2810:..\..\ff14\source/ff.c **** 
2811:..\..\ff14\source/ff.c **** 
2812:..\..\ff14\source/ff.c **** static int pattern_matching (	/* 0:not matched, 1:matched */
2813:..\..\ff14\source/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2814:..\..\ff14\source/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2815:..\..\ff14\source/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2816:..\..\ff14\source/ff.c **** 	int inf				/* Infinite search (* specified) */
2817:..\..\ff14\source/ff.c **** )
2818:..\..\ff14\source/ff.c **** {
2819:..\..\ff14\source/ff.c **** 	const TCHAR *pp, *np;
2820:..\..\ff14\source/ff.c **** 	DWORD pc, nc;
2821:..\..\ff14\source/ff.c **** 	int nm, nx;
2822:..\..\ff14\source/ff.c **** 
2823:..\..\ff14\source/ff.c **** 
2824:..\..\ff14\source/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2825:..\..\ff14\source/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2826:..\..\ff14\source/ff.c **** 	}
2827:..\..\ff14\source/ff.c **** 	if (*pat == 0 && inf) return 1;	/* (short circuit) */
2828:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 62


2829:..\..\ff14\source/ff.c **** 	do {
2830:..\..\ff14\source/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2831:..\..\ff14\source/ff.c **** 		for (;;) {
2832:..\..\ff14\source/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2833:..\..\ff14\source/ff.c **** 				nm = nx = 0;
2834:..\..\ff14\source/ff.c **** 				do {				/* Analyze the wildcard block */
2835:..\..\ff14\source/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2836:..\..\ff14\source/ff.c **** 				} while (*pp == '?' || *pp == '*');
2837:..\..\ff14\source/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2838:..\..\ff14\source/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2839:..\..\ff14\source/ff.c **** 			}
2840:..\..\ff14\source/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2841:..\..\ff14\source/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2842:..\..\ff14\source/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2843:..\..\ff14\source/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2844:..\..\ff14\source/ff.c **** 		}
2845:..\..\ff14\source/ff.c **** 		get_achar(&nam);			/* nam++ */
2846:..\..\ff14\source/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2847:..\..\ff14\source/ff.c **** 
2848:..\..\ff14\source/ff.c **** 	return 0;
2849:..\..\ff14\source/ff.c **** }
2850:..\..\ff14\source/ff.c **** 
2851:..\..\ff14\source/ff.c **** #endif /* FF_USE_FIND && FF_FS_MINIMIZE <= 1 */
2852:..\..\ff14\source/ff.c **** 
2853:..\..\ff14\source/ff.c **** 
2854:..\..\ff14\source/ff.c **** 
2855:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2856:..\..\ff14\source/ff.c **** /* Pick a top segment and create the object name in directory form       */
2857:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
2858:..\..\ff14\source/ff.c **** 
2859:..\..\ff14\source/ff.c **** static FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2860:..\..\ff14\source/ff.c **** 	DIR* dp,					/* Pointer to the directory object */
2861:..\..\ff14\source/ff.c **** 	const TCHAR** path			/* Pointer to pointer to the segment in the path string */
2862:..\..\ff14\source/ff.c **** )
2863:..\..\ff14\source/ff.c **** {
 641              		.loc 1 2863 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 8
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              	.LVL93:
 646 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 647              		.cfi_def_cfa_offset 36
 648              		.cfi_offset 4, -36
 649              		.cfi_offset 5, -32
 650              		.cfi_offset 6, -28
 651              		.cfi_offset 7, -24
 652              		.cfi_offset 8, -20
 653              		.cfi_offset 9, -16
 654              		.cfi_offset 10, -12
 655              		.cfi_offset 11, -8
 656              		.cfi_offset 14, -4
 657 0004 83B0     		sub	sp, sp, #12
 658              		.cfi_def_cfa_offset 48
 659 0006 0190     		str	r0, [sp, #4]
 660 0008 8B46     		mov	fp, r1
2864:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2865:..\..\ff14\source/ff.c **** 	BYTE b, cf;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 63


2866:..\..\ff14\source/ff.c **** 	WCHAR wc, *lfn;
2867:..\..\ff14\source/ff.c **** 	DWORD uc;
2868:..\..\ff14\source/ff.c **** 	UINT i, ni, si, di;
2869:..\..\ff14\source/ff.c **** 	const TCHAR *p;
2870:..\..\ff14\source/ff.c **** 
2871:..\..\ff14\source/ff.c **** 
2872:..\..\ff14\source/ff.c **** 	/* Create LFN into LFN working buffer */
2873:..\..\ff14\source/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; di = 0;
2874:..\..\ff14\source/ff.c **** 	for (;;) {
2875:..\..\ff14\source/ff.c **** 		uc = tchar2uni(&p);			/* Get a character */
2876:..\..\ff14\source/ff.c **** 		if (uc == 0xFFFFFFFF) return FR_INVALID_NAME;		/* Invalid code or UTF decode error */
2877:..\..\ff14\source/ff.c **** 		if (uc >= 0x10000) lfn[di++] = (WCHAR)(uc >> 16);	/* Store high surrogate if needed */
2878:..\..\ff14\source/ff.c **** 		wc = (WCHAR)uc;
2879:..\..\ff14\source/ff.c **** 		if (wc < ' ' || wc == '/' || wc == '\\') break;	/* Break if end of the path or a separator is fou
2880:..\..\ff14\source/ff.c **** 		if (wc < 0x80 && chk_chr("\"*:<>\?|\x7F", wc)) return FR_INVALID_NAME;	/* Reject illegal characte
2881:..\..\ff14\source/ff.c **** 		if (di >= FF_MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2882:..\..\ff14\source/ff.c **** 		lfn[di++] = wc;					/* Store the Unicode character */
2883:..\..\ff14\source/ff.c **** 	}
2884:..\..\ff14\source/ff.c **** 	if (wc < ' ') {				/* End of path? */
2885:..\..\ff14\source/ff.c **** 		cf = NS_LAST;			/* Set last segment flag */
2886:..\..\ff14\source/ff.c **** 	} else {
2887:..\..\ff14\source/ff.c **** 		cf = 0;					/* Next segment follows */
2888:..\..\ff14\source/ff.c **** 		while (*p == '/' || *p == '\\') p++;	/* Skip duplicated separators if exist */
2889:..\..\ff14\source/ff.c **** 	}
2890:..\..\ff14\source/ff.c **** 	*path = p;					/* Return pointer to the next segment */
2891:..\..\ff14\source/ff.c **** 
2892:..\..\ff14\source/ff.c **** #if FF_FS_RPATH != 0
2893:..\..\ff14\source/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2894:..\..\ff14\source/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2895:..\..\ff14\source/ff.c **** 		lfn[di] = 0;
2896:..\..\ff14\source/ff.c **** 		for (i = 0; i < 11; i++) {		/* Create dot name for SFN entry */
2897:..\..\ff14\source/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2898:..\..\ff14\source/ff.c **** 		}
2899:..\..\ff14\source/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2900:..\..\ff14\source/ff.c **** 		return FR_OK;
2901:..\..\ff14\source/ff.c **** 	}
2902:..\..\ff14\source/ff.c **** #endif
2903:..\..\ff14\source/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2904:..\..\ff14\source/ff.c **** 		wc = lfn[di - 1];
2905:..\..\ff14\source/ff.c **** 		if (wc != ' ' && wc != '.') break;
2906:..\..\ff14\source/ff.c **** 		di--;
2907:..\..\ff14\source/ff.c **** 	}
2908:..\..\ff14\source/ff.c **** 	lfn[di] = 0;							/* LFN is created into the working buffer */
2909:..\..\ff14\source/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject null name */
2910:..\..\ff14\source/ff.c **** 
2911:..\..\ff14\source/ff.c **** 	/* Create SFN in directory form */
2912:..\..\ff14\source/ff.c **** 	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
2913:..\..\ff14\source/ff.c **** 	if (si > 0 || lfn[si] == '.') cf |= NS_LOSS | NS_LFN;	/* Is there any leading space or dot? */
2914:..\..\ff14\source/ff.c **** 	while (di > 0 && lfn[di - 1] != '.') di--;	/* Find last dot (di<=si: no extension) */
2915:..\..\ff14\source/ff.c **** 
2916:..\..\ff14\source/ff.c **** 	mem_set(dp->fn, ' ', 11);
2917:..\..\ff14\source/ff.c **** 	i = b = 0; ni = 8;
2918:..\..\ff14\source/ff.c **** 	for (;;) {
2919:..\..\ff14\source/ff.c **** 		wc = lfn[si++];					/* Get an LFN character */
2920:..\..\ff14\source/ff.c **** 		if (wc == 0) break;				/* Break on end of the LFN */
2921:..\..\ff14\source/ff.c **** 		if (wc == ' ' || (wc == '.' && si != di)) {	/* Remove embedded spaces and dots */
2922:..\..\ff14\source/ff.c **** 			cf |= NS_LOSS | NS_LFN;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 64


2923:..\..\ff14\source/ff.c **** 			continue;
2924:..\..\ff14\source/ff.c **** 		}
2925:..\..\ff14\source/ff.c **** 
2926:..\..\ff14\source/ff.c **** 		if (i >= ni || si == di) {		/* End of field? */
2927:..\..\ff14\source/ff.c **** 			if (ni == 11) {				/* Name extension overflow? */
2928:..\..\ff14\source/ff.c **** 				cf |= NS_LOSS | NS_LFN;
2929:..\..\ff14\source/ff.c **** 				break;
2930:..\..\ff14\source/ff.c **** 			}
2931:..\..\ff14\source/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Name body overflow? */
2932:..\..\ff14\source/ff.c **** 			if (si > di) break;						/* No name extension? */
2933:..\..\ff14\source/ff.c **** 			si = di; i = 8; ni = 11; b <<= 2;		/* Enter name extension */
2934:..\..\ff14\source/ff.c **** 			continue;
2935:..\..\ff14\source/ff.c **** 		}
2936:..\..\ff14\source/ff.c **** 
2937:..\..\ff14\source/ff.c **** 		if (wc >= 0x80) {	/* Is this a non-ASCII character? */
2938:..\..\ff14\source/ff.c **** 			cf |= NS_LFN;	/* LFN entry needs to be created */
2939:..\..\ff14\source/ff.c **** #if FF_CODE_PAGE == 0
2940:..\..\ff14\source/ff.c **** 			if (ExCvt) {	/* At SBCS */
2941:..\..\ff14\source/ff.c **** 				wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
2942:..\..\ff14\source/ff.c **** 				if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
2943:..\..\ff14\source/ff.c **** 			} else {		/* At DBCS */
2944:..\..\ff14\source/ff.c **** 				wc = ff_uni2oem(ff_wtoupper(wc), CODEPAGE);	/* Unicode ==> Upper convert ==> ANSI/OEM code */
2945:..\..\ff14\source/ff.c **** 			}
2946:..\..\ff14\source/ff.c **** #elif FF_CODE_PAGE < 900	/* SBCS cfg */
2947:..\..\ff14\source/ff.c **** 			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
2948:..\..\ff14\source/ff.c **** 			if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
2949:..\..\ff14\source/ff.c **** #else						/* DBCS cfg */
2950:..\..\ff14\source/ff.c **** 			wc = ff_uni2oem(ff_wtoupper(wc), CODEPAGE);	/* Unicode ==> Upper convert ==> ANSI/OEM code */
2951:..\..\ff14\source/ff.c **** #endif
2952:..\..\ff14\source/ff.c **** 		}
2953:..\..\ff14\source/ff.c **** 
2954:..\..\ff14\source/ff.c **** 		if (wc >= 0x100) {				/* Is this a DBC? */
2955:..\..\ff14\source/ff.c **** 			if (i >= ni - 1) {			/* Field overflow? */
2956:..\..\ff14\source/ff.c **** 				cf |= NS_LOSS | NS_LFN;
2957:..\..\ff14\source/ff.c **** 				i = ni; continue;		/* Next field */
2958:..\..\ff14\source/ff.c **** 			}
2959:..\..\ff14\source/ff.c **** 			dp->fn[i++] = (BYTE)(wc >> 8);	/* Put 1st byte */
2960:..\..\ff14\source/ff.c **** 		} else {						/* SBC */
2961:..\..\ff14\source/ff.c **** 			if (wc == 0 || chk_chr("+,;=[]", wc)) {	/* Replace illegal characters for SFN if needed */
2962:..\..\ff14\source/ff.c **** 				wc = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2963:..\..\ff14\source/ff.c **** 			} else {
2964:..\..\ff14\source/ff.c **** 				if (IsUpper(wc)) {		/* ASCII upper case? */
2965:..\..\ff14\source/ff.c **** 					b |= 2;
2966:..\..\ff14\source/ff.c **** 				}
2967:..\..\ff14\source/ff.c **** 				if (IsLower(wc)) {		/* ASCII lower case? */
2968:..\..\ff14\source/ff.c **** 					b |= 1; wc -= 0x20;
2969:..\..\ff14\source/ff.c **** 				}
2970:..\..\ff14\source/ff.c **** 			}
2971:..\..\ff14\source/ff.c **** 		}
2972:..\..\ff14\source/ff.c **** 		dp->fn[i++] = (BYTE)wc;
2973:..\..\ff14\source/ff.c **** 	}
2974:..\..\ff14\source/ff.c **** 
2975:..\..\ff14\source/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2976:..\..\ff14\source/ff.c **** 
2977:..\..\ff14\source/ff.c **** 	if (ni == 8) b <<= 2;				/* Shift capital flags if no extension */
2978:..\..\ff14\source/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* LFN entry needs to be created if co
2979:..\..\ff14\source/ff.c **** 	if (!(cf & NS_LFN)) {				/* When LFN is in 8.3 format without extended character, NT flags are cre
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 65


2980:..\..\ff14\source/ff.c **** 		if (b & 0x01) cf |= NS_EXT;		/* NT flag (Extension has small capital letters only) */
2981:..\..\ff14\source/ff.c **** 		if (b & 0x04) cf |= NS_BODY;	/* NT flag (Body has small capital letters only) */
2982:..\..\ff14\source/ff.c **** 	}
2983:..\..\ff14\source/ff.c **** 
2984:..\..\ff14\source/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created into dp->fn[] */
2985:..\..\ff14\source/ff.c **** 
2986:..\..\ff14\source/ff.c **** 	return FR_OK;
2987:..\..\ff14\source/ff.c **** 
2988:..\..\ff14\source/ff.c **** 
2989:..\..\ff14\source/ff.c **** #else	/* FF_USE_LFN : Non-LFN configuration */
2990:..\..\ff14\source/ff.c **** 	BYTE c, d, *sfn;
2991:..\..\ff14\source/ff.c **** 	UINT ni, si, i;
2992:..\..\ff14\source/ff.c **** 	const char *p;
2993:..\..\ff14\source/ff.c **** 
2994:..\..\ff14\source/ff.c **** 	/* Create file name in directory form */
2995:..\..\ff14\source/ff.c **** 	p = *path; sfn = dp->fn;
 661              		.loc 1 2995 0
 662 000a D1F80080 		ldr	r8, [r1]
 663              	.LVL94:
 664 000e 00F1200A 		add	r10, r0, #32
 665              	.LVL95:
2996:..\..\ff14\source/ff.c **** 	mem_set(sfn, ' ', 11);
 666              		.loc 1 2996 0
 667 0012 0B22     		movs	r2, #11
 668 0014 2021     		movs	r1, #32
 669              	.LVL96:
 670 0016 5046     		mov	r0, r10
 671              	.LVL97:
 672 0018 FFF7FEFF 		bl	mem_set
 673              	.LVL98:
2997:..\..\ff14\source/ff.c **** 	si = i = 0; ni = 8;
 674              		.loc 1 2997 0
 675 001c 0025     		movs	r5, #0
 676 001e 2F46     		mov	r7, r5
 677 0020 4FF00809 		mov	r9, #8
 678              	.LVL99:
 679              	.L51:
2998:..\..\ff14\source/ff.c **** #if FF_FS_RPATH != 0
2999:..\..\ff14\source/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
3000:..\..\ff14\source/ff.c **** 		for (;;) {
3001:..\..\ff14\source/ff.c **** 			c = (BYTE)p[si++];
3002:..\..\ff14\source/ff.c **** 			if (c != '.' || si >= 3) break;
3003:..\..\ff14\source/ff.c **** 			sfn[i++] = c;
3004:..\..\ff14\source/ff.c **** 		}
3005:..\..\ff14\source/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
3006:..\..\ff14\source/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
3007:..\..\ff14\source/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
3008:..\..\ff14\source/ff.c **** 		return FR_OK;
3009:..\..\ff14\source/ff.c **** 	}
3010:..\..\ff14\source/ff.c **** #endif
3011:..\..\ff14\source/ff.c **** 	for (;;) {
3012:..\..\ff14\source/ff.c **** 		c = (BYTE)p[si++];				/* Get a byte */
 680              		.loc 1 3012 0
 681 0024 7E1C     		adds	r6, r7, #1
 682              	.LVL100:
 683 0026 18F80740 		ldrb	r4, [r8, r7]	@ zero_extendqisi2
 684              	.LVL101:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 66


3013:..\..\ff14\source/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 685              		.loc 1 3013 0
 686 002a 202C     		cmp	r4, #32
 687 002c 41D9     		bls	.L52
3014:..\..\ff14\source/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 688              		.loc 1 3014 0
 689 002e 2F2C     		cmp	r4, #47
 690 0030 03D0     		beq	.L53
 691              		.loc 1 3014 0 is_stmt 0 discriminator 1
 692 0032 5C2C     		cmp	r4, #92
 693 0034 08D1     		bne	.L71
 694 0036 00E0     		b	.L53
 695              	.L55:
3015:..\..\ff14\source/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 696              		.loc 1 3015 0 is_stmt 1 discriminator 4
 697 0038 0136     		adds	r6, r6, #1
 698              	.LVL102:
 699              	.L53:
 700              		.loc 1 3015 0 is_stmt 0 discriminator 1
 701 003a 18F80630 		ldrb	r3, [r8, r6]	@ zero_extendqisi2
 702 003e 2F2B     		cmp	r3, #47
 703 0040 FAD0     		beq	.L55
 704              		.loc 1 3015 0 discriminator 3
 705 0042 5C2B     		cmp	r3, #92
 706 0044 F8D0     		beq	.L55
 707 0046 34E0     		b	.L52
 708              	.L71:
3016:..\..\ff14\source/ff.c **** 			break;
3017:..\..\ff14\source/ff.c **** 		}
3018:..\..\ff14\source/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or field overflow? */
 709              		.loc 1 3018 0 is_stmt 1
 710 0048 2E2C     		cmp	r4, #46
 711 004a 01D0     		beq	.L56
 712              		.loc 1 3018 0 is_stmt 0 discriminator 1
 713 004c A945     		cmp	r9, r5
 714 004e 09D8     		bhi	.L57
 715              	.L56:
3019:..\..\ff14\source/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Field overflow or invalid dot? */
 716              		.loc 1 3019 0 is_stmt 1
 717 0050 B9F10B0F 		cmp	r9, #11
 718 0054 44D0     		beq	.L64
 719              		.loc 1 3019 0 is_stmt 0 discriminator 2
 720 0056 2E2C     		cmp	r4, #46
 721 0058 44D1     		bne	.L65
3012:..\..\ff14\source/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 722              		.loc 1 3012 0 is_stmt 1
 723 005a 3746     		mov	r7, r6
3020:..\..\ff14\source/ff.c **** 			i = 8; ni = 11;				/* Enter file extension field */
 724              		.loc 1 3020 0
 725 005c 0825     		movs	r5, #8
 726              	.LVL103:
 727 005e 4FF00B09 		mov	r9, #11
 728              	.LVL104:
 729 0062 DFE7     		b	.L51
 730              	.LVL105:
 731              	.L57:
3021:..\..\ff14\source/ff.c **** 			continue;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 67


3022:..\..\ff14\source/ff.c **** 		}
3023:..\..\ff14\source/ff.c **** #if FF_CODE_PAGE == 0
3024:..\..\ff14\source/ff.c **** 		if (ExCvt && c >= 0x80) {		/* Is SBC extended character? */
3025:..\..\ff14\source/ff.c **** 			c = ExCvt[c & 0x7F];		/* To upper SBC extended character */
3026:..\..\ff14\source/ff.c **** 		}
3027:..\..\ff14\source/ff.c **** #elif FF_CODE_PAGE < 900
3028:..\..\ff14\source/ff.c **** 		if (c >= 0x80) {				/* Is SBC extended character? */
3029:..\..\ff14\source/ff.c **** 			c = ExCvt[c & 0x7F];		/* To upper SBC extended character */
3030:..\..\ff14\source/ff.c **** 		}
3031:..\..\ff14\source/ff.c **** #endif
3032:..\..\ff14\source/ff.c **** 		if (dbc_1st(c)) {				/* Check if it is a DBC 1st byte */
 732              		.loc 1 3032 0
 733 0064 2046     		mov	r0, r4
 734 0066 FFF7FEFF 		bl	dbc_1st
 735              	.LVL106:
 736 006a 88B1     		cbz	r0, .L60
3033:..\..\ff14\source/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
 737              		.loc 1 3033 0
 738 006c 0237     		adds	r7, r7, #2
 739              	.LVL107:
 740 006e 18F80660 		ldrb	r6, [r8, r6]	@ zero_extendqisi2
 741              	.LVL108:
3034:..\..\ff14\source/ff.c **** 			if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
 742              		.loc 1 3034 0
 743 0072 3046     		mov	r0, r6
 744 0074 FFF7FEFF 		bl	dbc_2nd
 745              	.LVL109:
 746 0078 B0B3     		cbz	r0, .L66
 747              		.loc 1 3034 0 is_stmt 0 discriminator 2
 748 007a 09F1FF33 		add	r3, r9, #-1
 749 007e 9D42     		cmp	r5, r3
 750 0080 34D2     		bcs	.L67
3035:..\..\ff14\source/ff.c **** 			sfn[i++] = c;
 751              		.loc 1 3035 0 is_stmt 1
 752 0082 6B1C     		adds	r3, r5, #1
 753              	.LVL110:
 754 0084 0AF80540 		strb	r4, [r10, r5]
 755              	.LVL111:
3036:..\..\ff14\source/ff.c **** 			sfn[i++] = d;
 756              		.loc 1 3036 0
 757 0088 0AF80360 		strb	r6, [r10, r3]
 758 008c 0235     		adds	r5, r5, #2
 759              	.LVL112:
 760 008e C9E7     		b	.L51
 761              	.LVL113:
 762              	.L60:
3037:..\..\ff14\source/ff.c **** 		} else {						/* SBC */
3038:..\..\ff14\source/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
 763              		.loc 1 3038 0
 764 0090 2146     		mov	r1, r4
 765 0092 1A48     		ldr	r0, .L73
 766 0094 FFF7FEFF 		bl	chk_chr
 767              	.LVL114:
 768 0098 50BB     		cbnz	r0, .L68
3039:..\..\ff14\source/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 769              		.loc 1 3039 0
 770 009a A4F16103 		sub	r3, r4, #97
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 68


 771 009e DBB2     		uxtb	r3, r3
 772 00a0 192B     		cmp	r3, #25
 773 00a2 01D8     		bhi	.L61
 774              		.loc 1 3039 0 is_stmt 0 discriminator 1
 775 00a4 203C     		subs	r4, r4, #32
 776              	.LVL115:
 777 00a6 E4B2     		uxtb	r4, r4
 778              	.LVL116:
 779              	.L61:
3040:..\..\ff14\source/ff.c **** 			sfn[i++] = c;
 780              		.loc 1 3040 0 is_stmt 1
 781 00a8 0AF80540 		strb	r4, [r10, r5]
 782 00ac 0135     		adds	r5, r5, #1
 783              	.LVL117:
3012:..\..\ff14\source/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 784              		.loc 1 3012 0
 785 00ae 3746     		mov	r7, r6
 786 00b0 B8E7     		b	.L51
 787              	.L52:
3041:..\..\ff14\source/ff.c **** 		}
3042:..\..\ff14\source/ff.c **** 	}
3043:..\..\ff14\source/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 788              		.loc 1 3043 0
 789 00b2 4644     		add	r6, r6, r8
 790              	.LVL118:
 791 00b4 CBF80060 		str	r6, [fp]
3044:..\..\ff14\source/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 792              		.loc 1 3044 0
 793 00b8 E5B1     		cbz	r5, .L69
3045:..\..\ff14\source/ff.c **** 
3046:..\..\ff14\source/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
 794              		.loc 1 3046 0
 795 00ba 019B     		ldr	r3, [sp, #4]
 796 00bc 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 797 00c0 E52B     		cmp	r3, #229
 798 00c2 03D1     		bne	.L62
 799              		.loc 1 3046 0 is_stmt 0 discriminator 1
 800 00c4 0523     		movs	r3, #5
 801 00c6 019A     		ldr	r2, [sp, #4]
 802 00c8 82F82030 		strb	r3, [r2, #32]
 803              	.L62:
3047:..\..\ff14\source/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 804              		.loc 1 3047 0 is_stmt 1
 805 00cc 202C     		cmp	r4, #32
 806 00ce 01D8     		bhi	.L70
 807 00d0 0423     		movs	r3, #4
 808 00d2 00E0     		b	.L63
 809              	.L70:
 810 00d4 0023     		movs	r3, #0
 811              	.L63:
 812              		.loc 1 3047 0 is_stmt 0 discriminator 4
 813 00d6 019A     		ldr	r2, [sp, #4]
 814 00d8 82F82B30 		strb	r3, [r2, #43]
3048:..\..\ff14\source/ff.c **** 
3049:..\..\ff14\source/ff.c **** 	return FR_OK;
 815              		.loc 1 3049 0 is_stmt 1 discriminator 4
 816 00dc 0020     		movs	r0, #0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 69


 817 00de 0AE0     		b	.L58
 818              	.LVL119:
 819              	.L64:
3019:..\..\ff14\source/ff.c **** 			i = 8; ni = 11;				/* Enter file extension field */
 820              		.loc 1 3019 0
 821 00e0 0620     		movs	r0, #6
 822 00e2 08E0     		b	.L58
 823              	.L65:
 824 00e4 0620     		movs	r0, #6
 825 00e6 06E0     		b	.L58
 826              	.LVL120:
 827              	.L66:
3034:..\..\ff14\source/ff.c **** 			sfn[i++] = c;
 828              		.loc 1 3034 0
 829 00e8 0620     		movs	r0, #6
 830 00ea 04E0     		b	.L58
 831              	.L67:
 832 00ec 0620     		movs	r0, #6
 833 00ee 02E0     		b	.L58
 834              	.LVL121:
 835              	.L68:
3038:..\..\ff14\source/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 836              		.loc 1 3038 0
 837 00f0 0620     		movs	r0, #6
 838 00f2 00E0     		b	.L58
 839              	.LVL122:
 840              	.L69:
3044:..\..\ff14\source/ff.c **** 
 841              		.loc 1 3044 0
 842 00f4 0620     		movs	r0, #6
 843              	.L58:
3050:..\..\ff14\source/ff.c **** #endif /* FF_USE_LFN */
3051:..\..\ff14\source/ff.c **** }
 844              		.loc 1 3051 0
 845 00f6 03B0     		add	sp, sp, #12
 846              		.cfi_def_cfa_offset 36
 847              		@ sp needed
 848 00f8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 849              	.LVL123:
 850              	.L74:
 851              		.align	2
 852              	.L73:
 853 00fc 00000000 		.word	.LC0
 854              		.cfi_endproc
 855              	.LFE29:
 856              		.size	create_name, .-create_name
 857              		.section	.text.get_ldnumber,"ax",%progbits
 858              		.align	2
 859              		.thumb
 860              		.thumb_func
 861              		.type	get_ldnumber, %function
 862              	get_ldnumber:
 863              	.LFB31:
3052:..\..\ff14\source/ff.c **** 
3053:..\..\ff14\source/ff.c **** 
3054:..\..\ff14\source/ff.c **** 
3055:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 70


3056:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3057:..\..\ff14\source/ff.c **** /* Follow a file path                                                    */
3058:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3059:..\..\ff14\source/ff.c **** 
3060:..\..\ff14\source/ff.c **** static FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
3061:..\..\ff14\source/ff.c **** 	DIR* dp,					/* Directory object to return last directory and found object */
3062:..\..\ff14\source/ff.c **** 	const TCHAR* path			/* Full-path string to find a file or directory */
3063:..\..\ff14\source/ff.c **** )
3064:..\..\ff14\source/ff.c **** {
3065:..\..\ff14\source/ff.c **** 	FRESULT res;
3066:..\..\ff14\source/ff.c **** 	BYTE ns;
3067:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
3068:..\..\ff14\source/ff.c **** 
3069:..\..\ff14\source/ff.c **** 
3070:..\..\ff14\source/ff.c **** #if FF_FS_RPATH != 0
3071:..\..\ff14\source/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
3072:..\..\ff14\source/ff.c **** 		dp->obj.sclust = fs->cdir;				/* Start from current directory */
3073:..\..\ff14\source/ff.c **** 	} else
3074:..\..\ff14\source/ff.c **** #endif
3075:..\..\ff14\source/ff.c **** 	{										/* With heading separator */
3076:..\..\ff14\source/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
3077:..\..\ff14\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
3078:..\..\ff14\source/ff.c **** 	}
3079:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
3080:..\..\ff14\source/ff.c **** 	dp->obj.n_frag = 0;	/* Invalidate last fragment counter of the object */
3081:..\..\ff14\source/ff.c **** #if FF_FS_RPATH != 0
3082:..\..\ff14\source/ff.c **** 	if (fs->fs_type == FS_EXFAT && dp->obj.sclust) {	/* exFAT: Retrieve the sub-directory's status */
3083:..\..\ff14\source/ff.c **** 		DIR dj;
3084:..\..\ff14\source/ff.c **** 
3085:..\..\ff14\source/ff.c **** 		dp->obj.c_scl = fs->cdc_scl;
3086:..\..\ff14\source/ff.c **** 		dp->obj.c_size = fs->cdc_size;
3087:..\..\ff14\source/ff.c **** 		dp->obj.c_ofs = fs->cdc_ofs;
3088:..\..\ff14\source/ff.c **** 		res = load_obj_xdir(&dj, &dp->obj);
3089:..\..\ff14\source/ff.c **** 		if (res != FR_OK) return res;
3090:..\..\ff14\source/ff.c **** 		dp->obj.objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
3091:..\..\ff14\source/ff.c **** 		dp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3092:..\..\ff14\source/ff.c **** 	}
3093:..\..\ff14\source/ff.c **** #endif
3094:..\..\ff14\source/ff.c **** #endif
3095:..\..\ff14\source/ff.c **** 
3096:..\..\ff14\source/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
3097:..\..\ff14\source/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
3098:..\..\ff14\source/ff.c **** 		res = dir_sdi(dp, 0);
3099:..\..\ff14\source/ff.c **** 
3100:..\..\ff14\source/ff.c **** 	} else {								/* Follow path */
3101:..\..\ff14\source/ff.c **** 		for (;;) {
3102:..\..\ff14\source/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
3103:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
3104:..\..\ff14\source/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
3105:..\..\ff14\source/ff.c **** 			ns = dp->fn[NSFLAG];
3106:..\..\ff14\source/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
3107:..\..\ff14\source/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
3108:..\..\ff14\source/ff.c **** 					if (FF_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
3109:..\..\ff14\source/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
3110:..\..\ff14\source/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
3111:..\..\ff14\source/ff.c **** 						res = FR_OK;
3112:..\..\ff14\source/ff.c **** 					} else {							/* Could not find the object */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 71


3113:..\..\ff14\source/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
3114:..\..\ff14\source/ff.c **** 					}
3115:..\..\ff14\source/ff.c **** 				}
3116:..\..\ff14\source/ff.c **** 				break;
3117:..\..\ff14\source/ff.c **** 			}
3118:..\..\ff14\source/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
3119:..\..\ff14\source/ff.c **** 			/* Get into the sub-directory */
3120:..\..\ff14\source/ff.c **** 			if (!(dp->obj.attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
3121:..\..\ff14\source/ff.c **** 				res = FR_NO_PATH; break;
3122:..\..\ff14\source/ff.c **** 			}
3123:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
3124:..\..\ff14\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
3125:..\..\ff14\source/ff.c **** 				dp->obj.c_scl = dp->obj.sclust;
3126:..\..\ff14\source/ff.c **** 				dp->obj.c_size = ((DWORD)dp->obj.objsize & 0xFFFFFF00) | dp->obj.stat;
3127:..\..\ff14\source/ff.c **** 				dp->obj.c_ofs = dp->blk_ofs;
3128:..\..\ff14\source/ff.c **** 				init_alloc_info(fs, &dp->obj);	/* Open next directory */
3129:..\..\ff14\source/ff.c **** 			} else
3130:..\..\ff14\source/ff.c **** #endif
3131:..\..\ff14\source/ff.c **** 			{
3132:..\..\ff14\source/ff.c **** 				dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
3133:..\..\ff14\source/ff.c **** 			}
3134:..\..\ff14\source/ff.c **** 		}
3135:..\..\ff14\source/ff.c **** 	}
3136:..\..\ff14\source/ff.c **** 
3137:..\..\ff14\source/ff.c **** 	return res;
3138:..\..\ff14\source/ff.c **** }
3139:..\..\ff14\source/ff.c **** 
3140:..\..\ff14\source/ff.c **** 
3141:..\..\ff14\source/ff.c **** 
3142:..\..\ff14\source/ff.c **** 
3143:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3144:..\..\ff14\source/ff.c **** /* Get logical drive number from path name                               */
3145:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3146:..\..\ff14\source/ff.c **** 
3147:..\..\ff14\source/ff.c **** static int get_ldnumber (	/* Returns logical drive number (-1:invalid drive number or null pointer)
3148:..\..\ff14\source/ff.c **** 	const TCHAR** path		/* Pointer to pointer to the path name */
3149:..\..\ff14\source/ff.c **** )
3150:..\..\ff14\source/ff.c **** {
 864              		.loc 1 3150 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869              	.LVL124:
 870 0000 10B4     		push	{r4}
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 4, -4
 873              	.LVL125:
3151:..\..\ff14\source/ff.c **** 	const TCHAR *tp, *tt;
3152:..\..\ff14\source/ff.c **** 	TCHAR tc;
3153:..\..\ff14\source/ff.c **** 	int i, vol = -1;
3154:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID		/* Find string volume ID */
3155:..\..\ff14\source/ff.c **** 	const char *sp;
3156:..\..\ff14\source/ff.c **** 	char c;
3157:..\..\ff14\source/ff.c **** #endif
3158:..\..\ff14\source/ff.c **** 
3159:..\..\ff14\source/ff.c **** 	tt = tp = *path;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 72


 874              		.loc 1 3159 0
 875 0002 0468     		ldr	r4, [r0]
 876              	.LVL126:
3160:..\..\ff14\source/ff.c **** 	if (!tp) return vol;	/* Invalid path name? */
 877              		.loc 1 3160 0
 878 0004 E4B1     		cbz	r4, .L80
 879 0006 2246     		mov	r2, r4
 880              	.LVL127:
 881              	.L78:
3161:..\..\ff14\source/ff.c **** 	do tc = *tt++; while ((UINT)tc >= (FF_USE_LFN ? ' ' : '!') && tc != ':');	/* Find a colon in the p
 882              		.loc 1 3161 0 discriminator 2
 883 0008 511C     		adds	r1, r2, #1
 884              	.LVL128:
 885 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 886              	.LVL129:
 887 000c 202B     		cmp	r3, #32
 888 000e 02D9     		bls	.L77
 889              		.loc 1 3161 0 is_stmt 0 discriminator 1
 890 0010 0A46     		mov	r2, r1
 891 0012 3A2B     		cmp	r3, #58
 892 0014 F8D1     		bne	.L78
 893              	.L77:
3162:..\..\ff14\source/ff.c **** 
3163:..\..\ff14\source/ff.c **** 	if (tc == ':') {	/* DOS/Windows style volume ID? */
 894              		.loc 1 3163 0 is_stmt 1
 895 0016 3A2B     		cmp	r3, #58
 896 0018 15D1     		bne	.L81
 897              	.LVL130:
3164:..\..\ff14\source/ff.c **** 		i = FF_VOLUMES;
3165:..\..\ff14\source/ff.c **** 		if (IsDigit(*tp) && tp + 2 == tt) {	/* Is there a numeric volume ID + colon? */
 898              		.loc 1 3165 0
 899 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 900              	.LVL131:
 901 001c A3F13002 		sub	r2, r3, #48
 902 0020 D2B2     		uxtb	r2, r2
 903 0022 092A     		cmp	r2, #9
 904 0024 04D8     		bhi	.L82
 905              		.loc 1 3165 0 is_stmt 0 discriminator 1
 906 0026 0234     		adds	r4, r4, #2
 907              	.LVL132:
 908 0028 A142     		cmp	r1, r4
 909 002a 03D1     		bne	.L83
3166:..\..\ff14\source/ff.c **** 			i = (int)*tp - '0';	/* Get the LD number */
 910              		.loc 1 3166 0 is_stmt 1
 911 002c 303B     		subs	r3, r3, #48
 912              	.LVL133:
 913 002e 02E0     		b	.L79
 914              	.LVL134:
 915              	.L82:
3164:..\..\ff14\source/ff.c **** 		i = FF_VOLUMES;
 916              		.loc 1 3164 0
 917 0030 0123     		movs	r3, #1
 918 0032 00E0     		b	.L79
 919              	.LVL135:
 920              	.L83:
 921 0034 0123     		movs	r3, #1
 922              	.LVL136:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 73


 923              	.L79:
3167:..\..\ff14\source/ff.c **** 		}
3168:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID == 1	/* Arbitrary string is enabled */
3169:..\..\ff14\source/ff.c **** 		else {
3170:..\..\ff14\source/ff.c **** 			i = 0;
3171:..\..\ff14\source/ff.c **** 			do {
3172:..\..\ff14\source/ff.c **** 				sp = VolumeStr[i]; tp = *path;	/* This string volume ID and path name */
3173:..\..\ff14\source/ff.c **** 				do {	/* Compare the volume ID with path name */
3174:..\..\ff14\source/ff.c **** 					c = *sp++; tc = *tp++;
3175:..\..\ff14\source/ff.c **** 					if (IsLower(c)) c -= 0x20;
3176:..\..\ff14\source/ff.c **** 					if (IsLower(tc)) tc -= 0x20;
3177:..\..\ff14\source/ff.c **** 				} while (c && (TCHAR)c == tc);
3178:..\..\ff14\source/ff.c **** 			} while ((c || tp != tt) && ++i < FF_VOLUMES);	/* Repeat for each id until pattern match */
3179:..\..\ff14\source/ff.c **** 		}
3180:..\..\ff14\source/ff.c **** #endif
3181:..\..\ff14\source/ff.c **** 		if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
 924              		.loc 1 3181 0
 925 0036 002B     		cmp	r3, #0
 926 0038 07DC     		bgt	.L84
 927              	.LVL137:
3182:..\..\ff14\source/ff.c **** 			vol = i;		/* Drive number */
3183:..\..\ff14\source/ff.c **** 			*path = tt;		/* Snip the drive prefix off */
 928              		.loc 1 3183 0
 929 003a 0160     		str	r1, [r0]
 930              	.LVL138:
3182:..\..\ff14\source/ff.c **** 			vol = i;		/* Drive number */
 931              		.loc 1 3182 0
 932 003c 1846     		mov	r0, r3
 933              	.LVL139:
 934 003e 06E0     		b	.L76
 935              	.LVL140:
 936              	.L80:
3160:..\..\ff14\source/ff.c **** 	do tc = *tt++; while ((UINT)tc >= (FF_USE_LFN ? ' ' : '!') && tc != ':');	/* Find a colon in the p
 937              		.loc 1 3160 0
 938 0040 4FF0FF30 		mov	r0, #-1
 939              	.LVL141:
 940 0044 03E0     		b	.L76
 941              	.LVL142:
 942              	.L81:
3184:..\..\ff14\source/ff.c **** 		}
3185:..\..\ff14\source/ff.c **** 		return vol;
3186:..\..\ff14\source/ff.c **** 	}
3187:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID == 2		/* Unix style volume ID is enabled */
3188:..\..\ff14\source/ff.c **** 	if (*tp == '/') {
3189:..\..\ff14\source/ff.c **** 		i = 0;
3190:..\..\ff14\source/ff.c **** 		do {
3191:..\..\ff14\source/ff.c **** 			sp = VolumeStr[i]; tp = *path;	/* This string volume ID and path name */
3192:..\..\ff14\source/ff.c **** 			do {	/* Compare the volume ID with path name */
3193:..\..\ff14\source/ff.c **** 				c = *sp++; tc = *(++tp);
3194:..\..\ff14\source/ff.c **** 				if (IsLower(c)) c -= 0x20;
3195:..\..\ff14\source/ff.c **** 				if (IsLower(tc)) tc -= 0x20;
3196:..\..\ff14\source/ff.c **** 			} while (c && (TCHAR)c == tc);
3197:..\..\ff14\source/ff.c **** 		} while ((c || (tc != '/' && (UINT)tc >= (FF_USE_LFN ? ' ' : '!'))) && ++i < FF_VOLUMES);	/* Repe
3198:..\..\ff14\source/ff.c **** 		if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
3199:..\..\ff14\source/ff.c **** 			vol = i;		/* Drive number */
3200:..\..\ff14\source/ff.c **** 			*path = tp;		/* Snip the drive prefix off */
3201:..\..\ff14\source/ff.c **** 			return vol;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 74


3202:..\..\ff14\source/ff.c **** 		}
3203:..\..\ff14\source/ff.c **** 	}
3204:..\..\ff14\source/ff.c **** #endif
3205:..\..\ff14\source/ff.c **** 	/* No drive prefix is found */
3206:..\..\ff14\source/ff.c **** #if FF_FS_RPATH != 0
3207:..\..\ff14\source/ff.c **** 	vol = CurrVol;	/* Default drive is current drive */
3208:..\..\ff14\source/ff.c **** #else
3209:..\..\ff14\source/ff.c **** 	vol = 0;		/* Default drive is 0 */
3210:..\..\ff14\source/ff.c **** #endif
3211:..\..\ff14\source/ff.c **** 	return vol;		/* Return the default drive */
 943              		.loc 1 3211 0
 944 0046 0020     		movs	r0, #0
 945              	.LVL143:
 946 0048 01E0     		b	.L76
 947              	.LVL144:
 948              	.L84:
3153:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID		/* Find string volume ID */
 949              		.loc 1 3153 0
 950 004a 4FF0FF30 		mov	r0, #-1
 951              	.LVL145:
 952              	.L76:
3212:..\..\ff14\source/ff.c **** }
 953              		.loc 1 3212 0
 954 004e 10BC     		pop	{r4}
 955              		.cfi_restore 4
 956              		.cfi_def_cfa_offset 0
 957 0050 7047     		bx	lr
 958              		.cfi_endproc
 959              	.LFE31:
 960              		.size	get_ldnumber, .-get_ldnumber
 961 0052 00BF     		.section	.text.validate,"ax",%progbits
 962              		.align	2
 963              		.thumb
 964              		.thumb_func
 965              		.type	validate, %function
 966              	validate:
 967              	.LFB35:
3213:..\..\ff14\source/ff.c **** 
3214:..\..\ff14\source/ff.c **** 
3215:..\..\ff14\source/ff.c **** 
3216:..\..\ff14\source/ff.c **** 
3217:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3218:..\..\ff14\source/ff.c **** /* GPT support functions                                                 */
3219:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3220:..\..\ff14\source/ff.c **** 
3221:..\..\ff14\source/ff.c **** #if FF_LBA64
3222:..\..\ff14\source/ff.c **** 
3223:..\..\ff14\source/ff.c **** /* Calculate CRC32 in byte-by-byte */
3224:..\..\ff14\source/ff.c **** 
3225:..\..\ff14\source/ff.c **** static DWORD crc32 (	/* Returns next CRC value */
3226:..\..\ff14\source/ff.c **** 	DWORD crc,			/* Current CRC value */
3227:..\..\ff14\source/ff.c **** 	BYTE d				/* A byte to be processed */
3228:..\..\ff14\source/ff.c **** )
3229:..\..\ff14\source/ff.c **** {
3230:..\..\ff14\source/ff.c **** 	BYTE b;
3231:..\..\ff14\source/ff.c **** 
3232:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 75


3233:..\..\ff14\source/ff.c **** 	for (b = 1; b; b <<= 1) {
3234:..\..\ff14\source/ff.c **** 		crc ^= (d & b) ? 1 : 0;
3235:..\..\ff14\source/ff.c **** 		crc = (crc & 1) ? crc >> 1 ^ 0xEDB88320 : crc >> 1;
3236:..\..\ff14\source/ff.c **** 	}
3237:..\..\ff14\source/ff.c **** 	return crc;
3238:..\..\ff14\source/ff.c **** }
3239:..\..\ff14\source/ff.c **** 
3240:..\..\ff14\source/ff.c **** 
3241:..\..\ff14\source/ff.c **** /* Check validity of GPT header */
3242:..\..\ff14\source/ff.c **** 
3243:..\..\ff14\source/ff.c **** static int test_gpt_header (	/* 0:Invalid, 1:Valid */
3244:..\..\ff14\source/ff.c **** 	const BYTE* gpth			/* Pointer to the GPT header */
3245:..\..\ff14\source/ff.c **** )
3246:..\..\ff14\source/ff.c **** {
3247:..\..\ff14\source/ff.c **** 	UINT i;
3248:..\..\ff14\source/ff.c **** 	DWORD bcc;
3249:..\..\ff14\source/ff.c **** 
3250:..\..\ff14\source/ff.c **** 
3251:..\..\ff14\source/ff.c **** 	if (mem_cmp(gpth + GPTH_Sign, "EFI PART" "\0\0\1\0" "\x5C\0\0", 16)) return 0;	/* Check sign, vers
3252:..\..\ff14\source/ff.c **** 	for (i = 0, bcc = 0xFFFFFFFF; i < 92; i++) {		/* Check header BCC */
3253:..\..\ff14\source/ff.c **** 		bcc = crc32(bcc, i - GPTH_Bcc < 4 ? 0 : gpth[i]);
3254:..\..\ff14\source/ff.c **** 	}
3255:..\..\ff14\source/ff.c **** 	if (~bcc != ld_dword(gpth + GPTH_Bcc)) return 0;
3256:..\..\ff14\source/ff.c **** 	if (ld_dword(gpth + GPTH_PteSize) != SZ_GPTE) return 0;	/* Table entry size (must be SZ_GPTE bytes
3257:..\..\ff14\source/ff.c **** 	if (ld_dword(gpth + GPTH_PtNum) > 128) return 0;	/* Table size (must be 128 entries or less) */
3258:..\..\ff14\source/ff.c **** 
3259:..\..\ff14\source/ff.c **** 	return 1;
3260:..\..\ff14\source/ff.c **** }
3261:..\..\ff14\source/ff.c **** 
3262:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY && FF_USE_MKFS
3263:..\..\ff14\source/ff.c **** 
3264:..\..\ff14\source/ff.c **** /* Generate random value */
3265:..\..\ff14\source/ff.c **** static DWORD make_rand (
3266:..\..\ff14\source/ff.c **** 	DWORD seed,		/* Seed value */
3267:..\..\ff14\source/ff.c **** 	BYTE* buff,		/* Output buffer */
3268:..\..\ff14\source/ff.c **** 	UINT n			/* Data length */
3269:..\..\ff14\source/ff.c **** )
3270:..\..\ff14\source/ff.c **** {
3271:..\..\ff14\source/ff.c **** 	UINT r;
3272:..\..\ff14\source/ff.c **** 
3273:..\..\ff14\source/ff.c **** 
3274:..\..\ff14\source/ff.c **** 	if (seed == 0) seed = 1;
3275:..\..\ff14\source/ff.c **** 	do {
3276:..\..\ff14\source/ff.c **** 		for (r = 0; r < 8; r++) seed = seed & 1 ? seed >> 1 ^ 0xA3000000 : seed >> 1;	/* Shift 8 bits the
3277:..\..\ff14\source/ff.c **** 		*buff++ = (BYTE)seed;
3278:..\..\ff14\source/ff.c **** 	} while (--n);
3279:..\..\ff14\source/ff.c **** 	return seed;
3280:..\..\ff14\source/ff.c **** }
3281:..\..\ff14\source/ff.c **** 
3282:..\..\ff14\source/ff.c **** #endif
3283:..\..\ff14\source/ff.c **** #endif
3284:..\..\ff14\source/ff.c **** 
3285:..\..\ff14\source/ff.c **** 
3286:..\..\ff14\source/ff.c **** 
3287:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3288:..\..\ff14\source/ff.c **** /* Load a sector and check if it is an FAT VBR                           */
3289:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 76


3290:..\..\ff14\source/ff.c **** 
3291:..\..\ff14\source/ff.c **** /* Check what the sector is */
3292:..\..\ff14\source/ff.c **** 
3293:..\..\ff14\source/ff.c **** static UINT check_fs (	/* 0:FAT VBR, 1:exFAT VBR, 2:Valid BS but not FAT, 3:Invalid BS, 4:Disk erro
3294:..\..\ff14\source/ff.c **** 	FATFS* fs,			/* Filesystem object */
3295:..\..\ff14\source/ff.c **** 	LBA_t sect			/* Sector to load and check if it is an FAT-VBR or not */
3296:..\..\ff14\source/ff.c **** )
3297:..\..\ff14\source/ff.c **** {
3298:..\..\ff14\source/ff.c **** 	fs->wflag = 0; fs->winsect = (LBA_t)0 - 1;		/* Invaidate window */
3299:..\..\ff14\source/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load the boot sector */
3300:..\..\ff14\source/ff.c **** 
3301:..\..\ff14\source/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot signature (always here regardles
3302:..\..\ff14\source/ff.c **** 
3303:..\..\ff14\source/ff.c **** 	if (FF_FS_EXFAT && !mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Che
3304:..\..\ff14\source/ff.c **** 
3305:..\..\ff14\source/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/
3306:..\..\ff14\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
3307:..\..\ff14\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
3308:..\..\ff14\source/ff.c **** 	}
3309:..\..\ff14\source/ff.c **** 	return 2;	/* Valid BS but not FAT */
3310:..\..\ff14\source/ff.c **** }
3311:..\..\ff14\source/ff.c **** 
3312:..\..\ff14\source/ff.c **** 
3313:..\..\ff14\source/ff.c **** /* Find an FAT volume */
3314:..\..\ff14\source/ff.c **** /* (It supports only generic partitioning rules, MBR, GPT and SFD) */
3315:..\..\ff14\source/ff.c **** 
3316:..\..\ff14\source/ff.c **** static UINT find_volume (	/* Returns BS status found in the hosting drive */
3317:..\..\ff14\source/ff.c **** 	FATFS* fs,		/* Filesystem object */
3318:..\..\ff14\source/ff.c **** 	UINT part		/* Partition to fined = 0:auto, 1..:forced */
3319:..\..\ff14\source/ff.c **** )
3320:..\..\ff14\source/ff.c **** {
3321:..\..\ff14\source/ff.c **** 	UINT fmt, i;
3322:..\..\ff14\source/ff.c **** 	DWORD mbr_pt[4];
3323:..\..\ff14\source/ff.c **** 
3324:..\..\ff14\source/ff.c **** 
3325:..\..\ff14\source/ff.c **** 	fmt = check_fs(fs, 0);				/* Load sector 0 and check if it is an FAT VBR as SFD */
3326:..\..\ff14\source/ff.c **** 	if (fmt != 2 && (fmt >= 3 || part == 0)) return fmt;	/* Returns if it is a FAT VBR as auto scan, n
3327:..\..\ff14\source/ff.c **** 
3328:..\..\ff14\source/ff.c **** 	/* Sector 0 is not an FAT VBR or forced partition number wants a partition */
3329:..\..\ff14\source/ff.c **** 
3330:..\..\ff14\source/ff.c **** #if FF_LBA64
3331:..\..\ff14\source/ff.c **** 	if (fs->win[MBR_Table + PTE_System] == 0xEE) {	/* GPT protective MBR? */
3332:..\..\ff14\source/ff.c **** 		DWORD n_ent, v_ent, ofs;
3333:..\..\ff14\source/ff.c **** 		QWORD pt_lba;
3334:..\..\ff14\source/ff.c **** 
3335:..\..\ff14\source/ff.c **** 		if (move_window(fs, 1) != FR_OK) return 4;	/* Load GPT header sector (next to MBR) */
3336:..\..\ff14\source/ff.c **** 		if (!test_gpt_header(fs->win)) return 3;	/* Check if GPT header is valid */
3337:..\..\ff14\source/ff.c **** 		n_ent = ld_dword(fs->win + GPTH_PtNum);		/* Number of entries */
3338:..\..\ff14\source/ff.c **** 		pt_lba = ld_qword(fs->win + GPTH_PtOfs);	/* Table location */
3339:..\..\ff14\source/ff.c **** 		for (v_ent = i = 0; i < n_ent; i++) {		/* Find FAT partition */
3340:..\..\ff14\source/ff.c **** 			if (move_window(fs, pt_lba + i * SZ_GPTE / SS(fs)) != FR_OK) return 4;	/* PT sector */
3341:..\..\ff14\source/ff.c **** 			ofs = i * SZ_GPTE % SS(fs);												/* Offset in the sector */
3342:..\..\ff14\source/ff.c **** 			if (!mem_cmp(fs->win + ofs + GPTE_PtGuid, GUID_MS_Basic, 16)) {	/* MS basic data partition? */
3343:..\..\ff14\source/ff.c **** 				v_ent++;
3344:..\..\ff14\source/ff.c **** 				fmt = check_fs(fs, ld_qword(fs->win + ofs + GPTE_FstLba));	/* Load VBR and check status */
3345:..\..\ff14\source/ff.c **** 				if (part == 0 && fmt <= 1) return fmt;			/* Auto search (valid FAT volume found first) */
3346:..\..\ff14\source/ff.c **** 				if (part != 0 && v_ent == part) return fmt;		/* Forced partition order (regardless of it is val
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 77


3347:..\..\ff14\source/ff.c **** 			}
3348:..\..\ff14\source/ff.c **** 		}
3349:..\..\ff14\source/ff.c **** 		return 3;	/* Not found */
3350:..\..\ff14\source/ff.c **** 	}
3351:..\..\ff14\source/ff.c **** #endif
3352:..\..\ff14\source/ff.c **** 	if (FF_MULTI_PARTITION && part > 4) return 3;	/* MBR has 4 partitions max */
3353:..\..\ff14\source/ff.c **** 	for (i = 0; i < 4; i++) {		/* Load partition offset in the MBR */
3354:..\..\ff14\source/ff.c **** 		mbr_pt[i] = ld_dword(fs->win + MBR_Table + i * SZ_PTE + PTE_StLba);
3355:..\..\ff14\source/ff.c **** 	}
3356:..\..\ff14\source/ff.c **** 	i = part ? part - 1 : 0;		/* Table index to find first */
3357:..\..\ff14\source/ff.c **** 	do {							/* Find an FAT volume */
3358:..\..\ff14\source/ff.c **** 		fmt = mbr_pt[i] ? check_fs(fs, mbr_pt[i]) : 3;	/* Check if the partition is FAT */
3359:..\..\ff14\source/ff.c **** 	} while (part == 0 && fmt >= 2 && ++i < 4);
3360:..\..\ff14\source/ff.c **** 	return fmt;
3361:..\..\ff14\source/ff.c **** }
3362:..\..\ff14\source/ff.c **** 
3363:..\..\ff14\source/ff.c **** 
3364:..\..\ff14\source/ff.c **** 
3365:..\..\ff14\source/ff.c **** 
3366:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3367:..\..\ff14\source/ff.c **** /* Determine logical drive number and mount the volume if needed         */
3368:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3369:..\..\ff14\source/ff.c **** 
3370:..\..\ff14\source/ff.c **** static FRESULT mount_volume (	/* FR_OK(0): successful, !=0: an error occurred */
3371:..\..\ff14\source/ff.c **** 	const TCHAR** path,			/* Pointer to pointer to the path name (drive number) */
3372:..\..\ff14\source/ff.c **** 	FATFS** rfs,				/* Pointer to pointer to the found filesystem object */
3373:..\..\ff14\source/ff.c **** 	BYTE mode					/* !=0: Check write protection for write access */
3374:..\..\ff14\source/ff.c **** )
3375:..\..\ff14\source/ff.c **** {
3376:..\..\ff14\source/ff.c **** 	int vol;
3377:..\..\ff14\source/ff.c **** 	DSTATUS stat;
3378:..\..\ff14\source/ff.c **** 	LBA_t bsect;
3379:..\..\ff14\source/ff.c **** 	DWORD tsect, sysect, fasize, nclst, szbfat;
3380:..\..\ff14\source/ff.c **** 	WORD nrsv;
3381:..\..\ff14\source/ff.c **** 	FATFS *fs;
3382:..\..\ff14\source/ff.c **** 	UINT fmt;
3383:..\..\ff14\source/ff.c **** 
3384:..\..\ff14\source/ff.c **** 
3385:..\..\ff14\source/ff.c **** 	/* Get logical drive number */
3386:..\..\ff14\source/ff.c **** 	*rfs = 0;
3387:..\..\ff14\source/ff.c **** 	vol = get_ldnumber(path);
3388:..\..\ff14\source/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3389:..\..\ff14\source/ff.c **** 
3390:..\..\ff14\source/ff.c **** 	/* Check if the filesystem object is valid or not */
3391:..\..\ff14\source/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the filesystem object */
3392:..\..\ff14\source/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
3393:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT
3394:..\..\ff14\source/ff.c **** 	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
3395:..\..\ff14\source/ff.c **** #endif
3396:..\..\ff14\source/ff.c **** 	*rfs = fs;							/* Return pointer to the filesystem object */
3397:..\..\ff14\source/ff.c **** 
3398:..\..\ff14\source/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3399:..\..\ff14\source/ff.c **** 	if (fs->fs_type != 0) {				/* If the volume has been mounted */
3400:..\..\ff14\source/ff.c **** 		stat = disk_status(fs->pdrv);
3401:..\..\ff14\source/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3402:..\..\ff14\source/ff.c **** 			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3403:..\..\ff14\source/ff.c **** 				return FR_WRITE_PROTECTED;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 78


3404:..\..\ff14\source/ff.c **** 			}
3405:..\..\ff14\source/ff.c **** 			return FR_OK;				/* The filesystem object is already valid */
3406:..\..\ff14\source/ff.c **** 		}
3407:..\..\ff14\source/ff.c **** 	}
3408:..\..\ff14\source/ff.c **** 
3409:..\..\ff14\source/ff.c **** 	/* The filesystem object is not valid. */
3410:..\..\ff14\source/ff.c **** 	/* Following code attempts to mount the volume. (find a FAT volume, analyze the BPB and initialize
3411:..\..\ff14\source/ff.c **** 
3412:..\..\ff14\source/ff.c **** 	fs->fs_type = 0;					/* Clear the filesystem object */
3413:..\..\ff14\source/ff.c **** 	fs->pdrv = LD2PD(vol);				/* Volume hosting physical drive */
3414:..\..\ff14\source/ff.c **** 	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
3415:..\..\ff14\source/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3416:..\..\ff14\source/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3417:..\..\ff14\source/ff.c **** 	}
3418:..\..\ff14\source/ff.c **** 	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3419:..\..\ff14\source/ff.c **** 		return FR_WRITE_PROTECTED;
3420:..\..\ff14\source/ff.c **** 	}
3421:..\..\ff14\source/ff.c **** #if FF_MAX_SS != FF_MIN_SS				/* Get sector size (multiple sector size cfg only) */
3422:..\..\ff14\source/ff.c **** 	if (disk_ioctl(fs->pdrv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3423:..\..\ff14\source/ff.c **** 	if (SS(fs) > FF_MAX_SS || SS(fs) < FF_MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3424:..\..\ff14\source/ff.c **** #endif
3425:..\..\ff14\source/ff.c **** 
3426:..\..\ff14\source/ff.c **** 	/* Find an FAT volume on the drive */
3427:..\..\ff14\source/ff.c **** 	fmt = find_volume(fs, LD2PT(vol));
3428:..\..\ff14\source/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3429:..\..\ff14\source/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3430:..\..\ff14\source/ff.c **** 	bsect = fs->winsect;					/* Volume location */
3431:..\..\ff14\source/ff.c **** 
3432:..\..\ff14\source/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the filesystem object */
3433:..\..\ff14\source/ff.c **** 
3434:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
3435:..\..\ff14\source/ff.c **** 	if (fmt == 1) {
3436:..\..\ff14\source/ff.c **** 		QWORD maxlba;
3437:..\..\ff14\source/ff.c **** 		DWORD so, cv, bcl, i;
3438:..\..\ff14\source/ff.c **** 
3439:..\..\ff14\source/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3440:..\..\ff14\source/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3441:..\..\ff14\source/ff.c **** 
3442:..\..\ff14\source/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT version (mus
3443:..\..\ff14\source/ff.c **** 
3444:..\..\ff14\source/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3445:..\..\ff14\source/ff.c **** 			return FR_NO_FILESYSTEM;
3446:..\..\ff14\source/ff.c **** 		}
3447:..\..\ff14\source/ff.c **** 
3448:..\..\ff14\source/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3449:..\..\ff14\source/ff.c **** 		if (!FF_LBA64 && maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-b
3450:..\..\ff14\source/ff.c **** 
3451:..\..\ff14\source/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3452:..\..\ff14\source/ff.c **** 
3453:..\..\ff14\source/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3454:..\..\ff14\source/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3455:..\..\ff14\source/ff.c **** 
3456:..\..\ff14\source/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3457:..\..\ff14\source/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3458:..\..\ff14\source/ff.c **** 
3459:..\..\ff14\source/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3460:..\..\ff14\source/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 79


3461:..\..\ff14\source/ff.c **** 		fs->n_fatent = nclst + 2;
3462:..\..\ff14\source/ff.c **** 
3463:..\..\ff14\source/ff.c **** 		/* Boundaries and Limits */
3464:..\..\ff14\source/ff.c **** 		fs->volbase = bsect;
3465:..\..\ff14\source/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3466:..\..\ff14\source/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3467:..\..\ff14\source/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3468:..\..\ff14\source/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3469:..\..\ff14\source/ff.c **** 
3470:..\..\ff14\source/ff.c **** 		/* Get bitmap location and check if it is contiguous (implementation assumption) */
3471:..\..\ff14\source/ff.c **** 		so = i = 0;
3472:..\..\ff14\source/ff.c **** 		for (;;) {	/* Find the bitmap entry in the root directory (in only first cluster) */
3473:..\..\ff14\source/ff.c **** 			if (i == 0) {
3474:..\..\ff14\source/ff.c **** 				if (so >= fs->csize) return FR_NO_FILESYSTEM;	/* Not found? */
3475:..\..\ff14\source/ff.c **** 				if (move_window(fs, clst2sect(fs, (DWORD)fs->dirbase) + so) != FR_OK) return FR_DISK_ERR;
3476:..\..\ff14\source/ff.c **** 				so++;
3477:..\..\ff14\source/ff.c **** 			}
3478:..\..\ff14\source/ff.c **** 			if (fs->win[i] == ET_BITMAP) break;				/* Is it a bitmap entry? */
3479:..\..\ff14\source/ff.c **** 			i = (i + SZDIRE) % SS(fs);	/* Next entry */
3480:..\..\ff14\source/ff.c **** 		}
3481:..\..\ff14\source/ff.c **** 		bcl = ld_dword(fs->win + i + 20);					/* Bitmap cluster */
3482:..\..\ff14\source/ff.c **** 		if (bcl < 2 || bcl >= fs->n_fatent) return FR_NO_FILESYSTEM;
3483:..\..\ff14\source/ff.c **** 		fs->bitbase = fs->database + fs->csize * (bcl - 2);	/* Bitmap sector */
3484:..\..\ff14\source/ff.c **** 		for (;;) {	/* Check if bitmap is contiguous */
3485:..\..\ff14\source/ff.c **** 			if (move_window(fs, fs->fatbase + bcl / (SS(fs) / 4)) != FR_OK) return FR_DISK_ERR;
3486:..\..\ff14\source/ff.c **** 			cv = ld_dword(fs->win + bcl % (SS(fs) / 4) * 4);
3487:..\..\ff14\source/ff.c **** 			if (cv == 0xFFFFFFFF) break;				/* Last link? */
3488:..\..\ff14\source/ff.c **** 			if (cv != ++bcl) return FR_NO_FILESYSTEM;	/* Fragmented? */
3489:..\..\ff14\source/ff.c **** 		}
3490:..\..\ff14\source/ff.c **** 
3491:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
3492:..\..\ff14\source/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3493:..\..\ff14\source/ff.c **** #endif
3494:..\..\ff14\source/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3495:..\..\ff14\source/ff.c **** 	} else
3496:..\..\ff14\source/ff.c **** #endif	/* FF_FS_EXFAT */
3497:..\..\ff14\source/ff.c **** 	{
3498:..\..\ff14\source/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3499:..\..\ff14\source/ff.c **** 
3500:..\..\ff14\source/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3501:..\..\ff14\source/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3502:..\..\ff14\source/ff.c **** 		fs->fsize = fasize;
3503:..\..\ff14\source/ff.c **** 
3504:..\..\ff14\source/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3505:..\..\ff14\source/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3506:..\..\ff14\source/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3507:..\..\ff14\source/ff.c **** 
3508:..\..\ff14\source/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3509:..\..\ff14\source/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3510:..\..\ff14\source/ff.c **** 
3511:..\..\ff14\source/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3512:..\..\ff14\source/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3513:..\..\ff14\source/ff.c **** 
3514:..\..\ff14\source/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3515:..\..\ff14\source/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3516:..\..\ff14\source/ff.c **** 
3517:..\..\ff14\source/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 80


3518:..\..\ff14\source/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3519:..\..\ff14\source/ff.c **** 
3520:..\..\ff14\source/ff.c **** 		/* Determine the FAT sub type */
3521:..\..\ff14\source/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3522:..\..\ff14\source/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3523:..\..\ff14\source/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3524:..\..\ff14\source/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3525:..\..\ff14\source/ff.c **** 		fmt = 0;
3526:..\..\ff14\source/ff.c **** 		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
3527:..\..\ff14\source/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3528:..\..\ff14\source/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3529:..\..\ff14\source/ff.c **** 		if (fmt == 0) return FR_NO_FILESYSTEM;
3530:..\..\ff14\source/ff.c **** 
3531:..\..\ff14\source/ff.c **** 		/* Boundaries and Limits */
3532:..\..\ff14\source/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3533:..\..\ff14\source/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3534:..\..\ff14\source/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3535:..\..\ff14\source/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3536:..\..\ff14\source/ff.c **** 		if (fmt == FS_FAT32) {
3537:..\..\ff14\source/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3538:..\..\ff14\source/ff.c **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3539:..\..\ff14\source/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3540:..\..\ff14\source/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3541:..\..\ff14\source/ff.c **** 		} else {
3542:..\..\ff14\source/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
3543:..\..\ff14\source/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3544:..\..\ff14\source/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3545:..\..\ff14\source/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3546:..\..\ff14\source/ff.c **** 		}
3547:..\..\ff14\source/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3548:..\..\ff14\source/ff.c **** 
3549:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
3550:..\..\ff14\source/ff.c **** 		/* Get FSInfo if available */
3551:..\..\ff14\source/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3552:..\..\ff14\source/ff.c **** 		fs->fsi_flag = 0x80;
3553:..\..\ff14\source/ff.c **** #if (FF_FS_NOFSINFO & 3) != 3
3554:..\..\ff14\source/ff.c **** 		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
3555:..\..\ff14\source/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3556:..\..\ff14\source/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3557:..\..\ff14\source/ff.c **** 		{
3558:..\..\ff14\source/ff.c **** 			fs->fsi_flag = 0;
3559:..\..\ff14\source/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
3560:..\..\ff14\source/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3561:..\..\ff14\source/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3562:..\..\ff14\source/ff.c **** 			{
3563:..\..\ff14\source/ff.c **** #if (FF_FS_NOFSINFO & 1) == 0
3564:..\..\ff14\source/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3565:..\..\ff14\source/ff.c **** #endif
3566:..\..\ff14\source/ff.c **** #if (FF_FS_NOFSINFO & 2) == 0
3567:..\..\ff14\source/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3568:..\..\ff14\source/ff.c **** #endif
3569:..\..\ff14\source/ff.c **** 			}
3570:..\..\ff14\source/ff.c **** 		}
3571:..\..\ff14\source/ff.c **** #endif	/* (FF_FS_NOFSINFO & 3) != 3 */
3572:..\..\ff14\source/ff.c **** #endif	/* !FF_FS_READONLY */
3573:..\..\ff14\source/ff.c **** 	}
3574:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 81


3575:..\..\ff14\source/ff.c **** 	fs->fs_type = (BYTE)fmt;/* FAT sub-type */
3576:..\..\ff14\source/ff.c **** 	fs->id = ++Fsid;		/* Volume mount ID */
3577:..\..\ff14\source/ff.c **** #if FF_USE_LFN == 1
3578:..\..\ff14\source/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3579:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
3580:..\..\ff14\source/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3581:..\..\ff14\source/ff.c **** #endif
3582:..\..\ff14\source/ff.c **** #endif
3583:..\..\ff14\source/ff.c **** #if FF_FS_RPATH != 0
3584:..\..\ff14\source/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3585:..\..\ff14\source/ff.c **** #endif
3586:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0			/* Clear file lock semaphores */
3587:..\..\ff14\source/ff.c **** 	clear_lock(fs);
3588:..\..\ff14\source/ff.c **** #endif
3589:..\..\ff14\source/ff.c **** 	return FR_OK;
3590:..\..\ff14\source/ff.c **** }
3591:..\..\ff14\source/ff.c **** 
3592:..\..\ff14\source/ff.c **** 
3593:..\..\ff14\source/ff.c **** 
3594:..\..\ff14\source/ff.c **** 
3595:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3596:..\..\ff14\source/ff.c **** /* Check if the file/directory object is valid or not                    */
3597:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3598:..\..\ff14\source/ff.c **** 
3599:..\..\ff14\source/ff.c **** static FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3600:..\..\ff14\source/ff.c **** 	FFOBJID* obj,			/* Pointer to the FFOBJID, the 1st member in the FIL/DIR object, to check validity
3601:..\..\ff14\source/ff.c **** 	FATFS** rfs				/* Pointer to pointer to the owner filesystem object to return */
3602:..\..\ff14\source/ff.c **** )
3603:..\..\ff14\source/ff.c **** {
 968              		.loc 1 3603 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              	.LVL146:
 973 0000 38B5     		push	{r3, r4, r5, lr}
 974              		.cfi_def_cfa_offset 16
 975              		.cfi_offset 3, -16
 976              		.cfi_offset 4, -12
 977              		.cfi_offset 5, -8
 978              		.cfi_offset 14, -4
 979 0002 0D46     		mov	r5, r1
 980              	.LVL147:
3604:..\..\ff14\source/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
3605:..\..\ff14\source/ff.c **** 
3606:..\..\ff14\source/ff.c **** 
3607:..\..\ff14\source/ff.c **** 	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid
 981              		.loc 1 3607 0
 982 0004 0446     		mov	r4, r0
 983 0006 78B1     		cbz	r0, .L89
 984              		.loc 1 3607 0 is_stmt 0 discriminator 1
 985 0008 0368     		ldr	r3, [r0]
 986 000a 7BB1     		cbz	r3, .L90
 987              		.loc 1 3607 0 discriminator 2
 988 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 989 000e 7AB1     		cbz	r2, .L91
 990              		.loc 1 3607 0 discriminator 3
 991 0010 8188     		ldrh	r1, [r0, #4]
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 82


 992              	.LVL148:
 993 0012 DA88     		ldrh	r2, [r3, #6]
 994 0014 9142     		cmp	r1, r2
 995 0016 0DD1     		bne	.L92
3608:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT
3609:..\..\ff14\source/ff.c **** 		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
3610:..\..\ff14\source/ff.c **** 			if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initializ
3611:..\..\ff14\source/ff.c **** 				res = FR_OK;
3612:..\..\ff14\source/ff.c **** 			} else {
3613:..\..\ff14\source/ff.c **** 				unlock_fs(obj->fs, FR_OK);
3614:..\..\ff14\source/ff.c **** 			}
3615:..\..\ff14\source/ff.c **** 		} else {
3616:..\..\ff14\source/ff.c **** 			res = FR_TIMEOUT;
3617:..\..\ff14\source/ff.c **** 		}
3618:..\..\ff14\source/ff.c **** #else
3619:..\..\ff14\source/ff.c **** 		if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
 996              		.loc 1 3619 0 is_stmt 1
 997 0018 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 998              	.LVL149:
 999 001a FFF7FEFF 		bl	disk_status
 1000              	.LVL150:
 1001 001e 10F0010F 		tst	r0, #1
 1002 0022 09D0     		beq	.L93
3604:..\..\ff14\source/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 1003              		.loc 1 3604 0
 1004 0024 0920     		movs	r0, #9
 1005 0026 08E0     		b	.L87
 1006              	.LVL151:
 1007              	.L89:
 1008 0028 0920     		movs	r0, #9
 1009              	.LVL152:
 1010 002a 06E0     		b	.L87
 1011              	.LVL153:
 1012              	.L90:
 1013 002c 0920     		movs	r0, #9
 1014              	.LVL154:
 1015 002e 04E0     		b	.L87
 1016              	.LVL155:
 1017              	.L91:
 1018 0030 0920     		movs	r0, #9
 1019              	.LVL156:
 1020 0032 02E0     		b	.L87
 1021              	.LVL157:
 1022              	.L92:
 1023 0034 0920     		movs	r0, #9
 1024              	.LVL158:
 1025 0036 00E0     		b	.L87
 1026              	.L93:
3620:..\..\ff14\source/ff.c **** 			res = FR_OK;
 1027              		.loc 1 3620 0
 1028 0038 0020     		movs	r0, #0
 1029              	.L87:
 1030              	.LVL159:
3621:..\..\ff14\source/ff.c **** 		}
3622:..\..\ff14\source/ff.c **** #endif
3623:..\..\ff14\source/ff.c **** 	}
3624:..\..\ff14\source/ff.c **** 	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 83


 1031              		.loc 1 3624 0
 1032 003a 08B9     		cbnz	r0, .L94
 1033              		.loc 1 3624 0 is_stmt 0 discriminator 1
 1034 003c 2368     		ldr	r3, [r4]
 1035 003e 00E0     		b	.L88
 1036              	.L94:
 1037              		.loc 1 3624 0
 1038 0040 0023     		movs	r3, #0
 1039              	.L88:
 1040              		.loc 1 3624 0 discriminator 4
 1041 0042 2B60     		str	r3, [r5]
3625:..\..\ff14\source/ff.c **** 	return res;
3626:..\..\ff14\source/ff.c **** }
 1042              		.loc 1 3626 0 is_stmt 1 discriminator 4
 1043 0044 38BD     		pop	{r3, r4, r5, pc}
 1044              		.cfi_endproc
 1045              	.LFE35:
 1046              		.size	validate, .-validate
 1047 0046 00BF     		.section	.text.sync_window,"ax",%progbits
 1048              		.align	2
 1049              		.thumb
 1050              		.thumb_func
 1051              		.type	sync_window, %function
 1052              	sync_window:
 1053              	.LFB10:
1075:..\..\ff14\source/ff.c **** 	FRESULT res = FR_OK;
 1054              		.loc 1 1075 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL160:
 1059 0000 38B5     		push	{r3, r4, r5, lr}
 1060              		.cfi_def_cfa_offset 16
 1061              		.cfi_offset 3, -16
 1062              		.cfi_offset 4, -12
 1063              		.cfi_offset 5, -8
 1064              		.cfi_offset 14, -4
 1065              	.LVL161:
1079:..\..\ff14\source/ff.c **** 		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write it back into the volume *
 1066              		.loc 1 1079 0
 1067 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1068 0004 E3B1     		cbz	r3, .L98
 1069 0006 0446     		mov	r4, r0
1080:..\..\ff14\source/ff.c **** 			fs->wflag = 0;	/* Clear window dirty flag */
 1070              		.loc 1 1080 0
 1071 0008 00F13005 		add	r5, r0, #48
 1072 000c 0123     		movs	r3, #1
 1073 000e C26A     		ldr	r2, [r0, #44]
 1074 0010 2946     		mov	r1, r5
 1075 0012 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1076              	.LVL162:
 1077 0014 FFF7FEFF 		bl	disk_write
 1078              	.LVL163:
 1079 0018 A0B9     		cbnz	r0, .L99
1081:..\..\ff14\source/ff.c **** 			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
 1080              		.loc 1 1081 0
 1081 001a 0023     		movs	r3, #0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 84


 1082 001c E370     		strb	r3, [r4, #3]
1082:..\..\ff14\source/ff.c **** 				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it t
 1083              		.loc 1 1082 0
 1084 001e E16A     		ldr	r1, [r4, #44]
 1085 0020 236A     		ldr	r3, [r4, #32]
 1086 0022 CB1A     		subs	r3, r1, r3
 1087 0024 A269     		ldr	r2, [r4, #24]
 1088 0026 9342     		cmp	r3, r2
 1089 0028 0ED2     		bcs	.L100
1083:..\..\ff14\source/ff.c **** 			}
 1090              		.loc 1 1083 0
 1091 002a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1092 002c 022B     		cmp	r3, #2
 1093 002e 0DD1     		bne	.L101
1083:..\..\ff14\source/ff.c **** 			}
 1094              		.loc 1 1083 0 is_stmt 0 discriminator 1
 1095 0030 0123     		movs	r3, #1
 1096 0032 0A44     		add	r2, r2, r1
 1097 0034 2946     		mov	r1, r5
 1098 0036 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1099 0038 FFF7FEFF 		bl	disk_write
 1100              	.LVL164:
1076:..\..\ff14\source/ff.c **** 
 1101              		.loc 1 1076 0 is_stmt 1 discriminator 1
 1102 003c 0020     		movs	r0, #0
 1103 003e 38BD     		pop	{r3, r4, r5, pc}
 1104              	.LVL165:
 1105              	.L98:
1076:..\..\ff14\source/ff.c **** 
 1106              		.loc 1 1076 0 is_stmt 0
 1107 0040 0020     		movs	r0, #0
 1108              	.LVL166:
 1109 0042 38BD     		pop	{r3, r4, r5, pc}
 1110              	.LVL167:
 1111              	.L99:
1086:..\..\ff14\source/ff.c **** 		}
 1112              		.loc 1 1086 0 is_stmt 1
 1113 0044 0120     		movs	r0, #1
 1114 0046 38BD     		pop	{r3, r4, r5, pc}
 1115              	.LVL168:
 1116              	.L100:
1076:..\..\ff14\source/ff.c **** 
 1117              		.loc 1 1076 0
 1118 0048 0020     		movs	r0, #0
 1119 004a 38BD     		pop	{r3, r4, r5, pc}
 1120              	.LVL169:
 1121              	.L101:
 1122 004c 0020     		movs	r0, #0
 1123              	.LVL170:
1090:..\..\ff14\source/ff.c **** #endif
 1124              		.loc 1 1090 0
 1125 004e 38BD     		pop	{r3, r4, r5, pc}
 1126              		.cfi_endproc
 1127              	.LFE10:
 1128              		.size	sync_window, .-sync_window
 1129              		.section	.text.move_window,"ax",%progbits
 1130              		.align	2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 85


 1131              		.thumb
 1132              		.thumb_func
 1133              		.type	move_window, %function
 1134              	move_window:
 1135              	.LFB11:
1098:..\..\ff14\source/ff.c **** 	FRESULT res = FR_OK;
 1136              		.loc 1 1098 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              	.LVL171:
 1141 0000 70B5     		push	{r4, r5, r6, lr}
 1142              		.cfi_def_cfa_offset 16
 1143              		.cfi_offset 4, -16
 1144              		.cfi_offset 5, -12
 1145              		.cfi_offset 6, -8
 1146              		.cfi_offset 14, -4
 1147              	.LVL172:
1102:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
 1148              		.loc 1 1102 0
 1149 0002 C36A     		ldr	r3, [r0, #44]
 1150 0004 8B42     		cmp	r3, r1
 1151 0006 12D0     		beq	.L106
 1152 0008 0446     		mov	r4, r0
 1153 000a 0D46     		mov	r5, r1
1104:..\..\ff14\source/ff.c **** #endif
 1154              		.loc 1 1104 0
 1155 000c FFF7FEFF 		bl	sync_window
 1156              	.LVL173:
1106:..\..\ff14\source/ff.c **** 			if (disk_read(fs->pdrv, fs->win, sect, 1) != RES_OK) {
 1157              		.loc 1 1106 0
 1158 0010 0646     		mov	r6, r0
 1159 0012 68B9     		cbnz	r0, .L104
1107:..\..\ff14\source/ff.c **** 				sect = (LBA_t)0 - 1;	/* Invalidate window if read data is not valid */
 1160              		.loc 1 1107 0
 1161 0014 0123     		movs	r3, #1
 1162 0016 2A46     		mov	r2, r5
 1163 0018 04F13001 		add	r1, r4, #48
 1164 001c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1165              	.LVL174:
 1166 001e FFF7FEFF 		bl	disk_read
 1167              	.LVL175:
 1168 0022 10B1     		cbz	r0, .L105
1109:..\..\ff14\source/ff.c **** 			}
 1169              		.loc 1 1109 0
 1170 0024 0126     		movs	r6, #1
1108:..\..\ff14\source/ff.c **** 				res = FR_DISK_ERR;
 1171              		.loc 1 1108 0
 1172 0026 4FF0FF35 		mov	r5, #-1
 1173              	.LVL176:
 1174              	.L105:
1111:..\..\ff14\source/ff.c **** 		}
 1175              		.loc 1 1111 0
 1176 002a E562     		str	r5, [r4, #44]
 1177 002c 00E0     		b	.L104
 1178              	.LVL177:
 1179              	.L106:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 86


1099:..\..\ff14\source/ff.c **** 
 1180              		.loc 1 1099 0
 1181 002e 0026     		movs	r6, #0
 1182              	.LVL178:
 1183              	.L104:
1115:..\..\ff14\source/ff.c **** 
 1184              		.loc 1 1115 0
 1185 0030 3046     		mov	r0, r6
 1186 0032 70BD     		pop	{r4, r5, r6, pc}
 1187              		.cfi_endproc
 1188              	.LFE11:
 1189              		.size	move_window, .-move_window
 1190              		.section	.text.check_fs,"ax",%progbits
 1191              		.align	2
 1192              		.thumb
 1193              		.thumb_func
 1194              		.type	check_fs, %function
 1195              	check_fs:
 1196              	.LFB32:
3297:..\..\ff14\source/ff.c **** 	fs->wflag = 0; fs->winsect = (LBA_t)0 - 1;		/* Invaidate window */
 1197              		.loc 1 3297 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              	.LVL179:
 1202 0000 10B5     		push	{r4, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 4, -8
 1205              		.cfi_offset 14, -4
 1206 0002 0446     		mov	r4, r0
3298:..\..\ff14\source/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load the boot sector */
 1207              		.loc 1 3298 0
 1208 0004 0023     		movs	r3, #0
 1209 0006 C370     		strb	r3, [r0, #3]
 1210 0008 4FF0FF33 		mov	r3, #-1
 1211 000c C362     		str	r3, [r0, #44]
3299:..\..\ff14\source/ff.c **** 
 1212              		.loc 1 3299 0
 1213 000e FFF7FEFF 		bl	move_window
 1214              	.LVL180:
 1215 0012 F0B9     		cbnz	r0, .L112
3301:..\..\ff14\source/ff.c **** 
 1216              		.loc 1 3301 0
 1217 0014 04F22E20 		addw	r0, r4, #558
 1218 0018 FFF7FEFF 		bl	ld_word
 1219              	.LVL181:
 1220 001c 4AF65523 		movw	r3, #43605
 1221 0020 9842     		cmp	r0, r3
 1222 0022 18D1     		bne	.L113
3305:..\..\ff14\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1223              		.loc 1 3305 0
 1224 0024 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1225 0028 E92B     		cmp	r3, #233
 1226 002a 03D0     		beq	.L111
3305:..\..\ff14\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1227              		.loc 1 3305 0 is_stmt 0 discriminator 1
 1228 002c EB2B     		cmp	r3, #235
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 87


 1229 002e 01D0     		beq	.L111
3305:..\..\ff14\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1230              		.loc 1 3305 0 discriminator 2
 1231 0030 E82B     		cmp	r3, #232
 1232 0032 12D1     		bne	.L114
 1233              	.L111:
3306:..\..\ff14\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
 1234              		.loc 1 3306 0 is_stmt 1
 1235 0034 0322     		movs	r2, #3
 1236 0036 0C49     		ldr	r1, .L118
 1237 0038 04F16600 		add	r0, r4, #102
 1238 003c FFF7FEFF 		bl	mem_cmp
 1239              	.LVL182:
 1240 0040 68B1     		cbz	r0, .L115
3307:..\..\ff14\source/ff.c **** 	}
 1241              		.loc 1 3307 0
 1242 0042 0522     		movs	r2, #5
 1243 0044 0949     		ldr	r1, .L118+4
 1244 0046 04F18200 		add	r0, r4, #130
 1245 004a FFF7FEFF 		bl	mem_cmp
 1246              	.LVL183:
 1247 004e 40B9     		cbnz	r0, .L116
 1248 0050 10BD     		pop	{r4, pc}
 1249              	.LVL184:
 1250              	.L112:
3299:..\..\ff14\source/ff.c **** 
 1251              		.loc 1 3299 0
 1252 0052 0420     		movs	r0, #4
 1253 0054 10BD     		pop	{r4, pc}
 1254              	.LVL185:
 1255              	.L113:
3301:..\..\ff14\source/ff.c **** 
 1256              		.loc 1 3301 0
 1257 0056 0320     		movs	r0, #3
 1258 0058 10BD     		pop	{r4, pc}
 1259              	.LVL186:
 1260              	.L114:
3309:..\..\ff14\source/ff.c **** }
 1261              		.loc 1 3309 0
 1262 005a 0220     		movs	r0, #2
 1263 005c 10BD     		pop	{r4, pc}
 1264              	.LVL187:
 1265              	.L115:
3306:..\..\ff14\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
 1266              		.loc 1 3306 0
 1267 005e 0020     		movs	r0, #0
 1268 0060 10BD     		pop	{r4, pc}
 1269              	.LVL188:
 1270              	.L116:
3309:..\..\ff14\source/ff.c **** }
 1271              		.loc 1 3309 0
 1272 0062 0220     		movs	r0, #2
3310:..\..\ff14\source/ff.c **** 
 1273              		.loc 1 3310 0
 1274 0064 10BD     		pop	{r4, pc}
 1275              	.LVL189:
 1276              	.L119:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 88


 1277 0066 00BF     		.align	2
 1278              	.L118:
 1279 0068 10000000 		.word	.LC1
 1280 006c 14000000 		.word	.LC2
 1281              		.cfi_endproc
 1282              	.LFE32:
 1283              		.size	check_fs, .-check_fs
 1284              		.section	.text.find_volume,"ax",%progbits
 1285              		.align	2
 1286              		.thumb
 1287              		.thumb_func
 1288              		.type	find_volume, %function
 1289              	find_volume:
 1290              	.LFB33:
3320:..\..\ff14\source/ff.c **** 	UINT fmt, i;
 1291              		.loc 1 3320 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 16
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              	.LVL190:
 1296 0000 70B5     		push	{r4, r5, r6, lr}
 1297              		.cfi_def_cfa_offset 16
 1298              		.cfi_offset 4, -16
 1299              		.cfi_offset 5, -12
 1300              		.cfi_offset 6, -8
 1301              		.cfi_offset 14, -4
 1302 0002 84B0     		sub	sp, sp, #16
 1303              		.cfi_def_cfa_offset 32
 1304 0004 0646     		mov	r6, r0
 1305 0006 0D46     		mov	r5, r1
3325:..\..\ff14\source/ff.c **** 	if (fmt != 2 && (fmt >= 3 || part == 0)) return fmt;	/* Returns if it is a FAT VBR as auto scan, n
 1306              		.loc 1 3325 0
 1307 0008 0021     		movs	r1, #0
 1308              	.LVL191:
 1309 000a FFF7FEFF 		bl	check_fs
 1310              	.LVL192:
3326:..\..\ff14\source/ff.c **** 
 1311              		.loc 1 3326 0
 1312 000e 0228     		cmp	r0, #2
 1313 0010 12D0     		beq	.L127
3326:..\..\ff14\source/ff.c **** 
 1314              		.loc 1 3326 0 is_stmt 0 discriminator 1
 1315 0012 29D8     		bhi	.L122
3326:..\..\ff14\source/ff.c **** 
 1316              		.loc 1 3326 0 discriminator 3
 1317 0014 45B3     		cbz	r5, .L122
 1318 0016 0024     		movs	r4, #0
 1319 0018 0FE0     		b	.L121
 1320              	.LVL193:
 1321              	.L123:
3354:..\..\ff14\source/ff.c **** 	}
 1322              		.loc 1 3354 0 is_stmt 1 discriminator 3
 1323 001a 06F13000 		add	r0, r6, #48
 1324 001e 2301     		lsls	r3, r4, #4
 1325 0020 03F5E373 		add	r3, r3, #454
 1326 0024 1844     		add	r0, r0, r3
 1327 0026 FFF7FEFF 		bl	ld_dword
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 89


 1328              	.LVL194:
 1329 002a 04AB     		add	r3, sp, #16
 1330 002c 03EB8403 		add	r3, r3, r4, lsl #2
 1331 0030 43F8100C 		str	r0, [r3, #-16]
3353:..\..\ff14\source/ff.c **** 		mbr_pt[i] = ld_dword(fs->win + MBR_Table + i * SZ_PTE + PTE_StLba);
 1332              		.loc 1 3353 0 discriminator 3
 1333 0034 0134     		adds	r4, r4, #1
 1334              	.LVL195:
 1335 0036 00E0     		b	.L121
 1336              	.LVL196:
 1337              	.L127:
 1338 0038 0024     		movs	r4, #0
 1339              	.LVL197:
 1340              	.L121:
3353:..\..\ff14\source/ff.c **** 		mbr_pt[i] = ld_dword(fs->win + MBR_Table + i * SZ_PTE + PTE_StLba);
 1341              		.loc 1 3353 0 is_stmt 0 discriminator 1
 1342 003a 032C     		cmp	r4, #3
 1343 003c EDD9     		bls	.L123
3356:..\..\ff14\source/ff.c **** 	do {							/* Find an FAT volume */
 1344              		.loc 1 3356 0 is_stmt 1
 1345 003e 0DB1     		cbz	r5, .L130
3356:..\..\ff14\source/ff.c **** 	do {							/* Find an FAT volume */
 1346              		.loc 1 3356 0 is_stmt 0 discriminator 1
 1347 0040 6C1E     		subs	r4, r5, #1
 1348              	.LVL198:
 1349 0042 00E0     		b	.L126
 1350              	.LVL199:
 1351              	.L130:
3356:..\..\ff14\source/ff.c **** 	do {							/* Find an FAT volume */
 1352              		.loc 1 3356 0
 1353 0044 0024     		movs	r4, #0
 1354              	.LVL200:
 1355              	.L126:
3358:..\..\ff14\source/ff.c **** 	} while (part == 0 && fmt >= 2 && ++i < 4);
 1356              		.loc 1 3358 0 is_stmt 1
 1357 0046 04AB     		add	r3, sp, #16
 1358 0048 03EB8403 		add	r3, r3, r4, lsl #2
 1359 004c 53F8101C 		ldr	r1, [r3, #-16]
 1360 0050 19B1     		cbz	r1, .L131
3358:..\..\ff14\source/ff.c **** 	} while (part == 0 && fmt >= 2 && ++i < 4);
 1361              		.loc 1 3358 0 is_stmt 0 discriminator 1
 1362 0052 3046     		mov	r0, r6
 1363 0054 FFF7FEFF 		bl	check_fs
 1364              	.LVL201:
 1365 0058 00E0     		b	.L125
 1366              	.L131:
3358:..\..\ff14\source/ff.c **** 	} while (part == 0 && fmt >= 2 && ++i < 4);
 1367              		.loc 1 3358 0
 1368 005a 0320     		movs	r0, #3
 1369              	.L125:
 1370              	.LVL202:
3359:..\..\ff14\source/ff.c **** 	return fmt;
 1371              		.loc 1 3359 0 is_stmt 1 discriminator 4
 1372 005c 25B9     		cbnz	r5, .L122
3359:..\..\ff14\source/ff.c **** 	return fmt;
 1373              		.loc 1 3359 0 is_stmt 0 discriminator 1
 1374 005e 0128     		cmp	r0, #1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 90


 1375 0060 02D9     		bls	.L122
3359:..\..\ff14\source/ff.c **** 	return fmt;
 1376              		.loc 1 3359 0 discriminator 2
 1377 0062 0134     		adds	r4, r4, #1
 1378              	.LVL203:
 1379 0064 032C     		cmp	r4, #3
 1380 0066 EED9     		bls	.L126
 1381              	.LVL204:
 1382              	.L122:
3361:..\..\ff14\source/ff.c **** 
 1383              		.loc 1 3361 0 is_stmt 1
 1384 0068 04B0     		add	sp, sp, #16
 1385              		.cfi_def_cfa_offset 16
 1386              		@ sp needed
 1387 006a 70BD     		pop	{r4, r5, r6, pc}
 1388              		.cfi_endproc
 1389              	.LFE33:
 1390              		.size	find_volume, .-find_volume
 1391              		.section	.text.mount_volume,"ax",%progbits
 1392              		.align	2
 1393              		.thumb
 1394              		.thumb_func
 1395              		.type	mount_volume, %function
 1396              	mount_volume:
 1397              	.LFB34:
3375:..\..\ff14\source/ff.c **** 	int vol;
 1398              		.loc 1 3375 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 1402              	.LVL205:
 1403 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1404              		.cfi_def_cfa_offset 32
 1405              		.cfi_offset 4, -32
 1406              		.cfi_offset 5, -28
 1407              		.cfi_offset 6, -24
 1408              		.cfi_offset 7, -20
 1409              		.cfi_offset 8, -16
 1410              		.cfi_offset 9, -12
 1411              		.cfi_offset 10, -8
 1412              		.cfi_offset 14, -4
 1413 0004 0E46     		mov	r6, r1
 1414 0006 1746     		mov	r7, r2
3386:..\..\ff14\source/ff.c **** 	vol = get_ldnumber(path);
 1415              		.loc 1 3386 0
 1416 0008 0023     		movs	r3, #0
 1417 000a 0B60     		str	r3, [r1]
3387:..\..\ff14\source/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1418              		.loc 1 3387 0
 1419 000c FFF7FEFF 		bl	get_ldnumber
 1420              	.LVL206:
3388:..\..\ff14\source/ff.c **** 
 1421              		.loc 1 3388 0
 1422 0010 051E     		subs	r5, r0, #0
 1423 0012 C0F20C81 		blt	.L148
3391:..\..\ff14\source/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
 1424              		.loc 1 3391 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 91


 1425 0016 A54B     		ldr	r3, .L173
 1426 0018 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1427              	.LVL207:
3392:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT
 1428              		.loc 1 3392 0
 1429 001c 002C     		cmp	r4, #0
 1430 001e 00F00981 		beq	.L149
3396:..\..\ff14\source/ff.c **** 
 1431              		.loc 1 3396 0
 1432 0022 3460     		str	r4, [r6]
3398:..\..\ff14\source/ff.c **** 	if (fs->fs_type != 0) {				/* If the volume has been mounted */
 1433              		.loc 1 3398 0
 1434 0024 07F0FE07 		and	r7, r7, #254
 1435              	.LVL208:
3399:..\..\ff14\source/ff.c **** 		stat = disk_status(fs->pdrv);
 1436              		.loc 1 3399 0
 1437 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1438 002a 7BB1     		cbz	r3, .L137
3400:..\..\ff14\source/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1439              		.loc 1 3400 0
 1440 002c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1441              	.LVL209:
 1442 002e FFF7FEFF 		bl	disk_status
 1443              	.LVL210:
3401:..\..\ff14\source/ff.c **** 			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1444              		.loc 1 3401 0
 1445 0032 10F0010F 		tst	r0, #1
 1446 0036 09D1     		bne	.L137
3402:..\..\ff14\source/ff.c **** 				return FR_WRITE_PROTECTED;
 1447              		.loc 1 3402 0
 1448 0038 002F     		cmp	r7, #0
 1449 003a 00F0FE80 		beq	.L150
3402:..\..\ff14\source/ff.c **** 				return FR_WRITE_PROTECTED;
 1450              		.loc 1 3402 0 is_stmt 0 discriminator 1
 1451 003e 10F0040F 		tst	r0, #4
 1452 0042 40F0FD80 		bne	.L151
3405:..\..\ff14\source/ff.c **** 		}
 1453              		.loc 1 3405 0 is_stmt 1
 1454 0046 0020     		movs	r0, #0
 1455              	.LVL211:
 1456 0048 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1457              	.LVL212:
 1458              	.L137:
3412:..\..\ff14\source/ff.c **** 	fs->pdrv = LD2PD(vol);				/* Volume hosting physical drive */
 1459              		.loc 1 3412 0
 1460 004c 0023     		movs	r3, #0
 1461 004e 2370     		strb	r3, [r4]
3413:..\..\ff14\source/ff.c **** 	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
 1462              		.loc 1 3413 0
 1463 0050 E8B2     		uxtb	r0, r5
 1464 0052 6070     		strb	r0, [r4, #1]
3414:..\..\ff14\source/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1465              		.loc 1 3414 0
 1466 0054 FFF7FEFF 		bl	disk_initialize
 1467              	.LVL213:
3415:..\..\ff14\source/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1468              		.loc 1 3415 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 92


 1469 0058 10F0010F 		tst	r0, #1
 1470 005c 40F0F380 		bne	.L152
3418:..\..\ff14\source/ff.c **** 		return FR_WRITE_PROTECTED;
 1471              		.loc 1 3418 0
 1472 0060 1FB1     		cbz	r7, .L138
3418:..\..\ff14\source/ff.c **** 		return FR_WRITE_PROTECTED;
 1473              		.loc 1 3418 0 is_stmt 0 discriminator 1
 1474 0062 10F0040F 		tst	r0, #4
 1475 0066 40F0F180 		bne	.L153
 1476              	.L138:
3427:..\..\ff14\source/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
 1477              		.loc 1 3427 0 is_stmt 1
 1478 006a 0021     		movs	r1, #0
 1479 006c 2046     		mov	r0, r4
 1480              	.LVL214:
 1481 006e FFF7FEFF 		bl	find_volume
 1482              	.LVL215:
3428:..\..\ff14\source/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1483              		.loc 1 3428 0
 1484 0072 0428     		cmp	r0, #4
 1485 0074 00F0ED80 		beq	.L154
3429:..\..\ff14\source/ff.c **** 	bsect = fs->winsect;					/* Volume location */
 1486              		.loc 1 3429 0
 1487 0078 0128     		cmp	r0, #1
 1488 007a 00F2ED80 		bhi	.L155
3430:..\..\ff14\source/ff.c **** 
 1489              		.loc 1 3430 0
 1490 007e E66A     		ldr	r6, [r4, #44]
 1491              	.LVL216:
3498:..\..\ff14\source/ff.c **** 
 1492              		.loc 1 3498 0
 1493 0080 04F13B00 		add	r0, r4, #59
 1494              	.LVL217:
 1495 0084 FFF7FEFF 		bl	ld_word
 1496              	.LVL218:
 1497 0088 B0F5007F 		cmp	r0, #512
 1498 008c 40F0E780 		bne	.L156
3500:..\..\ff14\source/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1499              		.loc 1 3500 0
 1500 0090 04F14600 		add	r0, r4, #70
 1501 0094 FFF7FEFF 		bl	ld_word
 1502              	.LVL219:
 1503 0098 8046     		mov	r8, r0
 1504              	.LVL220:
3501:..\..\ff14\source/ff.c **** 		fs->fsize = fasize;
 1505              		.loc 1 3501 0
 1506 009a 20B9     		cbnz	r0, .L139
3501:..\..\ff14\source/ff.c **** 		fs->fsize = fasize;
 1507              		.loc 1 3501 0 is_stmt 0 discriminator 1
 1508 009c 04F15400 		add	r0, r4, #84
 1509              	.LVL221:
 1510 00a0 FFF7FEFF 		bl	ld_dword
 1511              	.LVL222:
 1512 00a4 8046     		mov	r8, r0
 1513              	.LVL223:
 1514              	.L139:
3502:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 93


 1515              		.loc 1 3502 0 is_stmt 1
 1516 00a6 C4F81880 		str	r8, [r4, #24]
3504:..\..\ff14\source/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1517              		.loc 1 3504 0
 1518 00aa 94F84090 		ldrb	r9, [r4, #64]	@ zero_extendqisi2
 1519 00ae 84F80290 		strb	r9, [r4, #2]
3505:..\..\ff14\source/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1520              		.loc 1 3505 0
 1521 00b2 09F1FF33 		add	r3, r9, #-1
 1522 00b6 DBB2     		uxtb	r3, r3
 1523 00b8 012B     		cmp	r3, #1
 1524 00ba 00F2D380 		bhi	.L157
3506:..\..\ff14\source/ff.c **** 
 1525              		.loc 1 3506 0
 1526 00be 08FB09F9 		mul	r9, r8, r9
 1527              	.LVL224:
3508:..\..\ff14\source/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1528              		.loc 1 3508 0
 1529 00c2 94F83D50 		ldrb	r5, [r4, #61]	@ zero_extendqisi2
 1530              	.LVL225:
 1531 00c6 6581     		strh	r5, [r4, #10]	@ movhi
3509:..\..\ff14\source/ff.c **** 
 1532              		.loc 1 3509 0
 1533 00c8 002D     		cmp	r5, #0
 1534 00ca 00F0CE80 		beq	.L158
3509:..\..\ff14\source/ff.c **** 
 1535              		.loc 1 3509 0 is_stmt 0 discriminator 2
 1536 00ce 6B1E     		subs	r3, r5, #1
 1537 00d0 1D42     		tst	r5, r3
 1538 00d2 40F0CD80 		bne	.L159
3511:..\..\ff14\source/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1539              		.loc 1 3511 0 is_stmt 1
 1540 00d6 04F14100 		add	r0, r4, #65
 1541 00da FFF7FEFF 		bl	ld_word
 1542              	.LVL226:
 1543 00de 8246     		mov	r10, r0
 1544 00e0 2081     		strh	r0, [r4, #8]	@ movhi
3512:..\..\ff14\source/ff.c **** 
 1545              		.loc 1 3512 0
 1546 00e2 10F00F0F 		tst	r0, #15
 1547 00e6 40F0C680 		bne	.L160
3514:..\..\ff14\source/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1548              		.loc 1 3514 0
 1549 00ea 04F14300 		add	r0, r4, #67
 1550 00ee FFF7FEFF 		bl	ld_word
 1551              	.LVL227:
 1552 00f2 0746     		mov	r7, r0
 1553              	.LVL228:
3515:..\..\ff14\source/ff.c **** 
 1554              		.loc 1 3515 0
 1555 00f4 20B9     		cbnz	r0, .L140
3515:..\..\ff14\source/ff.c **** 
 1556              		.loc 1 3515 0 is_stmt 0 discriminator 1
 1557 00f6 04F15000 		add	r0, r4, #80
 1558              	.LVL229:
 1559 00fa FFF7FEFF 		bl	ld_dword
 1560              	.LVL230:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 94


 1561 00fe 0746     		mov	r7, r0
 1562              	.LVL231:
 1563              	.L140:
3517:..\..\ff14\source/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 1564              		.loc 1 3517 0 is_stmt 1
 1565 0100 04F13E00 		add	r0, r4, #62
 1566              	.LVL232:
 1567 0104 FFF7FEFF 		bl	ld_word
 1568              	.LVL233:
3518:..\..\ff14\source/ff.c **** 
 1569              		.loc 1 3518 0
 1570 0108 0346     		mov	r3, r0
 1571 010a 0028     		cmp	r0, #0
 1572 010c 00F0B680 		beq	.L161
3521:..\..\ff14\source/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 1573              		.loc 1 3521 0
 1574 0110 09EB0002 		add	r2, r9, r0
 1575 0114 02EB1A12 		add	r2, r2, r10, lsr #4
 1576              	.LVL234:
3522:..\..\ff14\source/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 1577              		.loc 1 3522 0
 1578 0118 9742     		cmp	r7, r2
 1579 011a C0F0B280 		bcc	.L162
3523:..\..\ff14\source/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1580              		.loc 1 3523 0
 1581 011e BF1A     		subs	r7, r7, r2
 1582              	.LVL235:
 1583 0120 B7FBF5F5 		udiv	r5, r7, r5
 1584              	.LVL236:
3524:..\..\ff14\source/ff.c **** 		fmt = 0;
 1585              		.loc 1 3524 0
 1586 0124 002D     		cmp	r5, #0
 1587 0126 00F0AF80 		beq	.L163
 1588              	.LVL237:
3526:..\..\ff14\source/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1589              		.loc 1 3526 0
 1590 012a 6149     		ldr	r1, .L173+4
 1591 012c 8D42     		cmp	r5, r1
 1592 012e 01D9     		bls	.L164
3525:..\..\ff14\source/ff.c **** 		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
 1593              		.loc 1 3525 0
 1594 0130 0027     		movs	r7, #0
 1595 0132 00E0     		b	.L141
 1596              	.L164:
3526:..\..\ff14\source/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1597              		.loc 1 3526 0
 1598 0134 0327     		movs	r7, #3
 1599              	.L141:
 1600              	.LVL238:
3527:..\..\ff14\source/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 1601              		.loc 1 3527 0
 1602 0136 4FF6F571 		movw	r1, #65525
 1603 013a 8D42     		cmp	r5, r1
 1604 013c 00D8     		bhi	.L142
 1605 013e 0227     		movs	r7, #2
 1606              	.LVL239:
 1607              	.L142:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 95


3528:..\..\ff14\source/ff.c **** 		if (fmt == 0) return FR_NO_FILESYSTEM;
 1608              		.loc 1 3528 0
 1609 0140 40F6F571 		movw	r1, #4085
 1610 0144 8D42     		cmp	r5, r1
 1611 0146 00D8     		bhi	.L143
 1612 0148 0127     		movs	r7, #1
 1613              	.LVL240:
 1614              	.L143:
3529:..\..\ff14\source/ff.c **** 
 1615              		.loc 1 3529 0
 1616 014a 002F     		cmp	r7, #0
 1617 014c 00F09F80 		beq	.L167
3532:..\..\ff14\source/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 1618              		.loc 1 3532 0
 1619 0150 0235     		adds	r5, r5, #2
 1620              	.LVL241:
 1621 0152 6561     		str	r5, [r4, #20]
3533:..\..\ff14\source/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 1622              		.loc 1 3533 0
 1623 0154 E661     		str	r6, [r4, #28]
3534:..\..\ff14\source/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 1624              		.loc 1 3534 0
 1625 0156 3344     		add	r3, r3, r6
 1626 0158 2362     		str	r3, [r4, #32]
3535:..\..\ff14\source/ff.c **** 		if (fmt == FS_FAT32) {
 1627              		.loc 1 3535 0
 1628 015a 3244     		add	r2, r2, r6
 1629              	.LVL242:
 1630 015c A262     		str	r2, [r4, #40]
3536:..\..\ff14\source/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 1631              		.loc 1 3536 0
 1632 015e 032F     		cmp	r7, #3
 1633 0160 11D1     		bne	.L144
3537:..\..\ff14\source/ff.c **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 1634              		.loc 1 3537 0
 1635 0162 04F15A00 		add	r0, r4, #90
 1636              	.LVL243:
 1637 0166 FFF7FEFF 		bl	ld_word
 1638              	.LVL244:
 1639 016a 0028     		cmp	r0, #0
 1640 016c 40F09280 		bne	.L168
3538:..\..\ff14\source/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 1641              		.loc 1 3538 0
 1642 0170 BAF1000F 		cmp	r10, #0
 1643 0174 40F09180 		bne	.L169
3539:..\..\ff14\source/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 1644              		.loc 1 3539 0
 1645 0178 04F15C00 		add	r0, r4, #92
 1646 017c FFF7FEFF 		bl	ld_dword
 1647              	.LVL245:
 1648 0180 6062     		str	r0, [r4, #36]
3540:..\..\ff14\source/ff.c **** 		} else {
 1649              		.loc 1 3540 0
 1650 0182 AD00     		lsls	r5, r5, #2
 1651              	.LVL246:
 1652 0184 0FE0     		b	.L145
 1653              	.LVL247:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 96


 1654              	.L144:
3542:..\..\ff14\source/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 1655              		.loc 1 3542 0
 1656 0186 BAF1000F 		cmp	r10, #0
 1657 018a 00F08980 		beq	.L170
3543:..\..\ff14\source/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 1658              		.loc 1 3543 0
 1659 018e 4B44     		add	r3, r3, r9
 1660 0190 6362     		str	r3, [r4, #36]
3545:..\..\ff14\source/ff.c **** 		}
 1661              		.loc 1 3545 0
 1662 0192 022F     		cmp	r7, #2
 1663 0194 01D1     		bne	.L146
3545:..\..\ff14\source/ff.c **** 		}
 1664              		.loc 1 3545 0 is_stmt 0 discriminator 1
 1665 0196 6D00     		lsls	r5, r5, #1
 1666              	.LVL248:
 1667 0198 05E0     		b	.L145
 1668              	.LVL249:
 1669              	.L146:
3545:..\..\ff14\source/ff.c **** 		}
 1670              		.loc 1 3545 0 discriminator 2
 1671 019a 05EB4503 		add	r3, r5, r5, lsl #1
 1672 019e 05F00105 		and	r5, r5, #1
 1673              	.LVL250:
 1674 01a2 05EB5305 		add	r5, r5, r3, lsr #1
 1675              	.LVL251:
 1676              	.L145:
3547:..\..\ff14\source/ff.c **** 
 1677              		.loc 1 3547 0 is_stmt 1
 1678 01a6 05F2FF15 		addw	r5, r5, #511
 1679              	.LVL252:
 1680 01aa B8EB552F 		cmp	r8, r5, lsr #9
 1681 01ae 7AD3     		bcc	.L171
3551:..\..\ff14\source/ff.c **** 		fs->fsi_flag = 0x80;
 1682              		.loc 1 3551 0
 1683 01b0 4FF0FF33 		mov	r3, #-1
 1684 01b4 2361     		str	r3, [r4, #16]
 1685 01b6 E360     		str	r3, [r4, #12]
3552:..\..\ff14\source/ff.c **** #if (FF_FS_NOFSINFO & 3) != 3
 1686              		.loc 1 3552 0
 1687 01b8 8023     		movs	r3, #128
 1688 01ba 2371     		strb	r3, [r4, #4]
3554:..\..\ff14\source/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 1689              		.loc 1 3554 0
 1690 01bc 032F     		cmp	r7, #3
 1691 01be 2CD1     		bne	.L147
3555:..\..\ff14\source/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 1692              		.loc 1 3555 0
 1693 01c0 04F16000 		add	r0, r4, #96
 1694 01c4 FFF7FEFF 		bl	ld_word
 1695              	.LVL253:
 1696 01c8 0128     		cmp	r0, #1
 1697 01ca 26D1     		bne	.L147
3556:..\..\ff14\source/ff.c **** 		{
 1698              		.loc 1 3556 0
 1699 01cc 711C     		adds	r1, r6, #1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 97


 1700 01ce 2046     		mov	r0, r4
 1701 01d0 FFF7FEFF 		bl	move_window
 1702              	.LVL254:
 1703 01d4 08BB     		cbnz	r0, .L147
3558:..\..\ff14\source/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
 1704              		.loc 1 3558 0
 1705 01d6 0023     		movs	r3, #0
 1706 01d8 2371     		strb	r3, [r4, #4]
3559:..\..\ff14\source/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 1707              		.loc 1 3559 0
 1708 01da 04F22E20 		addw	r0, r4, #558
 1709 01de FFF7FEFF 		bl	ld_word
 1710              	.LVL255:
 1711 01e2 4AF65523 		movw	r3, #43605
 1712 01e6 9842     		cmp	r0, r3
 1713 01e8 17D1     		bne	.L147
3560:..\..\ff14\source/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 1714              		.loc 1 3560 0
 1715 01ea 04F13000 		add	r0, r4, #48
 1716 01ee FFF7FEFF 		bl	ld_dword
 1717              	.LVL256:
 1718 01f2 304B     		ldr	r3, .L173+8
 1719 01f4 9842     		cmp	r0, r3
 1720 01f6 10D1     		bne	.L147
3561:..\..\ff14\source/ff.c **** 			{
 1721              		.loc 1 3561 0
 1722 01f8 04F50570 		add	r0, r4, #532
 1723 01fc FFF7FEFF 		bl	ld_dword
 1724              	.LVL257:
 1725 0200 2D4B     		ldr	r3, .L173+12
 1726 0202 9842     		cmp	r0, r3
 1727 0204 09D1     		bne	.L147
3564:..\..\ff14\source/ff.c **** #endif
 1728              		.loc 1 3564 0
 1729 0206 04F50670 		add	r0, r4, #536
 1730 020a FFF7FEFF 		bl	ld_dword
 1731              	.LVL258:
 1732 020e 2061     		str	r0, [r4, #16]
3567:..\..\ff14\source/ff.c **** #endif
 1733              		.loc 1 3567 0
 1734 0210 04F50770 		add	r0, r4, #540
 1735 0214 FFF7FEFF 		bl	ld_dword
 1736              	.LVL259:
 1737 0218 E060     		str	r0, [r4, #12]
 1738              	.L147:
3575:..\..\ff14\source/ff.c **** 	fs->id = ++Fsid;		/* Volume mount ID */
 1739              		.loc 1 3575 0
 1740 021a 2770     		strb	r7, [r4]
3576:..\..\ff14\source/ff.c **** #if FF_USE_LFN == 1
 1741              		.loc 1 3576 0
 1742 021c 234A     		ldr	r2, .L173
 1743 021e 9388     		ldrh	r3, [r2, #4]
 1744 0220 0133     		adds	r3, r3, #1
 1745 0222 9BB2     		uxth	r3, r3
 1746 0224 9380     		strh	r3, [r2, #4]	@ movhi
 1747 0226 E380     		strh	r3, [r4, #6]	@ movhi
3589:..\..\ff14\source/ff.c **** }
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 98


 1748              		.loc 1 3589 0
 1749 0228 0020     		movs	r0, #0
 1750 022a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1751              	.LVL260:
 1752              	.L148:
3388:..\..\ff14\source/ff.c **** 
 1753              		.loc 1 3388 0
 1754 022e 0B20     		movs	r0, #11
 1755              	.LVL261:
 1756 0230 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1757              	.LVL262:
 1758              	.L149:
3392:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT
 1759              		.loc 1 3392 0
 1760 0234 0C20     		movs	r0, #12
 1761              	.LVL263:
 1762 0236 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1763              	.LVL264:
 1764              	.L150:
3405:..\..\ff14\source/ff.c **** 		}
 1765              		.loc 1 3405 0
 1766 023a 0020     		movs	r0, #0
 1767              	.LVL265:
 1768 023c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1769              	.LVL266:
 1770              	.L151:
3403:..\..\ff14\source/ff.c **** 			}
 1771              		.loc 1 3403 0
 1772 0240 0A20     		movs	r0, #10
 1773              	.LVL267:
 1774 0242 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1775              	.LVL268:
 1776              	.L152:
3416:..\..\ff14\source/ff.c **** 	}
 1777              		.loc 1 3416 0
 1778 0246 0320     		movs	r0, #3
 1779              	.LVL269:
 1780 0248 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1781              	.LVL270:
 1782              	.L153:
3419:..\..\ff14\source/ff.c **** 	}
 1783              		.loc 1 3419 0
 1784 024c 0A20     		movs	r0, #10
 1785              	.LVL271:
 1786 024e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1787              	.LVL272:
 1788              	.L154:
3428:..\..\ff14\source/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1789              		.loc 1 3428 0
 1790 0252 0120     		movs	r0, #1
 1791              	.LVL273:
 1792 0254 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1793              	.LVL274:
 1794              	.L155:
3429:..\..\ff14\source/ff.c **** 	bsect = fs->winsect;					/* Volume location */
 1795              		.loc 1 3429 0
 1796 0258 0D20     		movs	r0, #13
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 99


 1797              	.LVL275:
 1798 025a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1799              	.LVL276:
 1800              	.L156:
3498:..\..\ff14\source/ff.c **** 
 1801              		.loc 1 3498 0
 1802 025e 0D20     		movs	r0, #13
 1803 0260 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1804              	.LVL277:
 1805              	.L157:
3505:..\..\ff14\source/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1806              		.loc 1 3505 0
 1807 0264 0D20     		movs	r0, #13
 1808              	.LVL278:
 1809 0266 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1810              	.LVL279:
 1811              	.L158:
3509:..\..\ff14\source/ff.c **** 
 1812              		.loc 1 3509 0
 1813 026a 0D20     		movs	r0, #13
 1814 026c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1815              	.LVL280:
 1816              	.L159:
 1817 0270 0D20     		movs	r0, #13
 1818 0272 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1819              	.LVL281:
 1820              	.L160:
3512:..\..\ff14\source/ff.c **** 
 1821              		.loc 1 3512 0
 1822 0276 0D20     		movs	r0, #13
 1823 0278 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1824              	.LVL282:
 1825              	.L161:
3518:..\..\ff14\source/ff.c **** 
 1826              		.loc 1 3518 0
 1827 027c 0D20     		movs	r0, #13
 1828              	.LVL283:
 1829 027e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1830              	.LVL284:
 1831              	.L162:
3522:..\..\ff14\source/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 1832              		.loc 1 3522 0
 1833 0282 0D20     		movs	r0, #13
 1834              	.LVL285:
 1835 0284 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1836              	.LVL286:
 1837              	.L163:
3524:..\..\ff14\source/ff.c **** 		fmt = 0;
 1838              		.loc 1 3524 0
 1839 0288 0D20     		movs	r0, #13
 1840              	.LVL287:
 1841 028a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1842              	.LVL288:
 1843              	.L167:
3529:..\..\ff14\source/ff.c **** 
 1844              		.loc 1 3529 0
 1845 028e 0D20     		movs	r0, #13
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 100


 1846              	.LVL289:
 1847 0290 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1848              	.LVL290:
 1849              	.L168:
3537:..\..\ff14\source/ff.c **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 1850              		.loc 1 3537 0
 1851 0294 0D20     		movs	r0, #13
 1852 0296 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1853              	.LVL291:
 1854              	.L169:
3538:..\..\ff14\source/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 1855              		.loc 1 3538 0
 1856 029a 0D20     		movs	r0, #13
 1857 029c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1858              	.LVL292:
 1859              	.L170:
3542:..\..\ff14\source/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 1860              		.loc 1 3542 0
 1861 02a0 0D20     		movs	r0, #13
 1862              	.LVL293:
 1863 02a2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1864              	.LVL294:
 1865              	.L171:
3547:..\..\ff14\source/ff.c **** 
 1866              		.loc 1 3547 0
 1867 02a6 0D20     		movs	r0, #13
3590:..\..\ff14\source/ff.c **** 
 1868              		.loc 1 3590 0
 1869 02a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1870              	.LVL295:
 1871              	.L174:
 1872              		.align	2
 1873              	.L173:
 1874 02ac 00000000 		.word	.LANCHOR0
 1875 02b0 F5FFFF0F 		.word	268435445
 1876 02b4 52526141 		.word	1096897106
 1877 02b8 72724161 		.word	1631679090
 1878              		.cfi_endproc
 1879              	.LFE34:
 1880              		.size	mount_volume, .-mount_volume
 1881              		.section	.text.put_fat,"ax",%progbits
 1882              		.align	2
 1883              		.thumb
 1884              		.thumb_func
 1885              		.type	put_fat, %function
 1886              	put_fat:
 1887              	.LFB15:
1261:..\..\ff14\source/ff.c **** 	UINT bc;
 1888              		.loc 1 1261 0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 1892              	.LVL296:
 1893 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1894              		.cfi_def_cfa_offset 32
 1895              		.cfi_offset 4, -32
 1896              		.cfi_offset 5, -28
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 101


 1897              		.cfi_offset 6, -24
 1898              		.cfi_offset 7, -20
 1899              		.cfi_offset 8, -16
 1900              		.cfi_offset 9, -12
 1901              		.cfi_offset 10, -8
 1902              		.cfi_offset 14, -4
 1903              	.LVL297:
1267:..\..\ff14\source/ff.c **** 		switch (fs->fs_type) {
 1904              		.loc 1 1267 0
 1905 0004 0129     		cmp	r1, #1
 1906 0006 75D9     		bls	.L184
1267:..\..\ff14\source/ff.c **** 		switch (fs->fs_type) {
 1907              		.loc 1 1267 0 is_stmt 0 discriminator 1
 1908 0008 4369     		ldr	r3, [r0, #20]
 1909 000a 9942     		cmp	r1, r3
 1910 000c 74D2     		bcs	.L185
 1911 000e 1746     		mov	r7, r2
 1912 0010 0C46     		mov	r4, r1
 1913 0012 0646     		mov	r6, r0
1268:..\..\ff14\source/ff.c **** 		case FS_FAT12 :
 1914              		.loc 1 1268 0 is_stmt 1
 1915 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1916 0016 022B     		cmp	r3, #2
 1917 0018 3ED0     		beq	.L177
 1918 001a 032B     		cmp	r3, #3
 1919 001c 4FD0     		beq	.L178
 1920 001e 012B     		cmp	r3, #1
 1921 0020 6CD1     		bne	.L187
 1922              	.LVL298:
1270:..\..\ff14\source/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1923              		.loc 1 1270 0
 1924 0022 01EB5108 		add	r8, r1, r1, lsr #1
 1925              	.LVL299:
1271:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
 1926              		.loc 1 1271 0
 1927 0026 016A     		ldr	r1, [r0, #32]
 1928              	.LVL300:
 1929 0028 01EB5821 		add	r1, r1, r8, lsr #9
 1930 002c FFF7FEFF 		bl	move_window
 1931              	.LVL301:
1272:..\..\ff14\source/ff.c **** 			p = fs->win + bc++ % SS(fs);
 1932              		.loc 1 1272 0
 1933 0030 0546     		mov	r5, r0
 1934 0032 0028     		cmp	r0, #0
 1935 0034 63D1     		bne	.L176
1273:..\..\ff14\source/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Update 1st byte */
 1936              		.loc 1 1273 0
 1937 0036 06F1300A 		add	r10, r6, #48
 1938 003a 08F10109 		add	r9, r8, #1
 1939              	.LVL302:
 1940 003e C8F30808 		ubfx	r8, r8, #0, #9
 1941              	.LVL303:
1274:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 1942              		.loc 1 1274 0
 1943 0042 14F00104 		ands	r4, r4, #1
 1944              	.LVL304:
 1945 0046 07D0     		beq	.L180
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 102


1274:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 1946              		.loc 1 1274 0 is_stmt 0 discriminator 1
 1947 0048 1AF80830 		ldrb	r3, [r10, r8]	@ zero_extendqisi2
 1948 004c 03F00F03 		and	r3, r3, #15
 1949 0050 43EA0713 		orr	r3, r3, r7, lsl #4
 1950 0054 DBB2     		uxtb	r3, r3
 1951 0056 00E0     		b	.L181
 1952              	.L180:
1274:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 1953              		.loc 1 1274 0 discriminator 2
 1954 0058 FBB2     		uxtb	r3, r7
 1955              	.L181:
1274:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 1956              		.loc 1 1274 0 discriminator 4
 1957 005a 0AF80830 		strb	r3, [r10, r8]
1275:..\..\ff14\source/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1958              		.loc 1 1275 0 is_stmt 1 discriminator 4
 1959 005e 0123     		movs	r3, #1
 1960 0060 F370     		strb	r3, [r6, #3]
1276:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
 1961              		.loc 1 1276 0 discriminator 4
 1962 0062 316A     		ldr	r1, [r6, #32]
 1963 0064 01EB5921 		add	r1, r1, r9, lsr #9
 1964 0068 3046     		mov	r0, r6
 1965              	.LVL305:
 1966 006a FFF7FEFF 		bl	move_window
 1967              	.LVL306:
1277:..\..\ff14\source/ff.c **** 			p = fs->win + bc % SS(fs);
 1968              		.loc 1 1277 0 discriminator 4
 1969 006e 0546     		mov	r5, r0
 1970 0070 0028     		cmp	r0, #0
 1971 0072 44D1     		bne	.L176
1278:..\..\ff14\source/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Update 2nd by
 1972              		.loc 1 1278 0
 1973 0074 C9F30809 		ubfx	r9, r9, #0, #9
 1974              	.LVL307:
1279:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 1975              		.loc 1 1279 0
 1976 0078 14B1     		cbz	r4, .L182
1279:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 1977              		.loc 1 1279 0 is_stmt 0 discriminator 1
 1978 007a C7F30712 		ubfx	r2, r7, #4, #8
 1979 007e 06E0     		b	.L183
 1980              	.L182:
1279:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 1981              		.loc 1 1279 0 discriminator 2
 1982 0080 1AF80930 		ldrb	r3, [r10, r9]	@ zero_extendqisi2
 1983 0084 23F00F03 		bic	r3, r3, #15
 1984 0088 C7F30322 		ubfx	r2, r7, #8, #4
 1985 008c 1A43     		orrs	r2, r2, r3
 1986              	.L183:
1279:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 1987              		.loc 1 1279 0 discriminator 4
 1988 008e 0AF80920 		strb	r2, [r10, r9]
1280:..\..\ff14\source/ff.c **** 			break;
 1989              		.loc 1 1280 0 is_stmt 1 discriminator 4
 1990 0092 0123     		movs	r3, #1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 103


 1991 0094 F370     		strb	r3, [r6, #3]
1281:..\..\ff14\source/ff.c **** 
 1992              		.loc 1 1281 0 discriminator 4
 1993 0096 32E0     		b	.L176
 1994              	.LVL308:
 1995              	.L177:
1284:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
 1996              		.loc 1 1284 0
 1997 0098 016A     		ldr	r1, [r0, #32]
 1998              	.LVL309:
 1999 009a 01EB1421 		add	r1, r1, r4, lsr #8
 2000 009e FFF7FEFF 		bl	move_window
 2001              	.LVL310:
1285:..\..\ff14\source/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
 2002              		.loc 1 1285 0
 2003 00a2 0546     		mov	r5, r0
 2004 00a4 58BB     		cbnz	r0, .L176
1286:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 2005              		.loc 1 1286 0
 2006 00a6 06F13000 		add	r0, r6, #48
 2007              	.LVL311:
 2008 00aa 6300     		lsls	r3, r4, #1
 2009 00ac 03F4FF73 		and	r3, r3, #510
 2010 00b0 B9B2     		uxth	r1, r7
 2011 00b2 1844     		add	r0, r0, r3
 2012 00b4 FFF7FEFF 		bl	st_word
 2013              	.LVL312:
1287:..\..\ff14\source/ff.c **** 			break;
 2014              		.loc 1 1287 0
 2015 00b8 0123     		movs	r3, #1
 2016 00ba F370     		strb	r3, [r6, #3]
1288:..\..\ff14\source/ff.c **** 
 2017              		.loc 1 1288 0
 2018 00bc 1FE0     		b	.L176
 2019              	.LVL313:
 2020              	.L178:
1294:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
 2021              		.loc 1 1294 0
 2022 00be 016A     		ldr	r1, [r0, #32]
 2023              	.LVL314:
 2024 00c0 01EBD411 		add	r1, r1, r4, lsr #7
 2025 00c4 FFF7FEFF 		bl	move_window
 2026              	.LVL315:
1295:..\..\ff14\source/ff.c **** 			if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2027              		.loc 1 1295 0
 2028 00c8 0546     		mov	r5, r0
 2029 00ca C0B9     		cbnz	r0, .L176
1297:..\..\ff14\source/ff.c **** 			}
 2030              		.loc 1 1297 0
 2031 00cc 27F07047 		bic	r7, r7, #-268435456
 2032              	.LVL316:
 2033 00d0 06F13003 		add	r3, r6, #48
 2034 00d4 A100     		lsls	r1, r4, #2
 2035 00d6 01F4FE71 		and	r1, r1, #508
 2036 00da 5C18     		adds	r4, r3, r1
 2037              	.LVL317:
 2038 00dc 2046     		mov	r0, r4
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 104


 2039              	.LVL318:
 2040 00de FFF7FEFF 		bl	ld_dword
 2041              	.LVL319:
 2042 00e2 00F07041 		and	r1, r0, #-268435456
 2043              	.LVL320:
1299:..\..\ff14\source/ff.c **** 			fs->wflag = 1;
 2044              		.loc 1 1299 0
 2045 00e6 3943     		orrs	r1, r1, r7
 2046              	.LVL321:
 2047 00e8 2046     		mov	r0, r4
 2048 00ea FFF7FEFF 		bl	st_dword
 2049              	.LVL322:
1300:..\..\ff14\source/ff.c **** 			break;
 2050              		.loc 1 1300 0
 2051 00ee 0123     		movs	r3, #1
 2052 00f0 F370     		strb	r3, [r6, #3]
1301:..\..\ff14\source/ff.c **** 		}
 2053              		.loc 1 1301 0
 2054 00f2 04E0     		b	.L176
 2055              	.LVL323:
 2056              	.L184:
1264:..\..\ff14\source/ff.c **** 
 2057              		.loc 1 1264 0
 2058 00f4 0225     		movs	r5, #2
 2059 00f6 02E0     		b	.L176
 2060              	.L185:
 2061 00f8 0225     		movs	r5, #2
 2062 00fa 00E0     		b	.L176
 2063              	.L187:
 2064 00fc 0225     		movs	r5, #2
 2065              	.LVL324:
 2066              	.L176:
1305:..\..\ff14\source/ff.c **** 
 2067              		.loc 1 1305 0
 2068 00fe 2846     		mov	r0, r5
 2069 0100 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2070              		.cfi_endproc
 2071              	.LFE15:
 2072              		.size	put_fat, .-put_fat
 2073              		.section	.text.get_fat,"ax",%progbits
 2074              		.align	2
 2075              		.thumb
 2076              		.thumb_func
 2077              		.type	get_fat, %function
 2078              	get_fat:
 2079              	.LFB14:
1183:..\..\ff14\source/ff.c **** 	UINT wc, bc;
 2080              		.loc 1 1183 0
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 0
 2083              		@ frame_needed = 0, uses_anonymous_args = 0
 2084              	.LVL325:
 2085 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2086              		.cfi_def_cfa_offset 24
 2087              		.cfi_offset 3, -24
 2088              		.cfi_offset 4, -20
 2089              		.cfi_offset 5, -16
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 105


 2090              		.cfi_offset 6, -12
 2091              		.cfi_offset 7, -8
 2092              		.cfi_offset 14, -4
1186:..\..\ff14\source/ff.c **** 
 2093              		.loc 1 1186 0
 2094 0002 0668     		ldr	r6, [r0]
 2095              	.LVL326:
1189:..\..\ff14\source/ff.c **** 		val = 1;	/* Internal error */
 2096              		.loc 1 1189 0
 2097 0004 0129     		cmp	r1, #1
 2098 0006 53D9     		bls	.L195
1189:..\..\ff14\source/ff.c **** 		val = 1;	/* Internal error */
 2099              		.loc 1 1189 0 is_stmt 0 discriminator 1
 2100 0008 7369     		ldr	r3, [r6, #20]
 2101 000a 9942     		cmp	r1, r3
 2102 000c 52D2     		bcs	.L196
 2103 000e 0C46     		mov	r4, r1
 2104              	.LVL327:
1195:..\..\ff14\source/ff.c **** 		case FS_FAT12 :
 2105              		.loc 1 1195 0 is_stmt 1
 2106 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2107 0012 022B     		cmp	r3, #2
 2108 0014 2AD0     		beq	.L191
 2109 0016 032B     		cmp	r3, #3
 2110 0018 38D0     		beq	.L192
 2111 001a 012B     		cmp	r3, #1
 2112 001c 4CD1     		bne	.L202
 2113              	.LVL328:
1197:..\..\ff14\source/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2114              		.loc 1 1197 0
 2115 001e 01EB5105 		add	r5, r1, r1, lsr #1
 2116              	.LVL329:
1198:..\..\ff14\source/ff.c **** 			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
 2117              		.loc 1 1198 0
 2118 0022 316A     		ldr	r1, [r6, #32]
 2119              	.LVL330:
 2120 0024 01EB5521 		add	r1, r1, r5, lsr #9
 2121 0028 3046     		mov	r0, r6
 2122              	.LVL331:
 2123 002a FFF7FEFF 		bl	move_window
 2124              	.LVL332:
 2125 002e 0028     		cmp	r0, #0
 2126 0030 44D1     		bne	.L198
1199:..\..\ff14\source/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2127              		.loc 1 1199 0
 2128 0032 6F1C     		adds	r7, r5, #1
 2129              	.LVL333:
 2130 0034 C5F30805 		ubfx	r5, r5, #0, #9
 2131 0038 3544     		add	r5, r5, r6
 2132 003a 95F83050 		ldrb	r5, [r5, #48]	@ zero_extendqisi2
 2133              	.LVL334:
1200:..\..\ff14\source/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
 2134              		.loc 1 1200 0
 2135 003e 316A     		ldr	r1, [r6, #32]
 2136 0040 01EB5721 		add	r1, r1, r7, lsr #9
 2137 0044 3046     		mov	r0, r6
 2138 0046 FFF7FEFF 		bl	move_window
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 106


 2139              	.LVL335:
 2140 004a 0028     		cmp	r0, #0
 2141 004c 39D1     		bne	.L199
1201:..\..\ff14\source/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
 2142              		.loc 1 1201 0
 2143 004e C7F30803 		ubfx	r3, r7, #0, #9
 2144 0052 3344     		add	r3, r3, r6
 2145 0054 93F83000 		ldrb	r0, [r3, #48]	@ zero_extendqisi2
 2146 0058 45EA0020 		orr	r0, r5, r0, lsl #8
 2147              	.LVL336:
1202:..\..\ff14\source/ff.c **** 			break;
 2148              		.loc 1 1202 0
 2149 005c 14F0010F 		tst	r4, #1
 2150 0060 01D0     		beq	.L194
1202:..\..\ff14\source/ff.c **** 			break;
 2151              		.loc 1 1202 0 is_stmt 0 discriminator 1
 2152 0062 0009     		lsrs	r0, r0, #4
 2153              	.LVL337:
 2154 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2155              	.LVL338:
 2156              	.L194:
1202:..\..\ff14\source/ff.c **** 			break;
 2157              		.loc 1 1202 0 discriminator 2
 2158 0066 C0F30B00 		ubfx	r0, r0, #0, #12
 2159              	.LVL339:
 2160 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2161              	.LVL340:
 2162              	.L191:
1206:..\..\ff14\source/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
 2163              		.loc 1 1206 0 is_stmt 1
 2164 006c 316A     		ldr	r1, [r6, #32]
 2165              	.LVL341:
 2166 006e 01EB1421 		add	r1, r1, r4, lsr #8
 2167 0072 3046     		mov	r0, r6
 2168              	.LVL342:
 2169 0074 FFF7FEFF 		bl	move_window
 2170              	.LVL343:
 2171 0078 30BB     		cbnz	r0, .L200
1207:..\..\ff14\source/ff.c **** 			break;
 2172              		.loc 1 1207 0
 2173 007a 06F13000 		add	r0, r6, #48
 2174 007e 6100     		lsls	r1, r4, #1
 2175 0080 01F4FF71 		and	r1, r1, #510
 2176 0084 0844     		add	r0, r0, r1
 2177 0086 FFF7FEFF 		bl	ld_word
 2178              	.LVL344:
1208:..\..\ff14\source/ff.c **** 
 2179              		.loc 1 1208 0
 2180 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2181              	.LVL345:
 2182              	.L192:
1211:..\..\ff14\source/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upp
 2183              		.loc 1 1211 0
 2184 008c 316A     		ldr	r1, [r6, #32]
 2185              	.LVL346:
 2186 008e 01EBD411 		add	r1, r1, r4, lsr #7
 2187 0092 3046     		mov	r0, r6
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 107


 2188              	.LVL347:
 2189 0094 FFF7FEFF 		bl	move_window
 2190              	.LVL348:
 2191 0098 C8B9     		cbnz	r0, .L201
1212:..\..\ff14\source/ff.c **** 			break;
 2192              		.loc 1 1212 0
 2193 009a 06F13003 		add	r3, r6, #48
 2194 009e A100     		lsls	r1, r4, #2
 2195 00a0 01F4FE70 		and	r0, r1, #508
 2196 00a4 1844     		add	r0, r0, r3
 2197 00a6 FFF7FEFF 		bl	ld_dword
 2198              	.LVL349:
 2199 00aa 20F07040 		bic	r0, r0, #-268435456
 2200              	.LVL350:
1213:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 2201              		.loc 1 1213 0
 2202 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2203              	.LVL351:
 2204              	.L195:
1190:..\..\ff14\source/ff.c **** 
 2205              		.loc 1 1190 0
 2206 00b0 0120     		movs	r0, #1
 2207              	.LVL352:
 2208 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2209              	.LVL353:
 2210              	.L196:
 2211 00b4 0120     		movs	r0, #1
 2212              	.LVL354:
 2213 00b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2214              	.LVL355:
 2215              	.L202:
1241:..\..\ff14\source/ff.c **** 		}
 2216              		.loc 1 1241 0
 2217 00b8 0120     		movs	r0, #1
 2218              	.LVL356:
 2219 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2220              	.LVL357:
 2221              	.L198:
1193:..\..\ff14\source/ff.c **** 
 2222              		.loc 1 1193 0
 2223 00bc 4FF0FF30 		mov	r0, #-1
 2224 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2225              	.LVL358:
 2226              	.L199:
 2227 00c2 4FF0FF30 		mov	r0, #-1
 2228 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2229              	.LVL359:
 2230              	.L200:
 2231 00c8 4FF0FF30 		mov	r0, #-1
 2232 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2233              	.LVL360:
 2234              	.L201:
 2235 00ce 4FF0FF30 		mov	r0, #-1
 2236              	.LVL361:
1246:..\..\ff14\source/ff.c **** 
 2237              		.loc 1 1246 0
 2238 00d2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 108


 2239              		.cfi_endproc
 2240              	.LFE14:
 2241              		.size	get_fat, .-get_fat
 2242              		.section	.text.dir_sdi,"ax",%progbits
 2243              		.align	2
 2244              		.thumb
 2245              		.thumb_func
 2246              		.type	dir_sdi, %function
 2247              	dir_sdi:
 2248              	.LFB19:
1717:..\..\ff14\source/ff.c **** 	DWORD csz, clst;
 2249              		.loc 1 1717 0
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 0
 2252              		@ frame_needed = 0, uses_anonymous_args = 0
 2253              	.LVL362:
 2254 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2255              		.cfi_def_cfa_offset 24
 2256              		.cfi_offset 4, -24
 2257              		.cfi_offset 5, -20
 2258              		.cfi_offset 6, -16
 2259              		.cfi_offset 7, -12
 2260              		.cfi_offset 8, -8
 2261              		.cfi_offset 14, -4
1719:..\..\ff14\source/ff.c **** 
 2262              		.loc 1 1719 0
 2263 0004 0768     		ldr	r7, [r0]
 2264              	.LVL363:
1722:..\..\ff14\source/ff.c **** 		return FR_INT_ERR;
 2265              		.loc 1 1722 0
 2266 0006 B1F5001F 		cmp	r1, #2097152
 2267 000a 3DD2     		bcs	.L211
 2268 000c 0646     		mov	r6, r0
 2269 000e 0C46     		mov	r4, r1
1722:..\..\ff14\source/ff.c **** 		return FR_INT_ERR;
 2270              		.loc 1 1722 0 is_stmt 0 discriminator 1
 2271 0010 11F01F0F 		tst	r1, #31
 2272 0014 3BD1     		bne	.L212
1725:..\..\ff14\source/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2273              		.loc 1 1725 0 is_stmt 1
 2274 0016 3161     		str	r1, [r6, #16]
1726:..\..\ff14\source/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2275              		.loc 1 1726 0
 2276 0018 8568     		ldr	r5, [r0, #8]
 2277              	.LVL364:
1727:..\..\ff14\source/ff.c **** 		clst = (DWORD)fs->dirbase;
 2278              		.loc 1 1727 0
 2279 001a 1DB9     		cbnz	r5, .L206
1727:..\..\ff14\source/ff.c **** 		clst = (DWORD)fs->dirbase;
 2280              		.loc 1 1727 0 is_stmt 0 discriminator 1
 2281 001c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2282 001e 022B     		cmp	r3, #2
 2283 0020 00D9     		bls	.L206
1728:..\..\ff14\source/ff.c **** 		if (FF_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2284              		.loc 1 1728 0 is_stmt 1
 2285 0022 7D6A     		ldr	r5, [r7, #36]
 2286              	.LVL365:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 109


 2287              	.L206:
1732:..\..\ff14\source/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
 2288              		.loc 1 1732 0
 2289 0024 35B9     		cbnz	r5, .L207
1733:..\..\ff14\source/ff.c **** 		dp->sect = fs->dirbase;
 2290              		.loc 1 1733 0
 2291 0026 3B89     		ldrh	r3, [r7, #8]
 2292 0028 B3EB541F 		cmp	r3, r4, lsr #5
 2293 002c 32D9     		bls	.L213
1734:..\..\ff14\source/ff.c **** 
 2294              		.loc 1 1734 0
 2295 002e 7B6A     		ldr	r3, [r7, #36]
 2296 0030 B361     		str	r3, [r6, #24]
 2297 0032 1AE0     		b	.L208
 2298              	.L207:
1737:..\..\ff14\source/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2299              		.loc 1 1737 0
 2300 0034 B7F80A80 		ldrh	r8, [r7, #10]
 2301 0038 4FEA4828 		lsl	r8, r8, #9
 2302              	.LVL366:
1738:..\..\ff14\source/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2303              		.loc 1 1738 0
 2304 003c 0EE0     		b	.L209
 2305              	.LVL367:
 2306              	.L210:
1739:..\..\ff14\source/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2307              		.loc 1 1739 0
 2308 003e 2946     		mov	r1, r5
 2309 0040 3046     		mov	r0, r6
 2310 0042 FFF7FEFF 		bl	get_fat
 2311              	.LVL368:
 2312 0046 0546     		mov	r5, r0
 2313              	.LVL369:
1740:..\..\ff14\source/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2314              		.loc 1 1740 0
 2315 0048 B0F1FF3F 		cmp	r0, #-1
 2316 004c 25D0     		beq	.L214
1741:..\..\ff14\source/ff.c **** 			ofs -= csz;
 2317              		.loc 1 1741 0
 2318 004e 0128     		cmp	r0, #1
 2319 0050 26D9     		bls	.L215
1741:..\..\ff14\source/ff.c **** 			ofs -= csz;
 2320              		.loc 1 1741 0 is_stmt 0 discriminator 2
 2321 0052 7B69     		ldr	r3, [r7, #20]
 2322 0054 9842     		cmp	r0, r3
 2323 0056 26D2     		bcs	.L216
1742:..\..\ff14\source/ff.c **** 		}
 2324              		.loc 1 1742 0 is_stmt 1
 2325 0058 C8EB0404 		rsb	r4, r8, r4
 2326              	.LVL370:
 2327              	.L209:
1738:..\..\ff14\source/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2328              		.loc 1 1738 0
 2329 005c 4445     		cmp	r4, r8
 2330 005e EED2     		bcs	.L210
1744:..\..\ff14\source/ff.c **** 	}
 2331              		.loc 1 1744 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 110


 2332 0060 2946     		mov	r1, r5
 2333 0062 3846     		mov	r0, r7
 2334 0064 FFF7FEFF 		bl	clst2sect
 2335              	.LVL371:
 2336 0068 B061     		str	r0, [r6, #24]
 2337              	.LVL372:
 2338              	.L208:
1746:..\..\ff14\source/ff.c **** 	if (dp->sect == 0) return FR_INT_ERR;
 2339              		.loc 1 1746 0
 2340 006a 7561     		str	r5, [r6, #20]
1747:..\..\ff14\source/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2341              		.loc 1 1747 0
 2342 006c B369     		ldr	r3, [r6, #24]
 2343 006e EBB1     		cbz	r3, .L217
1748:..\..\ff14\source/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2344              		.loc 1 1748 0
 2345 0070 03EB5423 		add	r3, r3, r4, lsr #9
 2346 0074 B361     		str	r3, [r6, #24]
1749:..\..\ff14\source/ff.c **** 
 2347              		.loc 1 1749 0
 2348 0076 07F13003 		add	r3, r7, #48
 2349 007a C4F30804 		ubfx	r4, r4, #0, #9
 2350              	.LVL373:
 2351 007e 2344     		add	r3, r3, r4
 2352 0080 F361     		str	r3, [r6, #28]
1751:..\..\ff14\source/ff.c **** }
 2353              		.loc 1 1751 0
 2354 0082 0020     		movs	r0, #0
 2355 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2356              	.LVL374:
 2357              	.L211:
1723:..\..\ff14\source/ff.c **** 	}
 2358              		.loc 1 1723 0
 2359 0088 0220     		movs	r0, #2
 2360              	.LVL375:
 2361 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2362              	.LVL376:
 2363              	.L212:
 2364 008e 0220     		movs	r0, #2
 2365              	.LVL377:
 2366 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2367              	.LVL378:
 2368              	.L213:
1733:..\..\ff14\source/ff.c **** 		dp->sect = fs->dirbase;
 2369              		.loc 1 1733 0
 2370 0094 0220     		movs	r0, #2
 2371              	.LVL379:
 2372 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2373              	.LVL380:
 2374              	.L214:
1740:..\..\ff14\source/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2375              		.loc 1 1740 0
 2376 009a 0120     		movs	r0, #1
 2377              	.LVL381:
 2378 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2379              	.LVL382:
 2380              	.L215:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 111


1741:..\..\ff14\source/ff.c **** 			ofs -= csz;
 2381              		.loc 1 1741 0
 2382 00a0 0220     		movs	r0, #2
 2383              	.LVL383:
 2384 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2385              	.LVL384:
 2386              	.L216:
 2387 00a6 0220     		movs	r0, #2
 2388              	.LVL385:
 2389 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2390              	.LVL386:
 2391              	.L217:
1747:..\..\ff14\source/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2392              		.loc 1 1747 0
 2393 00ac 0220     		movs	r0, #2
1752:..\..\ff14\source/ff.c **** 
 2394              		.loc 1 1752 0
 2395 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2396              		.cfi_endproc
 2397              	.LFE19:
 2398              		.size	dir_sdi, .-dir_sdi
 2399 00b2 00BF     		.section	.text.create_chain,"ax",%progbits
 2400              		.align	2
 2401              		.thumb
 2402              		.thumb_func
 2403              		.type	create_chain, %function
 2404              	create_chain:
 2405              	.LFB17:
1545:..\..\ff14\source/ff.c **** 	DWORD cs, ncl, scl;
 2406              		.loc 1 1545 0
 2407              		.cfi_startproc
 2408              		@ args = 0, pretend = 0, frame = 0
 2409              		@ frame_needed = 0, uses_anonymous_args = 0
 2410              	.LVL387:
 2411 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2412              		.cfi_def_cfa_offset 24
 2413              		.cfi_offset 4, -24
 2414              		.cfi_offset 5, -20
 2415              		.cfi_offset 6, -16
 2416              		.cfi_offset 7, -12
 2417              		.cfi_offset 8, -8
 2418              		.cfi_offset 14, -4
 2419 0004 0746     		mov	r7, r0
1548:..\..\ff14\source/ff.c **** 
 2420              		.loc 1 1548 0
 2421 0006 0668     		ldr	r6, [r0]
 2422              	.LVL388:
1551:..\..\ff14\source/ff.c **** 		scl = fs->last_clst;				/* Suggested cluster to start to find */
 2423              		.loc 1 1551 0
 2424 0008 8846     		mov	r8, r1
 2425 000a 29B9     		cbnz	r1, .L220
1552:..\..\ff14\source/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2426              		.loc 1 1552 0
 2427 000c F568     		ldr	r5, [r6, #12]
 2428              	.LVL389:
1553:..\..\ff14\source/ff.c **** 	}
 2429              		.loc 1 1553 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 112


 2430 000e 7DB1     		cbz	r5, .L231
1553:..\..\ff14\source/ff.c **** 	}
 2431              		.loc 1 1553 0 is_stmt 0 discriminator 2
 2432 0010 7369     		ldr	r3, [r6, #20]
 2433 0012 9D42     		cmp	r5, r3
 2434 0014 0ED2     		bcs	.L232
 2435 0016 0EE0     		b	.L221
 2436              	.LVL390:
 2437              	.L220:
1556:..\..\ff14\source/ff.c **** 		if (cs < 2) return 1;				/* Test for insanity */
 2438              		.loc 1 1556 0 is_stmt 1
 2439 0018 FFF7FEFF 		bl	get_fat
 2440              	.LVL391:
1557:..\..\ff14\source/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
 2441              		.loc 1 1557 0
 2442 001c 0128     		cmp	r0, #1
 2443 001e 69D9     		bls	.L233
1558:..\..\ff14\source/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2444              		.loc 1 1558 0
 2445 0020 B0F1FF3F 		cmp	r0, #-1
 2446 0024 74D0     		beq	.L222
1559:..\..\ff14\source/ff.c **** 		scl = clst;							/* Cluster to start to find */
 2447              		.loc 1 1559 0
 2448 0026 7369     		ldr	r3, [r6, #20]
 2449 0028 9842     		cmp	r0, r3
 2450 002a 71D3     		bcc	.L222
1560:..\..\ff14\source/ff.c **** 	}
 2451              		.loc 1 1560 0
 2452 002c 4546     		mov	r5, r8
 2453 002e 02E0     		b	.L221
 2454              	.LVL392:
 2455              	.L231:
1553:..\..\ff14\source/ff.c **** 	}
 2456              		.loc 1 1553 0
 2457 0030 0125     		movs	r5, #1
 2458              	.LVL393:
 2459 0032 00E0     		b	.L221
 2460              	.LVL394:
 2461              	.L232:
 2462 0034 0125     		movs	r5, #1
 2463              	.LVL395:
 2464              	.L221:
1562:..\..\ff14\source/ff.c **** 
 2465              		.loc 1 1562 0
 2466 0036 3069     		ldr	r0, [r6, #16]
 2467 0038 0028     		cmp	r0, #0
 2468 003a 69D0     		beq	.L222
 2469              	.LVL396:
1592:..\..\ff14\source/ff.c **** 			ncl = scl + 1;						/* Test if next cluster is free */
 2470              		.loc 1 1592 0
 2471 003c 4545     		cmp	r5, r8
 2472 003e 16D1     		bne	.L236
1593:..\..\ff14\source/ff.c **** 			if (ncl >= fs->n_fatent) ncl = 2;
 2473              		.loc 1 1593 0
 2474 0040 6C1C     		adds	r4, r5, #1
 2475              	.LVL397:
1594:..\..\ff14\source/ff.c **** 			cs = get_fat(obj, ncl);				/* Get next cluster status */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 113


 2476              		.loc 1 1594 0
 2477 0042 7369     		ldr	r3, [r6, #20]
 2478 0044 9C42     		cmp	r4, r3
 2479 0046 00D3     		bcc	.L224
 2480 0048 0224     		movs	r4, #2
 2481              	.LVL398:
 2482              	.L224:
1595:..\..\ff14\source/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
 2483              		.loc 1 1595 0
 2484 004a 2146     		mov	r1, r4
 2485 004c 3846     		mov	r0, r7
 2486 004e FFF7FEFF 		bl	get_fat
 2487              	.LVL399:
1596:..\..\ff14\source/ff.c **** 			if (cs != 0) {						/* Not free? */
 2488              		.loc 1 1596 0
 2489 0052 0128     		cmp	r0, #1
 2490 0054 5CD0     		beq	.L222
1596:..\..\ff14\source/ff.c **** 			if (cs != 0) {						/* Not free? */
 2491              		.loc 1 1596 0 is_stmt 0 discriminator 2
 2492 0056 B0F1FF3F 		cmp	r0, #-1
 2493 005a 59D0     		beq	.L222
1597:..\..\ff14\source/ff.c **** 				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
 2494              		.loc 1 1597 0 is_stmt 1
 2495 005c 68B1     		cbz	r0, .L223
1598:..\..\ff14\source/ff.c **** 				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 2496              		.loc 1 1598 0
 2497 005e F368     		ldr	r3, [r6, #12]
 2498              	.LVL400:
1599:..\..\ff14\source/ff.c **** 				ncl = 0;
 2499              		.loc 1 1599 0
 2500 0060 012B     		cmp	r3, #1
 2501 0062 06D9     		bls	.L240
1599:..\..\ff14\source/ff.c **** 				ncl = 0;
 2502              		.loc 1 1599 0 is_stmt 0 discriminator 1
 2503 0064 7269     		ldr	r2, [r6, #20]
 2504 0066 9342     		cmp	r3, r2
 2505 0068 05D3     		bcc	.L241
1600:..\..\ff14\source/ff.c **** 			}
 2506              		.loc 1 1600 0 is_stmt 1
 2507 006a 0024     		movs	r4, #0
 2508              	.LVL401:
 2509 006c 05E0     		b	.L223
 2510              	.LVL402:
 2511              	.L236:
1591:..\..\ff14\source/ff.c **** 		if (scl == clst) {						/* Stretching an existing chain? */
 2512              		.loc 1 1591 0
 2513 006e 0024     		movs	r4, #0
 2514 0070 03E0     		b	.L223
 2515              	.LVL403:
 2516              	.L240:
1600:..\..\ff14\source/ff.c **** 			}
 2517              		.loc 1 1600 0
 2518 0072 0024     		movs	r4, #0
 2519              	.LVL404:
 2520 0074 01E0     		b	.L223
 2521              	.LVL405:
 2522              	.L241:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 114


1599:..\..\ff14\source/ff.c **** 				ncl = 0;
 2523              		.loc 1 1599 0
 2524 0076 1D46     		mov	r5, r3
 2525              	.LVL406:
1600:..\..\ff14\source/ff.c **** 			}
 2526              		.loc 1 1600 0
 2527 0078 0024     		movs	r4, #0
 2528              	.LVL407:
 2529              	.L223:
1603:..\..\ff14\source/ff.c **** 			ncl = scl;	/* Start cluster */
 2530              		.loc 1 1603 0
 2531 007a A4B9     		cbnz	r4, .L225
 2532 007c 2C46     		mov	r4, r5
 2533              	.LVL408:
 2534              	.L227:
1606:..\..\ff14\source/ff.c **** 				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2535              		.loc 1 1606 0
 2536 007e 0134     		adds	r4, r4, #1
 2537              	.LVL409:
1607:..\..\ff14\source/ff.c **** 					ncl = 2;
 2538              		.loc 1 1607 0
 2539 0080 7369     		ldr	r3, [r6, #20]
 2540 0082 9C42     		cmp	r4, r3
 2541 0084 02D3     		bcc	.L226
 2542              	.LVL410:
1609:..\..\ff14\source/ff.c **** 				}
 2543              		.loc 1 1609 0
 2544 0086 012D     		cmp	r5, #1
 2545 0088 37D9     		bls	.L242
1608:..\..\ff14\source/ff.c **** 					if (ncl > scl) return 0;	/* No free cluster found? */
 2546              		.loc 1 1608 0
 2547 008a 0224     		movs	r4, #2
 2548              	.LVL411:
 2549              	.L226:
1611:..\..\ff14\source/ff.c **** 				if (cs == 0) break;				/* Found a free cluster? */
 2550              		.loc 1 1611 0
 2551 008c 2146     		mov	r1, r4
 2552 008e 3846     		mov	r0, r7
 2553 0090 FFF7FEFF 		bl	get_fat
 2554              	.LVL412:
1612:..\..\ff14\source/ff.c **** 				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
 2555              		.loc 1 1612 0
 2556 0094 38B1     		cbz	r0, .L225
1613:..\..\ff14\source/ff.c **** 				if (ncl == scl) return 0;		/* No free cluster found? */
 2557              		.loc 1 1613 0
 2558 0096 0128     		cmp	r0, #1
 2559 0098 32D0     		beq	.L243
1613:..\..\ff14\source/ff.c **** 				if (ncl == scl) return 0;		/* No free cluster found? */
 2560              		.loc 1 1613 0 is_stmt 0 discriminator 2
 2561 009a B0F1FF3F 		cmp	r0, #-1
 2562 009e 31D0     		beq	.L244
1614:..\..\ff14\source/ff.c **** 			}
 2563              		.loc 1 1614 0 is_stmt 1
 2564 00a0 AC42     		cmp	r4, r5
 2565 00a2 ECD1     		bne	.L227
 2566 00a4 30E0     		b	.L245
 2567              	.LVL413:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 115


 2568              	.L225:
1617:..\..\ff14\source/ff.c **** 		if (res == FR_OK && clst != 0) {
 2569              		.loc 1 1617 0
 2570 00a6 4FF0FF32 		mov	r2, #-1
 2571 00aa 2146     		mov	r1, r4
 2572 00ac 3046     		mov	r0, r6
 2573 00ae FFF7FEFF 		bl	put_fat
 2574              	.LVL414:
1618:..\..\ff14\source/ff.c **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
 2575              		.loc 1 1618 0
 2576 00b2 0346     		mov	r3, r0
 2577 00b4 40B9     		cbnz	r0, .L228
1618:..\..\ff14\source/ff.c **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
 2578              		.loc 1 1618 0 is_stmt 0 discriminator 1
 2579 00b6 B8F1000F 		cmp	r8, #0
 2580 00ba 05D0     		beq	.L228
1619:..\..\ff14\source/ff.c **** 		}
 2581              		.loc 1 1619 0 is_stmt 1
 2582 00bc 2246     		mov	r2, r4
 2583 00be 4146     		mov	r1, r8
 2584 00c0 3046     		mov	r0, r6
 2585              	.LVL415:
 2586 00c2 FFF7FEFF 		bl	put_fat
 2587              	.LVL416:
 2588 00c6 0346     		mov	r3, r0
 2589              	.LVL417:
 2590              	.L228:
1623:..\..\ff14\source/ff.c **** 		fs->last_clst = ncl;
 2591              		.loc 1 1623 0
 2592 00c8 73B9     		cbnz	r3, .L229
1624:..\..\ff14\source/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 2593              		.loc 1 1624 0
 2594 00ca F460     		str	r4, [r6, #12]
1625:..\..\ff14\source/ff.c **** 		fs->fsi_flag |= 1;
 2595              		.loc 1 1625 0
 2596 00cc 3269     		ldr	r2, [r6, #16]
 2597 00ce 7369     		ldr	r3, [r6, #20]
 2598              	.LVL418:
 2599 00d0 023B     		subs	r3, r3, #2
 2600 00d2 9A42     		cmp	r2, r3
 2601 00d4 01D8     		bhi	.L230
1625:..\..\ff14\source/ff.c **** 		fs->fsi_flag |= 1;
 2602              		.loc 1 1625 0 is_stmt 0 discriminator 1
 2603 00d6 013A     		subs	r2, r2, #1
 2604 00d8 3261     		str	r2, [r6, #16]
 2605              	.L230:
1626:..\..\ff14\source/ff.c **** 	} else {
 2606              		.loc 1 1626 0 is_stmt 1
 2607 00da 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 2608 00dc 43F00103 		orr	r3, r3, #1
 2609 00e0 3371     		strb	r3, [r6, #4]
 2610 00e2 2046     		mov	r0, r4
 2611 00e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2612              	.LVL419:
 2613              	.L229:
1628:..\..\ff14\source/ff.c **** 	}
 2614              		.loc 1 1628 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 116


 2615 00e8 012B     		cmp	r3, #1
 2616 00ea 10D1     		bne	.L246
 2617 00ec 4FF0FF30 		mov	r0, #-1
 2618 00f0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2619              	.LVL420:
 2620              	.L233:
1557:..\..\ff14\source/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
 2621              		.loc 1 1557 0
 2622 00f4 0120     		movs	r0, #1
 2623              	.LVL421:
 2624 00f6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2625              	.LVL422:
 2626              	.L242:
1609:..\..\ff14\source/ff.c **** 				}
 2627              		.loc 1 1609 0
 2628 00fa 0020     		movs	r0, #0
 2629 00fc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2630              	.LVL423:
 2631              	.L243:
 2632 0100 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2633              	.LVL424:
 2634              	.L244:
 2635 0104 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2636              	.LVL425:
 2637              	.L245:
1614:..\..\ff14\source/ff.c **** 			}
 2638              		.loc 1 1614 0
 2639 0108 0020     		movs	r0, #0
 2640              	.LVL426:
 2641 010a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2642              	.LVL427:
 2643              	.L246:
1628:..\..\ff14\source/ff.c **** 	}
 2644              		.loc 1 1628 0
 2645 010e 0120     		movs	r0, #1
 2646              	.LVL428:
 2647              	.L222:
1632:..\..\ff14\source/ff.c **** 
 2648              		.loc 1 1632 0
 2649 0110 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2650              		.cfi_endproc
 2651              	.LFE17:
 2652              		.size	create_chain, .-create_chain
 2653              		.section	.text.remove_chain,"ax",%progbits
 2654              		.align	2
 2655              		.thumb
 2656              		.thumb_func
 2657              		.type	remove_chain, %function
 2658              	remove_chain:
 2659              	.LFB16:
1451:..\..\ff14\source/ff.c **** 	FRESULT res = FR_OK;
 2660              		.loc 1 1451 0
 2661              		.cfi_startproc
 2662              		@ args = 0, pretend = 0, frame = 0
 2663              		@ frame_needed = 0, uses_anonymous_args = 0
 2664              	.LVL429:
 2665 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 117


 2666              		.cfi_def_cfa_offset 24
 2667              		.cfi_offset 3, -24
 2668              		.cfi_offset 4, -20
 2669              		.cfi_offset 5, -16
 2670              		.cfi_offset 6, -12
 2671              		.cfi_offset 7, -8
 2672              		.cfi_offset 14, -4
 2673 0002 0E46     		mov	r6, r1
 2674              	.LVL430:
1454:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT || FF_USE_TRIM
 2675              		.loc 1 1454 0
 2676 0004 0468     		ldr	r4, [r0]
 2677              	.LVL431:
1462:..\..\ff14\source/ff.c **** 
 2678              		.loc 1 1462 0
 2679 0006 0129     		cmp	r1, #1
 2680 0008 2CD9     		bls	.L253
 2681 000a 0746     		mov	r7, r0
 2682 000c 1146     		mov	r1, r2
 2683              	.LVL432:
1462:..\..\ff14\source/ff.c **** 
 2684              		.loc 1 1462 0 is_stmt 0 discriminator 2
 2685 000e 6369     		ldr	r3, [r4, #20]
 2686 0010 9E42     		cmp	r6, r3
 2687 0012 29D2     		bcs	.L254
1465:..\..\ff14\source/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 2688              		.loc 1 1465 0 is_stmt 1
 2689 0014 2AB1     		cbz	r2, .L252
1466:..\..\ff14\source/ff.c **** 		if (res != FR_OK) return res;
 2690              		.loc 1 1466 0
 2691 0016 4FF0FF32 		mov	r2, #-1
 2692              	.LVL433:
 2693 001a 2046     		mov	r0, r4
 2694              	.LVL434:
 2695 001c FFF7FEFF 		bl	put_fat
 2696              	.LVL435:
1467:..\..\ff14\source/ff.c **** 	}
 2697              		.loc 1 1467 0
 2698 0020 20BB     		cbnz	r0, .L255
 2699              	.LVL436:
 2700              	.L252:
1472:..\..\ff14\source/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 2701              		.loc 1 1472 0
 2702 0022 3146     		mov	r1, r6
 2703 0024 3846     		mov	r0, r7
 2704 0026 FFF7FEFF 		bl	get_fat
 2705              	.LVL437:
1473:..\..\ff14\source/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 2706              		.loc 1 1473 0
 2707 002a 0546     		mov	r5, r0
 2708 002c F8B1     		cbz	r0, .L256
1474:..\..\ff14\source/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 2709              		.loc 1 1474 0
 2710 002e 0128     		cmp	r0, #1
 2711 0030 1FD0     		beq	.L257
1475:..\..\ff14\source/ff.c **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2712              		.loc 1 1475 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 118


 2713 0032 B0F1FF3F 		cmp	r0, #-1
 2714 0036 1ED0     		beq	.L258
1477:..\..\ff14\source/ff.c **** 			if (res != FR_OK) return res;
 2715              		.loc 1 1477 0
 2716 0038 0022     		movs	r2, #0
 2717 003a 3146     		mov	r1, r6
 2718 003c 2046     		mov	r0, r4
 2719              	.LVL438:
 2720 003e FFF7FEFF 		bl	put_fat
 2721              	.LVL439:
1478:..\..\ff14\source/ff.c **** 		}
 2722              		.loc 1 1478 0
 2723 0042 D0B9     		cbnz	r0, .L259
1480:..\..\ff14\source/ff.c **** 			fs->free_clst++;
 2724              		.loc 1 1480 0
 2725 0044 2369     		ldr	r3, [r4, #16]
 2726 0046 6269     		ldr	r2, [r4, #20]
 2727 0048 911E     		subs	r1, r2, #2
 2728 004a 8B42     		cmp	r3, r1
 2729 004c 05D2     		bcs	.L251
1481:..\..\ff14\source/ff.c **** 			fs->fsi_flag |= 1;
 2730              		.loc 1 1481 0
 2731 004e 0133     		adds	r3, r3, #1
 2732 0050 2361     		str	r3, [r4, #16]
1482:..\..\ff14\source/ff.c **** 		}
 2733              		.loc 1 1482 0
 2734 0052 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2735 0054 43F00103 		orr	r3, r3, #1
 2736 0058 2371     		strb	r3, [r4, #4]
 2737              	.L251:
 2738              	.LVL440:
1502:..\..\ff14\source/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 2739              		.loc 1 1502 0
 2740 005a 2E46     		mov	r6, r5
1503:..\..\ff14\source/ff.c **** 
 2741              		.loc 1 1503 0
 2742 005c 9542     		cmp	r5, r2
 2743 005e E0D3     		bcc	.L252
1531:..\..\ff14\source/ff.c **** }
 2744              		.loc 1 1531 0
 2745 0060 0020     		movs	r0, #0
 2746              	.LVL441:
 2747 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2748              	.LVL442:
 2749              	.L253:
1462:..\..\ff14\source/ff.c **** 
 2750              		.loc 1 1462 0
 2751 0064 0220     		movs	r0, #2
 2752              	.LVL443:
 2753 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2754              	.LVL444:
 2755              	.L254:
 2756 0068 0220     		movs	r0, #2
 2757              	.LVL445:
 2758 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2759              	.LVL446:
 2760              	.L255:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 119


 2761 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2762              	.LVL447:
 2763              	.L256:
1531:..\..\ff14\source/ff.c **** }
 2764              		.loc 1 1531 0
 2765 006e 0020     		movs	r0, #0
 2766              	.LVL448:
 2767 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2768              	.LVL449:
 2769              	.L257:
1474:..\..\ff14\source/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 2770              		.loc 1 1474 0
 2771 0072 0220     		movs	r0, #2
 2772              	.LVL450:
 2773 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2774              	.LVL451:
 2775              	.L258:
1475:..\..\ff14\source/ff.c **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2776              		.loc 1 1475 0
 2777 0076 0120     		movs	r0, #1
 2778              	.LVL452:
 2779 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2780              	.LVL453:
 2781              	.L259:
1532:..\..\ff14\source/ff.c **** 
 2782              		.loc 1 1532 0
 2783 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2784              		.cfi_endproc
 2785              	.LFE16:
 2786              		.size	remove_chain, .-remove_chain
 2787              		.section	.text.dir_remove,"ax",%progbits
 2788              		.align	2
 2789              		.thumb
 2790              		.thumb_func
 2791              		.type	dir_remove, %function
 2792              	dir_remove:
 2793              	.LFB27:
2632:..\..\ff14\source/ff.c **** 	FRESULT res;
 2794              		.loc 1 2632 0
 2795              		.cfi_startproc
 2796              		@ args = 0, pretend = 0, frame = 0
 2797              		@ frame_needed = 0, uses_anonymous_args = 0
 2798              	.LVL454:
 2799 0000 38B5     		push	{r3, r4, r5, lr}
 2800              		.cfi_def_cfa_offset 16
 2801              		.cfi_offset 3, -16
 2802              		.cfi_offset 4, -12
 2803              		.cfi_offset 5, -8
 2804              		.cfi_offset 14, -4
 2805 0002 0446     		mov	r4, r0
2634:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 2806              		.loc 1 2634 0
 2807 0004 0568     		ldr	r5, [r0]
 2808              	.LVL455:
2656:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 2809              		.loc 1 2656 0
 2810 0006 8169     		ldr	r1, [r0, #24]
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 120


 2811 0008 2846     		mov	r0, r5
 2812              	.LVL456:
 2813 000a FFF7FEFF 		bl	move_window
 2814              	.LVL457:
2657:..\..\ff14\source/ff.c **** 		dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'.*/
 2815              		.loc 1 2657 0
 2816 000e 0346     		mov	r3, r0
 2817 0010 20B9     		cbnz	r0, .L262
2658:..\..\ff14\source/ff.c **** 		fs->wflag = 1;
 2818              		.loc 1 2658 0
 2819 0012 E269     		ldr	r2, [r4, #28]
 2820 0014 E521     		movs	r1, #229
 2821 0016 1170     		strb	r1, [r2]
2659:..\..\ff14\source/ff.c **** 	}
 2822              		.loc 1 2659 0
 2823 0018 0122     		movs	r2, #1
 2824 001a EA70     		strb	r2, [r5, #3]
 2825              	.L262:
2664:..\..\ff14\source/ff.c **** 
 2826              		.loc 1 2664 0
 2827 001c 1846     		mov	r0, r3
 2828              	.LVL458:
 2829 001e 38BD     		pop	{r3, r4, r5, pc}
 2830              		.cfi_endproc
 2831              	.LFE27:
 2832              		.size	dir_remove, .-dir_remove
 2833              		.section	.text.dir_clear,"ax",%progbits
 2834              		.align	2
 2835              		.thumb
 2836              		.thumb_func
 2837              		.type	dir_clear, %function
 2838              	dir_clear:
 2839              	.LFB18:
1678:..\..\ff14\source/ff.c **** 	LBA_t sect;
 2840              		.loc 1 1678 0
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 0
 2843              		@ frame_needed = 0, uses_anonymous_args = 0
 2844              	.LVL459:
 2845 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2846              		.cfi_def_cfa_offset 24
 2847              		.cfi_offset 3, -24
 2848              		.cfi_offset 4, -20
 2849              		.cfi_offset 5, -16
 2850              		.cfi_offset 6, -12
 2851              		.cfi_offset 7, -8
 2852              		.cfi_offset 14, -4
 2853 0002 0546     		mov	r5, r0
 2854 0004 0C46     		mov	r4, r1
1684:..\..\ff14\source/ff.c **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
 2855              		.loc 1 1684 0
 2856 0006 FFF7FEFF 		bl	sync_window
 2857              	.LVL460:
 2858 000a 00BB     		cbnz	r0, .L269
1685:..\..\ff14\source/ff.c **** 	fs->winsect = sect;				/* Set window to top of the cluster */
 2859              		.loc 1 1685 0
 2860 000c 2146     		mov	r1, r4
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 121


 2861 000e 2846     		mov	r0, r5
 2862 0010 FFF7FEFF 		bl	clst2sect
 2863              	.LVL461:
 2864 0014 0746     		mov	r7, r0
 2865              	.LVL462:
1686:..\..\ff14\source/ff.c **** 	mem_set(fs->win, 0, sizeof fs->win);	/* Clear window buffer */
 2866              		.loc 1 1686 0
 2867 0016 E862     		str	r0, [r5, #44]
1687:..\..\ff14\source/ff.c **** #if FF_USE_LFN == 3		/* Quick table clear by using multi-secter write */
 2868              		.loc 1 1687 0
 2869 0018 05F13006 		add	r6, r5, #48
 2870 001c 4FF40072 		mov	r2, #512
 2871 0020 0021     		movs	r1, #0
 2872 0022 3046     		mov	r0, r6
 2873              	.LVL463:
 2874 0024 FFF7FEFF 		bl	mem_set
 2875              	.LVL464:
1700:..\..\ff14\source/ff.c **** 	}
 2876              		.loc 1 1700 0
 2877 0028 0024     		movs	r4, #0
 2878              	.LVL465:
 2879 002a 00E0     		b	.L266
 2880              	.LVL466:
 2881              	.L268:
1700:..\..\ff14\source/ff.c **** 	}
 2882              		.loc 1 1700 0 is_stmt 0 discriminator 4
 2883 002c 0134     		adds	r4, r4, #1
 2884              	.LVL467:
 2885              	.L266:
1700:..\..\ff14\source/ff.c **** 	}
 2886              		.loc 1 1700 0 discriminator 1
 2887 002e 6B89     		ldrh	r3, [r5, #10]
 2888 0030 9C42     		cmp	r4, r3
 2889 0032 07D2     		bcs	.L267
1700:..\..\ff14\source/ff.c **** 	}
 2890              		.loc 1 1700 0 discriminator 3
 2891 0034 0123     		movs	r3, #1
 2892 0036 E219     		adds	r2, r4, r7
 2893 0038 3146     		mov	r1, r6
 2894 003a 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 2895 003c FFF7FEFF 		bl	disk_write
 2896              	.LVL468:
 2897 0040 0028     		cmp	r0, #0
 2898 0042 F3D0     		beq	.L268
 2899              	.L267:
1702:..\..\ff14\source/ff.c **** }
 2900              		.loc 1 1702 0 is_stmt 1
 2901 0044 6889     		ldrh	r0, [r5, #10]
 2902 0046 001B     		subs	r0, r0, r4
 2903 0048 18BF     		it	ne
 2904 004a 0120     		movne	r0, #1
 2905 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2906              	.LVL469:
 2907              	.L269:
1684:..\..\ff14\source/ff.c **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
 2908              		.loc 1 1684 0
 2909 004e 0120     		movs	r0, #1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 122


1703:..\..\ff14\source/ff.c **** #endif	/* !FF_FS_READONLY */
 2910              		.loc 1 1703 0
 2911 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2912              		.cfi_endproc
 2913              	.LFE18:
 2914              		.size	dir_clear, .-dir_clear
 2915 0052 00BF     		.section	.text.dir_next,"ax",%progbits
 2916              		.align	2
 2917              		.thumb
 2918              		.thumb_func
 2919              		.type	dir_next, %function
 2920              	dir_next:
 2921              	.LFB20:
1765:..\..\ff14\source/ff.c **** 	DWORD ofs, clst;
 2922              		.loc 1 1765 0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 0
 2925              		@ frame_needed = 0, uses_anonymous_args = 0
 2926              	.LVL470:
 2927 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2928              		.cfi_def_cfa_offset 32
 2929              		.cfi_offset 3, -32
 2930              		.cfi_offset 4, -28
 2931              		.cfi_offset 5, -24
 2932              		.cfi_offset 6, -20
 2933              		.cfi_offset 7, -16
 2934              		.cfi_offset 8, -12
 2935              		.cfi_offset 9, -8
 2936              		.cfi_offset 14, -4
1767:..\..\ff14\source/ff.c **** 
 2937              		.loc 1 1767 0
 2938 0004 0668     		ldr	r6, [r0]
 2939              	.LVL471:
1770:..\..\ff14\source/ff.c **** 	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) dp->sect = 0;
 2940              		.loc 1 1770 0
 2941 0006 0569     		ldr	r5, [r0, #16]
 2942 0008 2035     		adds	r5, r5, #32
 2943              	.LVL472:
1771:..\..\ff14\source/ff.c **** 	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
 2944              		.loc 1 1771 0
 2945 000a B5F5001F 		cmp	r5, #2097152
 2946 000e 01D3     		bcc	.L272
1771:..\..\ff14\source/ff.c **** 	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
 2947              		.loc 1 1771 0 is_stmt 0 discriminator 1
 2948 0010 0023     		movs	r3, #0
 2949 0012 8361     		str	r3, [r0, #24]
 2950              	.L272:
1772:..\..\ff14\source/ff.c **** 
 2951              		.loc 1 1772 0 is_stmt 1
 2952 0014 8369     		ldr	r3, [r0, #24]
 2953 0016 002B     		cmp	r3, #0
 2954 0018 48D0     		beq	.L278
 2955 001a 8846     		mov	r8, r1
 2956 001c 0446     		mov	r4, r0
1774:..\..\ff14\source/ff.c **** 		dp->sect++;				/* Next sector */
 2957              		.loc 1 1774 0
 2958 001e C5F30807 		ubfx	r7, r5, #0, #9
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 123


 2959 0022 002F     		cmp	r7, #0
 2960 0024 3BD1     		bne	.L274
1775:..\..\ff14\source/ff.c **** 
 2961              		.loc 1 1775 0
 2962 0026 0133     		adds	r3, r3, #1
 2963 0028 8361     		str	r3, [r0, #24]
1777:..\..\ff14\source/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 2964              		.loc 1 1777 0
 2965 002a 4169     		ldr	r1, [r0, #20]
 2966              	.LVL473:
 2967 002c 41B9     		cbnz	r1, .L275
1778:..\..\ff14\source/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 2968              		.loc 1 1778 0
 2969 002e 3389     		ldrh	r3, [r6, #8]
 2970 0030 B3EB551F 		cmp	r3, r5, lsr #5
 2971 0034 33D8     		bhi	.L274
1779:..\..\ff14\source/ff.c **** 			}
 2972              		.loc 1 1779 0
 2973 0036 0023     		movs	r3, #0
 2974 0038 8361     		str	r3, [r0, #24]
 2975 003a 0420     		movs	r0, #4
 2976              	.LVL474:
 2977 003c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2978              	.LVL475:
 2979              	.L275:
1783:..\..\ff14\source/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
 2980              		.loc 1 1783 0
 2981 0040 7389     		ldrh	r3, [r6, #10]
 2982 0042 013B     		subs	r3, r3, #1
 2983 0044 13EA5523 		ands	r3, r3, r5, lsr #9
 2984 0048 29D1     		bne	.L274
1784:..\..\ff14\source/ff.c **** 				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
 2985              		.loc 1 1784 0
 2986 004a FFF7FEFF 		bl	get_fat
 2987              	.LVL476:
 2988 004e 8146     		mov	r9, r0
 2989              	.LVL477:
1785:..\..\ff14\source/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2990              		.loc 1 1785 0
 2991 0050 0128     		cmp	r0, #1
 2992 0052 2ED9     		bls	.L279
1786:..\..\ff14\source/ff.c **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
 2993              		.loc 1 1786 0
 2994 0054 B0F1FF3F 		cmp	r0, #-1
 2995 0058 2ED0     		beq	.L280
1787:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
 2996              		.loc 1 1787 0
 2997 005a 7369     		ldr	r3, [r6, #20]
 2998 005c 9842     		cmp	r0, r3
 2999 005e 17D3     		bcc	.L276
1789:..\..\ff14\source/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3000              		.loc 1 1789 0
 3001 0060 B8F1000F 		cmp	r8, #0
 3002 0064 04D1     		bne	.L277
1790:..\..\ff14\source/ff.c **** 					}
 3003              		.loc 1 1790 0
 3004 0066 0023     		movs	r3, #0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 124


 3005 0068 A361     		str	r3, [r4, #24]
 3006 006a 0420     		movs	r0, #4
 3007              	.LVL478:
 3008 006c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3009              	.LVL479:
 3010              	.L277:
1792:..\..\ff14\source/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3011              		.loc 1 1792 0
 3012 0070 6169     		ldr	r1, [r4, #20]
 3013 0072 2046     		mov	r0, r4
 3014              	.LVL480:
 3015 0074 FFF7FEFF 		bl	create_chain
 3016              	.LVL481:
1793:..\..\ff14\source/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3017              		.loc 1 1793 0
 3018 0078 8146     		mov	r9, r0
 3019 007a 00B3     		cbz	r0, .L281
1794:..\..\ff14\source/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3020              		.loc 1 1794 0
 3021 007c 0128     		cmp	r0, #1
 3022 007e 21D0     		beq	.L282
1795:..\..\ff14\source/ff.c **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
 3023              		.loc 1 1795 0
 3024 0080 B0F1FF3F 		cmp	r0, #-1
 3025 0084 21D0     		beq	.L283
1796:..\..\ff14\source/ff.c **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
 3026              		.loc 1 1796 0
 3027 0086 0146     		mov	r1, r0
 3028 0088 3046     		mov	r0, r6
 3029              	.LVL482:
 3030 008a FFF7FEFF 		bl	dir_clear
 3031              	.LVL483:
 3032 008e F8B9     		cbnz	r0, .L284
 3033              	.L276:
1803:..\..\ff14\source/ff.c **** 				dp->sect = clst2sect(fs, clst);
 3034              		.loc 1 1803 0
 3035 0090 C4F81490 		str	r9, [r4, #20]
1804:..\..\ff14\source/ff.c **** 			}
 3036              		.loc 1 1804 0
 3037 0094 4946     		mov	r1, r9
 3038 0096 3046     		mov	r0, r6
 3039 0098 FFF7FEFF 		bl	clst2sect
 3040              	.LVL484:
 3041 009c A061     		str	r0, [r4, #24]
 3042              	.LVL485:
 3043              	.L274:
1808:..\..\ff14\source/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3044              		.loc 1 1808 0
 3045 009e 2561     		str	r5, [r4, #16]
1809:..\..\ff14\source/ff.c **** 
 3046              		.loc 1 1809 0
 3047 00a0 3036     		adds	r6, r6, #48
 3048              	.LVL486:
 3049 00a2 3E44     		add	r6, r6, r7
 3050              	.LVL487:
 3051 00a4 E661     		str	r6, [r4, #28]
1811:..\..\ff14\source/ff.c **** }
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 125


 3052              		.loc 1 1811 0
 3053 00a6 0020     		movs	r0, #0
 3054 00a8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3055              	.LVL488:
 3056              	.L278:
1772:..\..\ff14\source/ff.c **** 
 3057              		.loc 1 1772 0
 3058 00ac 0420     		movs	r0, #4
 3059              	.LVL489:
 3060 00ae BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3061              	.LVL490:
 3062              	.L279:
1785:..\..\ff14\source/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3063              		.loc 1 1785 0
 3064 00b2 0220     		movs	r0, #2
 3065              	.LVL491:
 3066 00b4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3067              	.LVL492:
 3068              	.L280:
1786:..\..\ff14\source/ff.c **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
 3069              		.loc 1 1786 0
 3070 00b8 0120     		movs	r0, #1
 3071              	.LVL493:
 3072 00ba BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3073              	.LVL494:
 3074              	.L281:
1793:..\..\ff14\source/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3075              		.loc 1 1793 0
 3076 00be 0720     		movs	r0, #7
 3077              	.LVL495:
 3078 00c0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3079              	.LVL496:
 3080              	.L282:
1794:..\..\ff14\source/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3081              		.loc 1 1794 0
 3082 00c4 0220     		movs	r0, #2
 3083              	.LVL497:
 3084 00c6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3085              	.LVL498:
 3086              	.L283:
1795:..\..\ff14\source/ff.c **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
 3087              		.loc 1 1795 0
 3088 00ca 0120     		movs	r0, #1
 3089              	.LVL499:
 3090 00cc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3091              	.LVL500:
 3092              	.L284:
1796:..\..\ff14\source/ff.c **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
 3093              		.loc 1 1796 0
 3094 00d0 0120     		movs	r0, #1
1812:..\..\ff14\source/ff.c **** 
 3095              		.loc 1 1812 0
 3096 00d2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3097              		.cfi_endproc
 3098              	.LFE20:
 3099              		.size	dir_next, .-dir_next
 3100 00d6 00BF     		.section	.text.dir_find,"ax",%progbits
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 126


 3101              		.align	2
 3102              		.thumb
 3103              		.thumb_func
 3104              		.type	dir_find, %function
 3105              	dir_find:
 3106              	.LFB25:
2445:..\..\ff14\source/ff.c **** 	FRESULT res;
 3107              		.loc 1 2445 0
 3108              		.cfi_startproc
 3109              		@ args = 0, pretend = 0, frame = 0
 3110              		@ frame_needed = 0, uses_anonymous_args = 0
 3111              	.LVL501:
 3112 0000 70B5     		push	{r4, r5, r6, lr}
 3113              		.cfi_def_cfa_offset 16
 3114              		.cfi_offset 4, -16
 3115              		.cfi_offset 5, -12
 3116              		.cfi_offset 6, -8
 3117              		.cfi_offset 14, -4
 3118 0002 0446     		mov	r4, r0
2447:..\..\ff14\source/ff.c **** 	BYTE c;
 3119              		.loc 1 2447 0
 3120 0004 0668     		ldr	r6, [r0]
 3121              	.LVL502:
2453:..\..\ff14\source/ff.c **** 	if (res != FR_OK) return res;
 3122              		.loc 1 2453 0
 3123 0006 0021     		movs	r1, #0
 3124 0008 FFF7FEFF 		bl	dir_sdi
 3125              	.LVL503:
2454:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 3126              		.loc 1 2454 0
 3127 000c E8B9     		cbnz	r0, .L290
 3128              	.L289:
2480:..\..\ff14\source/ff.c **** 		if (res != FR_OK) break;
 3129              		.loc 1 2480 0
 3130 000e A169     		ldr	r1, [r4, #24]
 3131 0010 3046     		mov	r0, r6
 3132              	.LVL504:
 3133 0012 FFF7FEFF 		bl	move_window
 3134              	.LVL505:
2481:..\..\ff14\source/ff.c **** 		c = dp->dir[DIR_Name];
 3135              		.loc 1 2481 0
 3136 0016 0546     		mov	r5, r0
 3137 0018 C0B9     		cbnz	r0, .L291
2482:..\..\ff14\source/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3138              		.loc 1 2482 0
 3139 001a E069     		ldr	r0, [r4, #28]
 3140              	.LVL506:
 3141 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3142              	.LVL507:
2483:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3143              		.loc 1 2483 0
 3144 001e B3B1     		cbz	r3, .L292
2506:..\..\ff14\source/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3145              		.loc 1 2506 0
 3146 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3147              	.LVL508:
 3148 0022 03F03F03 		and	r3, r3, #63
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 127


 3149 0026 A371     		strb	r3, [r4, #6]
 3150              	.LVL509:
2507:..\..\ff14\source/ff.c **** #endif
 3151              		.loc 1 2507 0
 3152 0028 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3153 002a 13F0080F 		tst	r3, #8
 3154 002e 05D1     		bne	.L288
2507:..\..\ff14\source/ff.c **** #endif
 3155              		.loc 1 2507 0 is_stmt 0 discriminator 1
 3156 0030 0B22     		movs	r2, #11
 3157 0032 04F12001 		add	r1, r4, #32
 3158 0036 FFF7FEFF 		bl	mem_cmp
 3159              	.LVL510:
 3160 003a 50B1     		cbz	r0, .L293
 3161              	.L288:
2509:..\..\ff14\source/ff.c **** 	} while (res == FR_OK);
 3162              		.loc 1 2509 0 is_stmt 1
 3163 003c 0021     		movs	r1, #0
 3164 003e 2046     		mov	r0, r4
 3165 0040 FFF7FEFF 		bl	dir_next
 3166              	.LVL511:
2510:..\..\ff14\source/ff.c **** 
 3167              		.loc 1 2510 0
 3168 0044 0028     		cmp	r0, #0
 3169 0046 E2D0     		beq	.L289
 3170 0048 70BD     		pop	{r4, r5, r6, pc}
 3171              	.LVL512:
 3172              	.L290:
 3173 004a 70BD     		pop	{r4, r5, r6, pc}
 3174              	.LVL513:
 3175              	.L291:
 3176 004c 70BD     		pop	{r4, r5, r6, pc}
 3177              	.LVL514:
 3178              	.L292:
2483:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3179              		.loc 1 2483 0
 3180 004e 0420     		movs	r0, #4
 3181 0050 70BD     		pop	{r4, r5, r6, pc}
 3182              	.LVL515:
 3183              	.L293:
2480:..\..\ff14\source/ff.c **** 		if (res != FR_OK) break;
 3184              		.loc 1 2480 0
 3185 0052 2846     		mov	r0, r5
2513:..\..\ff14\source/ff.c **** 
 3186              		.loc 1 2513 0
 3187 0054 70BD     		pop	{r4, r5, r6, pc}
 3188              		.cfi_endproc
 3189              	.LFE25:
 3190              		.size	dir_find, .-dir_find
 3191 0056 00BF     		.section	.text.follow_path,"ax",%progbits
 3192              		.align	2
 3193              		.thumb
 3194              		.thumb_func
 3195              		.type	follow_path, %function
 3196              	follow_path:
 3197              	.LFB30:
3064:..\..\ff14\source/ff.c **** 	FRESULT res;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 128


 3198              		.loc 1 3064 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 8
 3201              		@ frame_needed = 0, uses_anonymous_args = 0
 3202              	.LVL516:
 3203 0000 30B5     		push	{r4, r5, lr}
 3204              		.cfi_def_cfa_offset 12
 3205              		.cfi_offset 4, -12
 3206              		.cfi_offset 5, -8
 3207              		.cfi_offset 14, -4
 3208 0002 83B0     		sub	sp, sp, #12
 3209              		.cfi_def_cfa_offset 24
 3210 0004 0446     		mov	r4, r0
 3211 0006 0191     		str	r1, [sp, #4]
3067:..\..\ff14\source/ff.c **** 
 3212              		.loc 1 3067 0
 3213 0008 0568     		ldr	r5, [r0]
 3214              	.LVL517:
3076:..\..\ff14\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3215              		.loc 1 3076 0
 3216 000a 01E0     		b	.L296
 3217              	.L297:
3076:..\..\ff14\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3218              		.loc 1 3076 0 is_stmt 0 discriminator 4
 3219 000c 0133     		adds	r3, r3, #1
 3220 000e 0193     		str	r3, [sp, #4]
 3221              	.L296:
3076:..\..\ff14\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3222              		.loc 1 3076 0 discriminator 1
 3223 0010 019B     		ldr	r3, [sp, #4]
 3224 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3225 0014 2F2A     		cmp	r2, #47
 3226 0016 F9D0     		beq	.L297
3076:..\..\ff14\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3227              		.loc 1 3076 0 discriminator 3
 3228 0018 5C2A     		cmp	r2, #92
 3229 001a F7D0     		beq	.L297
3077:..\..\ff14\source/ff.c **** 	}
 3230              		.loc 1 3077 0 is_stmt 1
 3231 001c 0022     		movs	r2, #0
 3232 001e A260     		str	r2, [r4, #8]
3096:..\..\ff14\source/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3233              		.loc 1 3096 0
 3234 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3235 0022 1F2B     		cmp	r3, #31
 3236 0024 08D8     		bhi	.L298
3097:..\..\ff14\source/ff.c **** 		res = dir_sdi(dp, 0);
 3237              		.loc 1 3097 0
 3238 0026 8023     		movs	r3, #128
 3239 0028 84F82B30 		strb	r3, [r4, #43]
3098:..\..\ff14\source/ff.c **** 
 3240              		.loc 1 3098 0
 3241 002c 1146     		mov	r1, r2
 3242              	.LVL518:
 3243 002e 2046     		mov	r0, r4
 3244              	.LVL519:
 3245 0030 FFF7FEFF 		bl	dir_sdi
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 129


 3246              	.LVL520:
 3247 0034 0346     		mov	r3, r0
 3248              	.LVL521:
 3249 0036 27E0     		b	.L299
 3250              	.LVL522:
 3251              	.L298:
3102:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
 3252              		.loc 1 3102 0
 3253 0038 01A9     		add	r1, sp, #4
 3254 003a 2046     		mov	r0, r4
 3255 003c FFF7FEFF 		bl	create_name
 3256              	.LVL523:
3103:..\..\ff14\source/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3257              		.loc 1 3103 0
 3258 0040 0346     		mov	r3, r0
 3259 0042 08BB     		cbnz	r0, .L299
3104:..\..\ff14\source/ff.c **** 			ns = dp->fn[NSFLAG];
 3260              		.loc 1 3104 0
 3261 0044 2046     		mov	r0, r4
 3262              	.LVL524:
 3263 0046 FFF7FEFF 		bl	dir_find
 3264              	.LVL525:
3105:..\..\ff14\source/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3265              		.loc 1 3105 0
 3266 004a 94F82B20 		ldrb	r2, [r4, #43]	@ zero_extendqisi2
 3267              	.LVL526:
3106:..\..\ff14\source/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3268              		.loc 1 3106 0
 3269 004e 0346     		mov	r3, r0
 3270 0050 28B1     		cbz	r0, .L300
3107:..\..\ff14\source/ff.c **** 					if (FF_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3271              		.loc 1 3107 0
 3272 0052 0428     		cmp	r0, #4
 3273 0054 18D1     		bne	.L299
3113:..\..\ff14\source/ff.c **** 					}
 3274              		.loc 1 3113 0
 3275 0056 12F0040F 		tst	r2, #4
 3276 005a 12D0     		beq	.L301
 3277 005c 14E0     		b	.L299
 3278              	.L300:
3118:..\..\ff14\source/ff.c **** 			/* Get into the sub-directory */
 3279              		.loc 1 3118 0
 3280 005e 12F0040F 		tst	r2, #4
 3281 0062 11D1     		bne	.L299
3120:..\..\ff14\source/ff.c **** 				res = FR_NO_PATH; break;
 3282              		.loc 1 3120 0
 3283 0064 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3284 0066 13F0100F 		tst	r3, #16
 3285 006a 0CD0     		beq	.L302
3132:..\..\ff14\source/ff.c **** 			}
 3286              		.loc 1 3132 0
 3287 006c 05F13001 		add	r1, r5, #48
 3288 0070 2369     		ldr	r3, [r4, #16]
 3289 0072 C3F30803 		ubfx	r3, r3, #0, #9
 3290 0076 1944     		add	r1, r1, r3
 3291 0078 2846     		mov	r0, r5
 3292              	.LVL527:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 130


 3293 007a FFF7FEFF 		bl	ld_clust
 3294              	.LVL528:
 3295 007e A060     		str	r0, [r4, #8]
3134:..\..\ff14\source/ff.c **** 	}
 3296              		.loc 1 3134 0
 3297 0080 DAE7     		b	.L298
 3298              	.LVL529:
 3299              	.L301:
3113:..\..\ff14\source/ff.c **** 					}
 3300              		.loc 1 3113 0
 3301 0082 0523     		movs	r3, #5
 3302 0084 00E0     		b	.L299
 3303              	.L302:
3121:..\..\ff14\source/ff.c **** 			}
 3304              		.loc 1 3121 0
 3305 0086 0523     		movs	r3, #5
 3306              	.LVL530:
 3307              	.L299:
3138:..\..\ff14\source/ff.c **** 
 3308              		.loc 1 3138 0
 3309 0088 1846     		mov	r0, r3
 3310 008a 03B0     		add	sp, sp, #12
 3311              		.cfi_def_cfa_offset 12
 3312              		@ sp needed
 3313 008c 30BD     		pop	{r4, r5, pc}
 3314              		.cfi_endproc
 3315              	.LFE30:
 3316              		.size	follow_path, .-follow_path
 3317 008e 00BF     		.section	.text.dir_alloc,"ax",%progbits
 3318              		.align	2
 3319              		.thumb
 3320              		.thumb_func
 3321              		.type	dir_alloc, %function
 3322              	dir_alloc:
 3323              	.LFB21:
1826:..\..\ff14\source/ff.c **** 	FRESULT res;
 3324              		.loc 1 1826 0
 3325              		.cfi_startproc
 3326              		@ args = 0, pretend = 0, frame = 0
 3327              		@ frame_needed = 0, uses_anonymous_args = 0
 3328              	.LVL531:
 3329 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3330              		.cfi_def_cfa_offset 24
 3331              		.cfi_offset 3, -24
 3332              		.cfi_offset 4, -20
 3333              		.cfi_offset 5, -16
 3334              		.cfi_offset 6, -12
 3335              		.cfi_offset 7, -8
 3336              		.cfi_offset 14, -4
 3337 0002 0446     		mov	r4, r0
 3338 0004 0F46     		mov	r7, r1
1829:..\..\ff14\source/ff.c **** 
 3339              		.loc 1 1829 0
 3340 0006 0668     		ldr	r6, [r0]
 3341              	.LVL532:
1832:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 3342              		.loc 1 1832 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 131


 3343 0008 0021     		movs	r1, #0
 3344              	.LVL533:
 3345 000a FFF7FEFF 		bl	dir_sdi
 3346              	.LVL534:
1833:..\..\ff14\source/ff.c **** 		n = 0;
 3347              		.loc 1 1833 0
 3348 000e 0246     		mov	r2, r0
 3349 0010 B8B9     		cbnz	r0, .L305
 3350 0012 0025     		movs	r5, #0
 3351              	.L308:
 3352              	.LVL535:
1836:..\..\ff14\source/ff.c **** 			if (res != FR_OK) break;
 3353              		.loc 1 1836 0
 3354 0014 A169     		ldr	r1, [r4, #24]
 3355 0016 3046     		mov	r0, r6
 3356              	.LVL536:
 3357 0018 FFF7FEFF 		bl	move_window
 3358              	.LVL537:
1837:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
 3359              		.loc 1 1837 0
 3360 001c 0246     		mov	r2, r0
 3361 001e 80B9     		cbnz	r0, .L305
1841:..\..\ff14\source/ff.c **** #endif
 3362              		.loc 1 1841 0
 3363 0020 E369     		ldr	r3, [r4, #28]
 3364 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3365 0024 E52B     		cmp	r3, #229
 3366 0026 00D0     		beq	.L306
1841:..\..\ff14\source/ff.c **** #endif
 3367              		.loc 1 1841 0 is_stmt 0 discriminator 1
 3368 0028 1BB9     		cbnz	r3, .L310
 3369              	.L306:
1843:..\..\ff14\source/ff.c **** 			} else {
 3370              		.loc 1 1843 0 is_stmt 1
 3371 002a 0135     		adds	r5, r5, #1
 3372              	.LVL538:
 3373 002c BD42     		cmp	r5, r7
 3374 002e 01D1     		bne	.L307
 3375 0030 07E0     		b	.L305
 3376              	.L310:
1845:..\..\ff14\source/ff.c **** 			}
 3377              		.loc 1 1845 0
 3378 0032 0025     		movs	r5, #0
 3379              	.LVL539:
 3380              	.L307:
1847:..\..\ff14\source/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3381              		.loc 1 1847 0
 3382 0034 0121     		movs	r1, #1
 3383 0036 2046     		mov	r0, r4
 3384              	.LVL540:
 3385 0038 FFF7FEFF 		bl	dir_next
 3386              	.LVL541:
1848:..\..\ff14\source/ff.c **** 	}
 3387              		.loc 1 1848 0
 3388 003c 0246     		mov	r2, r0
 3389 003e 0028     		cmp	r0, #0
 3390 0040 E8D0     		beq	.L308
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 132


 3391              	.LVL542:
 3392              	.L305:
1851:..\..\ff14\source/ff.c **** 	return res;
 3393              		.loc 1 1851 0
 3394 0042 042A     		cmp	r2, #4
 3395 0044 00D1     		bne	.L309
 3396 0046 0722     		movs	r2, #7
 3397              	.LVL543:
 3398              	.L309:
1853:..\..\ff14\source/ff.c **** 
 3399              		.loc 1 1853 0
 3400 0048 1046     		mov	r0, r2
 3401 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3402              		.cfi_endproc
 3403              	.LFE21:
 3404              		.size	dir_alloc, .-dir_alloc
 3405              		.section	.text.dir_register,"ax",%progbits
 3406              		.align	2
 3407              		.thumb
 3408              		.thumb_func
 3409              		.type	dir_register, %function
 3410              	dir_register:
 3411              	.LFB26:
2526:..\..\ff14\source/ff.c **** 	FRESULT res;
 3412              		.loc 1 2526 0
 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 0
 3415              		@ frame_needed = 0, uses_anonymous_args = 0
 3416              	.LVL544:
 3417 0000 70B5     		push	{r4, r5, r6, lr}
 3418              		.cfi_def_cfa_offset 16
 3419              		.cfi_offset 4, -16
 3420              		.cfi_offset 5, -12
 3421              		.cfi_offset 6, -8
 3422              		.cfi_offset 14, -4
 3423 0002 0446     		mov	r4, r0
2528:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3424              		.loc 1 2528 0
 3425 0004 0668     		ldr	r6, [r0]
 3426              	.LVL545:
2600:..\..\ff14\source/ff.c **** 
 3427              		.loc 1 2600 0
 3428 0006 0121     		movs	r1, #1
 3429 0008 FFF7FEFF 		bl	dir_alloc
 3430              	.LVL546:
2605:..\..\ff14\source/ff.c **** 		res = move_window(fs, dp->sect);
 3431              		.loc 1 2605 0
 3432 000c 0546     		mov	r5, r0
 3433 000e 90B9     		cbnz	r0, .L314
2606:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
 3434              		.loc 1 2606 0
 3435 0010 A169     		ldr	r1, [r4, #24]
 3436 0012 3046     		mov	r0, r6
 3437              	.LVL547:
 3438 0014 FFF7FEFF 		bl	move_window
 3439              	.LVL548:
2607:..\..\ff14\source/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 133


 3440              		.loc 1 2607 0
 3441 0018 0546     		mov	r5, r0
 3442 001a 60B9     		cbnz	r0, .L314
2608:..\..\ff14\source/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3443              		.loc 1 2608 0
 3444 001c 2022     		movs	r2, #32
 3445 001e 0021     		movs	r1, #0
 3446 0020 E069     		ldr	r0, [r4, #28]
 3447              	.LVL549:
 3448 0022 FFF7FEFF 		bl	mem_set
 3449              	.LVL550:
2609:..\..\ff14\source/ff.c **** #if FF_USE_LFN
 3450              		.loc 1 2609 0
 3451 0026 0B22     		movs	r2, #11
 3452 0028 04F12001 		add	r1, r4, #32
 3453 002c E069     		ldr	r0, [r4, #28]
 3454 002e FFF7FEFF 		bl	mem_cpy
 3455              	.LVL551:
2613:..\..\ff14\source/ff.c **** 		}
 3456              		.loc 1 2613 0
 3457 0032 0123     		movs	r3, #1
 3458 0034 F370     		strb	r3, [r6, #3]
 3459              	.L314:
 3460              	.LVL552:
2618:..\..\ff14\source/ff.c **** 
 3461              		.loc 1 2618 0
 3462 0036 2846     		mov	r0, r5
 3463 0038 70BD     		pop	{r4, r5, r6, pc}
 3464              		.cfi_endproc
 3465              	.LFE26:
 3466              		.size	dir_register, .-dir_register
 3467 003a 00BF     		.section	.text.dir_read,"ax",%progbits
 3468              		.align	2
 3469              		.thumb
 3470              		.thumb_func
 3471              		.type	dir_read, %function
 3472              	dir_read:
 3473              	.LFB24:
2368:..\..\ff14\source/ff.c **** 	FRESULT res = FR_NO_FILE;
 3474              		.loc 1 2368 0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 3478              	.LVL553:
 3479 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3480              		.cfi_def_cfa_offset 24
 3481              		.cfi_offset 3, -24
 3482              		.cfi_offset 4, -20
 3483              		.cfi_offset 5, -16
 3484              		.cfi_offset 6, -12
 3485              		.cfi_offset 7, -8
 3486              		.cfi_offset 14, -4
 3487 0002 0446     		mov	r4, r0
 3488 0004 0E46     		mov	r6, r1
 3489              	.LVL554:
2370:..\..\ff14\source/ff.c **** 	BYTE attr, b;
 3490              		.loc 1 2370 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 134


 3491 0006 0568     		ldr	r5, [r0]
 3492              	.LVL555:
2369:..\..\ff14\source/ff.c **** 	FATFS *fs = dp->obj.fs;
 3493              		.loc 1 2369 0
 3494 0008 0427     		movs	r7, #4
2376:..\..\ff14\source/ff.c **** 		res = move_window(fs, dp->sect);
 3495              		.loc 1 2376 0
 3496 000a 1FE0     		b	.L317
 3497              	.LVL556:
 3498              	.L320:
2377:..\..\ff14\source/ff.c **** 		if (res != FR_OK) break;
 3499              		.loc 1 2377 0
 3500 000c 2846     		mov	r0, r5
 3501 000e FFF7FEFF 		bl	move_window
 3502              	.LVL557:
2378:..\..\ff14\source/ff.c **** 		b = dp->dir[DIR_Name];	/* Test for the entry type */
 3503              		.loc 1 2378 0
 3504 0012 0746     		mov	r7, r0
 3505 0014 F8B9     		cbnz	r0, .L318
2379:..\..\ff14\source/ff.c **** 		if (b == 0) {
 3506              		.loc 1 2379 0
 3507 0016 E369     		ldr	r3, [r4, #28]
 3508 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3509              	.LVL558:
2380:..\..\ff14\source/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3510              		.loc 1 2380 0
 3511 001a DAB1     		cbz	r2, .L322
2400:..\..\ff14\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3512              		.loc 1 2400 0
 3513 001c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3514 001e 03F03F03 		and	r3, r3, #63
 3515              	.LVL559:
 3516 0022 A371     		strb	r3, [r4, #6]
2421:..\..\ff14\source/ff.c **** 				break;
 3517              		.loc 1 2421 0
 3518 0024 E52A     		cmp	r2, #229
 3519 0026 0BD0     		beq	.L319
2421:..\..\ff14\source/ff.c **** 				break;
 3520              		.loc 1 2421 0 is_stmt 0 discriminator 1
 3521 0028 2E2A     		cmp	r2, #46
 3522 002a 09D0     		beq	.L319
2421:..\..\ff14\source/ff.c **** 				break;
 3523              		.loc 1 2421 0 discriminator 2
 3524 002c 0F2B     		cmp	r3, #15
 3525 002e 07D0     		beq	.L319
2421:..\..\ff14\source/ff.c **** 				break;
 3526              		.loc 1 2421 0 discriminator 3
 3527 0030 23F02003 		bic	r3, r3, #32
 3528              	.LVL560:
 3529 0034 082B     		cmp	r3, #8
 3530 0036 14BF     		ite	ne
 3531 0038 0023     		movne	r3, #0
 3532 003a 0123     		moveq	r3, #1
 3533 003c B342     		cmp	r3, r6
 3534 003e 0AD0     		beq	.L318
 3535              	.L319:
2426:..\..\ff14\source/ff.c **** 		if (res != FR_OK) break;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 135


 3536              		.loc 1 2426 0 is_stmt 1
 3537 0040 0021     		movs	r1, #0
 3538 0042 2046     		mov	r0, r4
 3539              	.LVL561:
 3540 0044 FFF7FEFF 		bl	dir_next
 3541              	.LVL562:
2427:..\..\ff14\source/ff.c **** 	}
 3542              		.loc 1 2427 0
 3543 0048 0746     		mov	r7, r0
 3544 004a 20B9     		cbnz	r0, .L318
 3545              	.LVL563:
 3546              	.L317:
2376:..\..\ff14\source/ff.c **** 		res = move_window(fs, dp->sect);
 3547              		.loc 1 2376 0
 3548 004c A169     		ldr	r1, [r4, #24]
 3549 004e 0029     		cmp	r1, #0
 3550 0050 DCD1     		bne	.L320
 3551 0052 00E0     		b	.L318
 3552              	.LVL564:
 3553              	.L322:
2381:..\..\ff14\source/ff.c **** 		}
 3554              		.loc 1 2381 0
 3555 0054 0427     		movs	r7, #4
 3556              	.LVL565:
 3557              	.L318:
2430:..\..\ff14\source/ff.c **** 	return res;
 3558              		.loc 1 2430 0
 3559 0056 0FB1     		cbz	r7, .L321
2430:..\..\ff14\source/ff.c **** 	return res;
 3560              		.loc 1 2430 0 is_stmt 0 discriminator 1
 3561 0058 0023     		movs	r3, #0
 3562 005a A361     		str	r3, [r4, #24]
 3563              	.L321:
2432:..\..\ff14\source/ff.c **** 
 3564              		.loc 1 2432 0 is_stmt 1
 3565 005c 3846     		mov	r0, r7
 3566 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3567              		.cfi_endproc
 3568              	.LFE24:
 3569              		.size	dir_read, .-dir_read
 3570              		.section	.text.sync_fs,"ax",%progbits
 3571              		.align	2
 3572              		.thumb
 3573              		.thumb_func
 3574              		.type	sync_fs, %function
 3575              	sync_fs:
 3576              	.LFB12:
1128:..\..\ff14\source/ff.c **** 	FRESULT res;
 3577              		.loc 1 1128 0
 3578              		.cfi_startproc
 3579              		@ args = 0, pretend = 0, frame = 0
 3580              		@ frame_needed = 0, uses_anonymous_args = 0
 3581              	.LVL566:
 3582 0000 70B5     		push	{r4, r5, r6, lr}
 3583              		.cfi_def_cfa_offset 16
 3584              		.cfi_offset 4, -16
 3585              		.cfi_offset 5, -12
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 136


 3586              		.cfi_offset 6, -8
 3587              		.cfi_offset 14, -4
 3588 0002 0446     		mov	r4, r0
1132:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 3589              		.loc 1 1132 0
 3590 0004 FFF7FEFF 		bl	sync_window
 3591              	.LVL567:
1133:..\..\ff14\source/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
 3592              		.loc 1 1133 0
 3593 0008 0546     		mov	r5, r0
 3594 000a 0028     		cmp	r0, #0
 3595 000c 37D1     		bne	.L325
1134:..\..\ff14\source/ff.c **** 			/* Create FSInfo structure */
 3596              		.loc 1 1134 0
 3597 000e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3598 0010 032B     		cmp	r3, #3
 3599 0012 2DD1     		bne	.L326
1134:..\..\ff14\source/ff.c **** 			/* Create FSInfo structure */
 3600              		.loc 1 1134 0 is_stmt 0 discriminator 1
 3601 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3602 0016 012B     		cmp	r3, #1
 3603 0018 2AD1     		bne	.L326
1136:..\..\ff14\source/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 3604              		.loc 1 1136 0 is_stmt 1
 3605 001a 04F13006 		add	r6, r4, #48
 3606 001e 4FF40072 		mov	r2, #512
 3607 0022 0021     		movs	r1, #0
 3608 0024 3046     		mov	r0, r6
 3609              	.LVL568:
 3610 0026 FFF7FEFF 		bl	mem_set
 3611              	.LVL569:
1137:..\..\ff14\source/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 3612              		.loc 1 1137 0
 3613 002a 4AF65521 		movw	r1, #43605
 3614 002e 04F22E20 		addw	r0, r4, #558
 3615 0032 FFF7FEFF 		bl	st_word
 3616              	.LVL570:
1138:..\..\ff14\source/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 3617              		.loc 1 1138 0
 3618 0036 1349     		ldr	r1, .L329
 3619 0038 3046     		mov	r0, r6
 3620 003a FFF7FEFF 		bl	st_dword
 3621              	.LVL571:
1139:..\..\ff14\source/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 3622              		.loc 1 1139 0
 3623 003e 1249     		ldr	r1, .L329+4
 3624 0040 04F50570 		add	r0, r4, #532
 3625 0044 FFF7FEFF 		bl	st_dword
 3626              	.LVL572:
1140:..\..\ff14\source/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 3627              		.loc 1 1140 0
 3628 0048 2169     		ldr	r1, [r4, #16]
 3629 004a 04F50670 		add	r0, r4, #536
 3630 004e FFF7FEFF 		bl	st_dword
 3631              	.LVL573:
1141:..\..\ff14\source/ff.c **** 			/* Write it into the FSInfo sector */
 3632              		.loc 1 1141 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 137


 3633 0052 E168     		ldr	r1, [r4, #12]
 3634 0054 04F50770 		add	r0, r4, #540
 3635 0058 FFF7FEFF 		bl	st_dword
 3636              	.LVL574:
1143:..\..\ff14\source/ff.c **** 			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 3637              		.loc 1 1143 0
 3638 005c E269     		ldr	r2, [r4, #28]
 3639 005e 0132     		adds	r2, r2, #1
 3640 0060 E262     		str	r2, [r4, #44]
1144:..\..\ff14\source/ff.c **** 			fs->fsi_flag = 0;
 3641              		.loc 1 1144 0
 3642 0062 0123     		movs	r3, #1
 3643 0064 3146     		mov	r1, r6
 3644 0066 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3645 0068 FFF7FEFF 		bl	disk_write
 3646              	.LVL575:
1145:..\..\ff14\source/ff.c **** 		}
 3647              		.loc 1 1145 0
 3648 006c 0023     		movs	r3, #0
 3649 006e 2371     		strb	r3, [r4, #4]
 3650              	.L326:
1148:..\..\ff14\source/ff.c **** 	}
 3651              		.loc 1 1148 0
 3652 0070 0022     		movs	r2, #0
 3653 0072 1146     		mov	r1, r2
 3654 0074 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3655 0076 FFF7FEFF 		bl	disk_ioctl
 3656              	.LVL576:
 3657 007a 00B1     		cbz	r0, .L325
 3658 007c 0125     		movs	r5, #1
 3659              	.L325:
 3660              	.LVL577:
1152:..\..\ff14\source/ff.c **** 
 3661              		.loc 1 1152 0
 3662 007e 2846     		mov	r0, r5
 3663 0080 70BD     		pop	{r4, r5, r6, pc}
 3664              	.LVL578:
 3665              	.L330:
 3666 0082 00BF     		.align	2
 3667              	.L329:
 3668 0084 52526141 		.word	1096897106
 3669 0088 72724161 		.word	1631679090
 3670              		.cfi_endproc
 3671              	.LFE12:
 3672              		.size	sync_fs, .-sync_fs
 3673              		.section	.text.f_mount,"ax",%progbits
 3674              		.align	2
 3675              		.global	f_mount
 3676              		.thumb
 3677              		.thumb_func
 3678              		.type	f_mount, %function
 3679              	f_mount:
 3680              	.LFB36:
3627:..\..\ff14\source/ff.c **** 
3628:..\..\ff14\source/ff.c **** 
3629:..\..\ff14\source/ff.c **** 
3630:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 138


3631:..\..\ff14\source/ff.c **** /*---------------------------------------------------------------------------
3632:..\..\ff14\source/ff.c **** 
3633:..\..\ff14\source/ff.c ****    Public Functions (FatFs API)
3634:..\..\ff14\source/ff.c **** 
3635:..\..\ff14\source/ff.c **** ----------------------------------------------------------------------------*/
3636:..\..\ff14\source/ff.c **** 
3637:..\..\ff14\source/ff.c **** 
3638:..\..\ff14\source/ff.c **** 
3639:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3640:..\..\ff14\source/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3641:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3642:..\..\ff14\source/ff.c **** 
3643:..\..\ff14\source/ff.c **** FRESULT f_mount (
3644:..\..\ff14\source/ff.c **** 	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
3645:..\..\ff14\source/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3646:..\..\ff14\source/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3647:..\..\ff14\source/ff.c **** )
3648:..\..\ff14\source/ff.c **** {
 3681              		.loc 1 3648 0
 3682              		.cfi_startproc
 3683              		@ args = 0, pretend = 0, frame = 16
 3684              		@ frame_needed = 0, uses_anonymous_args = 0
 3685              	.LVL579:
 3686 0000 10B5     		push	{r4, lr}
 3687              		.cfi_def_cfa_offset 8
 3688              		.cfi_offset 4, -8
 3689              		.cfi_offset 14, -4
 3690 0002 84B0     		sub	sp, sp, #16
 3691              		.cfi_def_cfa_offset 24
 3692 0004 0190     		str	r0, [sp, #4]
 3693 0006 0091     		str	r1, [sp]
 3694 0008 1446     		mov	r4, r2
3649:..\..\ff14\source/ff.c **** 	FATFS *cfs;
3650:..\..\ff14\source/ff.c **** 	int vol;
3651:..\..\ff14\source/ff.c **** 	FRESULT res;
3652:..\..\ff14\source/ff.c **** 	const TCHAR *rp = path;
 3695              		.loc 1 3652 0
 3696 000a 04A8     		add	r0, sp, #16
 3697              	.LVL580:
 3698 000c 40F8041D 		str	r1, [r0, #-4]!
3653:..\..\ff14\source/ff.c **** 
3654:..\..\ff14\source/ff.c **** 
3655:..\..\ff14\source/ff.c **** 	/* Get logical drive number */
3656:..\..\ff14\source/ff.c **** 	vol = get_ldnumber(&rp);
 3699              		.loc 1 3656 0
 3700 0010 FFF7FEFF 		bl	get_ldnumber
 3701              	.LVL581:
3657:..\..\ff14\source/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 3702              		.loc 1 3657 0
 3703 0014 0028     		cmp	r0, #0
 3704 0016 14DB     		blt	.L335
3658:..\..\ff14\source/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3705              		.loc 1 3658 0
 3706 0018 0C4B     		ldr	r3, .L338
 3707 001a 53F82030 		ldr	r3, [r3, r0, lsl #2]
 3708              	.LVL582:
3659:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 139


3660:..\..\ff14\source/ff.c **** 	if (cfs) {
 3709              		.loc 1 3660 0
 3710 001e 0BB1     		cbz	r3, .L333
3661:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
3662:..\..\ff14\source/ff.c **** 		clear_lock(cfs);
3663:..\..\ff14\source/ff.c **** #endif
3664:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT						/* Discard sync object of the current volume */
3665:..\..\ff14\source/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3666:..\..\ff14\source/ff.c **** #endif
3667:..\..\ff14\source/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
 3711              		.loc 1 3667 0
 3712 0020 0022     		movs	r2, #0
 3713 0022 1A70     		strb	r2, [r3]
 3714              	.L333:
3668:..\..\ff14\source/ff.c **** 	}
3669:..\..\ff14\source/ff.c **** 
3670:..\..\ff14\source/ff.c **** 	if (fs) {
 3715              		.loc 1 3670 0
 3716 0024 019B     		ldr	r3, [sp, #4]
 3717              	.LVL583:
 3718 0026 0BB1     		cbz	r3, .L334
3671:..\..\ff14\source/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 3719              		.loc 1 3671 0
 3720 0028 0022     		movs	r2, #0
 3721 002a 1A70     		strb	r2, [r3]
 3722              	.L334:
3672:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT						/* Create sync object for the new volume */
3673:..\..\ff14\source/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3674:..\..\ff14\source/ff.c **** #endif
3675:..\..\ff14\source/ff.c **** 	}
3676:..\..\ff14\source/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
 3723              		.loc 1 3676 0
 3724 002c 019A     		ldr	r2, [sp, #4]
 3725 002e 074B     		ldr	r3, .L338
 3726 0030 43F82020 		str	r2, [r3, r0, lsl #2]
3677:..\..\ff14\source/ff.c **** 
3678:..\..\ff14\source/ff.c **** 	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
 3727              		.loc 1 3678 0
 3728 0034 3CB1     		cbz	r4, .L336
3679:..\..\ff14\source/ff.c **** 
3680:..\..\ff14\source/ff.c **** 	res = mount_volume(&path, &fs, 0);	/* Force mounted the volume */
 3729              		.loc 1 3680 0
 3730 0036 0022     		movs	r2, #0
 3731 0038 01A9     		add	r1, sp, #4
 3732              	.LVL584:
 3733 003a 6846     		mov	r0, sp
 3734              	.LVL585:
 3735 003c FFF7FEFF 		bl	mount_volume
 3736              	.LVL586:
3681:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
 3737              		.loc 1 3681 0
 3738 0040 02E0     		b	.L332
 3739              	.LVL587:
 3740              	.L335:
3657:..\..\ff14\source/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3741              		.loc 1 3657 0
 3742 0042 0B20     		movs	r0, #11
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 140


 3743              	.LVL588:
 3744 0044 00E0     		b	.L332
 3745              	.LVL589:
 3746              	.L336:
3678:..\..\ff14\source/ff.c **** 
 3747              		.loc 1 3678 0
 3748 0046 0020     		movs	r0, #0
 3749              	.LVL590:
 3750              	.L332:
3682:..\..\ff14\source/ff.c **** }
 3751              		.loc 1 3682 0
 3752 0048 04B0     		add	sp, sp, #16
 3753              		.cfi_def_cfa_offset 8
 3754              	.LVL591:
 3755              		@ sp needed
 3756 004a 10BD     		pop	{r4, pc}
 3757              	.LVL592:
 3758              	.L339:
 3759              		.align	2
 3760              	.L338:
 3761 004c 00000000 		.word	.LANCHOR0
 3762              		.cfi_endproc
 3763              	.LFE36:
 3764              		.size	f_mount, .-f_mount
 3765              		.section	.text.f_open,"ax",%progbits
 3766              		.align	2
 3767              		.global	f_open
 3768              		.thumb
 3769              		.thumb_func
 3770              		.type	f_open, %function
 3771              	f_open:
 3772              	.LFB37:
3683:..\..\ff14\source/ff.c **** 
3684:..\..\ff14\source/ff.c **** 
3685:..\..\ff14\source/ff.c **** 
3686:..\..\ff14\source/ff.c **** 
3687:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3688:..\..\ff14\source/ff.c **** /* Open or Create a File                                                 */
3689:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3690:..\..\ff14\source/ff.c **** 
3691:..\..\ff14\source/ff.c **** FRESULT f_open (
3692:..\..\ff14\source/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3693:..\..\ff14\source/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3694:..\..\ff14\source/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3695:..\..\ff14\source/ff.c **** )
3696:..\..\ff14\source/ff.c **** {
 3773              		.loc 1 3696 0
 3774              		.cfi_startproc
 3775              		@ args = 0, pretend = 0, frame = 56
 3776              		@ frame_needed = 0, uses_anonymous_args = 0
 3777              	.LVL593:
 3778 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3779              		.cfi_def_cfa_offset 24
 3780              		.cfi_offset 4, -24
 3781              		.cfi_offset 5, -20
 3782              		.cfi_offset 6, -16
 3783              		.cfi_offset 7, -12
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 141


 3784              		.cfi_offset 8, -8
 3785              		.cfi_offset 14, -4
 3786 0004 8EB0     		sub	sp, sp, #56
 3787              		.cfi_def_cfa_offset 80
 3788 0006 0191     		str	r1, [sp, #4]
3697:..\..\ff14\source/ff.c **** 	FRESULT res;
3698:..\..\ff14\source/ff.c **** 	DIR dj;
3699:..\..\ff14\source/ff.c **** 	FATFS *fs;
3700:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
3701:..\..\ff14\source/ff.c **** 	DWORD cl, bcs, clst;
3702:..\..\ff14\source/ff.c **** 	LBA_t sc;
3703:..\..\ff14\source/ff.c **** 	FSIZE_t ofs;
3704:..\..\ff14\source/ff.c **** #endif
3705:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
3706:..\..\ff14\source/ff.c **** 
3707:..\..\ff14\source/ff.c **** 
3708:..\..\ff14\source/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
 3789              		.loc 1 3708 0
 3790 0008 0028     		cmp	r0, #0
 3791 000a 00F0DA80 		beq	.L356
 3792 000e 0546     		mov	r5, r0
 3793 0010 1646     		mov	r6, r2
3709:..\..\ff14\source/ff.c **** 
3710:..\..\ff14\source/ff.c **** 	/* Get logical drive number */
3711:..\..\ff14\source/ff.c **** 	mode &= FF_FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN
 3794              		.loc 1 3711 0
 3795 0012 02F03F07 		and	r7, r2, #63
 3796              	.LVL594:
3712:..\..\ff14\source/ff.c **** 	res = mount_volume(&path, &fs, mode);
 3797              		.loc 1 3712 0
 3798 0016 3A46     		mov	r2, r7
 3799 0018 02A9     		add	r1, sp, #8
 3800              	.LVL595:
 3801 001a 01A8     		add	r0, sp, #4
 3802              	.LVL596:
 3803 001c FFF7FEFF 		bl	mount_volume
 3804              	.LVL597:
3713:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 3805              		.loc 1 3713 0
 3806 0020 0446     		mov	r4, r0
 3807 0022 0028     		cmp	r0, #0
 3808 0024 40F0C880 		bne	.L342
3714:..\..\ff14\source/ff.c **** 		dj.obj.fs = fs;
 3809              		.loc 1 3714 0
 3810 0028 029B     		ldr	r3, [sp, #8]
 3811 002a 0393     		str	r3, [sp, #12]
3715:..\..\ff14\source/ff.c **** 		INIT_NAMBUF(fs);
3716:..\..\ff14\source/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 3812              		.loc 1 3716 0
 3813 002c 0199     		ldr	r1, [sp, #4]
 3814 002e 03A8     		add	r0, sp, #12
 3815              	.LVL598:
 3816 0030 FFF7FEFF 		bl	follow_path
 3817              	.LVL599:
3717:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY	/* Read/Write configuration */
3718:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
 3818              		.loc 1 3718 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 142


 3819 0034 0446     		mov	r4, r0
 3820 0036 20B9     		cbnz	r0, .L343
3719:..\..\ff14\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 3821              		.loc 1 3719 0
 3822 0038 9DF93730 		ldrsb	r3, [sp, #55]
 3823 003c 002B     		cmp	r3, #0
 3824 003e 00DA     		bge	.L343
3720:..\..\ff14\source/ff.c **** 				res = FR_INVALID_NAME;
 3825              		.loc 1 3720 0
 3826 0040 0624     		movs	r4, #6
 3827              	.L343:
 3828              	.LVL600:
3721:..\..\ff14\source/ff.c **** 			}
3722:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
3723:..\..\ff14\source/ff.c **** 			else {
3724:..\..\ff14\source/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);		/* Check if the file can be used */
3725:..\..\ff14\source/ff.c **** 			}
3726:..\..\ff14\source/ff.c **** #endif
3727:..\..\ff14\source/ff.c **** 		}
3728:..\..\ff14\source/ff.c **** 		/* Create or Open a file */
3729:..\..\ff14\source/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 3829              		.loc 1 3729 0
 3830 0042 16F01C0F 		tst	r6, #28
 3831 0046 4DD0     		beq	.L344
3730:..\..\ff14\source/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 3832              		.loc 1 3730 0
 3833 0048 44B1     		cbz	r4, .L345
3731:..\..\ff14\source/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 3834              		.loc 1 3731 0
 3835 004a 042C     		cmp	r4, #4
 3836 004c 03D1     		bne	.L346
3732:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
3733:..\..\ff14\source/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3734:..\..\ff14\source/ff.c **** #else
3735:..\..\ff14\source/ff.c **** 					res = dir_register(&dj);
 3837              		.loc 1 3735 0
 3838 004e 03A8     		add	r0, sp, #12
 3839 0050 FFF7FEFF 		bl	dir_register
 3840              	.LVL601:
 3841 0054 0446     		mov	r4, r0
 3842              	.LVL602:
 3843              	.L346:
3736:..\..\ff14\source/ff.c **** #endif
3737:..\..\ff14\source/ff.c **** 				}
3738:..\..\ff14\source/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
 3844              		.loc 1 3738 0
 3845 0056 47F00807 		orr	r7, r7, #8
 3846              	.LVL603:
 3847 005a 0BE0     		b	.L347
 3848              	.L345:
3739:..\..\ff14\source/ff.c **** 			}
3740:..\..\ff14\source/ff.c **** 			else {								/* Any object with the same name is already existing */
3741:..\..\ff14\source/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 3849              		.loc 1 3741 0
 3850 005c 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 3851 0060 13F0110F 		tst	r3, #17
 3852 0064 03D1     		bne	.L358
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 143


3742:..\..\ff14\source/ff.c **** 					res = FR_DENIED;
3743:..\..\ff14\source/ff.c **** 				} else {
3744:..\..\ff14\source/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
 3853              		.loc 1 3744 0
 3854 0066 16F0040F 		tst	r6, #4
 3855 006a 02D1     		bne	.L359
 3856 006c 02E0     		b	.L347
 3857              	.L358:
3742:..\..\ff14\source/ff.c **** 					res = FR_DENIED;
 3858              		.loc 1 3742 0
 3859 006e 0724     		movs	r4, #7
 3860              	.LVL604:
 3861 0070 00E0     		b	.L347
 3862              	.LVL605:
 3863              	.L359:
 3864              		.loc 1 3744 0
 3865 0072 0824     		movs	r4, #8
 3866              	.LVL606:
 3867              	.L347:
3745:..\..\ff14\source/ff.c **** 				}
3746:..\..\ff14\source/ff.c **** 			}
3747:..\..\ff14\source/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
 3868              		.loc 1 3747 0
 3869 0074 002C     		cmp	r4, #0
 3870 0076 45D1     		bne	.L348
 3871              		.loc 1 3747 0 is_stmt 0 discriminator 1
 3872 0078 17F0080F 		tst	r7, #8
 3873 007c 42D0     		beq	.L348
3748:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
3749:..\..\ff14\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3750:..\..\ff14\source/ff.c **** 					/* Get current allocation info */
3751:..\..\ff14\source/ff.c **** 					fp->obj.fs = fs;
3752:..\..\ff14\source/ff.c **** 					init_alloc_info(fs, &fp->obj);
3753:..\..\ff14\source/ff.c **** 					/* Set directory entry block initial state */
3754:..\..\ff14\source/ff.c **** 					mem_set(fs->dirbuf + 2, 0, 30);		/* Clear 85 entry except for NumSec */
3755:..\..\ff14\source/ff.c **** 					mem_set(fs->dirbuf + 38, 0, 26);	/* Clear C0 entry except for NumName and NameHash */
3756:..\..\ff14\source/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;
3757:..\..\ff14\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, GET_FATTIME());
3758:..\..\ff14\source/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3759:..\..\ff14\source/ff.c **** 					res = store_xdir(&dj);
3760:..\..\ff14\source/ff.c **** 					if (res == FR_OK && fp->obj.sclust != 0) {	/* Remove the cluster chain if exist */
3761:..\..\ff14\source/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3762:..\..\ff14\source/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3763:..\..\ff14\source/ff.c **** 					}
3764:..\..\ff14\source/ff.c **** 				} else
3765:..\..\ff14\source/ff.c **** #endif
3766:..\..\ff14\source/ff.c **** 				{
3767:..\..\ff14\source/ff.c **** 					/* Set directory entry initial state */
3768:..\..\ff14\source/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get current cluster chain */
 3874              		.loc 1 3768 0 is_stmt 1
 3875 007e 0A9E     		ldr	r6, [sp, #40]
 3876 0080 3146     		mov	r1, r6
 3877 0082 0298     		ldr	r0, [sp, #8]
 3878 0084 FFF7FEFF 		bl	ld_clust
 3879              	.LVL607:
 3880 0088 8046     		mov	r8, r0
 3881              	.LVL608:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 144


3769:..\..\ff14\source/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, GET_FATTIME());	/* Set created time */
 3882              		.loc 1 3769 0
 3883 008a FFF7FEFF 		bl	get_fattime
 3884              	.LVL609:
 3885 008e 0146     		mov	r1, r0
 3886 0090 06F10E00 		add	r0, r6, #14
 3887 0094 FFF7FEFF 		bl	st_dword
 3888              	.LVL610:
3770:..\..\ff14\source/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 3889              		.loc 1 3770 0
 3890 0098 2022     		movs	r2, #32
 3891 009a 0A9B     		ldr	r3, [sp, #40]
 3892 009c DA72     		strb	r2, [r3, #11]
3771:..\..\ff14\source/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 3893              		.loc 1 3771 0
 3894 009e 0022     		movs	r2, #0
 3895 00a0 0A99     		ldr	r1, [sp, #40]
 3896 00a2 0298     		ldr	r0, [sp, #8]
 3897 00a4 FFF7FEFF 		bl	st_clust
 3898              	.LVL611:
3772:..\..\ff14\source/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 3899              		.loc 1 3772 0
 3900 00a8 0021     		movs	r1, #0
 3901 00aa 0A98     		ldr	r0, [sp, #40]
 3902 00ac 1C30     		adds	r0, r0, #28
 3903 00ae FFF7FEFF 		bl	st_dword
 3904              	.LVL612:
3773:..\..\ff14\source/ff.c **** 					fs->wflag = 1;
 3905              		.loc 1 3773 0
 3906 00b2 0122     		movs	r2, #1
 3907 00b4 029B     		ldr	r3, [sp, #8]
 3908 00b6 DA70     		strb	r2, [r3, #3]
3774:..\..\ff14\source/ff.c **** 					if (cl != 0) {						/* Remove the cluster chain if exist */
 3909              		.loc 1 3774 0
 3910 00b8 B8F1000F 		cmp	r8, #0
 3911 00bc 22D0     		beq	.L348
3775:..\..\ff14\source/ff.c **** 						sc = fs->winsect;
 3912              		.loc 1 3775 0
 3913 00be 029B     		ldr	r3, [sp, #8]
 3914 00c0 DE6A     		ldr	r6, [r3, #44]
 3915              	.LVL613:
3776:..\..\ff14\source/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 3916              		.loc 1 3776 0
 3917 00c2 0022     		movs	r2, #0
 3918 00c4 4146     		mov	r1, r8
 3919 00c6 03A8     		add	r0, sp, #12
 3920 00c8 FFF7FEFF 		bl	remove_chain
 3921              	.LVL614:
3777:..\..\ff14\source/ff.c **** 						if (res == FR_OK) {
 3922              		.loc 1 3777 0
 3923 00cc 0446     		mov	r4, r0
 3924 00ce C8B9     		cbnz	r0, .L348
3778:..\..\ff14\source/ff.c **** 							res = move_window(fs, sc);
 3925              		.loc 1 3778 0
 3926 00d0 3146     		mov	r1, r6
 3927 00d2 0298     		ldr	r0, [sp, #8]
 3928              	.LVL615:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 145


 3929 00d4 FFF7FEFF 		bl	move_window
 3930              	.LVL616:
 3931 00d8 0446     		mov	r4, r0
 3932              	.LVL617:
3779:..\..\ff14\source/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 3933              		.loc 1 3779 0
 3934 00da 08F1FF33 		add	r3, r8, #-1
 3935 00de 029A     		ldr	r2, [sp, #8]
 3936 00e0 D360     		str	r3, [r2, #12]
 3937 00e2 0FE0     		b	.L348
 3938              	.LVL618:
 3939              	.L344:
3780:..\..\ff14\source/ff.c **** 						}
3781:..\..\ff14\source/ff.c **** 					}
3782:..\..\ff14\source/ff.c **** 				}
3783:..\..\ff14\source/ff.c **** 			}
3784:..\..\ff14\source/ff.c **** 		}
3785:..\..\ff14\source/ff.c **** 		else {	/* Open an existing file */
3786:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {					/* Is the object exsiting? */
 3940              		.loc 1 3786 0
 3941 00e4 74B9     		cbnz	r4, .L348
3787:..\..\ff14\source/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* File open against a directory */
 3942              		.loc 1 3787 0
 3943 00e6 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 3944 00ea 13F0100F 		tst	r3, #16
 3945 00ee 06D1     		bne	.L360
3788:..\..\ff14\source/ff.c **** 					res = FR_NO_FILE;
3789:..\..\ff14\source/ff.c **** 				} else {
3790:..\..\ff14\source/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* Write mode open against R/O file */
 3946              		.loc 1 3790 0
 3947 00f0 16F0020F 		tst	r6, #2
 3948 00f4 06D0     		beq	.L348
 3949              		.loc 1 3790 0 is_stmt 0 discriminator 1
 3950 00f6 13F0010F 		tst	r3, #1
 3951 00fa 02D1     		bne	.L361
 3952 00fc 02E0     		b	.L348
 3953              	.L360:
3788:..\..\ff14\source/ff.c **** 					res = FR_NO_FILE;
 3954              		.loc 1 3788 0 is_stmt 1
 3955 00fe 0424     		movs	r4, #4
 3956              	.LVL619:
 3957 0100 00E0     		b	.L348
 3958              	.LVL620:
 3959              	.L361:
3791:..\..\ff14\source/ff.c **** 						res = FR_DENIED;
 3960              		.loc 1 3791 0
 3961 0102 0724     		movs	r4, #7
 3962              	.LVL621:
 3963              	.L348:
3792:..\..\ff14\source/ff.c **** 					}
3793:..\..\ff14\source/ff.c **** 				}
3794:..\..\ff14\source/ff.c **** 			}
3795:..\..\ff14\source/ff.c **** 		}
3796:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
 3964              		.loc 1 3796 0
 3965 0104 4CB9     		cbnz	r4, .L349
3797:..\..\ff14\source/ff.c **** 			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwrit
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 146


 3966              		.loc 1 3797 0
 3967 0106 17F0080F 		tst	r7, #8
 3968 010a 01D0     		beq	.L350
 3969              		.loc 1 3797 0 is_stmt 0 discriminator 1
 3970 010c 47F04007 		orr	r7, r7, #64
 3971              	.LVL622:
 3972              	.L350:
3798:..\..\ff14\source/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 3973              		.loc 1 3798 0 is_stmt 1
 3974 0110 029B     		ldr	r3, [sp, #8]
 3975 0112 DB6A     		ldr	r3, [r3, #44]
 3976 0114 2B62     		str	r3, [r5, #32]
3799:..\..\ff14\source/ff.c **** 			fp->dir_ptr = dj.dir;
 3977              		.loc 1 3799 0
 3978 0116 0A9B     		ldr	r3, [sp, #40]
 3979 0118 6B62     		str	r3, [r5, #36]
 3980              	.L349:
3800:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
3801:..\..\ff14\source/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);	/* Lock the file for this session */
3802:..\..\ff14\source/ff.c **** 			if (fp->obj.lockid == 0) res = FR_INT_ERR;
3803:..\..\ff14\source/ff.c **** #endif
3804:..\..\ff14\source/ff.c **** 		}
3805:..\..\ff14\source/ff.c **** #else		/* R/O configuration */
3806:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
3807:..\..\ff14\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Is it origin directory itself? */
3808:..\..\ff14\source/ff.c **** 				res = FR_INVALID_NAME;
3809:..\..\ff14\source/ff.c **** 			} else {
3810:..\..\ff14\source/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* Is it a directory? */
3811:..\..\ff14\source/ff.c **** 					res = FR_NO_FILE;
3812:..\..\ff14\source/ff.c **** 				}
3813:..\..\ff14\source/ff.c **** 			}
3814:..\..\ff14\source/ff.c **** 		}
3815:..\..\ff14\source/ff.c **** #endif
3816:..\..\ff14\source/ff.c **** 
3817:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
 3981              		.loc 1 3817 0
 3982 011a 002C     		cmp	r4, #0
 3983 011c 4CD1     		bne	.L342
3818:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
3819:..\..\ff14\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3820:..\..\ff14\source/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3821:..\..\ff14\source/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3822:..\..\ff14\source/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3823:..\..\ff14\source/ff.c **** 				init_alloc_info(fs, &fp->obj);
3824:..\..\ff14\source/ff.c **** 			} else
3825:..\..\ff14\source/ff.c **** #endif
3826:..\..\ff14\source/ff.c **** 			{
3827:..\..\ff14\source/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
 3984              		.loc 1 3827 0
 3985 011e 029E     		ldr	r6, [sp, #8]
 3986 0120 DDF82880 		ldr	r8, [sp, #40]
 3987 0124 4146     		mov	r1, r8
 3988 0126 3046     		mov	r0, r6
 3989 0128 FFF7FEFF 		bl	ld_clust
 3990              	.LVL623:
 3991 012c A860     		str	r0, [r5, #8]
3828:..\..\ff14\source/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 147


 3992              		.loc 1 3828 0
 3993 012e 08F11C00 		add	r0, r8, #28
 3994 0132 FFF7FEFF 		bl	ld_dword
 3995              	.LVL624:
 3996 0136 E860     		str	r0, [r5, #12]
3829:..\..\ff14\source/ff.c **** 			}
3830:..\..\ff14\source/ff.c **** #if FF_USE_FASTSEEK
3831:..\..\ff14\source/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3832:..\..\ff14\source/ff.c **** #endif
3833:..\..\ff14\source/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
 3997              		.loc 1 3833 0
 3998 0138 2E60     		str	r6, [r5]
3834:..\..\ff14\source/ff.c **** 			fp->obj.id = fs->id;
 3999              		.loc 1 3834 0
 4000 013a F388     		ldrh	r3, [r6, #6]
 4001 013c AB80     		strh	r3, [r5, #4]	@ movhi
3835:..\..\ff14\source/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4002              		.loc 1 3835 0
 4003 013e 2F74     		strb	r7, [r5, #16]
3836:..\..\ff14\source/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4004              		.loc 1 3836 0
 4005 0140 0021     		movs	r1, #0
 4006 0142 6974     		strb	r1, [r5, #17]
3837:..\..\ff14\source/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4007              		.loc 1 3837 0
 4008 0144 E961     		str	r1, [r5, #28]
3838:..\..\ff14\source/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4009              		.loc 1 3838 0
 4010 0146 6961     		str	r1, [r5, #20]
3839:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
3840:..\..\ff14\source/ff.c **** #if !FF_FS_TINY
3841:..\..\ff14\source/ff.c **** 			mem_set(fp->buf, 0, sizeof fp->buf);	/* Clear sector buffer */
 4011              		.loc 1 3841 0
 4012 0148 05F12808 		add	r8, r5, #40
 4013 014c 4FF40072 		mov	r2, #512
 4014 0150 4046     		mov	r0, r8
 4015 0152 FFF7FEFF 		bl	mem_set
 4016              	.LVL625:
3842:..\..\ff14\source/ff.c **** #endif
3843:..\..\ff14\source/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
 4017              		.loc 1 3843 0
 4018 0156 17F0200F 		tst	r7, #32
 4019 015a 2DD0     		beq	.L342
 4020              		.loc 1 3843 0 is_stmt 0 discriminator 1
 4021 015c EE68     		ldr	r6, [r5, #12]
 4022 015e 5EB3     		cbz	r6, .L342
3844:..\..\ff14\source/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4023              		.loc 1 3844 0 is_stmt 1
 4024 0160 6E61     		str	r6, [r5, #20]
3845:..\..\ff14\source/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 4025              		.loc 1 3845 0
 4026 0162 029B     		ldr	r3, [sp, #8]
 4027 0164 5F89     		ldrh	r7, [r3, #10]
 4028              	.LVL626:
 4029 0166 7F02     		lsls	r7, r7, #9
 4030              	.LVL627:
3846:..\..\ff14\source/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 148


 4031              		.loc 1 3846 0
 4032 0168 A968     		ldr	r1, [r5, #8]
 4033              	.LVL628:
3847:..\..\ff14\source/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4034              		.loc 1 3847 0
 4035 016a 0BE0     		b	.L351
 4036              	.L355:
3848:..\..\ff14\source/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4037              		.loc 1 3848 0
 4038 016c 2846     		mov	r0, r5
 4039 016e FFF7FEFF 		bl	get_fat
 4040              	.LVL629:
 4041 0172 0146     		mov	r1, r0
 4042              	.LVL630:
3849:..\..\ff14\source/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4043              		.loc 1 3849 0
 4044 0174 0128     		cmp	r0, #1
 4045 0176 00D8     		bhi	.L352
 4046 0178 0224     		movs	r4, #2
 4047              	.LVL631:
 4048              	.L352:
3850:..\..\ff14\source/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4049              		.loc 1 3850 0
 4050 017a B1F1FF3F 		cmp	r1, #-1
 4051 017e 00D1     		bne	.L353
 4052 0180 0124     		movs	r4, #1
 4053              	.LVL632:
 4054              	.L353:
3847:..\..\ff14\source/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4055              		.loc 1 3847 0 discriminator 2
 4056 0182 F61B     		subs	r6, r6, r7
 4057              	.LVL633:
 4058              	.L351:
3847:..\..\ff14\source/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4059              		.loc 1 3847 0 is_stmt 0 discriminator 1
 4060 0184 0CB9     		cbnz	r4, .L354
3847:..\..\ff14\source/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4061              		.loc 1 3847 0 discriminator 3
 4062 0186 BE42     		cmp	r6, r7
 4063 0188 F0D8     		bhi	.L355
 4064              	.L354:
3851:..\..\ff14\source/ff.c **** 				}
3852:..\..\ff14\source/ff.c **** 				fp->clust = clst;
 4065              		.loc 1 3852 0 is_stmt 1
 4066 018a A961     		str	r1, [r5, #24]
3853:..\..\ff14\source/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4067              		.loc 1 3853 0
 4068 018c A4B9     		cbnz	r4, .L342
 4069              		.loc 1 3853 0 is_stmt 0 discriminator 1
 4070 018e C6F30803 		ubfx	r3, r6, #0, #9
 4071 0192 8BB1     		cbz	r3, .L342
3854:..\..\ff14\source/ff.c **** 					sc = clst2sect(fs, clst);
 4072              		.loc 1 3854 0 is_stmt 1
 4073 0194 029F     		ldr	r7, [sp, #8]
 4074              	.LVL634:
 4075 0196 3846     		mov	r0, r7
 4076 0198 FFF7FEFF 		bl	clst2sect
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 149


 4077              	.LVL635:
3855:..\..\ff14\source/ff.c **** 					if (sc == 0) {
 4078              		.loc 1 3855 0
 4079 019c 48B1     		cbz	r0, .L364
3856:..\..\ff14\source/ff.c **** 						res = FR_INT_ERR;
3857:..\..\ff14\source/ff.c **** 					} else {
3858:..\..\ff14\source/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
 4080              		.loc 1 3858 0
 4081 019e 00EB5622 		add	r2, r0, r6, lsr #9
 4082 01a2 EA61     		str	r2, [r5, #28]
3859:..\..\ff14\source/ff.c **** #if !FF_FS_TINY
3860:..\..\ff14\source/ff.c **** 						if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
 4083              		.loc 1 3860 0
 4084 01a4 0123     		movs	r3, #1
 4085 01a6 4146     		mov	r1, r8
 4086 01a8 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 4087              	.LVL636:
 4088 01aa FFF7FEFF 		bl	disk_read
 4089              	.LVL637:
 4090 01ae 10B9     		cbnz	r0, .L365
 4091 01b0 02E0     		b	.L342
 4092              	.LVL638:
 4093              	.L364:
3856:..\..\ff14\source/ff.c **** 						res = FR_INT_ERR;
 4094              		.loc 1 3856 0
 4095 01b2 0224     		movs	r4, #2
 4096              	.LVL639:
 4097 01b4 00E0     		b	.L342
 4098              	.LVL640:
 4099              	.L365:
 4100              		.loc 1 3860 0
 4101 01b6 0124     		movs	r4, #1
 4102              	.LVL641:
 4103              	.L342:
3861:..\..\ff14\source/ff.c **** #endif
3862:..\..\ff14\source/ff.c **** 					}
3863:..\..\ff14\source/ff.c **** 				}
3864:..\..\ff14\source/ff.c **** 			}
3865:..\..\ff14\source/ff.c **** #endif
3866:..\..\ff14\source/ff.c **** 		}
3867:..\..\ff14\source/ff.c **** 
3868:..\..\ff14\source/ff.c **** 		FREE_NAMBUF();
3869:..\..\ff14\source/ff.c **** 	}
3870:..\..\ff14\source/ff.c **** 
3871:..\..\ff14\source/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
 4104              		.loc 1 3871 0
 4105 01b8 2CB1     		cbz	r4, .L366
 4106              		.loc 1 3871 0 is_stmt 0 discriminator 1
 4107 01ba 0023     		movs	r3, #0
 4108 01bc 2B60     		str	r3, [r5]
3872:..\..\ff14\source/ff.c **** 
3873:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
 4109              		.loc 1 3873 0 is_stmt 1 discriminator 1
 4110 01be 2046     		mov	r0, r4
 4111 01c0 02E0     		b	.L341
 4112              	.LVL642:
 4113              	.L356:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 150


3708:..\..\ff14\source/ff.c **** 
 4114              		.loc 1 3708 0
 4115 01c2 0920     		movs	r0, #9
 4116              	.LVL643:
 4117 01c4 00E0     		b	.L341
 4118              	.LVL644:
 4119              	.L366:
 4120              		.loc 1 3873 0
 4121 01c6 2046     		mov	r0, r4
 4122              	.LVL645:
 4123              	.L341:
3874:..\..\ff14\source/ff.c **** }
 4124              		.loc 1 3874 0
 4125 01c8 0EB0     		add	sp, sp, #56
 4126              		.cfi_def_cfa_offset 24
 4127              		@ sp needed
 4128 01ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4129              		.cfi_endproc
 4130              	.LFE37:
 4131              		.size	f_open, .-f_open
 4132 01ce 00BF     		.section	.text.f_read,"ax",%progbits
 4133              		.align	2
 4134              		.global	f_read
 4135              		.thumb
 4136              		.thumb_func
 4137              		.type	f_read, %function
 4138              	f_read:
 4139              	.LFB38:
3875:..\..\ff14\source/ff.c **** 
3876:..\..\ff14\source/ff.c **** 
3877:..\..\ff14\source/ff.c **** 
3878:..\..\ff14\source/ff.c **** 
3879:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3880:..\..\ff14\source/ff.c **** /* Read File                                                             */
3881:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3882:..\..\ff14\source/ff.c **** 
3883:..\..\ff14\source/ff.c **** FRESULT f_read (
3884:..\..\ff14\source/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3885:..\..\ff14\source/ff.c **** 	void* buff,	/* Pointer to data buffer */
3886:..\..\ff14\source/ff.c **** 	UINT btr,	/* Number of bytes to read */
3887:..\..\ff14\source/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3888:..\..\ff14\source/ff.c **** )
3889:..\..\ff14\source/ff.c **** {
 4140              		.loc 1 3889 0
 4141              		.cfi_startproc
 4142              		@ args = 0, pretend = 0, frame = 16
 4143              		@ frame_needed = 0, uses_anonymous_args = 0
 4144              	.LVL646:
 4145 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4146              		.cfi_def_cfa_offset 36
 4147              		.cfi_offset 4, -36
 4148              		.cfi_offset 5, -32
 4149              		.cfi_offset 6, -28
 4150              		.cfi_offset 7, -24
 4151              		.cfi_offset 8, -20
 4152              		.cfi_offset 9, -16
 4153              		.cfi_offset 10, -12
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 151


 4154              		.cfi_offset 11, -8
 4155              		.cfi_offset 14, -4
 4156 0004 85B0     		sub	sp, sp, #20
 4157              		.cfi_def_cfa_offset 56
 4158 0006 0446     		mov	r4, r0
 4159 0008 8846     		mov	r8, r1
 4160 000a 1546     		mov	r5, r2
 4161 000c 1F46     		mov	r7, r3
 4162              	.LVL647:
3890:..\..\ff14\source/ff.c **** 	FRESULT res;
3891:..\..\ff14\source/ff.c **** 	FATFS *fs;
3892:..\..\ff14\source/ff.c **** 	DWORD clst;
3893:..\..\ff14\source/ff.c **** 	LBA_t sect;
3894:..\..\ff14\source/ff.c **** 	FSIZE_t remain;
3895:..\..\ff14\source/ff.c **** 	UINT rcnt, cc, csect;
3896:..\..\ff14\source/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3897:..\..\ff14\source/ff.c **** 
3898:..\..\ff14\source/ff.c **** 
3899:..\..\ff14\source/ff.c **** 	*br = 0;	/* Clear read byte counter */
 4163              		.loc 1 3899 0
 4164 000e 0023     		movs	r3, #0
 4165              	.LVL648:
 4166 0010 3B60     		str	r3, [r7]
3900:..\..\ff14\source/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4167              		.loc 1 3900 0
 4168 0012 0190     		str	r0, [sp, #4]
 4169 0014 03A9     		add	r1, sp, #12
 4170              	.LVL649:
 4171 0016 FFF7FEFF 		bl	validate
 4172              	.LVL650:
3901:..\..\ff14\source/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4173              		.loc 1 3901 0
 4174 001a 0028     		cmp	r0, #0
 4175 001c 40F0A580 		bne	.L389
 4176              		.loc 1 3901 0 is_stmt 0 discriminator 2
 4177 0020 607C     		ldrb	r0, [r4, #17]	@ zero_extendqisi2
 4178              	.LVL651:
 4179 0022 0028     		cmp	r0, #0
 4180 0024 40F0A380 		bne	.L369
3902:..\..\ff14\source/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4181              		.loc 1 3902 0 is_stmt 1
 4182 0028 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4183 002a 13F0010F 		tst	r3, #1
 4184 002e 00F09D80 		beq	.L391
3903:..\..\ff14\source/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4185              		.loc 1 3903 0
 4186 0032 E668     		ldr	r6, [r4, #12]
 4187 0034 6369     		ldr	r3, [r4, #20]
 4188 0036 F61A     		subs	r6, r6, r3
 4189              	.LVL652:
3904:..\..\ff14\source/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4190              		.loc 1 3904 0
 4191 0038 AE42     		cmp	r6, r5
 4192 003a C0F09180 		bcc	.L371
 4193 003e 2E46     		mov	r6, r5
 4194              	.LVL653:
 4195 0040 8EE0     		b	.L371
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 152


 4196              	.LVL654:
 4197              	.L388:
3905:..\..\ff14\source/ff.c **** 
3906:..\..\ff14\source/ff.c **** 	for ( ;  btr;								/* Repeat until btr bytes read */
3907:..\..\ff14\source/ff.c **** 		btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {
3908:..\..\ff14\source/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4198              		.loc 1 3908 0
 4199 0042 6369     		ldr	r3, [r4, #20]
 4200 0044 C3F30802 		ubfx	r2, r3, #0, #9
 4201 0048 002A     		cmp	r2, #0
 4202 004a 72D1     		bne	.L372
3909:..\..\ff14\source/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 4203              		.loc 1 3909 0
 4204 004c 039A     		ldr	r2, [sp, #12]
 4205 004e B2F80A90 		ldrh	r9, [r2, #10]
 4206 0052 09F1FF39 		add	r9, r9, #-1
 4207              	.LVL655:
3910:..\..\ff14\source/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 4208              		.loc 1 3910 0
 4209 0056 19EA5329 		ands	r9, r9, r3, lsr #9
 4210              	.LVL656:
 4211 005a 12D1     		bne	.L373
3911:..\..\ff14\source/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4212              		.loc 1 3911 0
 4213 005c 0BB9     		cbnz	r3, .L374
3912:..\..\ff14\source/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 4214              		.loc 1 3912 0
 4215 005e A068     		ldr	r0, [r4, #8]
 4216              	.LVL657:
 4217 0060 03E0     		b	.L375
 4218              	.LVL658:
 4219              	.L374:
3913:..\..\ff14\source/ff.c **** 				} else {						/* Middle or end of the file */
3914:..\..\ff14\source/ff.c **** #if FF_USE_FASTSEEK
3915:..\..\ff14\source/ff.c **** 					if (fp->cltbl) {
3916:..\..\ff14\source/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3917:..\..\ff14\source/ff.c **** 					} else
3918:..\..\ff14\source/ff.c **** #endif
3919:..\..\ff14\source/ff.c **** 					{
3920:..\..\ff14\source/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
 4220              		.loc 1 3920 0
 4221 0062 A169     		ldr	r1, [r4, #24]
 4222 0064 0198     		ldr	r0, [sp, #4]
 4223 0066 FFF7FEFF 		bl	get_fat
 4224              	.LVL659:
 4225              	.L375:
3921:..\..\ff14\source/ff.c **** 					}
3922:..\..\ff14\source/ff.c **** 				}
3923:..\..\ff14\source/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
 4226              		.loc 1 3923 0
 4227 006a 0128     		cmp	r0, #1
 4228 006c 02D8     		bhi	.L376
 4229              		.loc 1 3923 0 is_stmt 0 discriminator 1
 4230 006e 0220     		movs	r0, #2
 4231              	.LVL660:
 4232 0070 6074     		strb	r0, [r4, #17]
 4233 0072 7CE0     		b	.L369
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 153


 4234              	.LVL661:
 4235              	.L376:
3924:..\..\ff14\source/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4236              		.loc 1 3924 0 is_stmt 1
 4237 0074 B0F1FF3F 		cmp	r0, #-1
 4238 0078 02D1     		bne	.L377
 4239              		.loc 1 3924 0 is_stmt 0 discriminator 1
 4240 007a 0120     		movs	r0, #1
 4241              	.LVL662:
 4242 007c 6074     		strb	r0, [r4, #17]
 4243 007e 76E0     		b	.L369
 4244              	.LVL663:
 4245              	.L377:
3925:..\..\ff14\source/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4246              		.loc 1 3925 0 is_stmt 1
 4247 0080 A061     		str	r0, [r4, #24]
 4248              	.LVL664:
 4249              	.L373:
3926:..\..\ff14\source/ff.c **** 			}
3927:..\..\ff14\source/ff.c **** 			sect = clst2sect(fs, fp->clust);	/* Get current sector */
 4250              		.loc 1 3927 0
 4251 0082 DDF80CB0 		ldr	fp, [sp, #12]
 4252 0086 A169     		ldr	r1, [r4, #24]
 4253 0088 5846     		mov	r0, fp
 4254 008a FFF7FEFF 		bl	clst2sect
 4255              	.LVL665:
3928:..\..\ff14\source/ff.c **** 			if (sect == 0) ABORT(fs, FR_INT_ERR);
 4256              		.loc 1 3928 0
 4257 008e 8246     		mov	r10, r0
 4258 0090 10B9     		cbnz	r0, .L378
 4259              		.loc 1 3928 0 is_stmt 0 discriminator 1
 4260 0092 0220     		movs	r0, #2
 4261              	.LVL666:
 4262 0094 6074     		strb	r0, [r4, #17]
 4263 0096 6AE0     		b	.L369
 4264              	.LVL667:
 4265              	.L378:
3929:..\..\ff14\source/ff.c **** 			sect += csect;
 4266              		.loc 1 3929 0 is_stmt 1
 4267 0098 CA44     		add	r10, r10, r9
 4268              	.LVL668:
3930:..\..\ff14\source/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3931:..\..\ff14\source/ff.c **** 			if (cc > 0) {						/* Read maximum contiguous sectors directly */
 4269              		.loc 1 3931 0
 4270 009a 750A     		lsrs	r5, r6, #9
 4271              	.LVL669:
 4272 009c 25D0     		beq	.L379
3932:..\..\ff14\source/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4273              		.loc 1 3932 0
 4274 009e 09EB0503 		add	r3, r9, r5
 4275 00a2 BBF80A20 		ldrh	r2, [fp, #10]
 4276 00a6 9342     		cmp	r3, r2
 4277 00a8 01D9     		bls	.L380
3933:..\..\ff14\source/ff.c **** 					cc = fs->csize - csect;
 4278              		.loc 1 3933 0
 4279 00aa C9EB0205 		rsb	r5, r9, r2
 4280              	.LVL670:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 154


 4281              	.L380:
3934:..\..\ff14\source/ff.c **** 				}
3935:..\..\ff14\source/ff.c **** 				if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4282              		.loc 1 3935 0
 4283 00ae 2B46     		mov	r3, r5
 4284 00b0 5246     		mov	r2, r10
 4285 00b2 4146     		mov	r1, r8
 4286 00b4 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4287 00b8 FFF7FEFF 		bl	disk_read
 4288              	.LVL671:
 4289 00bc 10B1     		cbz	r0, .L381
 4290              		.loc 1 3935 0 is_stmt 0 discriminator 1
 4291 00be 0120     		movs	r0, #1
 4292 00c0 6074     		strb	r0, [r4, #17]
 4293 00c2 54E0     		b	.L369
 4294              	.L381:
3936:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY && FF_FS_MINIMIZE <= 2		/* Replace one of the read sectors with cached data if 
3937:..\..\ff14\source/ff.c **** #if FF_FS_TINY
3938:..\..\ff14\source/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3939:..\..\ff14\source/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3940:..\..\ff14\source/ff.c **** 				}
3941:..\..\ff14\source/ff.c **** #else
3942:..\..\ff14\source/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
 4295              		.loc 1 3942 0 is_stmt 1
 4296 00c4 94F91030 		ldrsb	r3, [r4, #16]
 4297 00c8 002B     		cmp	r3, #0
 4298 00ca 0CDA     		bge	.L382
 4299              		.loc 1 3942 0 is_stmt 0 discriminator 1
 4300 00cc E069     		ldr	r0, [r4, #28]
 4301 00ce CAEB0000 		rsb	r0, r10, r0
 4302 00d2 8542     		cmp	r5, r0
 4303 00d4 07D9     		bls	.L382
3943:..\..\ff14\source/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4304              		.loc 1 3943 0 is_stmt 1
 4305 00d6 4FF40072 		mov	r2, #512
 4306 00da 04F12801 		add	r1, r4, #40
 4307 00de 08EB4020 		add	r0, r8, r0, lsl #9
 4308 00e2 FFF7FEFF 		bl	mem_cpy
 4309              	.LVL672:
 4310              	.L382:
3944:..\..\ff14\source/ff.c **** 				}
3945:..\..\ff14\source/ff.c **** #endif
3946:..\..\ff14\source/ff.c **** #endif
3947:..\..\ff14\source/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
 4311              		.loc 1 3947 0
 4312 00e6 6D02     		lsls	r5, r5, #9
 4313              	.LVL673:
3948:..\..\ff14\source/ff.c **** 				continue;
 4314              		.loc 1 3948 0
 4315 00e8 32E0     		b	.L383
 4316              	.LVL674:
 4317              	.L379:
3949:..\..\ff14\source/ff.c **** 			}
3950:..\..\ff14\source/ff.c **** #if !FF_FS_TINY
3951:..\..\ff14\source/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
 4318              		.loc 1 3951 0
 4319 00ea E269     		ldr	r2, [r4, #28]
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 155


 4320 00ec 9245     		cmp	r10, r2
 4321 00ee 1ED0     		beq	.L384
3952:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
3953:..\..\ff14\source/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
 4322              		.loc 1 3953 0
 4323 00f0 94F91030 		ldrsb	r3, [r4, #16]
 4324 00f4 002B     		cmp	r3, #0
 4325 00f6 0EDA     		bge	.L385
3954:..\..\ff14\source/ff.c **** 					if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4326              		.loc 1 3954 0
 4327 00f8 0123     		movs	r3, #1
 4328 00fa 04F12801 		add	r1, r4, #40
 4329 00fe 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4330 0102 FFF7FEFF 		bl	disk_write
 4331              	.LVL675:
 4332 0106 10B1     		cbz	r0, .L386
 4333              		.loc 1 3954 0 is_stmt 0 discriminator 1
 4334 0108 0120     		movs	r0, #1
 4335 010a 6074     		strb	r0, [r4, #17]
 4336 010c 2FE0     		b	.L369
 4337              	.L386:
3955:..\..\ff14\source/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4338              		.loc 1 3955 0 is_stmt 1
 4339 010e 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4340 0110 03F07F03 		and	r3, r3, #127
 4341 0114 2374     		strb	r3, [r4, #16]
 4342              	.L385:
3956:..\..\ff14\source/ff.c **** 				}
3957:..\..\ff14\source/ff.c **** #endif
3958:..\..\ff14\source/ff.c **** 				if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cac
 4343              		.loc 1 3958 0
 4344 0116 0123     		movs	r3, #1
 4345 0118 5246     		mov	r2, r10
 4346 011a 04F12801 		add	r1, r4, #40
 4347 011e 0398     		ldr	r0, [sp, #12]
 4348 0120 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4349 0122 FFF7FEFF 		bl	disk_read
 4350              	.LVL676:
 4351 0126 10B1     		cbz	r0, .L384
 4352              		.loc 1 3958 0 is_stmt 0 discriminator 1
 4353 0128 0120     		movs	r0, #1
 4354 012a 6074     		strb	r0, [r4, #17]
 4355 012c 1FE0     		b	.L369
 4356              	.L384:
3959:..\..\ff14\source/ff.c **** 			}
3960:..\..\ff14\source/ff.c **** #endif
3961:..\..\ff14\source/ff.c **** 			fp->sect = sect;
 4357              		.loc 1 3961 0 is_stmt 1
 4358 012e C4F81CA0 		str	r10, [r4, #28]
 4359              	.LVL677:
 4360              	.L372:
3962:..\..\ff14\source/ff.c **** 		}
3963:..\..\ff14\source/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes remains in the sector */
 4361              		.loc 1 3963 0
 4362 0132 6369     		ldr	r3, [r4, #20]
 4363 0134 C3F30803 		ubfx	r3, r3, #0, #9
 4364 0138 C3F50075 		rsb	r5, r3, #512
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 156


 4365              	.LVL678:
3964:..\..\ff14\source/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4366              		.loc 1 3964 0
 4367 013c AE42     		cmp	r6, r5
 4368 013e 00D2     		bcs	.L387
 4369 0140 3546     		mov	r5, r6
 4370              	.LVL679:
 4371              	.L387:
3965:..\..\ff14\source/ff.c **** #if FF_FS_TINY
3966:..\..\ff14\source/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3967:..\..\ff14\source/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3968:..\..\ff14\source/ff.c **** #else
3969:..\..\ff14\source/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
 4372              		.loc 1 3969 0
 4373 0142 04F12801 		add	r1, r4, #40
 4374 0146 2A46     		mov	r2, r5
 4375 0148 1944     		add	r1, r1, r3
 4376 014a 4046     		mov	r0, r8
 4377 014c FFF7FEFF 		bl	mem_cpy
 4378              	.LVL680:
 4379              	.L383:
3907:..\..\ff14\source/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4380              		.loc 1 3907 0
 4381 0150 761B     		subs	r6, r6, r5
 4382              	.LVL681:
 4383 0152 3B68     		ldr	r3, [r7]
 4384 0154 2B44     		add	r3, r3, r5
 4385 0156 3B60     		str	r3, [r7]
 4386 0158 A844     		add	r8, r8, r5
 4387              	.LVL682:
 4388 015a 6369     		ldr	r3, [r4, #20]
 4389 015c 1D44     		add	r5, r5, r3
 4390              	.LVL683:
 4391 015e 6561     		str	r5, [r4, #20]
 4392              	.LVL684:
 4393              	.L371:
3906:..\..\ff14\source/ff.c **** 		btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {
 4394              		.loc 1 3906 0
 4395 0160 002E     		cmp	r6, #0
 4396 0162 7FF46EAF 		bne	.L388
3970:..\..\ff14\source/ff.c **** #endif
3971:..\..\ff14\source/ff.c **** 	}
3972:..\..\ff14\source/ff.c **** 
3973:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, FR_OK);
 4397              		.loc 1 3973 0
 4398 0166 0020     		movs	r0, #0
 4399 0168 01E0     		b	.L369
 4400              	.LVL685:
 4401              	.L389:
 4402 016a 00E0     		b	.L369
 4403              	.L391:
3902:..\..\ff14\source/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4404              		.loc 1 3902 0
 4405 016c 0720     		movs	r0, #7
 4406              	.LVL686:
 4407              	.L369:
3974:..\..\ff14\source/ff.c **** }
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 157


 4408              		.loc 1 3974 0
 4409 016e 05B0     		add	sp, sp, #20
 4410              		.cfi_def_cfa_offset 36
 4411              		@ sp needed
 4412 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4413              		.cfi_endproc
 4414              	.LFE38:
 4415              		.size	f_read, .-f_read
 4416              		.section	.text.f_write,"ax",%progbits
 4417              		.align	2
 4418              		.global	f_write
 4419              		.thumb
 4420              		.thumb_func
 4421              		.type	f_write, %function
 4422              	f_write:
 4423              	.LFB39:
3975:..\..\ff14\source/ff.c **** 
3976:..\..\ff14\source/ff.c **** 
3977:..\..\ff14\source/ff.c **** 
3978:..\..\ff14\source/ff.c **** 
3979:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
3980:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3981:..\..\ff14\source/ff.c **** /* Write File                                                            */
3982:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
3983:..\..\ff14\source/ff.c **** 
3984:..\..\ff14\source/ff.c **** FRESULT f_write (
3985:..\..\ff14\source/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3986:..\..\ff14\source/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3987:..\..\ff14\source/ff.c **** 	UINT btw,			/* Number of bytes to write */
3988:..\..\ff14\source/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
3989:..\..\ff14\source/ff.c **** )
3990:..\..\ff14\source/ff.c **** {
 4424              		.loc 1 3990 0
 4425              		.cfi_startproc
 4426              		@ args = 0, pretend = 0, frame = 16
 4427              		@ frame_needed = 0, uses_anonymous_args = 0
 4428              	.LVL687:
 4429 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4430              		.cfi_def_cfa_offset 36
 4431              		.cfi_offset 4, -36
 4432              		.cfi_offset 5, -32
 4433              		.cfi_offset 6, -28
 4434              		.cfi_offset 7, -24
 4435              		.cfi_offset 8, -20
 4436              		.cfi_offset 9, -16
 4437              		.cfi_offset 10, -12
 4438              		.cfi_offset 11, -8
 4439              		.cfi_offset 14, -4
 4440 0004 85B0     		sub	sp, sp, #20
 4441              		.cfi_def_cfa_offset 56
 4442 0006 0446     		mov	r4, r0
 4443 0008 8846     		mov	r8, r1
 4444 000a 1646     		mov	r6, r2
 4445 000c 1F46     		mov	r7, r3
 4446              	.LVL688:
3991:..\..\ff14\source/ff.c **** 	FRESULT res;
3992:..\..\ff14\source/ff.c **** 	FATFS *fs;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 158


3993:..\..\ff14\source/ff.c **** 	DWORD clst;
3994:..\..\ff14\source/ff.c **** 	LBA_t sect;
3995:..\..\ff14\source/ff.c **** 	UINT wcnt, cc, csect;
3996:..\..\ff14\source/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3997:..\..\ff14\source/ff.c **** 
3998:..\..\ff14\source/ff.c **** 
3999:..\..\ff14\source/ff.c **** 	*bw = 0;	/* Clear write byte counter */
 4447              		.loc 1 3999 0
 4448 000e 0023     		movs	r3, #0
 4449              	.LVL689:
 4450 0010 3B60     		str	r3, [r7]
4000:..\..\ff14\source/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 4451              		.loc 1 4000 0
 4452 0012 0190     		str	r0, [sp, #4]
 4453 0014 03A9     		add	r1, sp, #12
 4454              	.LVL690:
 4455 0016 FFF7FEFF 		bl	validate
 4456              	.LVL691:
4001:..\..\ff14\source/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4457              		.loc 1 4001 0
 4458 001a 0028     		cmp	r0, #0
 4459 001c 40F0C180 		bne	.L416
 4460              		.loc 1 4001 0 is_stmt 0 discriminator 2
 4461 0020 607C     		ldrb	r0, [r4, #17]	@ zero_extendqisi2
 4462              	.LVL692:
 4463 0022 0028     		cmp	r0, #0
 4464 0024 40F0BF80 		bne	.L395
4002:..\..\ff14\source/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 4465              		.loc 1 4002 0 is_stmt 1
 4466 0028 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4467 002a 13F0020F 		tst	r3, #2
 4468 002e 00F0B980 		beq	.L418
4003:..\..\ff14\source/ff.c **** 
4004:..\..\ff14\source/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4 GiB at FAT volume) */
4005:..\..\ff14\source/ff.c **** 	if ((!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
 4469              		.loc 1 4005 0
 4470 0032 6369     		ldr	r3, [r4, #20]
 4471 0034 F342     		cmn	r3, r6
 4472 0036 C0F0AB80 		bcc	.L397
4006:..\..\ff14\source/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 4473              		.loc 1 4006 0
 4474 003a DE43     		mvns	r6, r3
 4475              	.LVL693:
 4476 003c A8E0     		b	.L397
 4477              	.LVL694:
 4478              	.L415:
4007:..\..\ff14\source/ff.c **** 	}
4008:..\..\ff14\source/ff.c **** 
4009:..\..\ff14\source/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
4010:..\..\ff14\source/ff.c **** 		btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.
4011:..\..\ff14\source/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 4479              		.loc 1 4011 0
 4480 003e 6369     		ldr	r3, [r4, #20]
 4481 0040 C3F30802 		ubfx	r2, r3, #0, #9
 4482 0044 002A     		cmp	r2, #0
 4483 0046 40F08380 		bne	.L398
4012:..\..\ff14\source/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 159


 4484              		.loc 1 4012 0
 4485 004a 039A     		ldr	r2, [sp, #12]
 4486 004c B2F80A90 		ldrh	r9, [r2, #10]
 4487 0050 09F1FF39 		add	r9, r9, #-1
 4488              	.LVL695:
4013:..\..\ff14\source/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 4489              		.loc 1 4013 0
 4490 0054 19EA5329 		ands	r9, r9, r3, lsr #9
 4491              	.LVL696:
 4492 0058 1DD1     		bne	.L399
4014:..\..\ff14\source/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 4493              		.loc 1 4014 0
 4494 005a 33B9     		cbnz	r3, .L400
4015:..\..\ff14\source/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 4495              		.loc 1 4015 0
 4496 005c A068     		ldr	r0, [r4, #8]
 4497              	.LVL697:
4016:..\..\ff14\source/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 4498              		.loc 1 4016 0
 4499 005e 40B9     		cbnz	r0, .L401
4017:..\..\ff14\source/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 4500              		.loc 1 4017 0
 4501 0060 0021     		movs	r1, #0
 4502 0062 0198     		ldr	r0, [sp, #4]
 4503              	.LVL698:
 4504 0064 FFF7FEFF 		bl	create_chain
 4505              	.LVL699:
 4506 0068 03E0     		b	.L401
 4507              	.LVL700:
 4508              	.L400:
4018:..\..\ff14\source/ff.c **** 					}
4019:..\..\ff14\source/ff.c **** 				} else {					/* On the middle or end of the file */
4020:..\..\ff14\source/ff.c **** #if FF_USE_FASTSEEK
4021:..\..\ff14\source/ff.c **** 					if (fp->cltbl) {
4022:..\..\ff14\source/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
4023:..\..\ff14\source/ff.c **** 					} else
4024:..\..\ff14\source/ff.c **** #endif
4025:..\..\ff14\source/ff.c **** 					{
4026:..\..\ff14\source/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 4509              		.loc 1 4026 0
 4510 006a A169     		ldr	r1, [r4, #24]
 4511 006c 0198     		ldr	r0, [sp, #4]
 4512 006e FFF7FEFF 		bl	create_chain
 4513              	.LVL701:
 4514              	.L401:
4027:..\..\ff14\source/ff.c **** 					}
4028:..\..\ff14\source/ff.c **** 				}
4029:..\..\ff14\source/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 4515              		.loc 1 4029 0
 4516 0072 0028     		cmp	r0, #0
 4517 0074 00F08F80 		beq	.L402
4030:..\..\ff14\source/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 4518              		.loc 1 4030 0
 4519 0078 0128     		cmp	r0, #1
 4520 007a 02D1     		bne	.L403
 4521              		.loc 1 4030 0 is_stmt 0 discriminator 1
 4522 007c 0220     		movs	r0, #2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 160


 4523              	.LVL702:
 4524 007e 6074     		strb	r0, [r4, #17]
 4525 0080 91E0     		b	.L395
 4526              	.LVL703:
 4527              	.L403:
4031:..\..\ff14\source/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4528              		.loc 1 4031 0 is_stmt 1
 4529 0082 B0F1FF3F 		cmp	r0, #-1
 4530 0086 02D1     		bne	.L404
 4531              		.loc 1 4031 0 is_stmt 0 discriminator 1
 4532 0088 0120     		movs	r0, #1
 4533              	.LVL704:
 4534 008a 6074     		strb	r0, [r4, #17]
 4535 008c 8BE0     		b	.L395
 4536              	.LVL705:
 4537              	.L404:
4032:..\..\ff14\source/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 4538              		.loc 1 4032 0 is_stmt 1
 4539 008e A061     		str	r0, [r4, #24]
4033:..\..\ff14\source/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 4540              		.loc 1 4033 0
 4541 0090 A368     		ldr	r3, [r4, #8]
 4542 0092 03B9     		cbnz	r3, .L399
 4543              		.loc 1 4033 0 is_stmt 0 discriminator 1
 4544 0094 A060     		str	r0, [r4, #8]
 4545              	.LVL706:
 4546              	.L399:
4034:..\..\ff14\source/ff.c **** 			}
4035:..\..\ff14\source/ff.c **** #if FF_FS_TINY
4036:..\..\ff14\source/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
4037:..\..\ff14\source/ff.c **** #else
4038:..\..\ff14\source/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
 4547              		.loc 1 4038 0 is_stmt 1
 4548 0096 94F91030 		ldrsb	r3, [r4, #16]
 4549 009a 002B     		cmp	r3, #0
 4550 009c 0FDA     		bge	.L405
4039:..\..\ff14\source/ff.c **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4551              		.loc 1 4039 0
 4552 009e 0123     		movs	r3, #1
 4553 00a0 E269     		ldr	r2, [r4, #28]
 4554 00a2 04F12801 		add	r1, r4, #40
 4555 00a6 0398     		ldr	r0, [sp, #12]
 4556 00a8 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4557 00aa FFF7FEFF 		bl	disk_write
 4558              	.LVL707:
 4559 00ae 10B1     		cbz	r0, .L406
 4560              		.loc 1 4039 0 is_stmt 0 discriminator 1
 4561 00b0 0120     		movs	r0, #1
 4562 00b2 6074     		strb	r0, [r4, #17]
 4563 00b4 77E0     		b	.L395
 4564              	.L406:
4040:..\..\ff14\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 4565              		.loc 1 4040 0 is_stmt 1
 4566 00b6 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4567 00b8 03F07F03 		and	r3, r3, #127
 4568 00bc 2374     		strb	r3, [r4, #16]
 4569              	.L405:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 161


4041:..\..\ff14\source/ff.c **** 			}
4042:..\..\ff14\source/ff.c **** #endif
4043:..\..\ff14\source/ff.c **** 			sect = clst2sect(fs, fp->clust);	/* Get current sector */
 4570              		.loc 1 4043 0
 4571 00be DDF80CB0 		ldr	fp, [sp, #12]
 4572 00c2 A169     		ldr	r1, [r4, #24]
 4573 00c4 5846     		mov	r0, fp
 4574 00c6 FFF7FEFF 		bl	clst2sect
 4575              	.LVL708:
4044:..\..\ff14\source/ff.c **** 			if (sect == 0) ABORT(fs, FR_INT_ERR);
 4576              		.loc 1 4044 0
 4577 00ca 8246     		mov	r10, r0
 4578 00cc 10B9     		cbnz	r0, .L407
 4579              		.loc 1 4044 0 is_stmt 0 discriminator 1
 4580 00ce 0220     		movs	r0, #2
 4581              	.LVL709:
 4582 00d0 6074     		strb	r0, [r4, #17]
 4583 00d2 68E0     		b	.L395
 4584              	.LVL710:
 4585              	.L407:
4045:..\..\ff14\source/ff.c **** 			sect += csect;
 4586              		.loc 1 4045 0 is_stmt 1
 4587 00d4 CA44     		add	r10, r10, r9
 4588              	.LVL711:
4046:..\..\ff14\source/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
4047:..\..\ff14\source/ff.c **** 			if (cc > 0) {					/* Write maximum contiguous sectors directly */
 4589              		.loc 1 4047 0
 4590 00d6 750A     		lsrs	r5, r6, #9
 4591              	.LVL712:
 4592 00d8 25D0     		beq	.L408
4048:..\..\ff14\source/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4593              		.loc 1 4048 0
 4594 00da 09EB0503 		add	r3, r9, r5
 4595 00de BBF80A20 		ldrh	r2, [fp, #10]
 4596 00e2 9342     		cmp	r3, r2
 4597 00e4 01D9     		bls	.L409
4049:..\..\ff14\source/ff.c **** 					cc = fs->csize - csect;
 4598              		.loc 1 4049 0
 4599 00e6 C9EB0205 		rsb	r5, r9, r2
 4600              	.LVL713:
 4601              	.L409:
4050:..\..\ff14\source/ff.c **** 				}
4051:..\..\ff14\source/ff.c **** 				if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4602              		.loc 1 4051 0
 4603 00ea 2B46     		mov	r3, r5
 4604 00ec 5246     		mov	r2, r10
 4605 00ee 4146     		mov	r1, r8
 4606 00f0 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4607 00f4 FFF7FEFF 		bl	disk_write
 4608              	.LVL714:
 4609 00f8 10B1     		cbz	r0, .L410
 4610              		.loc 1 4051 0 is_stmt 0 discriminator 1
 4611 00fa 0120     		movs	r0, #1
 4612 00fc 6074     		strb	r0, [r4, #17]
 4613 00fe 52E0     		b	.L395
 4614              	.L410:
4052:..\..\ff14\source/ff.c **** #if FF_FS_MINIMIZE <= 2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 162


4053:..\..\ff14\source/ff.c **** #if FF_FS_TINY
4054:..\..\ff14\source/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
4055:..\..\ff14\source/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
4056:..\..\ff14\source/ff.c **** 					fs->wflag = 0;
4057:..\..\ff14\source/ff.c **** 				}
4058:..\..\ff14\source/ff.c **** #else
4059:..\..\ff14\source/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
 4615              		.loc 1 4059 0 is_stmt 1
 4616 0100 E169     		ldr	r1, [r4, #28]
 4617 0102 CAEB0101 		rsb	r1, r10, r1
 4618 0106 8D42     		cmp	r5, r1
 4619 0108 0BD9     		bls	.L411
4060:..\..\ff14\source/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 4620              		.loc 1 4060 0
 4621 010a 4FF40072 		mov	r2, #512
 4622 010e 08EB4121 		add	r1, r8, r1, lsl #9
 4623 0112 04F12800 		add	r0, r4, #40
 4624 0116 FFF7FEFF 		bl	mem_cpy
 4625              	.LVL715:
4061:..\..\ff14\source/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4626              		.loc 1 4061 0
 4627 011a 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4628 011c 03F07F03 		and	r3, r3, #127
 4629 0120 2374     		strb	r3, [r4, #16]
 4630              	.L411:
4062:..\..\ff14\source/ff.c **** 				}
4063:..\..\ff14\source/ff.c **** #endif
4064:..\..\ff14\source/ff.c **** #endif
4065:..\..\ff14\source/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
 4631              		.loc 1 4065 0
 4632 0122 6D02     		lsls	r5, r5, #9
 4633              	.LVL716:
4066:..\..\ff14\source/ff.c **** 				continue;
 4634              		.loc 1 4066 0
 4635 0124 27E0     		b	.L412
 4636              	.LVL717:
 4637              	.L408:
4067:..\..\ff14\source/ff.c **** 			}
4068:..\..\ff14\source/ff.c **** #if FF_FS_TINY
4069:..\..\ff14\source/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
4070:..\..\ff14\source/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
4071:..\..\ff14\source/ff.c **** 				fs->winsect = sect;
4072:..\..\ff14\source/ff.c **** 			}
4073:..\..\ff14\source/ff.c **** #else
4074:..\..\ff14\source/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
 4638              		.loc 1 4074 0
 4639 0126 E369     		ldr	r3, [r4, #28]
 4640 0128 9A45     		cmp	r10, r3
 4641 012a 0FD0     		beq	.L413
4075:..\..\ff14\source/ff.c **** 				fp->fptr < fp->obj.objsize &&
 4642              		.loc 1 4075 0 discriminator 1
 4643 012c 6269     		ldr	r2, [r4, #20]
 4644 012e E368     		ldr	r3, [r4, #12]
4074:..\..\ff14\source/ff.c **** 				fp->fptr < fp->obj.objsize &&
 4645              		.loc 1 4074 0 discriminator 1
 4646 0130 9A42     		cmp	r2, r3
 4647 0132 0BD2     		bcs	.L413
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 163


4076:..\..\ff14\source/ff.c **** 				disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
 4648              		.loc 1 4076 0
 4649 0134 0123     		movs	r3, #1
 4650 0136 5246     		mov	r2, r10
 4651 0138 04F12801 		add	r1, r4, #40
 4652 013c 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4653 0140 FFF7FEFF 		bl	disk_read
 4654              	.LVL718:
4075:..\..\ff14\source/ff.c **** 				fp->fptr < fp->obj.objsize &&
 4655              		.loc 1 4075 0
 4656 0144 10B1     		cbz	r0, .L413
4077:..\..\ff14\source/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 4657              		.loc 1 4077 0
 4658 0146 0120     		movs	r0, #1
 4659 0148 6074     		strb	r0, [r4, #17]
 4660 014a 2CE0     		b	.L395
 4661              	.L413:
4078:..\..\ff14\source/ff.c **** 			}
4079:..\..\ff14\source/ff.c **** #endif
4080:..\..\ff14\source/ff.c **** 			fp->sect = sect;
 4662              		.loc 1 4080 0
 4663 014c C4F81CA0 		str	r10, [r4, #28]
 4664              	.LVL719:
 4665              	.L398:
4081:..\..\ff14\source/ff.c **** 		}
4082:..\..\ff14\source/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes remains in the sector */
 4666              		.loc 1 4082 0
 4667 0150 6369     		ldr	r3, [r4, #20]
 4668 0152 C3F30803 		ubfx	r3, r3, #0, #9
 4669 0156 C3F50075 		rsb	r5, r3, #512
 4670              	.LVL720:
4083:..\..\ff14\source/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 4671              		.loc 1 4083 0
 4672 015a AE42     		cmp	r6, r5
 4673 015c 00D2     		bcs	.L414
 4674 015e 3546     		mov	r5, r6
 4675              	.LVL721:
 4676              	.L414:
4084:..\..\ff14\source/ff.c **** #if FF_FS_TINY
4085:..\..\ff14\source/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
4086:..\..\ff14\source/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
4087:..\..\ff14\source/ff.c **** 		fs->wflag = 1;
4088:..\..\ff14\source/ff.c **** #else
4089:..\..\ff14\source/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
 4677              		.loc 1 4089 0
 4678 0160 04F12800 		add	r0, r4, #40
 4679 0164 2A46     		mov	r2, r5
 4680 0166 4146     		mov	r1, r8
 4681 0168 1844     		add	r0, r0, r3
 4682 016a FFF7FEFF 		bl	mem_cpy
 4683              	.LVL722:
4090:..\..\ff14\source/ff.c **** 		fp->flag |= FA_DIRTY;
 4684              		.loc 1 4090 0
 4685 016e 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4686 0170 63F07F03 		orn	r3, r3, #127
 4687 0174 2374     		strb	r3, [r4, #16]
 4688              	.L412:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 164


4010:..\..\ff14\source/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 4689              		.loc 1 4010 0
 4690 0176 761B     		subs	r6, r6, r5
 4691              	.LVL723:
 4692 0178 3B68     		ldr	r3, [r7]
 4693 017a 2B44     		add	r3, r3, r5
 4694 017c 3B60     		str	r3, [r7]
 4695 017e A844     		add	r8, r8, r5
 4696              	.LVL724:
 4697 0180 6369     		ldr	r3, [r4, #20]
 4698 0182 1D44     		add	r5, r5, r3
 4699              	.LVL725:
 4700 0184 6561     		str	r5, [r4, #20]
 4701 0186 E368     		ldr	r3, [r4, #12]
 4702 0188 9D42     		cmp	r5, r3
 4703 018a 38BF     		it	cc
 4704 018c 1D46     		movcc	r5, r3
 4705 018e E560     		str	r5, [r4, #12]
 4706              	.L397:
4009:..\..\ff14\source/ff.c **** 		btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.
 4707              		.loc 1 4009 0
 4708 0190 002E     		cmp	r6, #0
 4709 0192 7FF454AF 		bne	.L415
 4710              	.L402:
4091:..\..\ff14\source/ff.c **** #endif
4092:..\..\ff14\source/ff.c **** 	}
4093:..\..\ff14\source/ff.c **** 
4094:..\..\ff14\source/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
 4711              		.loc 1 4094 0
 4712 0196 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4713 0198 43F04003 		orr	r3, r3, #64
 4714 019c 2374     		strb	r3, [r4, #16]
4095:..\..\ff14\source/ff.c **** 
4096:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, FR_OK);
 4715              		.loc 1 4096 0
 4716 019e 0020     		movs	r0, #0
 4717 01a0 01E0     		b	.L395
 4718              	.LVL726:
 4719              	.L416:
 4720 01a2 00E0     		b	.L395
 4721              	.L418:
4002:..\..\ff14\source/ff.c **** 
 4722              		.loc 1 4002 0
 4723 01a4 0720     		movs	r0, #7
 4724              	.LVL727:
 4725              	.L395:
4097:..\..\ff14\source/ff.c **** }
 4726              		.loc 1 4097 0
 4727 01a6 05B0     		add	sp, sp, #20
 4728              		.cfi_def_cfa_offset 36
 4729              		@ sp needed
 4730 01a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4731              		.cfi_endproc
 4732              	.LFE39:
 4733              		.size	f_write, .-f_write
 4734              		.section	.text.f_sync,"ax",%progbits
 4735              		.align	2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 165


 4736              		.global	f_sync
 4737              		.thumb
 4738              		.thumb_func
 4739              		.type	f_sync, %function
 4740              	f_sync:
 4741              	.LFB40:
4098:..\..\ff14\source/ff.c **** 
4099:..\..\ff14\source/ff.c **** 
4100:..\..\ff14\source/ff.c **** 
4101:..\..\ff14\source/ff.c **** 
4102:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4103:..\..\ff14\source/ff.c **** /* Synchronize the File                                                  */
4104:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4105:..\..\ff14\source/ff.c **** 
4106:..\..\ff14\source/ff.c **** FRESULT f_sync (
4107:..\..\ff14\source/ff.c **** 	FIL* fp		/* Pointer to the file object */
4108:..\..\ff14\source/ff.c **** )
4109:..\..\ff14\source/ff.c **** {
 4742              		.loc 1 4109 0
 4743              		.cfi_startproc
 4744              		@ args = 0, pretend = 0, frame = 8
 4745              		@ frame_needed = 0, uses_anonymous_args = 0
 4746              	.LVL728:
 4747 0000 70B5     		push	{r4, r5, r6, lr}
 4748              		.cfi_def_cfa_offset 16
 4749              		.cfi_offset 4, -16
 4750              		.cfi_offset 5, -12
 4751              		.cfi_offset 6, -8
 4752              		.cfi_offset 14, -4
 4753 0002 82B0     		sub	sp, sp, #8
 4754              		.cfi_def_cfa_offset 24
 4755 0004 0446     		mov	r4, r0
4110:..\..\ff14\source/ff.c **** 	FRESULT res;
4111:..\..\ff14\source/ff.c **** 	FATFS *fs;
4112:..\..\ff14\source/ff.c **** 	DWORD tm;
4113:..\..\ff14\source/ff.c **** 	BYTE *dir;
4114:..\..\ff14\source/ff.c **** 
4115:..\..\ff14\source/ff.c **** 
4116:..\..\ff14\source/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 4756              		.loc 1 4116 0
 4757 0006 01A9     		add	r1, sp, #4
 4758 0008 FFF7FEFF 		bl	validate
 4759              	.LVL729:
4117:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 4760              		.loc 1 4117 0
 4761 000c 0028     		cmp	r0, #0
 4762 000e 3FD1     		bne	.L424
4118:..\..\ff14\source/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 4763              		.loc 1 4118 0
 4764 0010 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 4765 0012 12F0400F 		tst	r2, #64
 4766 0016 3CD0     		beq	.L425
4119:..\..\ff14\source/ff.c **** #if !FF_FS_TINY
4120:..\..\ff14\source/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
 4767              		.loc 1 4120 0
 4768 0018 12F0800F 		tst	r2, #128
 4769 001c 0CD0     		beq	.L423
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 166


4121:..\..\ff14\source/ff.c **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 4770              		.loc 1 4121 0
 4771 001e 0123     		movs	r3, #1
 4772 0020 E269     		ldr	r2, [r4, #28]
 4773 0022 04F12801 		add	r1, r4, #40
 4774 0026 0198     		ldr	r0, [sp, #4]
 4775              	.LVL730:
 4776 0028 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4777 002a FFF7FEFF 		bl	disk_write
 4778              	.LVL731:
 4779 002e 88BB     		cbnz	r0, .L426
4122:..\..\ff14\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 4780              		.loc 1 4122 0
 4781 0030 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4782 0032 03F07F03 		and	r3, r3, #127
 4783 0036 2374     		strb	r3, [r4, #16]
 4784              	.L423:
4123:..\..\ff14\source/ff.c **** 			}
4124:..\..\ff14\source/ff.c **** #endif
4125:..\..\ff14\source/ff.c **** 			/* Update the directory entry */
4126:..\..\ff14\source/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
 4785              		.loc 1 4126 0
 4786 0038 FFF7FEFF 		bl	get_fattime
 4787              	.LVL732:
 4788 003c 0646     		mov	r6, r0
 4789              	.LVL733:
4127:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4128:..\..\ff14\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
4129:..\..\ff14\source/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
4130:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {
4131:..\..\ff14\source/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
4132:..\..\ff14\source/ff.c **** 				}
4133:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {
4134:..\..\ff14\source/ff.c **** 					DIR dj;
4135:..\..\ff14\source/ff.c **** 					DEF_NAMBUF
4136:..\..\ff14\source/ff.c **** 
4137:..\..\ff14\source/ff.c **** 					INIT_NAMBUF(fs);
4138:..\..\ff14\source/ff.c **** 					res = load_obj_xdir(&dj, &fp->obj);	/* Load directory entry block */
4139:..\..\ff14\source/ff.c **** 					if (res == FR_OK) {
4140:..\..\ff14\source/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive attribute to indicate that the file has be
4141:..\..\ff14\source/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation information */
4142:..\..\ff14\source/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);		/* Update start cluster */
4143:..\..\ff14\source/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);		/* Update file size */
4144:..\..\ff14\source/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);	/* (FatFs does not support Valid 
4145:..\..\ff14\source/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
4146:..\..\ff14\source/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
4147:..\..\ff14\source/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
4148:..\..\ff14\source/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
4149:..\..\ff14\source/ff.c **** 						if (res == FR_OK) {
4150:..\..\ff14\source/ff.c **** 							res = sync_fs(fs);
4151:..\..\ff14\source/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
4152:..\..\ff14\source/ff.c **** 						}
4153:..\..\ff14\source/ff.c **** 					}
4154:..\..\ff14\source/ff.c **** 					FREE_NAMBUF();
4155:..\..\ff14\source/ff.c **** 				}
4156:..\..\ff14\source/ff.c **** 			} else
4157:..\..\ff14\source/ff.c **** #endif
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 167


4158:..\..\ff14\source/ff.c **** 			{
4159:..\..\ff14\source/ff.c **** 				res = move_window(fs, fp->dir_sect);
 4790              		.loc 1 4159 0
 4791 003e 216A     		ldr	r1, [r4, #32]
 4792 0040 0198     		ldr	r0, [sp, #4]
 4793              	.LVL734:
 4794 0042 FFF7FEFF 		bl	move_window
 4795              	.LVL735:
4160:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {
 4796              		.loc 1 4160 0
 4797 0046 38BB     		cbnz	r0, .L427
4161:..\..\ff14\source/ff.c **** 					dir = fp->dir_ptr;
 4798              		.loc 1 4161 0
 4799 0048 656A     		ldr	r5, [r4, #36]
 4800              	.LVL736:
4162:..\..\ff14\source/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive attribute to indicate that the file has been chan
 4801              		.loc 1 4162 0
 4802 004a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 4803 004c 43F02003 		orr	r3, r3, #32
 4804 0050 EB72     		strb	r3, [r5, #11]
4163:..\..\ff14\source/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation information  */
 4805              		.loc 1 4163 0
 4806 0052 A268     		ldr	r2, [r4, #8]
 4807 0054 2946     		mov	r1, r5
 4808 0056 2068     		ldr	r0, [r4]
 4809              	.LVL737:
 4810 0058 FFF7FEFF 		bl	st_clust
 4811              	.LVL738:
4164:..\..\ff14\source/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 4812              		.loc 1 4164 0
 4813 005c E168     		ldr	r1, [r4, #12]
 4814 005e 05F11C00 		add	r0, r5, #28
 4815 0062 FFF7FEFF 		bl	st_dword
 4816              	.LVL739:
4165:..\..\ff14\source/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 4817              		.loc 1 4165 0
 4818 0066 3146     		mov	r1, r6
 4819 0068 05F11600 		add	r0, r5, #22
 4820 006c FFF7FEFF 		bl	st_dword
 4821              	.LVL740:
4166:..\..\ff14\source/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 4822              		.loc 1 4166 0
 4823 0070 0021     		movs	r1, #0
 4824 0072 05F11200 		add	r0, r5, #18
 4825 0076 FFF7FEFF 		bl	st_word
 4826              	.LVL741:
4167:..\..\ff14\source/ff.c **** 					fs->wflag = 1;
 4827              		.loc 1 4167 0
 4828 007a 0122     		movs	r2, #1
 4829 007c 019B     		ldr	r3, [sp, #4]
 4830 007e DA70     		strb	r2, [r3, #3]
4168:..\..\ff14\source/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 4831              		.loc 1 4168 0
 4832 0080 0198     		ldr	r0, [sp, #4]
 4833 0082 FFF7FEFF 		bl	sync_fs
 4834              	.LVL742:
4169:..\..\ff14\source/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 168


 4835              		.loc 1 4169 0
 4836 0086 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4837 0088 23F04003 		bic	r3, r3, #64
 4838 008c 2374     		strb	r3, [r4, #16]
 4839 008e 03E0     		b	.L422
 4840              	.LVL743:
 4841              	.L424:
 4842 0090 02E0     		b	.L422
 4843              	.L425:
 4844 0092 01E0     		b	.L422
 4845              	.LVL744:
 4846              	.L426:
4121:..\..\ff14\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 4847              		.loc 1 4121 0
 4848 0094 0120     		movs	r0, #1
 4849 0096 FFE7     		b	.L422
 4850              	.LVL745:
 4851              	.L427:
 4852              	.L422:
4170:..\..\ff14\source/ff.c **** 				}
4171:..\..\ff14\source/ff.c **** 			}
4172:..\..\ff14\source/ff.c **** 		}
4173:..\..\ff14\source/ff.c **** 	}
4174:..\..\ff14\source/ff.c **** 
4175:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
4176:..\..\ff14\source/ff.c **** }
 4853              		.loc 1 4176 0
 4854 0098 02B0     		add	sp, sp, #8
 4855              		.cfi_def_cfa_offset 16
 4856              		@ sp needed
 4857 009a 70BD     		pop	{r4, r5, r6, pc}
 4858              		.cfi_endproc
 4859              	.LFE40:
 4860              		.size	f_sync, .-f_sync
 4861              		.section	.text.f_close,"ax",%progbits
 4862              		.align	2
 4863              		.global	f_close
 4864              		.thumb
 4865              		.thumb_func
 4866              		.type	f_close, %function
 4867              	f_close:
 4868              	.LFB41:
4177:..\..\ff14\source/ff.c **** 
4178:..\..\ff14\source/ff.c **** #endif /* !FF_FS_READONLY */
4179:..\..\ff14\source/ff.c **** 
4180:..\..\ff14\source/ff.c **** 
4181:..\..\ff14\source/ff.c **** 
4182:..\..\ff14\source/ff.c **** 
4183:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4184:..\..\ff14\source/ff.c **** /* Close File                                                            */
4185:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4186:..\..\ff14\source/ff.c **** 
4187:..\..\ff14\source/ff.c **** FRESULT f_close (
4188:..\..\ff14\source/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
4189:..\..\ff14\source/ff.c **** )
4190:..\..\ff14\source/ff.c **** {
 4869              		.loc 1 4190 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 169


 4870              		.cfi_startproc
 4871              		@ args = 0, pretend = 0, frame = 8
 4872              		@ frame_needed = 0, uses_anonymous_args = 0
 4873              	.LVL746:
 4874 0000 10B5     		push	{r4, lr}
 4875              		.cfi_def_cfa_offset 8
 4876              		.cfi_offset 4, -8
 4877              		.cfi_offset 14, -4
 4878 0002 82B0     		sub	sp, sp, #8
 4879              		.cfi_def_cfa_offset 16
 4880 0004 0446     		mov	r4, r0
4191:..\..\ff14\source/ff.c **** 	FRESULT res;
4192:..\..\ff14\source/ff.c **** 	FATFS *fs;
4193:..\..\ff14\source/ff.c **** 
4194:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
4195:..\..\ff14\source/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
 4881              		.loc 1 4195 0
 4882 0006 FFF7FEFF 		bl	f_sync
 4883              	.LVL747:
4196:..\..\ff14\source/ff.c **** 	if (res == FR_OK)
 4884              		.loc 1 4196 0
 4885 000a 0346     		mov	r3, r0
 4886 000c 38B9     		cbnz	r0, .L430
4197:..\..\ff14\source/ff.c **** #endif
4198:..\..\ff14\source/ff.c **** 	{
4199:..\..\ff14\source/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
 4887              		.loc 1 4199 0
 4888 000e 01A9     		add	r1, sp, #4
 4889 0010 2046     		mov	r0, r4
 4890              	.LVL748:
 4891 0012 FFF7FEFF 		bl	validate
 4892              	.LVL749:
4200:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
 4893              		.loc 1 4200 0
 4894 0016 0346     		mov	r3, r0
 4895 0018 08B9     		cbnz	r0, .L430
4201:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
4202:..\..\ff14\source/ff.c **** 			res = dec_lock(fp->obj.lockid);		/* Decrement file open counter */
4203:..\..\ff14\source/ff.c **** 			if (res == FR_OK) fp->obj.fs = 0;	/* Invalidate file object */
4204:..\..\ff14\source/ff.c **** #else
4205:..\..\ff14\source/ff.c **** 			fp->obj.fs = 0;	/* Invalidate file object */
 4896              		.loc 1 4205 0
 4897 001a 0022     		movs	r2, #0
 4898 001c 2260     		str	r2, [r4]
 4899              	.L430:
 4900              	.LVL750:
4206:..\..\ff14\source/ff.c **** #endif
4207:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT
4208:..\..\ff14\source/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
4209:..\..\ff14\source/ff.c **** #endif
4210:..\..\ff14\source/ff.c **** 		}
4211:..\..\ff14\source/ff.c **** 	}
4212:..\..\ff14\source/ff.c **** 	return res;
4213:..\..\ff14\source/ff.c **** }
 4901              		.loc 1 4213 0
 4902 001e 1846     		mov	r0, r3
 4903 0020 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 170


 4904              		.cfi_def_cfa_offset 8
 4905              		@ sp needed
 4906 0022 10BD     		pop	{r4, pc}
 4907              		.cfi_endproc
 4908              	.LFE41:
 4909              		.size	f_close, .-f_close
 4910              		.section	.text.f_lseek,"ax",%progbits
 4911              		.align	2
 4912              		.global	f_lseek
 4913              		.thumb
 4914              		.thumb_func
 4915              		.type	f_lseek, %function
 4916              	f_lseek:
 4917              	.LFB42:
4214:..\..\ff14\source/ff.c **** 
4215:..\..\ff14\source/ff.c **** 
4216:..\..\ff14\source/ff.c **** 
4217:..\..\ff14\source/ff.c **** 
4218:..\..\ff14\source/ff.c **** #if FF_FS_RPATH >= 1
4219:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4220:..\..\ff14\source/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
4221:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4222:..\..\ff14\source/ff.c **** 
4223:..\..\ff14\source/ff.c **** FRESULT f_chdrive (
4224:..\..\ff14\source/ff.c **** 	const TCHAR* path		/* Drive number to set */
4225:..\..\ff14\source/ff.c **** )
4226:..\..\ff14\source/ff.c **** {
4227:..\..\ff14\source/ff.c **** 	int vol;
4228:..\..\ff14\source/ff.c **** 
4229:..\..\ff14\source/ff.c **** 
4230:..\..\ff14\source/ff.c **** 	/* Get logical drive number */
4231:..\..\ff14\source/ff.c **** 	vol = get_ldnumber(&path);
4232:..\..\ff14\source/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
4233:..\..\ff14\source/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
4234:..\..\ff14\source/ff.c **** 
4235:..\..\ff14\source/ff.c **** 	return FR_OK;
4236:..\..\ff14\source/ff.c **** }
4237:..\..\ff14\source/ff.c **** 
4238:..\..\ff14\source/ff.c **** 
4239:..\..\ff14\source/ff.c **** 
4240:..\..\ff14\source/ff.c **** FRESULT f_chdir (
4241:..\..\ff14\source/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4242:..\..\ff14\source/ff.c **** )
4243:..\..\ff14\source/ff.c **** {
4244:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID == 2
4245:..\..\ff14\source/ff.c **** 	UINT i;
4246:..\..\ff14\source/ff.c **** #endif
4247:..\..\ff14\source/ff.c **** 	FRESULT res;
4248:..\..\ff14\source/ff.c **** 	DIR dj;
4249:..\..\ff14\source/ff.c **** 	FATFS *fs;
4250:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
4251:..\..\ff14\source/ff.c **** 
4252:..\..\ff14\source/ff.c **** 
4253:..\..\ff14\source/ff.c **** 	/* Get logical drive */
4254:..\..\ff14\source/ff.c **** 	res = mount_volume(&path, &fs, 0);
4255:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
4256:..\..\ff14\source/ff.c **** 		dj.obj.fs = fs;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 171


4257:..\..\ff14\source/ff.c **** 		INIT_NAMBUF(fs);
4258:..\..\ff14\source/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
4259:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
4260:..\..\ff14\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Is it the start directory itself? */
4261:..\..\ff14\source/ff.c **** 				fs->cdir = dj.obj.sclust;
4262:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4263:..\..\ff14\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4264:..\..\ff14\source/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
4265:..\..\ff14\source/ff.c **** 					fs->cdc_size = dj.obj.c_size;
4266:..\..\ff14\source/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
4267:..\..\ff14\source/ff.c **** 				}
4268:..\..\ff14\source/ff.c **** #endif
4269:..\..\ff14\source/ff.c **** 			} else {
4270:..\..\ff14\source/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
4271:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4272:..\..\ff14\source/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4273:..\..\ff14\source/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
4274:..\..\ff14\source/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
4275:..\..\ff14\source/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
4276:..\..\ff14\source/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
4277:..\..\ff14\source/ff.c **** 					} else
4278:..\..\ff14\source/ff.c **** #endif
4279:..\..\ff14\source/ff.c **** 					{
4280:..\..\ff14\source/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
4281:..\..\ff14\source/ff.c **** 					}
4282:..\..\ff14\source/ff.c **** 				} else {
4283:..\..\ff14\source/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
4284:..\..\ff14\source/ff.c **** 				}
4285:..\..\ff14\source/ff.c **** 			}
4286:..\..\ff14\source/ff.c **** 		}
4287:..\..\ff14\source/ff.c **** 		FREE_NAMBUF();
4288:..\..\ff14\source/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4289:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID == 2	/* Also current drive is changed at Unix style volume ID */
4290:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
4291:..\..\ff14\source/ff.c **** 			for (i = FF_VOLUMES - 1; i && fs != FatFs[i]; i--) ;	/* Set current drive */
4292:..\..\ff14\source/ff.c **** 			CurrVol = (BYTE)i;
4293:..\..\ff14\source/ff.c **** 		}
4294:..\..\ff14\source/ff.c **** #endif
4295:..\..\ff14\source/ff.c **** 	}
4296:..\..\ff14\source/ff.c **** 
4297:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
4298:..\..\ff14\source/ff.c **** }
4299:..\..\ff14\source/ff.c **** 
4300:..\..\ff14\source/ff.c **** 
4301:..\..\ff14\source/ff.c **** #if FF_FS_RPATH >= 2
4302:..\..\ff14\source/ff.c **** FRESULT f_getcwd (
4303:..\..\ff14\source/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
4304:..\..\ff14\source/ff.c **** 	UINT len		/* Size of buff in unit of TCHAR */
4305:..\..\ff14\source/ff.c **** )
4306:..\..\ff14\source/ff.c **** {
4307:..\..\ff14\source/ff.c **** 	FRESULT res;
4308:..\..\ff14\source/ff.c **** 	DIR dj;
4309:..\..\ff14\source/ff.c **** 	FATFS *fs;
4310:..\..\ff14\source/ff.c **** 	UINT i, n;
4311:..\..\ff14\source/ff.c **** 	DWORD ccl;
4312:..\..\ff14\source/ff.c **** 	TCHAR *tp = buff;
4313:..\..\ff14\source/ff.c **** #if FF_VOLUMES >= 2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 172


4314:..\..\ff14\source/ff.c **** 	UINT vl;
4315:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID
4316:..\..\ff14\source/ff.c **** 	const char *vp;
4317:..\..\ff14\source/ff.c **** #endif
4318:..\..\ff14\source/ff.c **** #endif
4319:..\..\ff14\source/ff.c **** 	FILINFO fno;
4320:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
4321:..\..\ff14\source/ff.c **** 
4322:..\..\ff14\source/ff.c **** 
4323:..\..\ff14\source/ff.c **** 	/* Get logical drive */
4324:..\..\ff14\source/ff.c **** 	buff[0] = 0;	/* Set null string to get current volume */
4325:..\..\ff14\source/ff.c **** 	res = mount_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
4326:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
4327:..\..\ff14\source/ff.c **** 		dj.obj.fs = fs;
4328:..\..\ff14\source/ff.c **** 		INIT_NAMBUF(fs);
4329:..\..\ff14\source/ff.c **** 
4330:..\..\ff14\source/ff.c **** 		/* Follow parent directories and create the path */
4331:..\..\ff14\source/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
4332:..\..\ff14\source/ff.c **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root pat
4333:..\..\ff14\source/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
4334:..\..\ff14\source/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
4335:..\..\ff14\source/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
4336:..\..\ff14\source/ff.c **** 				if (res != FR_OK) break;
4337:..\..\ff14\source/ff.c **** 				res = move_window(fs, dj.sect);
4338:..\..\ff14\source/ff.c **** 				if (res != FR_OK) break;
4339:..\..\ff14\source/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
4340:..\..\ff14\source/ff.c **** 				res = dir_sdi(&dj, 0);
4341:..\..\ff14\source/ff.c **** 				if (res != FR_OK) break;
4342:..\..\ff14\source/ff.c **** 				do {							/* Find the entry links to the child directory */
4343:..\..\ff14\source/ff.c **** 					res = DIR_READ_FILE(&dj);
4344:..\..\ff14\source/ff.c **** 					if (res != FR_OK) break;
4345:..\..\ff14\source/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
4346:..\..\ff14\source/ff.c **** 					res = dir_next(&dj, 0);
4347:..\..\ff14\source/ff.c **** 				} while (res == FR_OK);
4348:..\..\ff14\source/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
4349:..\..\ff14\source/ff.c **** 				if (res != FR_OK) break;
4350:..\..\ff14\source/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
4351:..\..\ff14\source/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;	/* Name length */
4352:..\..\ff14\source/ff.c **** 				if (i < n + 1) {	/* Insufficient space to store the path name? */
4353:..\..\ff14\source/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
4354:..\..\ff14\source/ff.c **** 				}
4355:..\..\ff14\source/ff.c **** 				while (n) buff[--i] = fno.fname[--n];	/* Stack the name */
4356:..\..\ff14\source/ff.c **** 				buff[--i] = '/';
4357:..\..\ff14\source/ff.c **** 			}
4358:..\..\ff14\source/ff.c **** 		}
4359:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
4360:..\..\ff14\source/ff.c **** 			if (i == len) buff[--i] = '/';	/* Is it the root-directory? */
4361:..\..\ff14\source/ff.c **** #if FF_VOLUMES >= 2			/* Put drive prefix */
4362:..\..\ff14\source/ff.c **** 			vl = 0;
4363:..\..\ff14\source/ff.c **** #if FF_STR_VOLUME_ID >= 1	/* String volume ID */
4364:..\..\ff14\source/ff.c **** 			for (n = 0, vp = (const char*)VolumeStr[CurrVol]; vp[n]; n++) ;
4365:..\..\ff14\source/ff.c **** 			if (i >= n + 2) {
4366:..\..\ff14\source/ff.c **** 				if (FF_STR_VOLUME_ID == 2) *tp++ = (TCHAR)'/';
4367:..\..\ff14\source/ff.c **** 				for (vl = 0; vl < n; *tp++ = (TCHAR)vp[vl], vl++) ;
4368:..\..\ff14\source/ff.c **** 				if (FF_STR_VOLUME_ID == 1) *tp++ = (TCHAR)':';
4369:..\..\ff14\source/ff.c **** 				vl++;
4370:..\..\ff14\source/ff.c **** 			}
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 173


4371:..\..\ff14\source/ff.c **** #else						/* Numeric volume ID */
4372:..\..\ff14\source/ff.c **** 			if (i >= 3) {
4373:..\..\ff14\source/ff.c **** 				*tp++ = (TCHAR)'0' + CurrVol;
4374:..\..\ff14\source/ff.c **** 				*tp++ = (TCHAR)':';
4375:..\..\ff14\source/ff.c **** 				vl = 2;
4376:..\..\ff14\source/ff.c **** 			}
4377:..\..\ff14\source/ff.c **** #endif
4378:..\..\ff14\source/ff.c **** 			if (vl == 0) res = FR_NOT_ENOUGH_CORE;
4379:..\..\ff14\source/ff.c **** #endif
4380:..\..\ff14\source/ff.c **** 			/* Add current directory path */
4381:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {
4382:..\..\ff14\source/ff.c **** 				do *tp++ = buff[i++]; while (i < len);	/* Copy stacked path string */
4383:..\..\ff14\source/ff.c **** 			}
4384:..\..\ff14\source/ff.c **** 		}
4385:..\..\ff14\source/ff.c **** 		FREE_NAMBUF();
4386:..\..\ff14\source/ff.c **** 	}
4387:..\..\ff14\source/ff.c **** 
4388:..\..\ff14\source/ff.c **** 	*tp = 0;
4389:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
4390:..\..\ff14\source/ff.c **** }
4391:..\..\ff14\source/ff.c **** 
4392:..\..\ff14\source/ff.c **** #endif /* FF_FS_RPATH >= 2 */
4393:..\..\ff14\source/ff.c **** #endif /* FF_FS_RPATH >= 1 */
4394:..\..\ff14\source/ff.c **** 
4395:..\..\ff14\source/ff.c **** 
4396:..\..\ff14\source/ff.c **** 
4397:..\..\ff14\source/ff.c **** #if FF_FS_MINIMIZE <= 2
4398:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4399:..\..\ff14\source/ff.c **** /* Seek File Read/Write Pointer                                          */
4400:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4401:..\..\ff14\source/ff.c **** 
4402:..\..\ff14\source/ff.c **** FRESULT f_lseek (
4403:..\..\ff14\source/ff.c **** 	FIL* fp,		/* Pointer to the file object */
4404:..\..\ff14\source/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
4405:..\..\ff14\source/ff.c **** )
4406:..\..\ff14\source/ff.c **** {
 4918              		.loc 1 4406 0
 4919              		.cfi_startproc
 4920              		@ args = 0, pretend = 0, frame = 8
 4921              		@ frame_needed = 0, uses_anonymous_args = 0
 4922              	.LVL751:
 4923 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4924              		.cfi_def_cfa_offset 24
 4925              		.cfi_offset 4, -24
 4926              		.cfi_offset 5, -20
 4927              		.cfi_offset 6, -16
 4928              		.cfi_offset 7, -12
 4929              		.cfi_offset 8, -8
 4930              		.cfi_offset 14, -4
 4931 0004 82B0     		sub	sp, sp, #8
 4932              		.cfi_def_cfa_offset 32
 4933 0006 0446     		mov	r4, r0
 4934 0008 0D46     		mov	r5, r1
4407:..\..\ff14\source/ff.c **** 	FRESULT res;
4408:..\..\ff14\source/ff.c **** 	FATFS *fs;
4409:..\..\ff14\source/ff.c **** 	DWORD clst, bcs;
4410:..\..\ff14\source/ff.c **** 	LBA_t nsect;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 174


4411:..\..\ff14\source/ff.c **** 	FSIZE_t ifptr;
4412:..\..\ff14\source/ff.c **** #if FF_USE_FASTSEEK
4413:..\..\ff14\source/ff.c **** 	DWORD cl, pcl, ncl, tcl, tlen, ulen, *tbl;
4414:..\..\ff14\source/ff.c **** 	LBA_t dsc;
4415:..\..\ff14\source/ff.c **** #endif
4416:..\..\ff14\source/ff.c **** 
4417:..\..\ff14\source/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
 4935              		.loc 1 4417 0
 4936 000a 8046     		mov	r8, r0
 4937 000c 01A9     		add	r1, sp, #4
 4938              	.LVL752:
 4939 000e FFF7FEFF 		bl	validate
 4940              	.LVL753:
4418:..\..\ff14\source/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 4941              		.loc 1 4418 0
 4942 0012 0646     		mov	r6, r0
 4943 0014 00B9     		cbnz	r0, .L433
 4944              		.loc 1 4418 0 is_stmt 0 discriminator 1
 4945 0016 667C     		ldrb	r6, [r4, #17]	@ zero_extendqisi2
 4946              	.LVL754:
 4947              	.L433:
4419:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT && !FF_FS_READONLY
4420:..\..\ff14\source/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4421:..\..\ff14\source/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4422:..\..\ff14\source/ff.c **** 	}
4423:..\..\ff14\source/ff.c **** #endif
4424:..\..\ff14\source/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
 4948              		.loc 1 4424 0 is_stmt 1
 4949 0018 002E     		cmp	r6, #0
 4950 001a 40F0A680 		bne	.L455
4425:..\..\ff14\source/ff.c **** 
4426:..\..\ff14\source/ff.c **** #if FF_USE_FASTSEEK
4427:..\..\ff14\source/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4428:..\..\ff14\source/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4429:..\..\ff14\source/ff.c **** 			tbl = fp->cltbl;
4430:..\..\ff14\source/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4431:..\..\ff14\source/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4432:..\..\ff14\source/ff.c **** 			if (cl != 0) {
4433:..\..\ff14\source/ff.c **** 				do {
4434:..\..\ff14\source/ff.c **** 					/* Get a fragment */
4435:..\..\ff14\source/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4436:..\..\ff14\source/ff.c **** 					do {
4437:..\..\ff14\source/ff.c **** 						pcl = cl; ncl++;
4438:..\..\ff14\source/ff.c **** 						cl = get_fat(&fp->obj, cl);
4439:..\..\ff14\source/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4440:..\..\ff14\source/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4441:..\..\ff14\source/ff.c **** 					} while (cl == pcl + 1);
4442:..\..\ff14\source/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4443:..\..\ff14\source/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4444:..\..\ff14\source/ff.c **** 					}
4445:..\..\ff14\source/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4446:..\..\ff14\source/ff.c **** 			}
4447:..\..\ff14\source/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4448:..\..\ff14\source/ff.c **** 			if (ulen <= tlen) {
4449:..\..\ff14\source/ff.c **** 				*tbl = 0;		/* Terminate table */
4450:..\..\ff14\source/ff.c **** 			} else {
4451:..\..\ff14\source/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 175


4452:..\..\ff14\source/ff.c **** 			}
4453:..\..\ff14\source/ff.c **** 		} else {						/* Fast seek */
4454:..\..\ff14\source/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4455:..\..\ff14\source/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4456:..\..\ff14\source/ff.c **** 			if (ofs > 0) {
4457:..\..\ff14\source/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4458:..\..\ff14\source/ff.c **** 				dsc = clst2sect(fs, fp->clust);
4459:..\..\ff14\source/ff.c **** 				if (dsc == 0) ABORT(fs, FR_INT_ERR);
4460:..\..\ff14\source/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4461:..\..\ff14\source/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4462:..\..\ff14\source/ff.c **** #if !FF_FS_TINY
4463:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
4464:..\..\ff14\source/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4465:..\..\ff14\source/ff.c **** 						if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4466:..\..\ff14\source/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4467:..\..\ff14\source/ff.c **** 					}
4468:..\..\ff14\source/ff.c **** #endif
4469:..\..\ff14\source/ff.c **** 					if (disk_read(fs->pdrv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current se
4470:..\..\ff14\source/ff.c **** #endif
4471:..\..\ff14\source/ff.c **** 					fp->sect = dsc;
4472:..\..\ff14\source/ff.c **** 				}
4473:..\..\ff14\source/ff.c **** 			}
4474:..\..\ff14\source/ff.c **** 		}
4475:..\..\ff14\source/ff.c **** 	} else
4476:..\..\ff14\source/ff.c **** #endif
4477:..\..\ff14\source/ff.c **** 
4478:..\..\ff14\source/ff.c **** 	/* Normal Seek */
4479:..\..\ff14\source/ff.c **** 	{
4480:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4481:..\..\ff14\source/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4 GiB - 1 if at F
4482:..\..\ff14\source/ff.c **** #endif
4483:..\..\ff14\source/ff.c **** 		if (ofs > fp->obj.objsize && (FF_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, 
 4951              		.loc 1 4483 0
 4952 001e E368     		ldr	r3, [r4, #12]
 4953 0020 AB42     		cmp	r3, r5
 4954 0022 04D2     		bcs	.L435
 4955              		.loc 1 4483 0 is_stmt 0 discriminator 1
 4956 0024 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 4957 0026 12F0020F 		tst	r2, #2
 4958 002a 00D1     		bne	.L435
4484:..\..\ff14\source/ff.c **** 			ofs = fp->obj.objsize;
 4959              		.loc 1 4484 0 is_stmt 1
 4960 002c 1D46     		mov	r5, r3
 4961              	.LVL755:
 4962              	.L435:
4485:..\..\ff14\source/ff.c **** 		}
4486:..\..\ff14\source/ff.c **** 		ifptr = fp->fptr;
 4963              		.loc 1 4486 0
 4964 002e 6369     		ldr	r3, [r4, #20]
 4965              	.LVL756:
4487:..\..\ff14\source/ff.c **** 		fp->fptr = nsect = 0;
 4966              		.loc 1 4487 0
 4967 0030 0022     		movs	r2, #0
 4968 0032 6261     		str	r2, [r4, #20]
4488:..\..\ff14\source/ff.c **** 		if (ofs > 0) {
 4969              		.loc 1 4488 0
 4970 0034 002D     		cmp	r5, #0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 176


 4971 0036 62D0     		beq	.L457
4489:..\..\ff14\source/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 4972              		.loc 1 4489 0
 4973 0038 019A     		ldr	r2, [sp, #4]
 4974 003a 5789     		ldrh	r7, [r2, #10]
 4975 003c 7F02     		lsls	r7, r7, #9
 4976              	.LVL757:
4490:..\..\ff14\source/ff.c **** 			if (ifptr > 0 &&
 4977              		.loc 1 4490 0
 4978 003e 6BB1     		cbz	r3, .L437
4491:..\..\ff14\source/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 4979              		.loc 1 4491 0 discriminator 1
 4980 0040 6A1E     		subs	r2, r5, #1
 4981 0042 B2FBF7F2 		udiv	r2, r2, r7
 4982 0046 013B     		subs	r3, r3, #1
 4983              	.LVL758:
 4984 0048 B3FBF7F1 		udiv	r1, r3, r7
4490:..\..\ff14\source/ff.c **** 			if (ifptr > 0 &&
 4985              		.loc 1 4490 0 discriminator 1
 4986 004c 8A42     		cmp	r2, r1
 4987 004e 05D3     		bcc	.L437
4492:..\..\ff14\source/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 4988              		.loc 1 4492 0
 4989 0050 7A42     		negs	r2, r7
 4990 0052 1340     		ands	r3, r3, r2
 4991              	.LVL759:
 4992 0054 6361     		str	r3, [r4, #20]
4493:..\..\ff14\source/ff.c **** 				ofs -= fp->fptr;
 4993              		.loc 1 4493 0
 4994 0056 ED1A     		subs	r5, r5, r3
 4995              	.LVL760:
4494:..\..\ff14\source/ff.c **** 				clst = fp->clust;
 4996              		.loc 1 4494 0
 4997 0058 A169     		ldr	r1, [r4, #24]
 4998              	.LVL761:
 4999 005a 14E0     		b	.L438
 5000              	.LVL762:
 5001              	.L437:
4495:..\..\ff14\source/ff.c **** 			} else {									/* When seek to back cluster, */
4496:..\..\ff14\source/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
 5002              		.loc 1 4496 0
 5003 005c A168     		ldr	r1, [r4, #8]
 5004              	.LVL763:
4497:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
4498:..\..\ff14\source/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
 5005              		.loc 1 4498 0
 5006 005e 89B9     		cbnz	r1, .L439
4499:..\..\ff14\source/ff.c **** 					clst = create_chain(&fp->obj, 0);
 5007              		.loc 1 4499 0
 5008 0060 2046     		mov	r0, r4
 5009 0062 FFF7FEFF 		bl	create_chain
 5010              	.LVL764:
 5011 0066 0146     		mov	r1, r0
 5012              	.LVL765:
4500:..\..\ff14\source/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 5013              		.loc 1 4500 0
 5014 0068 0128     		cmp	r0, #1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 177


 5015 006a 03D1     		bne	.L440
 5016              		.loc 1 4500 0 is_stmt 0 discriminator 1
 5017 006c 0226     		movs	r6, #2
 5018              	.LVL766:
 5019 006e 6674     		strb	r6, [r4, #17]
 5020 0070 3046     		mov	r0, r6
 5021              	.LVL767:
 5022 0072 7FE0     		b	.L434
 5023              	.LVL768:
 5024              	.L440:
4501:..\..\ff14\source/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5025              		.loc 1 4501 0 is_stmt 1
 5026 0074 B0F1FF3F 		cmp	r0, #-1
 5027 0078 03D1     		bne	.L441
 5028              		.loc 1 4501 0 is_stmt 0 discriminator 1
 5029 007a 0126     		movs	r6, #1
 5030              	.LVL769:
 5031 007c 6674     		strb	r6, [r4, #17]
 5032 007e 3046     		mov	r0, r6
 5033              	.LVL770:
 5034 0080 78E0     		b	.L434
 5035              	.LVL771:
 5036              	.L441:
4502:..\..\ff14\source/ff.c **** 					fp->obj.sclust = clst;
 5037              		.loc 1 4502 0 is_stmt 1
 5038 0082 A060     		str	r0, [r4, #8]
 5039              	.LVL772:
 5040              	.L439:
4503:..\..\ff14\source/ff.c **** 				}
4504:..\..\ff14\source/ff.c **** #endif
4505:..\..\ff14\source/ff.c **** 				fp->clust = clst;
 5041              		.loc 1 4505 0
 5042 0084 A161     		str	r1, [r4, #24]
 5043              	.L438:
4506:..\..\ff14\source/ff.c **** 			}
4507:..\..\ff14\source/ff.c **** 			if (clst != 0) {
 5044              		.loc 1 4507 0
 5045 0086 29BB     		cbnz	r1, .L442
4487:..\..\ff14\source/ff.c **** 		if (ofs > 0) {
 5046              		.loc 1 4487 0
 5047 0088 0025     		movs	r5, #0
 5048              	.LVL773:
 5049 008a 3BE0     		b	.L436
 5050              	.LVL774:
 5051              	.L449:
4508:..\..\ff14\source/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4509:..\..\ff14\source/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 5052              		.loc 1 4509 0
 5053 008c ED1B     		subs	r5, r5, r7
 5054              	.LVL775:
 5055 008e 6369     		ldr	r3, [r4, #20]
 5056 0090 3B44     		add	r3, r3, r7
 5057 0092 6361     		str	r3, [r4, #20]
4510:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
4511:..\..\ff14\source/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
 5058              		.loc 1 4511 0
 5059 0094 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 178


 5060 0096 13F0020F 		tst	r3, #2
 5061 009a 05D0     		beq	.L443
4512:..\..\ff14\source/ff.c **** 						if (FF_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize
4513:..\..\ff14\source/ff.c **** 							fp->obj.objsize = fp->fptr;
4514:..\..\ff14\source/ff.c **** 							fp->flag |= FA_MODIFIED;
4515:..\..\ff14\source/ff.c **** 						}
4516:..\..\ff14\source/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
 5062              		.loc 1 4516 0
 5063 009c 4046     		mov	r0, r8
 5064 009e FFF7FEFF 		bl	create_chain
 5065              	.LVL776:
4517:..\..\ff14\source/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 5066              		.loc 1 4517 0
 5067 00a2 0146     		mov	r1, r0
 5068 00a4 20B9     		cbnz	r0, .L445
 5069 00a6 18E0     		b	.L458
 5070              	.LVL777:
 5071              	.L443:
4518:..\..\ff14\source/ff.c **** 							ofs = 0; break;
4519:..\..\ff14\source/ff.c **** 						}
4520:..\..\ff14\source/ff.c **** 					} else
4521:..\..\ff14\source/ff.c **** #endif
4522:..\..\ff14\source/ff.c **** 					{
4523:..\..\ff14\source/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
 5072              		.loc 1 4523 0
 5073 00a8 4046     		mov	r0, r8
 5074 00aa FFF7FEFF 		bl	get_fat
 5075              	.LVL778:
 5076 00ae 0146     		mov	r1, r0
 5077              	.LVL779:
 5078              	.L445:
4524:..\..\ff14\source/ff.c **** 					}
4525:..\..\ff14\source/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5079              		.loc 1 4525 0
 5080 00b0 B1F1FF3F 		cmp	r1, #-1
 5081 00b4 03D1     		bne	.L446
 5082              		.loc 1 4525 0 is_stmt 0 discriminator 1
 5083 00b6 0126     		movs	r6, #1
 5084              	.LVL780:
 5085 00b8 6674     		strb	r6, [r4, #17]
 5086 00ba 3046     		mov	r0, r6
 5087              	.LVL781:
 5088 00bc 5AE0     		b	.L434
 5089              	.LVL782:
 5090              	.L446:
4526:..\..\ff14\source/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 5091              		.loc 1 4526 0 is_stmt 1
 5092 00be 0129     		cmp	r1, #1
 5093 00c0 03D9     		bls	.L447
 5094              		.loc 1 4526 0 is_stmt 0 discriminator 2
 5095 00c2 019B     		ldr	r3, [sp, #4]
 5096 00c4 5B69     		ldr	r3, [r3, #20]
 5097 00c6 9942     		cmp	r1, r3
 5098 00c8 03D3     		bcc	.L448
 5099              	.L447:
 5100              		.loc 1 4526 0 discriminator 3
 5101 00ca 0226     		movs	r6, #2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 179


 5102              	.LVL783:
 5103 00cc 6674     		strb	r6, [r4, #17]
 5104 00ce 3046     		mov	r0, r6
 5105              	.LVL784:
 5106 00d0 50E0     		b	.L434
 5107              	.LVL785:
 5108              	.L448:
4527:..\..\ff14\source/ff.c **** 					fp->clust = clst;
 5109              		.loc 1 4527 0 is_stmt 1
 5110 00d2 A161     		str	r1, [r4, #24]
 5111              	.LVL786:
 5112              	.L442:
4508:..\..\ff14\source/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 5113              		.loc 1 4508 0
 5114 00d4 BD42     		cmp	r5, r7
 5115 00d6 D9D8     		bhi	.L449
 5116 00d8 00E0     		b	.L444
 5117              	.LVL787:
 5118              	.L458:
4518:..\..\ff14\source/ff.c **** 						}
 5119              		.loc 1 4518 0
 5120 00da 0025     		movs	r5, #0
 5121              	.LVL788:
 5122              	.L444:
4528:..\..\ff14\source/ff.c **** 				}
4529:..\..\ff14\source/ff.c **** 				fp->fptr += ofs;
 5123              		.loc 1 4529 0
 5124 00dc 6369     		ldr	r3, [r4, #20]
 5125 00de 2B44     		add	r3, r3, r5
 5126 00e0 6361     		str	r3, [r4, #20]
4530:..\..\ff14\source/ff.c **** 				if (ofs % SS(fs)) {
 5127              		.loc 1 4530 0
 5128 00e2 C5F30803 		ubfx	r3, r5, #0, #9
 5129 00e6 63B1     		cbz	r3, .L459
4531:..\..\ff14\source/ff.c **** 					nsect = clst2sect(fs, clst);	/* Current sector */
 5130              		.loc 1 4531 0
 5131 00e8 0198     		ldr	r0, [sp, #4]
 5132 00ea FFF7FEFF 		bl	clst2sect
 5133              	.LVL789:
4532:..\..\ff14\source/ff.c **** 					if (nsect == 0) ABORT(fs, FR_INT_ERR);
 5134              		.loc 1 4532 0
 5135 00ee 18B9     		cbnz	r0, .L450
 5136              		.loc 1 4532 0 is_stmt 0 discriminator 1
 5137 00f0 0226     		movs	r6, #2
 5138              	.LVL790:
 5139 00f2 6674     		strb	r6, [r4, #17]
 5140 00f4 3046     		mov	r0, r6
 5141              	.LVL791:
 5142 00f6 3DE0     		b	.L434
 5143              	.LVL792:
 5144              	.L450:
4533:..\..\ff14\source/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 5145              		.loc 1 4533 0 is_stmt 1
 5146 00f8 00EB5525 		add	r5, r0, r5, lsr #9
 5147              	.LVL793:
 5148 00fc 02E0     		b	.L436
 5149              	.LVL794:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 180


 5150              	.L457:
4487:..\..\ff14\source/ff.c **** 		if (ofs > 0) {
 5151              		.loc 1 4487 0
 5152 00fe 0025     		movs	r5, #0
 5153              	.LVL795:
 5154 0100 00E0     		b	.L436
 5155              	.LVL796:
 5156              	.L459:
 5157 0102 0025     		movs	r5, #0
 5158              	.LVL797:
 5159              	.L436:
4534:..\..\ff14\source/ff.c **** 				}
4535:..\..\ff14\source/ff.c **** 			}
4536:..\..\ff14\source/ff.c **** 		}
4537:..\..\ff14\source/ff.c **** 		if (!FF_FS_READONLY && fp->fptr > fp->obj.objsize) {	/* Set file change flag if the file size is 
 5160              		.loc 1 4537 0
 5161 0104 6369     		ldr	r3, [r4, #20]
 5162 0106 E268     		ldr	r2, [r4, #12]
 5163 0108 9342     		cmp	r3, r2
 5164 010a 04D9     		bls	.L451
4538:..\..\ff14\source/ff.c **** 			fp->obj.objsize = fp->fptr;
 5165              		.loc 1 4538 0
 5166 010c E360     		str	r3, [r4, #12]
4539:..\..\ff14\source/ff.c **** 			fp->flag |= FA_MODIFIED;
 5167              		.loc 1 4539 0
 5168 010e 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 5169 0110 42F04002 		orr	r2, r2, #64
 5170 0114 2274     		strb	r2, [r4, #16]
 5171              	.L451:
4540:..\..\ff14\source/ff.c **** 		}
4541:..\..\ff14\source/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
 5172              		.loc 1 4541 0
 5173 0116 C3F30803 		ubfx	r3, r3, #0, #9
 5174 011a 43B3     		cbz	r3, .L460
 5175              		.loc 1 4541 0 is_stmt 0 discriminator 1
 5176 011c E269     		ldr	r2, [r4, #28]
 5177 011e 9542     		cmp	r5, r2
 5178 0120 27D0     		beq	.L461
4542:..\..\ff14\source/ff.c **** #if !FF_FS_TINY
4543:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
4544:..\..\ff14\source/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
 5179              		.loc 1 4544 0 is_stmt 1
 5180 0122 94F91030 		ldrsb	r3, [r4, #16]
 5181 0126 002B     		cmp	r3, #0
 5182 0128 0FDA     		bge	.L452
4545:..\..\ff14\source/ff.c **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5183              		.loc 1 4545 0
 5184 012a 0123     		movs	r3, #1
 5185 012c 04F12801 		add	r1, r4, #40
 5186 0130 0198     		ldr	r0, [sp, #4]
 5187 0132 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5188 0134 FFF7FEFF 		bl	disk_write
 5189              	.LVL798:
 5190 0138 18B1     		cbz	r0, .L453
 5191              		.loc 1 4545 0 is_stmt 0 discriminator 1
 5192 013a 0126     		movs	r6, #1
 5193              	.LVL799:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 181


 5194 013c 6674     		strb	r6, [r4, #17]
 5195 013e 3046     		mov	r0, r6
 5196 0140 18E0     		b	.L434
 5197              	.LVL800:
 5198              	.L453:
4546:..\..\ff14\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5199              		.loc 1 4546 0 is_stmt 1
 5200 0142 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 5201 0144 03F07F03 		and	r3, r3, #127
 5202 0148 2374     		strb	r3, [r4, #16]
 5203              	.L452:
4547:..\..\ff14\source/ff.c **** 			}
4548:..\..\ff14\source/ff.c **** #endif
4549:..\..\ff14\source/ff.c **** 			if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cac
 5204              		.loc 1 4549 0
 5205 014a 0123     		movs	r3, #1
 5206 014c 2A46     		mov	r2, r5
 5207 014e 04F12801 		add	r1, r4, #40
 5208 0152 0198     		ldr	r0, [sp, #4]
 5209 0154 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5210 0156 FFF7FEFF 		bl	disk_read
 5211              	.LVL801:
 5212 015a 18B1     		cbz	r0, .L454
 5213              		.loc 1 4549 0 is_stmt 0 discriminator 1
 5214 015c 0126     		movs	r6, #1
 5215              	.LVL802:
 5216 015e 6674     		strb	r6, [r4, #17]
 5217 0160 3046     		mov	r0, r6
 5218 0162 07E0     		b	.L434
 5219              	.LVL803:
 5220              	.L454:
4550:..\..\ff14\source/ff.c **** #endif
4551:..\..\ff14\source/ff.c **** 			fp->sect = nsect;
 5221              		.loc 1 4551 0 is_stmt 1
 5222 0164 E561     		str	r5, [r4, #28]
4552:..\..\ff14\source/ff.c **** 		}
4553:..\..\ff14\source/ff.c **** 	}
4554:..\..\ff14\source/ff.c **** 
4555:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
 5223              		.loc 1 4555 0
 5224 0166 3046     		mov	r0, r6
 5225 0168 04E0     		b	.L434
 5226              	.LVL804:
 5227              	.L455:
4424:..\..\ff14\source/ff.c **** 
 5228              		.loc 1 4424 0
 5229 016a 3046     		mov	r0, r6
 5230 016c 02E0     		b	.L434
 5231              	.LVL805:
 5232              	.L460:
 5233              		.loc 1 4555 0
 5234 016e 3046     		mov	r0, r6
 5235 0170 00E0     		b	.L434
 5236              	.L461:
 5237 0172 3046     		mov	r0, r6
 5238              	.LVL806:
 5239              	.L434:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 182


4556:..\..\ff14\source/ff.c **** }
 5240              		.loc 1 4556 0
 5241 0174 02B0     		add	sp, sp, #8
 5242              		.cfi_def_cfa_offset 24
 5243              		@ sp needed
 5244 0176 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5245              		.cfi_endproc
 5246              	.LFE42:
 5247              		.size	f_lseek, .-f_lseek
 5248 017a 00BF     		.section	.text.f_opendir,"ax",%progbits
 5249              		.align	2
 5250              		.global	f_opendir
 5251              		.thumb
 5252              		.thumb_func
 5253              		.type	f_opendir, %function
 5254              	f_opendir:
 5255              	.LFB43:
4557:..\..\ff14\source/ff.c **** 
4558:..\..\ff14\source/ff.c **** 
4559:..\..\ff14\source/ff.c **** 
4560:..\..\ff14\source/ff.c **** #if FF_FS_MINIMIZE <= 1
4561:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4562:..\..\ff14\source/ff.c **** /* Create a Directory Object                                             */
4563:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4564:..\..\ff14\source/ff.c **** 
4565:..\..\ff14\source/ff.c **** FRESULT f_opendir (
4566:..\..\ff14\source/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4567:..\..\ff14\source/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4568:..\..\ff14\source/ff.c **** )
4569:..\..\ff14\source/ff.c **** {
 5256              		.loc 1 4569 0
 5257              		.cfi_startproc
 5258              		@ args = 0, pretend = 0, frame = 16
 5259              		@ frame_needed = 0, uses_anonymous_args = 0
 5260              	.LVL807:
 5261 0000 30B5     		push	{r4, r5, lr}
 5262              		.cfi_def_cfa_offset 12
 5263              		.cfi_offset 4, -12
 5264              		.cfi_offset 5, -8
 5265              		.cfi_offset 14, -4
 5266 0002 85B0     		sub	sp, sp, #20
 5267              		.cfi_def_cfa_offset 32
 5268 0004 0191     		str	r1, [sp, #4]
4570:..\..\ff14\source/ff.c **** 	FRESULT res;
4571:..\..\ff14\source/ff.c **** 	FATFS *fs;
4572:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
4573:..\..\ff14\source/ff.c **** 
4574:..\..\ff14\source/ff.c **** 
4575:..\..\ff14\source/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
 5269              		.loc 1 4575 0
 5270 0006 78B3     		cbz	r0, .L468
 5271 0008 0546     		mov	r5, r0
4576:..\..\ff14\source/ff.c **** 
4577:..\..\ff14\source/ff.c **** 	/* Get logical drive */
4578:..\..\ff14\source/ff.c **** 	res = mount_volume(&path, &fs, 0);
 5272              		.loc 1 4578 0
 5273 000a 0022     		movs	r2, #0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 183


 5274 000c 03A9     		add	r1, sp, #12
 5275              	.LVL808:
 5276 000e 01A8     		add	r0, sp, #4
 5277              	.LVL809:
 5278 0010 FFF7FEFF 		bl	mount_volume
 5279              	.LVL810:
4579:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 5280              		.loc 1 4579 0
 5281 0014 0446     		mov	r4, r0
 5282 0016 10BB     		cbnz	r0, .L465
4580:..\..\ff14\source/ff.c **** 		dp->obj.fs = fs;
 5283              		.loc 1 4580 0
 5284 0018 039B     		ldr	r3, [sp, #12]
 5285 001a 2B60     		str	r3, [r5]
4581:..\..\ff14\source/ff.c **** 		INIT_NAMBUF(fs);
4582:..\..\ff14\source/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 5286              		.loc 1 4582 0
 5287 001c 0199     		ldr	r1, [sp, #4]
 5288 001e 2846     		mov	r0, r5
 5289              	.LVL811:
 5290 0020 FFF7FEFF 		bl	follow_path
 5291              	.LVL812:
4583:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 5292              		.loc 1 4583 0
 5293 0024 0446     		mov	r4, r0
 5294 0026 B8B9     		cbnz	r0, .L466
4584:..\..\ff14\source/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 5295              		.loc 1 4584 0
 5296 0028 95F92B30 		ldrsb	r3, [r5, #43]
 5297 002c 002B     		cmp	r3, #0
 5298 002e 0ADB     		blt	.L467
4585:..\..\ff14\source/ff.c **** 				if (dp->obj.attr & AM_DIR) {		/* This object is a sub-directory */
 5299              		.loc 1 4585 0
 5300 0030 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 5301 0032 13F0100F 		tst	r3, #16
 5302 0036 05D0     		beq	.L469
4586:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4587:..\..\ff14\source/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4588:..\..\ff14\source/ff.c **** 						dp->obj.c_scl = dp->obj.sclust;							/* Get containing directory inforamation */
4589:..\..\ff14\source/ff.c **** 						dp->obj.c_size = ((DWORD)dp->obj.objsize & 0xFFFFFF00) | dp->obj.stat;
4590:..\..\ff14\source/ff.c **** 						dp->obj.c_ofs = dp->blk_ofs;
4591:..\..\ff14\source/ff.c **** 						init_alloc_info(fs, &dp->obj);	/* Get object allocation info */
4592:..\..\ff14\source/ff.c **** 					} else
4593:..\..\ff14\source/ff.c **** #endif
4594:..\..\ff14\source/ff.c **** 					{
4595:..\..\ff14\source/ff.c **** 						dp->obj.sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
 5303              		.loc 1 4595 0
 5304 0038 E969     		ldr	r1, [r5, #28]
 5305 003a 0398     		ldr	r0, [sp, #12]
 5306              	.LVL813:
 5307 003c FFF7FEFF 		bl	ld_clust
 5308              	.LVL814:
 5309 0040 A860     		str	r0, [r5, #8]
 5310 0042 00E0     		b	.L467
 5311              	.LVL815:
 5312              	.L469:
4596:..\..\ff14\source/ff.c **** 					}
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 184


4597:..\..\ff14\source/ff.c **** 				} else {						/* This object is a file */
4598:..\..\ff14\source/ff.c **** 					res = FR_NO_PATH;
 5313              		.loc 1 4598 0
 5314 0044 0524     		movs	r4, #5
 5315              	.LVL816:
 5316              	.L467:
4599:..\..\ff14\source/ff.c **** 				}
4600:..\..\ff14\source/ff.c **** 			}
4601:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {
 5317              		.loc 1 4601 0
 5318 0046 3CB9     		cbnz	r4, .L466
4602:..\..\ff14\source/ff.c **** 				dp->obj.id = fs->id;
 5319              		.loc 1 4602 0
 5320 0048 039B     		ldr	r3, [sp, #12]
 5321 004a DB88     		ldrh	r3, [r3, #6]
 5322 004c AB80     		strh	r3, [r5, #4]	@ movhi
4603:..\..\ff14\source/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 5323              		.loc 1 4603 0
 5324 004e 0021     		movs	r1, #0
 5325 0050 2846     		mov	r0, r5
 5326 0052 FFF7FEFF 		bl	dir_sdi
 5327              	.LVL817:
 5328 0056 0446     		mov	r4, r0
 5329              	.LVL818:
 5330              	.L466:
4604:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
4605:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {
4606:..\..\ff14\source/ff.c **** 					if (dp->obj.sclust != 0) {
4607:..\..\ff14\source/ff.c **** 						dp->obj.lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4608:..\..\ff14\source/ff.c **** 						if (!dp->obj.lockid) res = FR_TOO_MANY_OPEN_FILES;
4609:..\..\ff14\source/ff.c **** 					} else {
4610:..\..\ff14\source/ff.c **** 						dp->obj.lockid = 0;	/* Root directory need not to be locked */
4611:..\..\ff14\source/ff.c **** 					}
4612:..\..\ff14\source/ff.c **** 				}
4613:..\..\ff14\source/ff.c **** #endif
4614:..\..\ff14\source/ff.c **** 			}
4615:..\..\ff14\source/ff.c **** 		}
4616:..\..\ff14\source/ff.c **** 		FREE_NAMBUF();
4617:..\..\ff14\source/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 5331              		.loc 1 4617 0
 5332 0058 042C     		cmp	r4, #4
 5333 005a 00D1     		bne	.L465
 5334 005c 0524     		movs	r4, #5
 5335              	.LVL819:
 5336              	.L465:
4618:..\..\ff14\source/ff.c **** 	}
4619:..\..\ff14\source/ff.c **** 	if (res != FR_OK) dp->obj.fs = 0;		/* Invalidate the directory object if function faild */
 5337              		.loc 1 4619 0
 5338 005e 2CB1     		cbz	r4, .L471
 5339              		.loc 1 4619 0 is_stmt 0 discriminator 1
 5340 0060 0023     		movs	r3, #0
 5341 0062 2B60     		str	r3, [r5]
4620:..\..\ff14\source/ff.c **** 
4621:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
 5342              		.loc 1 4621 0 is_stmt 1 discriminator 1
 5343 0064 2046     		mov	r0, r4
 5344 0066 02E0     		b	.L464
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 185


 5345              	.LVL820:
 5346              	.L468:
4575:..\..\ff14\source/ff.c **** 
 5347              		.loc 1 4575 0
 5348 0068 0920     		movs	r0, #9
 5349              	.LVL821:
 5350 006a 00E0     		b	.L464
 5351              	.LVL822:
 5352              	.L471:
 5353              		.loc 1 4621 0
 5354 006c 2046     		mov	r0, r4
 5355              	.LVL823:
 5356              	.L464:
4622:..\..\ff14\source/ff.c **** }
 5357              		.loc 1 4622 0
 5358 006e 05B0     		add	sp, sp, #20
 5359              		.cfi_def_cfa_offset 12
 5360              		@ sp needed
 5361 0070 30BD     		pop	{r4, r5, pc}
 5362              		.cfi_endproc
 5363              	.LFE43:
 5364              		.size	f_opendir, .-f_opendir
 5365 0072 00BF     		.section	.text.f_closedir,"ax",%progbits
 5366              		.align	2
 5367              		.global	f_closedir
 5368              		.thumb
 5369              		.thumb_func
 5370              		.type	f_closedir, %function
 5371              	f_closedir:
 5372              	.LFB44:
4623:..\..\ff14\source/ff.c **** 
4624:..\..\ff14\source/ff.c **** 
4625:..\..\ff14\source/ff.c **** 
4626:..\..\ff14\source/ff.c **** 
4627:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4628:..\..\ff14\source/ff.c **** /* Close Directory                                                       */
4629:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4630:..\..\ff14\source/ff.c **** 
4631:..\..\ff14\source/ff.c **** FRESULT f_closedir (
4632:..\..\ff14\source/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4633:..\..\ff14\source/ff.c **** )
4634:..\..\ff14\source/ff.c **** {
 5373              		.loc 1 4634 0
 5374              		.cfi_startproc
 5375              		@ args = 0, pretend = 0, frame = 8
 5376              		@ frame_needed = 0, uses_anonymous_args = 0
 5377              	.LVL824:
 5378 0000 10B5     		push	{r4, lr}
 5379              		.cfi_def_cfa_offset 8
 5380              		.cfi_offset 4, -8
 5381              		.cfi_offset 14, -4
 5382 0002 82B0     		sub	sp, sp, #8
 5383              		.cfi_def_cfa_offset 16
 5384 0004 0446     		mov	r4, r0
4635:..\..\ff14\source/ff.c **** 	FRESULT res;
4636:..\..\ff14\source/ff.c **** 	FATFS *fs;
4637:..\..\ff14\source/ff.c **** 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 186


4638:..\..\ff14\source/ff.c **** 
4639:..\..\ff14\source/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the file object */
 5385              		.loc 1 4639 0
 5386 0006 01A9     		add	r1, sp, #4
 5387 0008 FFF7FEFF 		bl	validate
 5388              	.LVL825:
4640:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 5389              		.loc 1 4640 0
 5390 000c 0346     		mov	r3, r0
 5391 000e 08B9     		cbnz	r0, .L474
4641:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
4642:..\..\ff14\source/ff.c **** 		if (dp->obj.lockid) res = dec_lock(dp->obj.lockid);	/* Decrement sub-directory open counter */
4643:..\..\ff14\source/ff.c **** 		if (res == FR_OK) dp->obj.fs = 0;	/* Invalidate directory object */
4644:..\..\ff14\source/ff.c **** #else
4645:..\..\ff14\source/ff.c **** 		dp->obj.fs = 0;	/* Invalidate directory object */
 5392              		.loc 1 4645 0
 5393 0010 0022     		movs	r2, #0
 5394 0012 2260     		str	r2, [r4]
 5395              	.L474:
4646:..\..\ff14\source/ff.c **** #endif
4647:..\..\ff14\source/ff.c **** #if FF_FS_REENTRANT
4648:..\..\ff14\source/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4649:..\..\ff14\source/ff.c **** #endif
4650:..\..\ff14\source/ff.c **** 	}
4651:..\..\ff14\source/ff.c **** 	return res;
4652:..\..\ff14\source/ff.c **** }
 5396              		.loc 1 4652 0
 5397 0014 1846     		mov	r0, r3
 5398              	.LVL826:
 5399 0016 02B0     		add	sp, sp, #8
 5400              		.cfi_def_cfa_offset 8
 5401              		@ sp needed
 5402 0018 10BD     		pop	{r4, pc}
 5403              		.cfi_endproc
 5404              	.LFE44:
 5405              		.size	f_closedir, .-f_closedir
 5406 001a 00BF     		.section	.text.f_readdir,"ax",%progbits
 5407              		.align	2
 5408              		.global	f_readdir
 5409              		.thumb
 5410              		.thumb_func
 5411              		.type	f_readdir, %function
 5412              	f_readdir:
 5413              	.LFB45:
4653:..\..\ff14\source/ff.c **** 
4654:..\..\ff14\source/ff.c **** 
4655:..\..\ff14\source/ff.c **** 
4656:..\..\ff14\source/ff.c **** 
4657:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4658:..\..\ff14\source/ff.c **** /* Read Directory Entries in Sequence                                    */
4659:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4660:..\..\ff14\source/ff.c **** 
4661:..\..\ff14\source/ff.c **** FRESULT f_readdir (
4662:..\..\ff14\source/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4663:..\..\ff14\source/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4664:..\..\ff14\source/ff.c **** )
4665:..\..\ff14\source/ff.c **** {
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 187


 5414              		.loc 1 4665 0
 5415              		.cfi_startproc
 5416              		@ args = 0, pretend = 0, frame = 8
 5417              		@ frame_needed = 0, uses_anonymous_args = 0
 5418              	.LVL827:
 5419 0000 70B5     		push	{r4, r5, r6, lr}
 5420              		.cfi_def_cfa_offset 16
 5421              		.cfi_offset 4, -16
 5422              		.cfi_offset 5, -12
 5423              		.cfi_offset 6, -8
 5424              		.cfi_offset 14, -4
 5425 0002 82B0     		sub	sp, sp, #8
 5426              		.cfi_def_cfa_offset 24
 5427 0004 0546     		mov	r5, r0
 5428 0006 0E46     		mov	r6, r1
4666:..\..\ff14\source/ff.c **** 	FRESULT res;
4667:..\..\ff14\source/ff.c **** 	FATFS *fs;
4668:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
4669:..\..\ff14\source/ff.c **** 
4670:..\..\ff14\source/ff.c **** 
4671:..\..\ff14\source/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
 5429              		.loc 1 4671 0
 5430 0008 01A9     		add	r1, sp, #4
 5431              	.LVL828:
 5432 000a FFF7FEFF 		bl	validate
 5433              	.LVL829:
4672:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 5434              		.loc 1 4672 0
 5435 000e 0446     		mov	r4, r0
 5436 0010 C8B9     		cbnz	r0, .L477
4673:..\..\ff14\source/ff.c **** 		if (!fno) {
 5437              		.loc 1 4673 0
 5438 0012 2EB9     		cbnz	r6, .L478
4674:..\..\ff14\source/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 5439              		.loc 1 4674 0
 5440 0014 0021     		movs	r1, #0
 5441 0016 2846     		mov	r0, r5
 5442              	.LVL830:
 5443 0018 FFF7FEFF 		bl	dir_sdi
 5444              	.LVL831:
 5445 001c 0446     		mov	r4, r0
 5446              	.LVL832:
 5447 001e 12E0     		b	.L477
 5448              	.LVL833:
 5449              	.L478:
4675:..\..\ff14\source/ff.c **** 		} else {
4676:..\..\ff14\source/ff.c **** 			INIT_NAMBUF(fs);
4677:..\..\ff14\source/ff.c **** 			res = DIR_READ_FILE(dp);		/* Read an item */
 5450              		.loc 1 4677 0
 5451 0020 0021     		movs	r1, #0
 5452 0022 2846     		mov	r0, r5
 5453              	.LVL834:
 5454 0024 FFF7FEFF 		bl	dir_read
 5455              	.LVL835:
4678:..\..\ff14\source/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 5456              		.loc 1 4678 0
 5457 0028 0428     		cmp	r0, #4
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 188


 5458 002a 00D0     		beq	.L479
4677:..\..\ff14\source/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 5459              		.loc 1 4677 0
 5460 002c 0446     		mov	r4, r0
 5461              	.L479:
 5462              	.LVL836:
4679:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 5463              		.loc 1 4679 0
 5464 002e 54B9     		cbnz	r4, .L477
4680:..\..\ff14\source/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 5465              		.loc 1 4680 0
 5466 0030 3146     		mov	r1, r6
 5467 0032 2846     		mov	r0, r5
 5468 0034 FFF7FEFF 		bl	get_fileinfo
 5469              	.LVL837:
4681:..\..\ff14\source/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 5470              		.loc 1 4681 0
 5471 0038 0021     		movs	r1, #0
 5472 003a 2846     		mov	r0, r5
 5473 003c FFF7FEFF 		bl	dir_next
 5474              	.LVL838:
4682:..\..\ff14\source/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 5475              		.loc 1 4682 0
 5476 0040 0428     		cmp	r0, #4
 5477 0042 00D0     		beq	.L477
4681:..\..\ff14\source/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 5478              		.loc 1 4681 0
 5479 0044 0446     		mov	r4, r0
 5480              	.LVL839:
 5481              	.L477:
4683:..\..\ff14\source/ff.c **** 			}
4684:..\..\ff14\source/ff.c **** 			FREE_NAMBUF();
4685:..\..\ff14\source/ff.c **** 		}
4686:..\..\ff14\source/ff.c **** 	}
4687:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
4688:..\..\ff14\source/ff.c **** }
 5482              		.loc 1 4688 0
 5483 0046 2046     		mov	r0, r4
 5484 0048 02B0     		add	sp, sp, #8
 5485              		.cfi_def_cfa_offset 16
 5486              		@ sp needed
 5487 004a 70BD     		pop	{r4, r5, r6, pc}
 5488              		.cfi_endproc
 5489              	.LFE45:
 5490              		.size	f_readdir, .-f_readdir
 5491              		.section	.text.f_stat,"ax",%progbits
 5492              		.align	2
 5493              		.global	f_stat
 5494              		.thumb
 5495              		.thumb_func
 5496              		.type	f_stat, %function
 5497              	f_stat:
 5498              	.LFB46:
4689:..\..\ff14\source/ff.c **** 
4690:..\..\ff14\source/ff.c **** 
4691:..\..\ff14\source/ff.c **** 
4692:..\..\ff14\source/ff.c **** #if FF_USE_FIND
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 189


4693:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4694:..\..\ff14\source/ff.c **** /* Find Next File                                                        */
4695:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4696:..\..\ff14\source/ff.c **** 
4697:..\..\ff14\source/ff.c **** FRESULT f_findnext (
4698:..\..\ff14\source/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4699:..\..\ff14\source/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4700:..\..\ff14\source/ff.c **** )
4701:..\..\ff14\source/ff.c **** {
4702:..\..\ff14\source/ff.c **** 	FRESULT res;
4703:..\..\ff14\source/ff.c **** 
4704:..\..\ff14\source/ff.c **** 
4705:..\..\ff14\source/ff.c **** 	for (;;) {
4706:..\..\ff14\source/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4707:..\..\ff14\source/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4708:..\..\ff14\source/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4709:..\..\ff14\source/ff.c **** #if FF_USE_LFN && FF_USE_FIND == 2
4710:..\..\ff14\source/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4711:..\..\ff14\source/ff.c **** #endif
4712:..\..\ff14\source/ff.c **** 	}
4713:..\..\ff14\source/ff.c **** 	return res;
4714:..\..\ff14\source/ff.c **** }
4715:..\..\ff14\source/ff.c **** 
4716:..\..\ff14\source/ff.c **** 
4717:..\..\ff14\source/ff.c **** 
4718:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4719:..\..\ff14\source/ff.c **** /* Find First File                                                       */
4720:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4721:..\..\ff14\source/ff.c **** 
4722:..\..\ff14\source/ff.c **** FRESULT f_findfirst (
4723:..\..\ff14\source/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4724:..\..\ff14\source/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4725:..\..\ff14\source/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4726:..\..\ff14\source/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4727:..\..\ff14\source/ff.c **** )
4728:..\..\ff14\source/ff.c **** {
4729:..\..\ff14\source/ff.c **** 	FRESULT res;
4730:..\..\ff14\source/ff.c **** 
4731:..\..\ff14\source/ff.c **** 
4732:..\..\ff14\source/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4733:..\..\ff14\source/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4734:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
4735:..\..\ff14\source/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4736:..\..\ff14\source/ff.c **** 	}
4737:..\..\ff14\source/ff.c **** 	return res;
4738:..\..\ff14\source/ff.c **** }
4739:..\..\ff14\source/ff.c **** 
4740:..\..\ff14\source/ff.c **** #endif	/* FF_USE_FIND */
4741:..\..\ff14\source/ff.c **** 
4742:..\..\ff14\source/ff.c **** 
4743:..\..\ff14\source/ff.c **** 
4744:..\..\ff14\source/ff.c **** #if FF_FS_MINIMIZE == 0
4745:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4746:..\..\ff14\source/ff.c **** /* Get File Status                                                       */
4747:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4748:..\..\ff14\source/ff.c **** 
4749:..\..\ff14\source/ff.c **** FRESULT f_stat (
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 190


4750:..\..\ff14\source/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4751:..\..\ff14\source/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4752:..\..\ff14\source/ff.c **** )
4753:..\..\ff14\source/ff.c **** {
 5499              		.loc 1 4753 0
 5500              		.cfi_startproc
 5501              		@ args = 0, pretend = 0, frame = 56
 5502              		@ frame_needed = 0, uses_anonymous_args = 0
 5503              	.LVL840:
 5504 0000 30B5     		push	{r4, r5, lr}
 5505              		.cfi_def_cfa_offset 12
 5506              		.cfi_offset 4, -12
 5507              		.cfi_offset 5, -8
 5508              		.cfi_offset 14, -4
 5509 0002 8FB0     		sub	sp, sp, #60
 5510              		.cfi_def_cfa_offset 72
 5511 0004 0190     		str	r0, [sp, #4]
 5512 0006 0D46     		mov	r5, r1
4754:..\..\ff14\source/ff.c **** 	FRESULT res;
4755:..\..\ff14\source/ff.c **** 	DIR dj;
4756:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
4757:..\..\ff14\source/ff.c **** 
4758:..\..\ff14\source/ff.c **** 
4759:..\..\ff14\source/ff.c **** 	/* Get logical drive */
4760:..\..\ff14\source/ff.c **** 	res = mount_volume(&path, &dj.obj.fs, 0);
 5513              		.loc 1 4760 0
 5514 0008 0022     		movs	r2, #0
 5515 000a 03A9     		add	r1, sp, #12
 5516              	.LVL841:
 5517 000c 01A8     		add	r0, sp, #4
 5518              	.LVL842:
 5519 000e FFF7FEFF 		bl	mount_volume
 5520              	.LVL843:
4761:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 5521              		.loc 1 4761 0
 5522 0012 0446     		mov	r4, r0
 5523 0014 80B9     		cbnz	r0, .L482
4762:..\..\ff14\source/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4763:..\..\ff14\source/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 5524              		.loc 1 4763 0
 5525 0016 0199     		ldr	r1, [sp, #4]
 5526 0018 03A8     		add	r0, sp, #12
 5527              	.LVL844:
 5528 001a FFF7FEFF 		bl	follow_path
 5529              	.LVL845:
4764:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 5530              		.loc 1 4764 0
 5531 001e 0446     		mov	r4, r0
 5532 0020 50B9     		cbnz	r0, .L482
4765:..\..\ff14\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 5533              		.loc 1 4765 0
 5534 0022 9DF93730 		ldrsb	r3, [sp, #55]
 5535 0026 002B     		cmp	r3, #0
 5536 0028 05DB     		blt	.L483
4766:..\..\ff14\source/ff.c **** 				res = FR_INVALID_NAME;
4767:..\..\ff14\source/ff.c **** 			} else {							/* Found an object */
4768:..\..\ff14\source/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 191


 5537              		.loc 1 4768 0
 5538 002a 2DB1     		cbz	r5, .L482
 5539              		.loc 1 4768 0 is_stmt 0 discriminator 1
 5540 002c 2946     		mov	r1, r5
 5541 002e 03A8     		add	r0, sp, #12
 5542              	.LVL846:
 5543 0030 FFF7FEFF 		bl	get_fileinfo
 5544              	.LVL847:
 5545 0034 00E0     		b	.L482
 5546              	.LVL848:
 5547              	.L483:
4766:..\..\ff14\source/ff.c **** 				res = FR_INVALID_NAME;
 5548              		.loc 1 4766 0 is_stmt 1
 5549 0036 0624     		movs	r4, #6
 5550              	.LVL849:
 5551              	.L482:
4769:..\..\ff14\source/ff.c **** 			}
4770:..\..\ff14\source/ff.c **** 		}
4771:..\..\ff14\source/ff.c **** 		FREE_NAMBUF();
4772:..\..\ff14\source/ff.c **** 	}
4773:..\..\ff14\source/ff.c **** 
4774:..\..\ff14\source/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4775:..\..\ff14\source/ff.c **** }
 5552              		.loc 1 4775 0
 5553 0038 2046     		mov	r0, r4
 5554 003a 0FB0     		add	sp, sp, #60
 5555              		.cfi_def_cfa_offset 12
 5556              		@ sp needed
 5557 003c 30BD     		pop	{r4, r5, pc}
 5558              		.cfi_endproc
 5559              	.LFE46:
 5560              		.size	f_stat, .-f_stat
 5561              		.section	.text.f_getfree,"ax",%progbits
 5562              		.align	2
 5563              		.global	f_getfree
 5564              		.thumb
 5565              		.thumb_func
 5566              		.type	f_getfree, %function
 5567              	f_getfree:
 5568              	.LFB47:
4776:..\..\ff14\source/ff.c **** 
4777:..\..\ff14\source/ff.c **** 
4778:..\..\ff14\source/ff.c **** 
4779:..\..\ff14\source/ff.c **** #if !FF_FS_READONLY
4780:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4781:..\..\ff14\source/ff.c **** /* Get Number of Free Clusters                                           */
4782:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4783:..\..\ff14\source/ff.c **** 
4784:..\..\ff14\source/ff.c **** FRESULT f_getfree (
4785:..\..\ff14\source/ff.c **** 	const TCHAR* path,	/* Logical drive number */
4786:..\..\ff14\source/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4787:..\..\ff14\source/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding filesystem object */
4788:..\..\ff14\source/ff.c **** )
4789:..\..\ff14\source/ff.c **** {
 5569              		.loc 1 4789 0
 5570              		.cfi_startproc
 5571              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 192


 5572              		@ frame_needed = 0, uses_anonymous_args = 0
 5573              	.LVL850:
 5574 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5575              		.cfi_def_cfa_offset 32
 5576              		.cfi_offset 4, -32
 5577              		.cfi_offset 5, -28
 5578              		.cfi_offset 6, -24
 5579              		.cfi_offset 7, -20
 5580              		.cfi_offset 8, -16
 5581              		.cfi_offset 9, -12
 5582              		.cfi_offset 10, -8
 5583              		.cfi_offset 14, -4
 5584 0004 88B0     		sub	sp, sp, #32
 5585              		.cfi_def_cfa_offset 64
 5586 0006 0190     		str	r0, [sp, #4]
 5587 0008 8946     		mov	r9, r1
 5588 000a 1446     		mov	r4, r2
4790:..\..\ff14\source/ff.c **** 	FRESULT res;
4791:..\..\ff14\source/ff.c **** 	FATFS *fs;
4792:..\..\ff14\source/ff.c **** 	DWORD nfree, clst, stat;
4793:..\..\ff14\source/ff.c **** 	LBA_t sect;
4794:..\..\ff14\source/ff.c **** 	UINT i;
4795:..\..\ff14\source/ff.c **** 	FFOBJID obj;
4796:..\..\ff14\source/ff.c **** 
4797:..\..\ff14\source/ff.c **** 
4798:..\..\ff14\source/ff.c **** 	/* Get logical drive */
4799:..\..\ff14\source/ff.c **** 	res = mount_volume(&path, &fs, 0);
 5589              		.loc 1 4799 0
 5590 000c 0022     		movs	r2, #0
 5591              	.LVL851:
 5592 000e 07A9     		add	r1, sp, #28
 5593              	.LVL852:
 5594 0010 01A8     		add	r0, sp, #4
 5595              	.LVL853:
 5596 0012 FFF7FEFF 		bl	mount_volume
 5597              	.LVL854:
4800:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 5598              		.loc 1 4800 0
 5599 0016 8046     		mov	r8, r0
 5600 0018 0028     		cmp	r0, #0
 5601 001a 54D1     		bne	.L486
4801:..\..\ff14\source/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 5602              		.loc 1 4801 0
 5603 001c 079B     		ldr	r3, [sp, #28]
 5604 001e 2360     		str	r3, [r4]
4802:..\..\ff14\source/ff.c **** 		/* If free_clst is valid, return it without full FAT scan */
4803:..\..\ff14\source/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
 5605              		.loc 1 4803 0
 5606 0020 1A69     		ldr	r2, [r3, #16]
 5607 0022 5D69     		ldr	r5, [r3, #20]
 5608 0024 A91E     		subs	r1, r5, #2
 5609 0026 8A42     		cmp	r2, r1
 5610 0028 02D8     		bhi	.L487
4804:..\..\ff14\source/ff.c **** 			*nclst = fs->free_clst;
 5611              		.loc 1 4804 0
 5612 002a C9F80020 		str	r2, [r9]
 5613 002e 4AE0     		b	.L486
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 193


 5614              	.L487:
 5615              	.LVL855:
4805:..\..\ff14\source/ff.c **** 		} else {
4806:..\..\ff14\source/ff.c **** 			/* Scan FAT to obtain number of free clusters */
4807:..\..\ff14\source/ff.c **** 			nfree = 0;
4808:..\..\ff14\source/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 5616              		.loc 1 4808 0
 5617 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5618 0032 012A     		cmp	r2, #1
 5619 0034 13D1     		bne	.L488
 5620              	.LVL856:
4809:..\..\ff14\source/ff.c **** 				clst = 2; obj.fs = fs;
 5621              		.loc 1 4809 0
 5622 0036 0393     		str	r3, [sp, #12]
 5623 0038 0224     		movs	r4, #2
 5624              	.LVL857:
4807:..\..\ff14\source/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 5625              		.loc 1 4807 0
 5626 003a 0026     		movs	r6, #0
 5627              	.LVL858:
 5628              	.L491:
4810:..\..\ff14\source/ff.c **** 				do {
4811:..\..\ff14\source/ff.c **** 					stat = get_fat(&obj, clst);
 5629              		.loc 1 4811 0
 5630 003c 2146     		mov	r1, r4
 5631 003e 03A8     		add	r0, sp, #12
 5632 0040 FFF7FEFF 		bl	get_fat
 5633              	.LVL859:
4812:..\..\ff14\source/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 5634              		.loc 1 4812 0
 5635 0044 B0F1FF3F 		cmp	r0, #-1
 5636 0048 30D0     		beq	.L498
4813:..\..\ff14\source/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 5637              		.loc 1 4813 0
 5638 004a 0128     		cmp	r0, #1
 5639 004c 31D0     		beq	.L499
4814:..\..\ff14\source/ff.c **** 					if (stat == 0) nfree++;
 5640              		.loc 1 4814 0
 5641 004e 00B9     		cbnz	r0, .L490
 5642              		.loc 1 4814 0 is_stmt 0 discriminator 1
 5643 0050 0136     		adds	r6, r6, #1
 5644              	.LVL860:
 5645              	.L490:
4815:..\..\ff14\source/ff.c **** 				} while (++clst < fs->n_fatent);
 5646              		.loc 1 4815 0 is_stmt 1
 5647 0052 0134     		adds	r4, r4, #1
 5648              	.LVL861:
 5649 0054 079B     		ldr	r3, [sp, #28]
 5650 0056 5B69     		ldr	r3, [r3, #20]
 5651 0058 9C42     		cmp	r4, r3
 5652 005a EFD3     		bcc	.L491
 5653 005c 2BE0     		b	.L489
 5654              	.LVL862:
 5655              	.L488:
4816:..\..\ff14\source/ff.c **** 			} else {
4817:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4818:..\..\ff14\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan allocation bitmap */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 194


4819:..\..\ff14\source/ff.c **** 					BYTE bm;
4820:..\..\ff14\source/ff.c **** 					UINT b;
4821:..\..\ff14\source/ff.c **** 
4822:..\..\ff14\source/ff.c **** 					clst = fs->n_fatent - 2;	/* Number of clusters */
4823:..\..\ff14\source/ff.c **** 					sect = fs->bitbase;			/* Bitmap sector */
4824:..\..\ff14\source/ff.c **** 					i = 0;						/* Offset in the sector */
4825:..\..\ff14\source/ff.c **** 					do {	/* Counts numbuer of bits with zero in the bitmap */
4826:..\..\ff14\source/ff.c **** 						if (i == 0) {
4827:..\..\ff14\source/ff.c **** 							res = move_window(fs, sect++);
4828:..\..\ff14\source/ff.c **** 							if (res != FR_OK) break;
4829:..\..\ff14\source/ff.c **** 						}
4830:..\..\ff14\source/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4831:..\..\ff14\source/ff.c **** 							if (!(bm & 1)) nfree++;
4832:..\..\ff14\source/ff.c **** 							bm >>= 1;
4833:..\..\ff14\source/ff.c **** 						}
4834:..\..\ff14\source/ff.c **** 						i = (i + 1) % SS(fs);
4835:..\..\ff14\source/ff.c **** 					} while (clst);
4836:..\..\ff14\source/ff.c **** 				} else
4837:..\..\ff14\source/ff.c **** #endif
4838:..\..\ff14\source/ff.c **** 				{	/* FAT16/32: Scan WORD/DWORD FAT entries */
4839:..\..\ff14\source/ff.c **** 					clst = fs->n_fatent;	/* Number of entries */
4840:..\..\ff14\source/ff.c **** 					sect = fs->fatbase;		/* Top of the FAT */
 5656              		.loc 1 4840 0
 5657 005e 1F6A     		ldr	r7, [r3, #32]
 5658              	.LVL863:
4841:..\..\ff14\source/ff.c **** 					i = 0;					/* Offset in the sector */
 5659              		.loc 1 4841 0
 5660 0060 0024     		movs	r4, #0
 5661              	.LVL864:
4807:..\..\ff14\source/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 5662              		.loc 1 4807 0
 5663 0062 2646     		mov	r6, r4
 5664              	.LVL865:
 5665              	.L497:
4842:..\..\ff14\source/ff.c **** 					do {	/* Counts numbuer of entries with zero in the FAT */
4843:..\..\ff14\source/ff.c **** 						if (i == 0) {
 5666              		.loc 1 4843 0
 5667 0064 44B9     		cbnz	r4, .L492
4844:..\..\ff14\source/ff.c **** 							res = move_window(fs, sect++);
 5668              		.loc 1 4844 0
 5669 0066 07F1010A 		add	r10, r7, #1
 5670              	.LVL866:
 5671 006a 3946     		mov	r1, r7
 5672 006c 0798     		ldr	r0, [sp, #28]
 5673 006e FFF7FEFF 		bl	move_window
 5674              	.LVL867:
4845:..\..\ff14\source/ff.c **** 							if (res != FR_OK) break;
 5675              		.loc 1 4845 0
 5676 0072 8046     		mov	r8, r0
 5677 0074 F8B9     		cbnz	r0, .L489
4844:..\..\ff14\source/ff.c **** 							res = move_window(fs, sect++);
 5678              		.loc 1 4844 0
 5679 0076 5746     		mov	r7, r10
 5680              	.LVL868:
 5681              	.L492:
4846:..\..\ff14\source/ff.c **** 						}
4847:..\..\ff14\source/ff.c **** 						if (fs->fs_type == FS_FAT16) {
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 195


 5682              		.loc 1 4847 0
 5683 0078 0798     		ldr	r0, [sp, #28]
 5684 007a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 5685 007c 022B     		cmp	r3, #2
 5686 007e 07D1     		bne	.L493
4848:..\..\ff14\source/ff.c **** 							if (ld_word(fs->win + i) == 0) nfree++;
 5687              		.loc 1 4848 0
 5688 0080 3030     		adds	r0, r0, #48
 5689 0082 2044     		add	r0, r0, r4
 5690 0084 FFF7FEFF 		bl	ld_word
 5691              	.LVL869:
 5692 0088 00B9     		cbnz	r0, .L494
 5693              		.loc 1 4848 0 is_stmt 0 discriminator 1
 5694 008a 0136     		adds	r6, r6, #1
 5695              	.LVL870:
 5696              	.L494:
4849:..\..\ff14\source/ff.c **** 							i += 2;
 5697              		.loc 1 4849 0 is_stmt 1
 5698 008c 0234     		adds	r4, r4, #2
 5699              	.LVL871:
 5700 008e 08E0     		b	.L495
 5701              	.L493:
4850:..\..\ff14\source/ff.c **** 						} else {
4851:..\..\ff14\source/ff.c **** 							if ((ld_dword(fs->win + i) & 0x0FFFFFFF) == 0) nfree++;
 5702              		.loc 1 4851 0
 5703 0090 3030     		adds	r0, r0, #48
 5704 0092 2044     		add	r0, r0, r4
 5705 0094 FFF7FEFF 		bl	ld_dword
 5706              	.LVL872:
 5707 0098 20F07040 		bic	r0, r0, #-268435456
 5708 009c 00B9     		cbnz	r0, .L496
 5709              		.loc 1 4851 0 is_stmt 0 discriminator 1
 5710 009e 0136     		adds	r6, r6, #1
 5711              	.LVL873:
 5712              	.L496:
4852:..\..\ff14\source/ff.c **** 							i += 4;
 5713              		.loc 1 4852 0 is_stmt 1
 5714 00a0 0434     		adds	r4, r4, #4
 5715              	.LVL874:
 5716              	.L495:
4853:..\..\ff14\source/ff.c **** 						}
4854:..\..\ff14\source/ff.c **** 						i %= SS(fs);
 5717              		.loc 1 4854 0
 5718 00a2 C4F30804 		ubfx	r4, r4, #0, #9
 5719              	.LVL875:
4855:..\..\ff14\source/ff.c **** 					} while (--clst);
 5720              		.loc 1 4855 0
 5721 00a6 013D     		subs	r5, r5, #1
 5722              	.LVL876:
 5723 00a8 DCD1     		bne	.L497
 5724 00aa 04E0     		b	.L489
 5725              	.LVL877:
 5726              	.L498:
4812:..\..\ff14\source/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 5727              		.loc 1 4812 0
 5728 00ac 4FF00108 		mov	r8, #1
 5729 00b0 01E0     		b	.L489
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 196


 5730              	.L499:
4813:..\..\ff14\source/ff.c **** 					if (stat == 0) nfree++;
 5731              		.loc 1 4813 0
 5732 00b2 4FF00208 		mov	r8, #2
 5733              	.LVL878:
 5734              	.L489:
4856:..\..\ff14\source/ff.c **** 				}
4857:..\..\ff14\source/ff.c **** 			}
4858:..\..\ff14\source/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
 5735              		.loc 1 4858 0
 5736 00b6 C9F80060 		str	r6, [r9]
4859:..\..\ff14\source/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 5737              		.loc 1 4859 0
 5738 00ba 079B     		ldr	r3, [sp, #28]
 5739 00bc 1E61     		str	r6, [r3, #16]
4860:..\..\ff14\source/ff.c **** 			fs->fsi_flag |= 1;		/* FAT32: FSInfo is to be updated */
 5740              		.loc 1 4860 0
 5741 00be 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 5742 00c0 42F00102 		orr	r2, r2, #1
 5743 00c4 1A71     		strb	r2, [r3, #4]
 5744              	.LVL879:
 5745              	.L486:
4861:..\..\ff14\source/ff.c **** 		}
4862:..\..\ff14\source/ff.c **** 	}
4863:..\..\ff14\source/ff.c **** 
4864:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
4865:..\..\ff14\source/ff.c **** }
 5746              		.loc 1 4865 0
 5747 00c6 4046     		mov	r0, r8
 5748 00c8 08B0     		add	sp, sp, #32
 5749              		.cfi_def_cfa_offset 32
 5750              		@ sp needed
 5751 00ca BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5752              		.cfi_endproc
 5753              	.LFE47:
 5754              		.size	f_getfree, .-f_getfree
 5755 00ce 00BF     		.section	.text.f_truncate,"ax",%progbits
 5756              		.align	2
 5757              		.global	f_truncate
 5758              		.thumb
 5759              		.thumb_func
 5760              		.type	f_truncate, %function
 5761              	f_truncate:
 5762              	.LFB48:
4866:..\..\ff14\source/ff.c **** 
4867:..\..\ff14\source/ff.c **** 
4868:..\..\ff14\source/ff.c **** 
4869:..\..\ff14\source/ff.c **** 
4870:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4871:..\..\ff14\source/ff.c **** /* Truncate File                                                         */
4872:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4873:..\..\ff14\source/ff.c **** 
4874:..\..\ff14\source/ff.c **** FRESULT f_truncate (
4875:..\..\ff14\source/ff.c **** 	FIL* fp		/* Pointer to the file object */
4876:..\..\ff14\source/ff.c **** )
4877:..\..\ff14\source/ff.c **** {
 5763              		.loc 1 4877 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 197


 5764              		.cfi_startproc
 5765              		@ args = 0, pretend = 0, frame = 8
 5766              		@ frame_needed = 0, uses_anonymous_args = 0
 5767              	.LVL880:
 5768 0000 30B5     		push	{r4, r5, lr}
 5769              		.cfi_def_cfa_offset 12
 5770              		.cfi_offset 4, -12
 5771              		.cfi_offset 5, -8
 5772              		.cfi_offset 14, -4
 5773 0002 83B0     		sub	sp, sp, #12
 5774              		.cfi_def_cfa_offset 24
 5775 0004 0546     		mov	r5, r0
4878:..\..\ff14\source/ff.c **** 	FRESULT res;
4879:..\..\ff14\source/ff.c **** 	FATFS *fs;
4880:..\..\ff14\source/ff.c **** 	DWORD ncl;
4881:..\..\ff14\source/ff.c **** 
4882:..\..\ff14\source/ff.c **** 
4883:..\..\ff14\source/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 5776              		.loc 1 4883 0
 5777 0006 01A9     		add	r1, sp, #4
 5778 0008 FFF7FEFF 		bl	validate
 5779              	.LVL881:
4884:..\..\ff14\source/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 5780              		.loc 1 4884 0
 5781 000c 0028     		cmp	r0, #0
 5782 000e 47D1     		bne	.L508
 5783              		.loc 1 4884 0 is_stmt 0 discriminator 2
 5784 0010 6C7C     		ldrb	r4, [r5, #17]	@ zero_extendqisi2
 5785              	.LVL882:
 5786 0012 002C     		cmp	r4, #0
 5787 0014 45D1     		bne	.L509
4885:..\..\ff14\source/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5788              		.loc 1 4885 0 is_stmt 1
 5789 0016 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 5790 0018 13F0020F 		tst	r3, #2
 5791 001c 43D0     		beq	.L510
4886:..\..\ff14\source/ff.c **** 
4887:..\..\ff14\source/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
 5792              		.loc 1 4887 0
 5793 001e 6B69     		ldr	r3, [r5, #20]
 5794 0020 EA68     		ldr	r2, [r5, #12]
 5795 0022 9342     		cmp	r3, r2
 5796 0024 41D2     		bcs	.L511
4888:..\..\ff14\source/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 5797              		.loc 1 4888 0
 5798 0026 43B9     		cbnz	r3, .L503
4889:..\..\ff14\source/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 5799              		.loc 1 4889 0
 5800 0028 0022     		movs	r2, #0
 5801 002a A968     		ldr	r1, [r5, #8]
 5802 002c 2846     		mov	r0, r5
 5803 002e FFF7FEFF 		bl	remove_chain
 5804              	.LVL883:
 5805 0032 0446     		mov	r4, r0
 5806              	.LVL884:
4890:..\..\ff14\source/ff.c **** 			fp->obj.sclust = 0;
 5807              		.loc 1 4890 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 198


 5808 0034 0023     		movs	r3, #0
 5809 0036 AB60     		str	r3, [r5, #8]
 5810 0038 15E0     		b	.L504
 5811              	.L503:
4891:..\..\ff14\source/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4892:..\..\ff14\source/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
 5812              		.loc 1 4892 0
 5813 003a A969     		ldr	r1, [r5, #24]
 5814 003c 2846     		mov	r0, r5
 5815 003e FFF7FEFF 		bl	get_fat
 5816              	.LVL885:
4893:..\..\ff14\source/ff.c **** 			res = FR_OK;
4894:..\..\ff14\source/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
 5817              		.loc 1 4894 0
 5818 0042 B0F1FF3F 		cmp	r0, #-1
 5819 0046 00D1     		bne	.L505
 5820 0048 0124     		movs	r4, #1
 5821              	.L505:
 5822              	.LVL886:
4895:..\..\ff14\source/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 5823              		.loc 1 4895 0
 5824 004a 0128     		cmp	r0, #1
 5825 004c 00D1     		bne	.L506
 5826 004e 0224     		movs	r4, #2
 5827              	.LVL887:
 5828              	.L506:
4896:..\..\ff14\source/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 5829              		.loc 1 4896 0
 5830 0050 4CB9     		cbnz	r4, .L504
 5831              		.loc 1 4896 0 is_stmt 0 discriminator 1
 5832 0052 019B     		ldr	r3, [sp, #4]
 5833 0054 5B69     		ldr	r3, [r3, #20]
 5834 0056 9842     		cmp	r0, r3
 5835 0058 05D2     		bcs	.L504
4897:..\..\ff14\source/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 5836              		.loc 1 4897 0 is_stmt 1
 5837 005a AA69     		ldr	r2, [r5, #24]
 5838 005c 0146     		mov	r1, r0
 5839 005e 2846     		mov	r0, r5
 5840              	.LVL888:
 5841 0060 FFF7FEFF 		bl	remove_chain
 5842              	.LVL889:
 5843 0064 0446     		mov	r4, r0
 5844              	.LVL890:
 5845              	.L504:
4898:..\..\ff14\source/ff.c **** 			}
4899:..\..\ff14\source/ff.c **** 		}
4900:..\..\ff14\source/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current read/write point */
 5846              		.loc 1 4900 0
 5847 0066 6B69     		ldr	r3, [r5, #20]
 5848 0068 EB60     		str	r3, [r5, #12]
4901:..\..\ff14\source/ff.c **** 		fp->flag |= FA_MODIFIED;
 5849              		.loc 1 4901 0
 5850 006a 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 5851 006c 43F04003 		orr	r3, r3, #64
 5852 0070 2B74     		strb	r3, [r5, #16]
4902:..\..\ff14\source/ff.c **** #if !FF_FS_TINY
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 199


4903:..\..\ff14\source/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
 5853              		.loc 1 4903 0
 5854 0072 8CB9     		cbnz	r4, .L507
 5855              		.loc 1 4903 0 is_stmt 0 discriminator 1
 5856 0074 13F0800F 		tst	r3, #128
 5857 0078 0ED0     		beq	.L507
4904:..\..\ff14\source/ff.c **** 			if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) {
 5858              		.loc 1 4904 0 is_stmt 1
 5859 007a 0123     		movs	r3, #1
 5860 007c EA69     		ldr	r2, [r5, #28]
 5861 007e 05F12801 		add	r1, r5, #40
 5862 0082 0198     		ldr	r0, [sp, #4]
 5863 0084 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5864 0086 FFF7FEFF 		bl	disk_write
 5865              	.LVL891:
 5866 008a 20B9     		cbnz	r0, .L514
4905:..\..\ff14\source/ff.c **** 				res = FR_DISK_ERR;
4906:..\..\ff14\source/ff.c **** 			} else {
4907:..\..\ff14\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5867              		.loc 1 4907 0
 5868 008c 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 5869 008e 03F07F03 		and	r3, r3, #127
 5870 0092 2B74     		strb	r3, [r5, #16]
 5871 0094 00E0     		b	.L507
 5872              	.L514:
4905:..\..\ff14\source/ff.c **** 				res = FR_DISK_ERR;
 5873              		.loc 1 4905 0
 5874 0096 0124     		movs	r4, #1
 5875              	.LVL892:
 5876              	.L507:
4908:..\..\ff14\source/ff.c **** 			}
4909:..\..\ff14\source/ff.c **** 		}
4910:..\..\ff14\source/ff.c **** #endif
4911:..\..\ff14\source/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
 5877              		.loc 1 4911 0
 5878 0098 4CB1     		cbz	r4, .L515
 5879              		.loc 1 4911 0 is_stmt 0 discriminator 1
 5880 009a 6C74     		strb	r4, [r5, #17]
 5881 009c 2046     		mov	r0, r4
 5882 009e 07E0     		b	.L502
 5883              	.LVL893:
 5884              	.L508:
 5885 00a0 06E0     		b	.L502
 5886              	.LVL894:
 5887              	.L509:
4884:..\..\ff14\source/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5888              		.loc 1 4884 0 is_stmt 1
 5889 00a2 2046     		mov	r0, r4
 5890 00a4 04E0     		b	.L502
 5891              	.L510:
4885:..\..\ff14\source/ff.c **** 
 5892              		.loc 1 4885 0
 5893 00a6 0720     		movs	r0, #7
 5894 00a8 02E0     		b	.L502
 5895              	.L511:
4884:..\..\ff14\source/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5896              		.loc 1 4884 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 200


 5897 00aa 2046     		mov	r0, r4
 5898 00ac 00E0     		b	.L502
 5899              	.L515:
 5900 00ae 2046     		mov	r0, r4
 5901              	.LVL895:
 5902              	.L502:
4912:..\..\ff14\source/ff.c **** 	}
4913:..\..\ff14\source/ff.c **** 
4914:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
4915:..\..\ff14\source/ff.c **** }
 5903              		.loc 1 4915 0
 5904 00b0 03B0     		add	sp, sp, #12
 5905              		.cfi_def_cfa_offset 12
 5906              		@ sp needed
 5907 00b2 30BD     		pop	{r4, r5, pc}
 5908              		.cfi_endproc
 5909              	.LFE48:
 5910              		.size	f_truncate, .-f_truncate
 5911              		.section	.text.f_unlink,"ax",%progbits
 5912              		.align	2
 5913              		.global	f_unlink
 5914              		.thumb
 5915              		.thumb_func
 5916              		.type	f_unlink, %function
 5917              	f_unlink:
 5918              	.LFB49:
4916:..\..\ff14\source/ff.c **** 
4917:..\..\ff14\source/ff.c **** 
4918:..\..\ff14\source/ff.c **** 
4919:..\..\ff14\source/ff.c **** 
4920:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4921:..\..\ff14\source/ff.c **** /* Delete a File/Directory                                               */
4922:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
4923:..\..\ff14\source/ff.c **** 
4924:..\..\ff14\source/ff.c **** FRESULT f_unlink (
4925:..\..\ff14\source/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4926:..\..\ff14\source/ff.c **** )
4927:..\..\ff14\source/ff.c **** {
 5919              		.loc 1 4927 0
 5920              		.cfi_startproc
 5921              		@ args = 0, pretend = 0, frame = 104
 5922              		@ frame_needed = 0, uses_anonymous_args = 0
 5923              	.LVL896:
 5924 0000 70B5     		push	{r4, r5, r6, lr}
 5925              		.cfi_def_cfa_offset 16
 5926              		.cfi_offset 4, -16
 5927              		.cfi_offset 5, -12
 5928              		.cfi_offset 6, -8
 5929              		.cfi_offset 14, -4
 5930 0002 9AB0     		sub	sp, sp, #104
 5931              		.cfi_def_cfa_offset 120
 5932 0004 0190     		str	r0, [sp, #4]
 5933              	.LVL897:
4928:..\..\ff14\source/ff.c **** 	FRESULT res;
4929:..\..\ff14\source/ff.c **** 	DIR dj, sdj;
4930:..\..\ff14\source/ff.c **** 	DWORD dclst = 0;
4931:..\..\ff14\source/ff.c **** 	FATFS *fs;
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 201


4932:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4933:..\..\ff14\source/ff.c **** 	FFOBJID obj;
4934:..\..\ff14\source/ff.c **** #endif
4935:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
4936:..\..\ff14\source/ff.c **** 
4937:..\..\ff14\source/ff.c **** 
4938:..\..\ff14\source/ff.c **** 	/* Get logical drive */
4939:..\..\ff14\source/ff.c **** 	res = mount_volume(&path, &fs, FA_WRITE);
 5934              		.loc 1 4939 0
 5935 0006 0222     		movs	r2, #2
 5936 0008 03A9     		add	r1, sp, #12
 5937 000a 01A8     		add	r0, sp, #4
 5938              	.LVL898:
 5939 000c FFF7FEFF 		bl	mount_volume
 5940              	.LVL899:
4940:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 5941              		.loc 1 4940 0
 5942 0010 0446     		mov	r4, r0
 5943 0012 0028     		cmp	r0, #0
 5944 0014 47D1     		bne	.L518
4941:..\..\ff14\source/ff.c **** 		dj.obj.fs = fs;
 5945              		.loc 1 4941 0
 5946 0016 039B     		ldr	r3, [sp, #12]
 5947 0018 0F93     		str	r3, [sp, #60]
4942:..\..\ff14\source/ff.c **** 		INIT_NAMBUF(fs);
4943:..\..\ff14\source/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 5948              		.loc 1 4943 0
 5949 001a 0199     		ldr	r1, [sp, #4]
 5950 001c 0FA8     		add	r0, sp, #60
 5951              	.LVL900:
 5952 001e FFF7FEFF 		bl	follow_path
 5953              	.LVL901:
4944:..\..\ff14\source/ff.c **** 		if (FF_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4945:..\..\ff14\source/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4946:..\..\ff14\source/ff.c **** 		}
4947:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
4948:..\..\ff14\source/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4949:..\..\ff14\source/ff.c **** #endif
4950:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
 5954              		.loc 1 4950 0
 5955 0022 0446     		mov	r4, r0
 5956 0024 0028     		cmp	r0, #0
 5957 0026 3ED1     		bne	.L518
4951:..\..\ff14\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 5958              		.loc 1 4951 0
 5959 0028 9DF96730 		ldrsb	r3, [sp, #103]
 5960 002c 002B     		cmp	r3, #0
 5961 002e 05DB     		blt	.L523
4952:..\..\ff14\source/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4953:..\..\ff14\source/ff.c **** 			} else {
4954:..\..\ff14\source/ff.c **** 				if (dj.obj.attr & AM_RDO) {
 5962              		.loc 1 4954 0
 5963 0030 9DF84230 		ldrb	r3, [sp, #66]	@ zero_extendqisi2
 5964 0034 13F0010F 		tst	r3, #1
 5965 0038 02D1     		bne	.L524
 5966 003a 02E0     		b	.L519
 5967              	.L523:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 202


4952:..\..\ff14\source/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 5968              		.loc 1 4952 0
 5969 003c 0624     		movs	r4, #6
 5970 003e 00E0     		b	.L519
 5971              	.L524:
4955:..\..\ff14\source/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 5972              		.loc 1 4955 0
 5973 0040 0724     		movs	r4, #7
 5974              	.L519:
 5975              	.LVL902:
4956:..\..\ff14\source/ff.c **** 				}
4957:..\..\ff14\source/ff.c **** 			}
4958:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {
 5976              		.loc 1 4958 0
 5977 0042 ECB9     		cbnz	r4, .L525
4959:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4960:..\..\ff14\source/ff.c **** 				obj.fs = fs;
4961:..\..\ff14\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4962:..\..\ff14\source/ff.c **** 					init_alloc_info(fs, &obj);
4963:..\..\ff14\source/ff.c **** 					dclst = obj.sclust;
4964:..\..\ff14\source/ff.c **** 				} else
4965:..\..\ff14\source/ff.c **** #endif
4966:..\..\ff14\source/ff.c **** 				{
4967:..\..\ff14\source/ff.c **** 					dclst = ld_clust(fs, dj.dir);
 5978              		.loc 1 4967 0
 5979 0044 039E     		ldr	r6, [sp, #12]
 5980 0046 1699     		ldr	r1, [sp, #88]
 5981 0048 3046     		mov	r0, r6
 5982 004a FFF7FEFF 		bl	ld_clust
 5983              	.LVL903:
 5984 004e 0546     		mov	r5, r0
 5985              	.LVL904:
4968:..\..\ff14\source/ff.c **** 				}
4969:..\..\ff14\source/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
 5986              		.loc 1 4969 0
 5987 0050 9DF84230 		ldrb	r3, [sp, #66]	@ zero_extendqisi2
 5988 0054 13F0100F 		tst	r3, #16
 5989 0058 13D0     		beq	.L520
4970:..\..\ff14\source/ff.c **** #if FF_FS_RPATH != 0
4971:..\..\ff14\source/ff.c **** 					if (dclst == fs->cdir) {		 	/* Is it the current directory? */
4972:..\..\ff14\source/ff.c **** 						res = FR_DENIED;
4973:..\..\ff14\source/ff.c **** 					} else
4974:..\..\ff14\source/ff.c **** #endif
4975:..\..\ff14\source/ff.c **** 					{
4976:..\..\ff14\source/ff.c **** 						sdj.obj.fs = fs;				/* Open the sub-directory */
 5990              		.loc 1 4976 0
 5991 005a 0496     		str	r6, [sp, #16]
4977:..\..\ff14\source/ff.c **** 						sdj.obj.sclust = dclst;
 5992              		.loc 1 4977 0
 5993 005c 0690     		str	r0, [sp, #24]
4978:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4979:..\..\ff14\source/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4980:..\..\ff14\source/ff.c **** 							sdj.obj.objsize = obj.objsize;
4981:..\..\ff14\source/ff.c **** 							sdj.obj.stat = obj.stat;
4982:..\..\ff14\source/ff.c **** 						}
4983:..\..\ff14\source/ff.c **** #endif
4984:..\..\ff14\source/ff.c **** 						res = dir_sdi(&sdj, 0);
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 203


 5994              		.loc 1 4984 0
 5995 005e 0021     		movs	r1, #0
 5996 0060 04A8     		add	r0, sp, #16
 5997              	.LVL905:
 5998 0062 FFF7FEFF 		bl	dir_sdi
 5999              	.LVL906:
4985:..\..\ff14\source/ff.c **** 						if (res == FR_OK) {
 6000              		.loc 1 4985 0
 6001 0066 0446     		mov	r4, r0
 6002 0068 58B9     		cbnz	r0, .L520
4986:..\..\ff14\source/ff.c **** 							res = DIR_READ_FILE(&sdj);			/* Test if the directory is empty */
 6003              		.loc 1 4986 0
 6004 006a 0021     		movs	r1, #0
 6005 006c 04A8     		add	r0, sp, #16
 6006              	.LVL907:
 6007 006e FFF7FEFF 		bl	dir_read
 6008              	.LVL908:
4987:..\..\ff14\source/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 6009              		.loc 1 4987 0
 6010 0072 0346     		mov	r3, r0
 6011 0074 00B9     		cbnz	r0, .L521
 6012 0076 0723     		movs	r3, #7
 6013              	.L521:
 6014              	.LVL909:
4988:..\..\ff14\source/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 6015              		.loc 1 4988 0
 6016 0078 042B     		cmp	r3, #4
 6017 007a 02D0     		beq	.L520
 6018 007c 1C46     		mov	r4, r3
 6019 007e 00E0     		b	.L520
 6020              	.LVL910:
 6021              	.L525:
4930:..\..\ff14\source/ff.c **** 	FATFS *fs;
 6022              		.loc 1 4930 0
 6023 0080 0025     		movs	r5, #0
 6024              	.LVL911:
 6025              	.L520:
4989:..\..\ff14\source/ff.c **** 						}
4990:..\..\ff14\source/ff.c **** 					}
4991:..\..\ff14\source/ff.c **** 				}
4992:..\..\ff14\source/ff.c **** 			}
4993:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {
 6026              		.loc 1 4993 0
 6027 0082 84B9     		cbnz	r4, .L518
4994:..\..\ff14\source/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 6028              		.loc 1 4994 0
 6029 0084 0FA8     		add	r0, sp, #60
 6030 0086 FFF7FEFF 		bl	dir_remove
 6031              	.LVL912:
4995:..\..\ff14\source/ff.c **** 				if (res == FR_OK && dclst != 0) {	/* Remove the cluster chain if exist */
 6032              		.loc 1 4995 0
 6033 008a 0446     		mov	r4, r0
 6034 008c 30B9     		cbnz	r0, .L522
 6035              		.loc 1 4995 0 is_stmt 0 discriminator 1
 6036 008e 2DB1     		cbz	r5, .L522
4996:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
4997:..\..\ff14\source/ff.c **** 					res = remove_chain(&obj, dclst, 0);
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 204


4998:..\..\ff14\source/ff.c **** #else
4999:..\..\ff14\source/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
 6037              		.loc 1 4999 0 is_stmt 1
 6038 0090 0022     		movs	r2, #0
 6039 0092 2946     		mov	r1, r5
 6040 0094 0FA8     		add	r0, sp, #60
 6041              	.LVL913:
 6042 0096 FFF7FEFF 		bl	remove_chain
 6043              	.LVL914:
 6044 009a 0446     		mov	r4, r0
 6045              	.LVL915:
 6046              	.L522:
5000:..\..\ff14\source/ff.c **** #endif
5001:..\..\ff14\source/ff.c **** 				}
5002:..\..\ff14\source/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
 6047              		.loc 1 5002 0
 6048 009c 1CB9     		cbnz	r4, .L518
 6049              		.loc 1 5002 0 is_stmt 0 discriminator 1
 6050 009e 0398     		ldr	r0, [sp, #12]
 6051 00a0 FFF7FEFF 		bl	sync_fs
 6052              	.LVL916:
 6053 00a4 0446     		mov	r4, r0
 6054              	.LVL917:
 6055              	.L518:
5003:..\..\ff14\source/ff.c **** 			}
5004:..\..\ff14\source/ff.c **** 		}
5005:..\..\ff14\source/ff.c **** 		FREE_NAMBUF();
5006:..\..\ff14\source/ff.c **** 	}
5007:..\..\ff14\source/ff.c **** 
5008:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
5009:..\..\ff14\source/ff.c **** }
 6056              		.loc 1 5009 0 is_stmt 1
 6057 00a6 2046     		mov	r0, r4
 6058 00a8 1AB0     		add	sp, sp, #104
 6059              		.cfi_def_cfa_offset 16
 6060              		@ sp needed
 6061 00aa 70BD     		pop	{r4, r5, r6, pc}
 6062              		.cfi_endproc
 6063              	.LFE49:
 6064              		.size	f_unlink, .-f_unlink
 6065              		.section	.text.f_mkdir,"ax",%progbits
 6066              		.align	2
 6067              		.global	f_mkdir
 6068              		.thumb
 6069              		.thumb_func
 6070              		.type	f_mkdir, %function
 6071              	f_mkdir:
 6072              	.LFB50:
5010:..\..\ff14\source/ff.c **** 
5011:..\..\ff14\source/ff.c **** 
5012:..\..\ff14\source/ff.c **** 
5013:..\..\ff14\source/ff.c **** 
5014:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
5015:..\..\ff14\source/ff.c **** /* Create a Directory                                                    */
5016:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
5017:..\..\ff14\source/ff.c **** 
5018:..\..\ff14\source/ff.c **** FRESULT f_mkdir (
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 205


5019:..\..\ff14\source/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
5020:..\..\ff14\source/ff.c **** )
5021:..\..\ff14\source/ff.c **** {
 6073              		.loc 1 5021 0
 6074              		.cfi_startproc
 6075              		@ args = 0, pretend = 0, frame = 72
 6076              		@ frame_needed = 0, uses_anonymous_args = 0
 6077              	.LVL918:
 6078 0000 70B5     		push	{r4, r5, r6, lr}
 6079              		.cfi_def_cfa_offset 16
 6080              		.cfi_offset 4, -16
 6081              		.cfi_offset 5, -12
 6082              		.cfi_offset 6, -8
 6083              		.cfi_offset 14, -4
 6084 0002 92B0     		sub	sp, sp, #72
 6085              		.cfi_def_cfa_offset 88
 6086 0004 0190     		str	r0, [sp, #4]
5022:..\..\ff14\source/ff.c **** 	FRESULT res;
5023:..\..\ff14\source/ff.c **** 	DIR dj;
5024:..\..\ff14\source/ff.c **** 	FFOBJID sobj;
5025:..\..\ff14\source/ff.c **** 	FATFS *fs;
5026:..\..\ff14\source/ff.c **** 	DWORD dcl, pcl, tm;
5027:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
5028:..\..\ff14\source/ff.c **** 
5029:..\..\ff14\source/ff.c **** 
5030:..\..\ff14\source/ff.c **** 	res = mount_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
 6087              		.loc 1 5030 0
 6088 0006 0222     		movs	r2, #2
 6089 0008 02A9     		add	r1, sp, #8
 6090 000a 01A8     		add	r0, sp, #4
 6091              	.LVL919:
 6092 000c FFF7FEFF 		bl	mount_volume
 6093              	.LVL920:
5031:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 6094              		.loc 1 5031 0
 6095 0010 0446     		mov	r4, r0
 6096 0012 0028     		cmp	r0, #0
 6097 0014 70D1     		bne	.L529
5032:..\..\ff14\source/ff.c **** 		dj.obj.fs = fs;
 6098              		.loc 1 5032 0
 6099 0016 029B     		ldr	r3, [sp, #8]
 6100 0018 0793     		str	r3, [sp, #28]
5033:..\..\ff14\source/ff.c **** 		INIT_NAMBUF(fs);
5034:..\..\ff14\source/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 6101              		.loc 1 5034 0
 6102 001a 0199     		ldr	r1, [sp, #4]
 6103 001c 07A8     		add	r0, sp, #28
 6104              	.LVL921:
 6105 001e FFF7FEFF 		bl	follow_path
 6106              	.LVL922:
5035:..\..\ff14\source/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Name collision? */
 6107              		.loc 1 5035 0
 6108 0022 0346     		mov	r3, r0
 6109 0024 00B9     		cbnz	r0, .L530
 6110 0026 0823     		movs	r3, #8
 6111              	.L530:
 6112              	.LVL923:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 206


5036:..\..\ff14\source/ff.c **** 		if (FF_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {	/* Invalid name? */
5037:..\..\ff14\source/ff.c **** 			res = FR_INVALID_NAME;
5038:..\..\ff14\source/ff.c **** 		}
5039:..\..\ff14\source/ff.c **** 		if (res == FR_NO_FILE) {				/* It is clear to create a new directory */
 6113              		.loc 1 5039 0
 6114 0028 042B     		cmp	r3, #4
 6115 002a 64D1     		bne	.L537
5040:..\..\ff14\source/ff.c **** 			sobj.fs = fs;						/* New object id to create a new chain */
 6116              		.loc 1 5040 0
 6117 002c 12A8     		add	r0, sp, #72
 6118 002e 029B     		ldr	r3, [sp, #8]
 6119              	.LVL924:
 6120 0030 40F83C3D 		str	r3, [r0, #-60]!
5041:..\..\ff14\source/ff.c **** 			dcl = create_chain(&sobj, 0);		/* Allocate a cluster for the new directory */
 6121              		.loc 1 5041 0
 6122 0034 0021     		movs	r1, #0
 6123 0036 FFF7FEFF 		bl	create_chain
 6124              	.LVL925:
5042:..\..\ff14\source/ff.c **** 			res = FR_OK;
5043:..\..\ff14\source/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster? */
 6125              		.loc 1 5043 0
 6126 003a 0546     		mov	r5, r0
 6127 003c 00B9     		cbnz	r0, .L531
 6128 003e 0724     		movs	r4, #7
 6129              	.L531:
 6130              	.LVL926:
5044:..\..\ff14\source/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;		/* Any insanity? */
 6131              		.loc 1 5044 0
 6132 0040 012D     		cmp	r5, #1
 6133 0042 00D1     		bne	.L532
 6134 0044 0224     		movs	r4, #2
 6135              	.LVL927:
 6136              	.L532:
5045:..\..\ff14\source/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;	/* Disk error? */
 6137              		.loc 1 5045 0
 6138 0046 B5F1FF3F 		cmp	r5, #-1
 6139 004a 00D1     		bne	.L533
 6140 004c 0124     		movs	r4, #1
 6141              	.LVL928:
 6142              	.L533:
5046:..\..\ff14\source/ff.c **** 			tm = GET_FATTIME();
 6143              		.loc 1 5046 0
 6144 004e FFF7FEFF 		bl	get_fattime
 6145              	.LVL929:
 6146 0052 0646     		mov	r6, r0
 6147              	.LVL930:
5047:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {
 6148              		.loc 1 5047 0
 6149 0054 94BB     		cbnz	r4, .L534
5048:..\..\ff14\source/ff.c **** 				res = dir_clear(fs, dcl);		/* Clean up the new table */
 6150              		.loc 1 5048 0
 6151 0056 2946     		mov	r1, r5
 6152 0058 0298     		ldr	r0, [sp, #8]
 6153              	.LVL931:
 6154 005a FFF7FEFF 		bl	dir_clear
 6155              	.LVL932:
5049:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 207


 6156              		.loc 1 5049 0
 6157 005e 0446     		mov	r4, r0
 6158 0060 60BB     		cbnz	r0, .L534
5050:..\..\ff14\source/ff.c **** 					if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* Create dot entries (FAT only) */
5051:..\..\ff14\source/ff.c **** 						mem_set(fs->win + DIR_Name, ' ', 11);	/* Create "." entry */
 6159              		.loc 1 5051 0
 6160 0062 0B22     		movs	r2, #11
 6161 0064 2021     		movs	r1, #32
 6162 0066 0298     		ldr	r0, [sp, #8]
 6163              	.LVL933:
 6164 0068 3030     		adds	r0, r0, #48
 6165 006a FFF7FEFF 		bl	mem_set
 6166              	.LVL934:
5052:..\..\ff14\source/ff.c **** 						fs->win[DIR_Name] = '.';
 6167              		.loc 1 5052 0
 6168 006e 0298     		ldr	r0, [sp, #8]
 6169 0070 2E24     		movs	r4, #46
 6170 0072 80F83040 		strb	r4, [r0, #48]
5053:..\..\ff14\source/ff.c **** 						fs->win[DIR_Attr] = AM_DIR;
 6171              		.loc 1 5053 0
 6172 0076 1023     		movs	r3, #16
 6173 0078 80F83B30 		strb	r3, [r0, #59]
5054:..\..\ff14\source/ff.c **** 						st_dword(fs->win + DIR_ModTime, tm);
 6174              		.loc 1 5054 0
 6175 007c 3146     		mov	r1, r6
 6176 007e 4630     		adds	r0, r0, #70
 6177 0080 FFF7FEFF 		bl	st_dword
 6178              	.LVL935:
5055:..\..\ff14\source/ff.c **** 						st_clust(fs, fs->win, dcl);
 6179              		.loc 1 5055 0
 6180 0084 0298     		ldr	r0, [sp, #8]
 6181 0086 2A46     		mov	r2, r5
 6182 0088 00F13001 		add	r1, r0, #48
 6183 008c FFF7FEFF 		bl	st_clust
 6184              	.LVL936:
5056:..\..\ff14\source/ff.c **** 						mem_cpy(fs->win + SZDIRE, fs->win, SZDIRE); /* Create ".." entry */
 6185              		.loc 1 5056 0
 6186 0090 0298     		ldr	r0, [sp, #8]
 6187 0092 2022     		movs	r2, #32
 6188 0094 00F13001 		add	r1, r0, #48
 6189 0098 5030     		adds	r0, r0, #80
 6190 009a FFF7FEFF 		bl	mem_cpy
 6191              	.LVL937:
5057:..\..\ff14\source/ff.c **** 						fs->win[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 6192              		.loc 1 5057 0
 6193 009e 0298     		ldr	r0, [sp, #8]
 6194 00a0 80F85140 		strb	r4, [r0, #81]
 6195              	.LVL938:
5058:..\..\ff14\source/ff.c **** 						st_clust(fs, fs->win + SZDIRE, pcl);
 6196              		.loc 1 5058 0
 6197 00a4 099A     		ldr	r2, [sp, #36]
 6198 00a6 00F15001 		add	r1, r0, #80
 6199 00aa FFF7FEFF 		bl	st_clust
 6200              	.LVL939:
5059:..\..\ff14\source/ff.c **** 						fs->wflag = 1;
 6201              		.loc 1 5059 0
 6202 00ae 0122     		movs	r2, #1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 208


 6203 00b0 029B     		ldr	r3, [sp, #8]
 6204 00b2 DA70     		strb	r2, [r3, #3]
5060:..\..\ff14\source/ff.c **** 					}
5061:..\..\ff14\source/ff.c **** 					res = dir_register(&dj);	/* Register the object to the parent directoy */
 6205              		.loc 1 5061 0
 6206 00b4 07A8     		add	r0, sp, #28
 6207 00b6 FFF7FEFF 		bl	dir_register
 6208              	.LVL940:
 6209 00ba 0446     		mov	r4, r0
 6210              	.LVL941:
 6211              	.L534:
5062:..\..\ff14\source/ff.c **** 				}
5063:..\..\ff14\source/ff.c **** 			}
5064:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {
 6212              		.loc 1 5064 0
 6213 00bc ACB9     		cbnz	r4, .L535
5065:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
5066:..\..\ff14\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
5067:..\..\ff14\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
5068:..\..\ff14\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
5069:..\..\ff14\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)fs->csize * SS(fs));	/* Directory size needs to be
5070:..\..\ff14\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)fs->csize * SS(fs));
5071:..\..\ff14\source/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag */
5072:..\..\ff14\source/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
5073:..\..\ff14\source/ff.c **** 					res = store_xdir(&dj);
5074:..\..\ff14\source/ff.c **** 				} else
5075:..\..\ff14\source/ff.c **** #endif
5076:..\..\ff14\source/ff.c **** 				{
5077:..\..\ff14\source/ff.c **** 					st_dword(dj.dir + DIR_ModTime, tm);	/* Created time */
 6214              		.loc 1 5077 0
 6215 00be 3146     		mov	r1, r6
 6216 00c0 0E98     		ldr	r0, [sp, #56]
 6217 00c2 1630     		adds	r0, r0, #22
 6218 00c4 FFF7FEFF 		bl	st_dword
 6219              	.LVL942:
5078:..\..\ff14\source/ff.c **** 					st_clust(fs, dj.dir, dcl);			/* Table start cluster */
 6220              		.loc 1 5078 0
 6221 00c8 2A46     		mov	r2, r5
 6222 00ca 0E99     		ldr	r1, [sp, #56]
 6223 00cc 0298     		ldr	r0, [sp, #8]
 6224 00ce FFF7FEFF 		bl	st_clust
 6225              	.LVL943:
5079:..\..\ff14\source/ff.c **** 					dj.dir[DIR_Attr] = AM_DIR;			/* Attribute */
 6226              		.loc 1 5079 0
 6227 00d2 1022     		movs	r2, #16
 6228 00d4 0E9B     		ldr	r3, [sp, #56]
 6229 00d6 DA72     		strb	r2, [r3, #11]
5080:..\..\ff14\source/ff.c **** 					fs->wflag = 1;
 6230              		.loc 1 5080 0
 6231 00d8 0122     		movs	r2, #1
 6232 00da 029B     		ldr	r3, [sp, #8]
 6233 00dc DA70     		strb	r2, [r3, #3]
5081:..\..\ff14\source/ff.c **** 				}
5082:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {
 6234              		.loc 1 5082 0
 6235 00de 5CB9     		cbnz	r4, .L529
5083:..\..\ff14\source/ff.c **** 					res = sync_fs(fs);
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 209


 6236              		.loc 1 5083 0
 6237 00e0 0298     		ldr	r0, [sp, #8]
 6238 00e2 FFF7FEFF 		bl	sync_fs
 6239              	.LVL944:
 6240 00e6 0446     		mov	r4, r0
 6241              	.LVL945:
 6242 00e8 06E0     		b	.L529
 6243              	.L535:
5084:..\..\ff14\source/ff.c **** 				}
5085:..\..\ff14\source/ff.c **** 			} else {
5086:..\..\ff14\source/ff.c **** 				remove_chain(&sobj, dcl, 0);		/* Could not register, remove the allocated cluster */
 6244              		.loc 1 5086 0
 6245 00ea 0022     		movs	r2, #0
 6246 00ec 2946     		mov	r1, r5
 6247 00ee 03A8     		add	r0, sp, #12
 6248 00f0 FFF7FEFF 		bl	remove_chain
 6249              	.LVL946:
 6250 00f4 00E0     		b	.L529
 6251              	.LVL947:
 6252              	.L537:
 6253 00f6 1C46     		mov	r4, r3
 6254              	.LVL948:
 6255              	.L529:
5087:..\..\ff14\source/ff.c **** 			}
5088:..\..\ff14\source/ff.c **** 		}
5089:..\..\ff14\source/ff.c **** 		FREE_NAMBUF();
5090:..\..\ff14\source/ff.c **** 	}
5091:..\..\ff14\source/ff.c **** 
5092:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
5093:..\..\ff14\source/ff.c **** }
 6256              		.loc 1 5093 0
 6257 00f8 2046     		mov	r0, r4
 6258 00fa 12B0     		add	sp, sp, #72
 6259              		.cfi_def_cfa_offset 16
 6260              		@ sp needed
 6261 00fc 70BD     		pop	{r4, r5, r6, pc}
 6262              		.cfi_endproc
 6263              	.LFE50:
 6264              		.size	f_mkdir, .-f_mkdir
 6265 00fe 00BF     		.section	.text.f_rename,"ax",%progbits
 6266              		.align	2
 6267              		.global	f_rename
 6268              		.thumb
 6269              		.thumb_func
 6270              		.type	f_rename, %function
 6271              	f_rename:
 6272              	.LFB51:
5094:..\..\ff14\source/ff.c **** 
5095:..\..\ff14\source/ff.c **** 
5096:..\..\ff14\source/ff.c **** 
5097:..\..\ff14\source/ff.c **** 
5098:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
5099:..\..\ff14\source/ff.c **** /* Rename a File/Directory                                               */
5100:..\..\ff14\source/ff.c **** /*-----------------------------------------------------------------------*/
5101:..\..\ff14\source/ff.c **** 
5102:..\..\ff14\source/ff.c **** FRESULT f_rename (
5103:..\..\ff14\source/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 210


5104:..\..\ff14\source/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
5105:..\..\ff14\source/ff.c **** )
5106:..\..\ff14\source/ff.c **** {
 6273              		.loc 1 5106 0
 6274              		.cfi_startproc
 6275              		@ args = 0, pretend = 0, frame = 136
 6276              		@ frame_needed = 0, uses_anonymous_args = 0
 6277              	.LVL949:
 6278 0000 30B5     		push	{r4, r5, lr}
 6279              		.cfi_def_cfa_offset 12
 6280              		.cfi_offset 4, -12
 6281              		.cfi_offset 5, -8
 6282              		.cfi_offset 14, -4
 6283 0002 A3B0     		sub	sp, sp, #140
 6284              		.cfi_def_cfa_offset 152
 6285 0004 0190     		str	r0, [sp, #4]
 6286 0006 22A8     		add	r0, sp, #136
 6287              	.LVL950:
 6288 0008 40F8881D 		str	r1, [r0, #-136]!
5107:..\..\ff14\source/ff.c **** 	FRESULT res;
5108:..\..\ff14\source/ff.c **** 	DIR djo, djn;
5109:..\..\ff14\source/ff.c **** 	FATFS *fs;
5110:..\..\ff14\source/ff.c **** 	BYTE buf[FF_FS_EXFAT ? SZDIRE * 2 : SZDIRE], *dir;
5111:..\..\ff14\source/ff.c **** 	LBA_t sect;
5112:..\..\ff14\source/ff.c **** 	DEF_NAMBUF
5113:..\..\ff14\source/ff.c **** 
5114:..\..\ff14\source/ff.c **** 
5115:..\..\ff14\source/ff.c **** 	get_ldnumber(&path_new);						/* Snip the drive number of new name off */
 6289              		.loc 1 5115 0
 6290 000c FFF7FEFF 		bl	get_ldnumber
 6291              	.LVL951:
5116:..\..\ff14\source/ff.c **** 	res = mount_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 6292              		.loc 1 5116 0
 6293 0010 0222     		movs	r2, #2
 6294 0012 0BA9     		add	r1, sp, #44
 6295 0014 01A8     		add	r0, sp, #4
 6296              	.LVL952:
 6297 0016 FFF7FEFF 		bl	mount_volume
 6298              	.LVL953:
5117:..\..\ff14\source/ff.c **** 	if (res == FR_OK) {
 6299              		.loc 1 5117 0
 6300 001a 0446     		mov	r4, r0
 6301 001c 0028     		cmp	r0, #0
 6302 001e 7AD1     		bne	.L543
5118:..\..\ff14\source/ff.c **** 		djo.obj.fs = fs;
 6303              		.loc 1 5118 0
 6304 0020 0B9B     		ldr	r3, [sp, #44]
 6305 0022 1793     		str	r3, [sp, #92]
5119:..\..\ff14\source/ff.c **** 		INIT_NAMBUF(fs);
5120:..\..\ff14\source/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 6306              		.loc 1 5120 0
 6307 0024 0199     		ldr	r1, [sp, #4]
 6308 0026 17A8     		add	r0, sp, #92
 6309              	.LVL954:
 6310 0028 FFF7FEFF 		bl	follow_path
 6311              	.LVL955:
5121:..\..\ff14\source/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 211


 6312              		.loc 1 5121 0
 6313 002c 0446     		mov	r4, r0
 6314 002e 28B9     		cbnz	r0, .L544
 6315              		.loc 1 5121 0 is_stmt 0 discriminator 1
 6316 0030 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 6317 0034 13F0A00F 		tst	r3, #160
 6318 0038 00D0     		beq	.L544
 6319              		.loc 1 5121 0
 6320 003a 0624     		movs	r4, #6
 6321              	.L544:
 6322              	.LVL956:
5122:..\..\ff14\source/ff.c **** #if FF_FS_LOCK != 0
5123:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {
5124:..\..\ff14\source/ff.c **** 			res = chk_lock(&djo, 2);
5125:..\..\ff14\source/ff.c **** 		}
5126:..\..\ff14\source/ff.c **** #endif
5127:..\..\ff14\source/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
 6323              		.loc 1 5127 0 is_stmt 1
 6324 003c 002C     		cmp	r4, #0
 6325 003e 6AD1     		bne	.L543
5128:..\..\ff14\source/ff.c **** #if FF_FS_EXFAT
5129:..\..\ff14\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT volume */
5130:..\..\ff14\source/ff.c **** 				BYTE nf, nn;
5131:..\..\ff14\source/ff.c **** 				WORD nh;
5132:..\..\ff14\source/ff.c **** 
5133:..\..\ff14\source/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
5134:..\..\ff14\source/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
5135:..\..\ff14\source/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
5136:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
5137:..\..\ff14\source/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
5138:..\..\ff14\source/ff.c **** 				}
5139:..\..\ff14\source/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
5140:..\..\ff14\source/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
5141:..\..\ff14\source/ff.c **** 					if (res == FR_OK) {
5142:..\..\ff14\source/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
5143:..\..\ff14\source/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
5144:..\..\ff14\source/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);	/* Restore 85+C0 entry */
5145:..\..\ff14\source/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
5146:..\..\ff14\source/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
5147:..\..\ff14\source/ff.c **** 						if (!(fs->dirbuf[XDIR_Attr] & AM_DIR)) fs->dirbuf[XDIR_Attr] |= AM_ARC;	/* Set archive attrib
5148:..\..\ff14\source/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
5149:..\..\ff14\source/ff.c **** 						res = store_xdir(&djn);
5150:..\..\ff14\source/ff.c **** 					}
5151:..\..\ff14\source/ff.c **** 				}
5152:..\..\ff14\source/ff.c **** 			} else
5153:..\..\ff14\source/ff.c **** #endif
5154:..\..\ff14\source/ff.c **** 			{	/* At FAT/FAT32 volume */
5155:..\..\ff14\source/ff.c **** 				mem_cpy(buf, djo.dir, SZDIRE);			/* Save directory entry of the object */
 6326              		.loc 1 5155 0
 6327 0040 2022     		movs	r2, #32
 6328 0042 1E99     		ldr	r1, [sp, #120]
 6329 0044 03A8     		add	r0, sp, #12
 6330 0046 FFF7FEFF 		bl	mem_cpy
 6331              	.LVL957:
5156:..\..\ff14\source/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 6332              		.loc 1 5156 0
 6333 004a 2C22     		movs	r2, #44
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 212


 6334 004c 17A9     		add	r1, sp, #92
 6335 004e 0CA8     		add	r0, sp, #48
 6336 0050 FFF7FEFF 		bl	mem_cpy
 6337              	.LVL958:
5157:..\..\ff14\source/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 6338              		.loc 1 5157 0
 6339 0054 0099     		ldr	r1, [sp]
 6340 0056 0CA8     		add	r0, sp, #48
 6341 0058 FFF7FEFF 		bl	follow_path
 6342              	.LVL959:
5158:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 6343              		.loc 1 5158 0
 6344 005c 0446     		mov	r4, r0
 6345 005e 60B9     		cbnz	r0, .L545
5159:..\..\ff14\source/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 6346              		.loc 1 5159 0
 6347 0060 199B     		ldr	r3, [sp, #100]
 6348 0062 0E9A     		ldr	r2, [sp, #56]
 6349 0064 9A42     		cmp	r2, r3
 6350 0066 05D1     		bne	.L549
 6351              		.loc 1 5159 0 is_stmt 0 discriminator 1
 6352 0068 1B9B     		ldr	r3, [sp, #108]
 6353 006a 109A     		ldr	r2, [sp, #64]
 6354 006c 9A42     		cmp	r2, r3
 6355 006e 03D0     		beq	.L550
 6356              		.loc 1 5159 0
 6357 0070 0824     		movs	r4, #8
 6358 0072 02E0     		b	.L545
 6359              	.L549:
 6360 0074 0824     		movs	r4, #8
 6361 0076 00E0     		b	.L545
 6362              	.L550:
 6363 0078 0424     		movs	r4, #4
 6364              	.L545:
 6365              	.LVL960:
5160:..\..\ff14\source/ff.c **** 				}
5161:..\..\ff14\source/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
 6366              		.loc 1 5161 0 is_stmt 1
 6367 007a 042C     		cmp	r4, #4
 6368 007c 41D1     		bne	.L546
5162:..\..\ff14\source/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 6369              		.loc 1 5162 0
 6370 007e 0CA8     		add	r0, sp, #48
 6371 0080 FFF7FEFF 		bl	dir_register
 6372              	.LVL961:
5163:..\..\ff14\source/ff.c **** 					if (res == FR_OK) {
 6373              		.loc 1 5163 0
 6374 0084 0446     		mov	r4, r0
 6375 0086 0028     		cmp	r0, #0
 6376 0088 3BD1     		bne	.L546
5164:..\..\ff14\source/ff.c **** 						dir = djn.dir;					/* Copy directory entry of the object except name */
 6377              		.loc 1 5164 0
 6378 008a 139D     		ldr	r5, [sp, #76]
 6379              	.LVL962:
5165:..\..\ff14\source/ff.c **** 						mem_cpy(dir + 13, buf + 13, SZDIRE - 13);
 6380              		.loc 1 5165 0
 6381 008c 1322     		movs	r2, #19
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 213


 6382 008e 0DF11901 		add	r1, sp, #25
 6383 0092 05F10D00 		add	r0, r5, #13
 6384              	.LVL963:
 6385 0096 FFF7FEFF 		bl	mem_cpy
 6386              	.LVL964:
5166:..\..\ff14\source/ff.c **** 						dir[DIR_Attr] = buf[DIR_Attr];
 6387              		.loc 1 5166 0
 6388 009a 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 6389 009e EB72     		strb	r3, [r5, #11]
5167:..\..\ff14\source/ff.c **** 						if (!(dir[DIR_Attr] & AM_DIR)) dir[DIR_Attr] |= AM_ARC;	/* Set archive attribute if it is a f
 6390              		.loc 1 5167 0
 6391 00a0 13F0100F 		tst	r3, #16
 6392 00a4 02D1     		bne	.L547
 6393              		.loc 1 5167 0 is_stmt 0 discriminator 1
 6394 00a6 43F02003 		orr	r3, r3, #32
 6395 00aa EB72     		strb	r3, [r5, #11]
 6396              	.L547:
5168:..\..\ff14\source/ff.c **** 						fs->wflag = 1;
 6397              		.loc 1 5168 0 is_stmt 1
 6398 00ac 0122     		movs	r2, #1
 6399 00ae 0B9B     		ldr	r3, [sp, #44]
 6400 00b0 DA70     		strb	r2, [r3, #3]
5169:..\..\ff14\source/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 6401              		.loc 1 5169 0
 6402 00b2 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 6403 00b4 13F0100F 		tst	r3, #16
 6404 00b8 23D0     		beq	.L546
 6405              		.loc 1 5169 0 is_stmt 0 discriminator 1
 6406 00ba 0E9B     		ldr	r3, [sp, #56]
 6407 00bc 199A     		ldr	r2, [sp, #100]
 6408 00be 9A42     		cmp	r2, r3
 6409 00c0 1FD0     		beq	.L546
5170:..\..\ff14\source/ff.c **** 							sect = clst2sect(fs, ld_clust(fs, dir));
 6410              		.loc 1 5170 0 is_stmt 1
 6411 00c2 0B9C     		ldr	r4, [sp, #44]
 6412 00c4 2946     		mov	r1, r5
 6413 00c6 2046     		mov	r0, r4
 6414 00c8 FFF7FEFF 		bl	ld_clust
 6415              	.LVL965:
 6416 00cc 0146     		mov	r1, r0
 6417 00ce 2046     		mov	r0, r4
 6418 00d0 FFF7FEFF 		bl	clst2sect
 6419              	.LVL966:
5171:..\..\ff14\source/ff.c **** 							if (sect == 0) {
 6420              		.loc 1 5171 0
 6421 00d4 0146     		mov	r1, r0
 6422 00d6 98B1     		cbz	r0, .L551
5172:..\..\ff14\source/ff.c **** 								res = FR_INT_ERR;
5173:..\..\ff14\source/ff.c **** 							} else {
5174:..\..\ff14\source/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
5175:..\..\ff14\source/ff.c **** 								res = move_window(fs, sect);
 6423              		.loc 1 5175 0
 6424 00d8 2046     		mov	r0, r4
 6425              	.LVL967:
 6426 00da FFF7FEFF 		bl	move_window
 6427              	.LVL968:
5176:..\..\ff14\source/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 214


 6428              		.loc 1 5176 0
 6429 00de 0B9B     		ldr	r3, [sp, #44]
 6430 00e0 03F15001 		add	r1, r3, #80
 6431              	.LVL969:
5177:..\..\ff14\source/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 6432              		.loc 1 5177 0
 6433 00e4 0446     		mov	r4, r0
 6434 00e6 60B9     		cbnz	r0, .L546
 6435              		.loc 1 5177 0 is_stmt 0 discriminator 1
 6436 00e8 93F85120 		ldrb	r2, [r3, #81]	@ zero_extendqisi2
 6437 00ec 2E2A     		cmp	r2, #46
 6438 00ee 08D1     		bne	.L546
5178:..\..\ff14\source/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 6439              		.loc 1 5178 0 is_stmt 1
 6440 00f0 0E9A     		ldr	r2, [sp, #56]
 6441 00f2 1846     		mov	r0, r3
 6442              	.LVL970:
 6443 00f4 FFF7FEFF 		bl	st_clust
 6444              	.LVL971:
5179:..\..\ff14\source/ff.c **** 									fs->wflag = 1;
 6445              		.loc 1 5179 0
 6446 00f8 0122     		movs	r2, #1
 6447 00fa 0B9B     		ldr	r3, [sp, #44]
 6448 00fc DA70     		strb	r2, [r3, #3]
 6449 00fe 00E0     		b	.L546
 6450              	.LVL972:
 6451              	.L551:
5172:..\..\ff14\source/ff.c **** 							} else {
 6452              		.loc 1 5172 0
 6453 0100 0224     		movs	r4, #2
 6454              	.LVL973:
 6455              	.L546:
5180:..\..\ff14\source/ff.c **** 								}
5181:..\..\ff14\source/ff.c **** 							}
5182:..\..\ff14\source/ff.c **** 						}
5183:..\..\ff14\source/ff.c **** 					}
5184:..\..\ff14\source/ff.c **** 				}
5185:..\..\ff14\source/ff.c **** 			}
5186:..\..\ff14\source/ff.c **** 			if (res == FR_OK) {
 6456              		.loc 1 5186 0
 6457 0102 44B9     		cbnz	r4, .L543
5187:..\..\ff14\source/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 6458              		.loc 1 5187 0
 6459 0104 17A8     		add	r0, sp, #92
 6460 0106 FFF7FEFF 		bl	dir_remove
 6461              	.LVL974:
5188:..\..\ff14\source/ff.c **** 				if (res == FR_OK) {
 6462              		.loc 1 5188 0
 6463 010a 0446     		mov	r4, r0
 6464 010c 18B9     		cbnz	r0, .L543
5189:..\..\ff14\source/ff.c **** 					res = sync_fs(fs);
 6465              		.loc 1 5189 0
 6466 010e 0B98     		ldr	r0, [sp, #44]
 6467              	.LVL975:
 6468 0110 FFF7FEFF 		bl	sync_fs
 6469              	.LVL976:
 6470 0114 0446     		mov	r4, r0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 215


 6471              	.LVL977:
 6472              	.L543:
5190:..\..\ff14\source/ff.c **** 				}
5191:..\..\ff14\source/ff.c **** 			}
5192:..\..\ff14\source/ff.c **** /* End of the critical section */
5193:..\..\ff14\source/ff.c **** 		}
5194:..\..\ff14\source/ff.c **** 		FREE_NAMBUF();
5195:..\..\ff14\source/ff.c **** 	}
5196:..\..\ff14\source/ff.c **** 
5197:..\..\ff14\source/ff.c **** 	LEAVE_FF(fs, res);
5198:..\..\ff14\source/ff.c **** }
 6473              		.loc 1 5198 0
 6474 0116 2046     		mov	r0, r4
 6475 0118 23B0     		add	sp, sp, #140
 6476              		.cfi_def_cfa_offset 12
 6477              		@ sp needed
 6478 011a 30BD     		pop	{r4, r5, pc}
 6479              		.cfi_endproc
 6480              	.LFE51:
 6481              		.size	f_rename, .-f_rename
 6482              		.section	.rodata.str1.4,"aMS",%progbits,1
 6483              		.align	2
 6484              	.LC0:
 6485 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 6485      3A3B3C3D 
 6485      3E3F5B5D 
 6485      7C7F00
 6486 000f 00       		.space	1
 6487              	.LC1:
 6488 0010 46415400 		.ascii	"FAT\000"
 6489              	.LC2:
 6490 0014 46415433 		.ascii	"FAT32\000"
 6490      3200
 6491              		.bss
 6492              		.align	2
 6493              		.set	.LANCHOR0,. + 0
 6494              		.type	FatFs, %object
 6495              		.size	FatFs, 4
 6496              	FatFs:
 6497 0000 00000000 		.space	4
 6498              		.type	Fsid, %object
 6499              		.size	Fsid, 2
 6500              	Fsid:
 6501 0004 0000     		.space	2
 6502              		.text
 6503              	.Letext0:
 6504              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 6505              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 6506              		.file 4 "..\\..\\ff14\\source\\ff.h"
 6507              		.file 5 "..\\..\\ff14\\source\\diskio.h"
 6508              		.section	.debug_info,"",%progbits
 6509              	.Ldebug_info0:
 6510 0000 662D0000 		.4byte	0x2d66
 6511 0004 0400     		.2byte	0x4
 6512 0006 00000000 		.4byte	.Ldebug_abbrev0
 6513 000a 04       		.byte	0x4
 6514 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 216


 6515 000c EA040000 		.4byte	.LASF175
 6516 0010 0C       		.byte	0xc
 6517 0011 3A020000 		.4byte	.LASF176
 6518 0015 4D010000 		.4byte	.LASF177
 6519 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6520 001d 00000000 		.4byte	0
 6521 0021 00000000 		.4byte	.Ldebug_line0
 6522 0025 02       		.uleb128 0x2
 6523 0026 01       		.byte	0x1
 6524 0027 06       		.byte	0x6
 6525 0028 D4000000 		.4byte	.LASF0
 6526 002c 02       		.uleb128 0x2
 6527 002d 01       		.byte	0x1
 6528 002e 08       		.byte	0x8
 6529 002f 84040000 		.4byte	.LASF1
 6530 0033 02       		.uleb128 0x2
 6531 0034 02       		.byte	0x2
 6532 0035 05       		.byte	0x5
 6533 0036 A1040000 		.4byte	.LASF2
 6534 003a 03       		.uleb128 0x3
 6535 003b D3050000 		.4byte	.LASF5
 6536 003f 02       		.byte	0x2
 6537 0040 2B       		.byte	0x2b
 6538 0041 45000000 		.4byte	0x45
 6539 0045 02       		.uleb128 0x2
 6540 0046 02       		.byte	0x2
 6541 0047 07       		.byte	0x7
 6542 0048 D4020000 		.4byte	.LASF3
 6543 004c 02       		.uleb128 0x2
 6544 004d 04       		.byte	0x4
 6545 004e 05       		.byte	0x5
 6546 004f 27010000 		.4byte	.LASF4
 6547 0053 03       		.uleb128 0x3
 6548 0054 11020000 		.4byte	.LASF6
 6549 0058 02       		.byte	0x2
 6550 0059 41       		.byte	0x41
 6551 005a 5E000000 		.4byte	0x5e
 6552 005e 02       		.uleb128 0x2
 6553 005f 04       		.byte	0x4
 6554 0060 07       		.byte	0x7
 6555 0061 A1020000 		.4byte	.LASF7
 6556 0065 02       		.uleb128 0x2
 6557 0066 08       		.byte	0x8
 6558 0067 05       		.byte	0x5
 6559 0068 C6000000 		.4byte	.LASF8
 6560 006c 02       		.uleb128 0x2
 6561 006d 08       		.byte	0x8
 6562 006e 07       		.byte	0x7
 6563 006f 7F000000 		.4byte	.LASF9
 6564 0073 04       		.uleb128 0x4
 6565 0074 04       		.byte	0x4
 6566 0075 05       		.byte	0x5
 6567 0076 696E7400 		.ascii	"int\000"
 6568 007a 02       		.uleb128 0x2
 6569 007b 04       		.byte	0x4
 6570 007c 07       		.byte	0x7
 6571 007d 89020000 		.4byte	.LASF10
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 217


 6572 0081 03       		.uleb128 0x3
 6573 0082 BB010000 		.4byte	.LASF11
 6574 0086 03       		.byte	0x3
 6575 0087 24       		.byte	0x24
 6576 0088 3A000000 		.4byte	0x3a
 6577 008c 03       		.uleb128 0x3
 6578 008d B0050000 		.4byte	.LASF12
 6579 0091 03       		.byte	0x3
 6580 0092 30       		.byte	0x30
 6581 0093 53000000 		.4byte	0x53
 6582 0097 03       		.uleb128 0x3
 6583 0098 96020000 		.4byte	.LASF13
 6584 009c 04       		.byte	0x4
 6585 009d 2D       		.byte	0x2d
 6586 009e 7A000000 		.4byte	0x7a
 6587 00a2 03       		.uleb128 0x3
 6588 00a3 60020000 		.4byte	.LASF14
 6589 00a7 04       		.byte	0x4
 6590 00a8 2E       		.byte	0x2e
 6591 00a9 2C000000 		.4byte	0x2c
 6592 00ad 03       		.uleb128 0x3
 6593 00ae CA030000 		.4byte	.LASF15
 6594 00b2 04       		.byte	0x4
 6595 00b3 2F       		.byte	0x2f
 6596 00b4 81000000 		.4byte	0x81
 6597 00b8 03       		.uleb128 0x3
 6598 00b9 E8010000 		.4byte	.LASF16
 6599 00bd 04       		.byte	0x4
 6600 00be 30       		.byte	0x30
 6601 00bf 8C000000 		.4byte	0x8c
 6602 00c3 03       		.uleb128 0x3
 6603 00c4 EE030000 		.4byte	.LASF17
 6604 00c8 04       		.byte	0x4
 6605 00c9 63       		.byte	0x63
 6606 00ca CE000000 		.4byte	0xce
 6607 00ce 02       		.uleb128 0x2
 6608 00cf 01       		.byte	0x1
 6609 00d0 08       		.byte	0x8
 6610 00d1 C2050000 		.4byte	.LASF18
 6611 00d5 03       		.uleb128 0x3
 6612 00d6 F6010000 		.4byte	.LASF19
 6613 00da 04       		.byte	0x4
 6614 00db 7C       		.byte	0x7c
 6615 00dc B8000000 		.4byte	0xb8
 6616 00e0 03       		.uleb128 0x3
 6617 00e1 A9060000 		.4byte	.LASF20
 6618 00e5 04       		.byte	0x4
 6619 00e6 7D       		.byte	0x7d
 6620 00e7 B8000000 		.4byte	0xb8
 6621 00eb 05       		.uleb128 0x5
 6622 00ec 3002     		.2byte	0x230
 6623 00ee 04       		.byte	0x4
 6624 00ef 84       		.byte	0x84
 6625 00f0 CC010000 		.4byte	0x1cc
 6626 00f4 06       		.uleb128 0x6
 6627 00f5 29000000 		.4byte	.LASF21
 6628 00f9 04       		.byte	0x4
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 218


 6629 00fa 85       		.byte	0x85
 6630 00fb A2000000 		.4byte	0xa2
 6631 00ff 00       		.byte	0
 6632 0100 06       		.uleb128 0x6
 6633 0101 51020000 		.4byte	.LASF22
 6634 0105 04       		.byte	0x4
 6635 0106 86       		.byte	0x86
 6636 0107 A2000000 		.4byte	0xa2
 6637 010b 01       		.byte	0x1
 6638 010c 06       		.uleb128 0x6
 6639 010d 46010000 		.4byte	.LASF23
 6640 0111 04       		.byte	0x4
 6641 0112 87       		.byte	0x87
 6642 0113 A2000000 		.4byte	0xa2
 6643 0117 02       		.byte	0x2
 6644 0118 06       		.uleb128 0x6
 6645 0119 AA050000 		.4byte	.LASF24
 6646 011d 04       		.byte	0x4
 6647 011e 88       		.byte	0x88
 6648 011f A2000000 		.4byte	0xa2
 6649 0123 03       		.byte	0x3
 6650 0124 06       		.uleb128 0x6
 6651 0125 60060000 		.4byte	.LASF25
 6652 0129 04       		.byte	0x4
 6653 012a 89       		.byte	0x89
 6654 012b A2000000 		.4byte	0xa2
 6655 012f 04       		.byte	0x4
 6656 0130 07       		.uleb128 0x7
 6657 0131 696400   		.ascii	"id\000"
 6658 0134 04       		.byte	0x4
 6659 0135 8A       		.byte	0x8a
 6660 0136 AD000000 		.4byte	0xad
 6661 013a 06       		.byte	0x6
 6662 013b 06       		.uleb128 0x6
 6663 013c 5D000000 		.4byte	.LASF26
 6664 0140 04       		.byte	0x4
 6665 0141 8B       		.byte	0x8b
 6666 0142 AD000000 		.4byte	0xad
 6667 0146 08       		.byte	0x8
 6668 0147 06       		.uleb128 0x6
 6669 0148 24020000 		.4byte	.LASF27
 6670 014c 04       		.byte	0x4
 6671 014d 8C       		.byte	0x8c
 6672 014e AD000000 		.4byte	0xad
 6673 0152 0A       		.byte	0xa
 6674 0153 06       		.uleb128 0x6
 6675 0154 1E040000 		.4byte	.LASF28
 6676 0158 04       		.byte	0x4
 6677 0159 9A       		.byte	0x9a
 6678 015a B8000000 		.4byte	0xb8
 6679 015e 0C       		.byte	0xc
 6680 015f 06       		.uleb128 0x6
 6681 0160 56020000 		.4byte	.LASF29
 6682 0164 04       		.byte	0x4
 6683 0165 9B       		.byte	0x9b
 6684 0166 B8000000 		.4byte	0xb8
 6685 016a 10       		.byte	0x10
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 219


 6686 016b 06       		.uleb128 0x6
 6687 016c 00010000 		.4byte	.LASF30
 6688 0170 04       		.byte	0x4
 6689 0171 A5       		.byte	0xa5
 6690 0172 B8000000 		.4byte	0xb8
 6691 0176 14       		.byte	0x14
 6692 0177 06       		.uleb128 0x6
 6693 0178 FA000000 		.4byte	.LASF31
 6694 017c 04       		.byte	0x4
 6695 017d A6       		.byte	0xa6
 6696 017e B8000000 		.4byte	0xb8
 6697 0182 18       		.byte	0x18
 6698 0183 06       		.uleb128 0x6
 6699 0184 16060000 		.4byte	.LASF32
 6700 0188 04       		.byte	0x4
 6701 0189 A7       		.byte	0xa7
 6702 018a E0000000 		.4byte	0xe0
 6703 018e 1C       		.byte	0x1c
 6704 018f 06       		.uleb128 0x6
 6705 0190 E0010000 		.4byte	.LASF33
 6706 0194 04       		.byte	0x4
 6707 0195 A8       		.byte	0xa8
 6708 0196 E0000000 		.4byte	0xe0
 6709 019a 20       		.byte	0x20
 6710 019b 06       		.uleb128 0x6
 6711 019c BE000000 		.4byte	.LASF34
 6712 01a0 04       		.byte	0x4
 6713 01a1 A9       		.byte	0xa9
 6714 01a2 E0000000 		.4byte	0xe0
 6715 01a6 24       		.byte	0x24
 6716 01a7 06       		.uleb128 0x6
 6717 01a8 E7020000 		.4byte	.LASF35
 6718 01ac 04       		.byte	0x4
 6719 01ad AA       		.byte	0xaa
 6720 01ae E0000000 		.4byte	0xe0
 6721 01b2 28       		.byte	0x28
 6722 01b3 06       		.uleb128 0x6
 6723 01b4 1E030000 		.4byte	.LASF36
 6724 01b8 04       		.byte	0x4
 6725 01b9 AE       		.byte	0xae
 6726 01ba E0000000 		.4byte	0xe0
 6727 01be 2C       		.byte	0x2c
 6728 01bf 07       		.uleb128 0x7
 6729 01c0 77696E00 		.ascii	"win\000"
 6730 01c4 04       		.byte	0x4
 6731 01c5 AF       		.byte	0xaf
 6732 01c6 CC010000 		.4byte	0x1cc
 6733 01ca 30       		.byte	0x30
 6734 01cb 00       		.byte	0
 6735 01cc 08       		.uleb128 0x8
 6736 01cd A2000000 		.4byte	0xa2
 6737 01d1 DD010000 		.4byte	0x1dd
 6738 01d5 09       		.uleb128 0x9
 6739 01d6 DD010000 		.4byte	0x1dd
 6740 01da FF01     		.2byte	0x1ff
 6741 01dc 00       		.byte	0
 6742 01dd 02       		.uleb128 0x2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 220


 6743 01de 04       		.byte	0x4
 6744 01df 07       		.byte	0x7
 6745 01e0 A3030000 		.4byte	.LASF37
 6746 01e4 03       		.uleb128 0x3
 6747 01e5 6F030000 		.4byte	.LASF38
 6748 01e9 04       		.byte	0x4
 6749 01ea B0       		.byte	0xb0
 6750 01eb EB000000 		.4byte	0xeb
 6751 01ef 0A       		.uleb128 0xa
 6752 01f0 10       		.byte	0x10
 6753 01f1 04       		.byte	0x4
 6754 01f2 B6       		.byte	0xb6
 6755 01f3 3E020000 		.4byte	0x23e
 6756 01f7 07       		.uleb128 0x7
 6757 01f8 667300   		.ascii	"fs\000"
 6758 01fb 04       		.byte	0x4
 6759 01fc B7       		.byte	0xb7
 6760 01fd 3E020000 		.4byte	0x23e
 6761 0201 00       		.byte	0
 6762 0202 07       		.uleb128 0x7
 6763 0203 696400   		.ascii	"id\000"
 6764 0206 04       		.byte	0x4
 6765 0207 B8       		.byte	0xb8
 6766 0208 AD000000 		.4byte	0xad
 6767 020c 04       		.byte	0x4
 6768 020d 06       		.uleb128 0x6
 6769 020e 6D020000 		.4byte	.LASF39
 6770 0212 04       		.byte	0x4
 6771 0213 B9       		.byte	0xb9
 6772 0214 A2000000 		.4byte	0xa2
 6773 0218 06       		.byte	0x6
 6774 0219 06       		.uleb128 0x6
 6775 021a B5060000 		.4byte	.LASF40
 6776 021e 04       		.byte	0x4
 6777 021f BA       		.byte	0xba
 6778 0220 A2000000 		.4byte	0xa2
 6779 0224 07       		.byte	0x7
 6780 0225 06       		.uleb128 0x6
 6781 0226 CF030000 		.4byte	.LASF41
 6782 022a 04       		.byte	0x4
 6783 022b BB       		.byte	0xbb
 6784 022c B8000000 		.4byte	0xb8
 6785 0230 08       		.byte	0x8
 6786 0231 06       		.uleb128 0x6
 6787 0232 44040000 		.4byte	.LASF42
 6788 0236 04       		.byte	0x4
 6789 0237 BC       		.byte	0xbc
 6790 0238 D5000000 		.4byte	0xd5
 6791 023c 0C       		.byte	0xc
 6792 023d 00       		.byte	0
 6793 023e 0B       		.uleb128 0xb
 6794 023f 04       		.byte	0x4
 6795 0240 E4010000 		.4byte	0x1e4
 6796 0244 03       		.uleb128 0x3
 6797 0245 FF060000 		.4byte	.LASF43
 6798 0249 04       		.byte	0x4
 6799 024a C7       		.byte	0xc7
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 221


 6800 024b EF010000 		.4byte	0x1ef
 6801 024f 05       		.uleb128 0x5
 6802 0250 2802     		.2byte	0x228
 6803 0252 04       		.byte	0x4
 6804 0253 CD       		.byte	0xcd
 6805 0254 C5020000 		.4byte	0x2c5
 6806 0258 07       		.uleb128 0x7
 6807 0259 6F626A00 		.ascii	"obj\000"
 6808 025d 04       		.byte	0x4
 6809 025e CE       		.byte	0xce
 6810 025f 44020000 		.4byte	0x244
 6811 0263 00       		.byte	0
 6812 0264 06       		.uleb128 0x6
 6813 0265 BF040000 		.4byte	.LASF44
 6814 0269 04       		.byte	0x4
 6815 026a CF       		.byte	0xcf
 6816 026b A2000000 		.4byte	0xa2
 6817 026f 10       		.byte	0x10
 6818 0270 07       		.uleb128 0x7
 6819 0271 65727200 		.ascii	"err\000"
 6820 0275 04       		.byte	0x4
 6821 0276 D0       		.byte	0xd0
 6822 0277 A2000000 		.4byte	0xa2
 6823 027b 11       		.byte	0x11
 6824 027c 06       		.uleb128 0x6
 6825 027d 8F030000 		.4byte	.LASF45
 6826 0281 04       		.byte	0x4
 6827 0282 D1       		.byte	0xd1
 6828 0283 D5000000 		.4byte	0xd5
 6829 0287 14       		.byte	0x14
 6830 0288 06       		.uleb128 0x6
 6831 0289 20070000 		.4byte	.LASF46
 6832 028d 04       		.byte	0x4
 6833 028e D2       		.byte	0xd2
 6834 028f B8000000 		.4byte	0xb8
 6835 0293 18       		.byte	0x18
 6836 0294 06       		.uleb128 0x6
 6837 0295 9F000000 		.4byte	.LASF47
 6838 0299 04       		.byte	0x4
 6839 029a D3       		.byte	0xd3
 6840 029b E0000000 		.4byte	0xe0
 6841 029f 1C       		.byte	0x1c
 6842 02a0 06       		.uleb128 0x6
 6843 02a1 B5000000 		.4byte	.LASF48
 6844 02a5 04       		.byte	0x4
 6845 02a6 D5       		.byte	0xd5
 6846 02a7 E0000000 		.4byte	0xe0
 6847 02ab 20       		.byte	0x20
 6848 02ac 06       		.uleb128 0x6
 6849 02ad 65020000 		.4byte	.LASF49
 6850 02b1 04       		.byte	0x4
 6851 02b2 D6       		.byte	0xd6
 6852 02b3 C5020000 		.4byte	0x2c5
 6853 02b7 24       		.byte	0x24
 6854 02b8 07       		.uleb128 0x7
 6855 02b9 62756600 		.ascii	"buf\000"
 6856 02bd 04       		.byte	0x4
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 222


 6857 02be DC       		.byte	0xdc
 6858 02bf CC010000 		.4byte	0x1cc
 6859 02c3 28       		.byte	0x28
 6860 02c4 00       		.byte	0
 6861 02c5 0B       		.uleb128 0xb
 6862 02c6 04       		.byte	0x4
 6863 02c7 A2000000 		.4byte	0xa2
 6864 02cb 0C       		.uleb128 0xc
 6865 02cc 46494C00 		.ascii	"FIL\000"
 6866 02d0 04       		.byte	0x4
 6867 02d1 DE       		.byte	0xde
 6868 02d2 4F020000 		.4byte	0x24f
 6869 02d6 0A       		.uleb128 0xa
 6870 02d7 2C       		.byte	0x2c
 6871 02d8 04       		.byte	0x4
 6872 02d9 E4       		.byte	0xe4
 6873 02da 26030000 		.4byte	0x326
 6874 02de 07       		.uleb128 0x7
 6875 02df 6F626A00 		.ascii	"obj\000"
 6876 02e3 04       		.byte	0x4
 6877 02e4 E5       		.byte	0xe5
 6878 02e5 44020000 		.4byte	0x244
 6879 02e9 00       		.byte	0
 6880 02ea 06       		.uleb128 0x6
 6881 02eb 81050000 		.4byte	.LASF50
 6882 02ef 04       		.byte	0x4
 6883 02f0 E6       		.byte	0xe6
 6884 02f1 B8000000 		.4byte	0xb8
 6885 02f5 10       		.byte	0x10
 6886 02f6 06       		.uleb128 0x6
 6887 02f7 20070000 		.4byte	.LASF46
 6888 02fb 04       		.byte	0x4
 6889 02fc E7       		.byte	0xe7
 6890 02fd B8000000 		.4byte	0xb8
 6891 0301 14       		.byte	0x14
 6892 0302 06       		.uleb128 0x6
 6893 0303 9F000000 		.4byte	.LASF47
 6894 0307 04       		.byte	0x4
 6895 0308 E8       		.byte	0xe8
 6896 0309 E0000000 		.4byte	0xe0
 6897 030d 18       		.byte	0x18
 6898 030e 07       		.uleb128 0x7
 6899 030f 64697200 		.ascii	"dir\000"
 6900 0313 04       		.byte	0x4
 6901 0314 E9       		.byte	0xe9
 6902 0315 C5020000 		.4byte	0x2c5
 6903 0319 1C       		.byte	0x1c
 6904 031a 07       		.uleb128 0x7
 6905 031b 666E00   		.ascii	"fn\000"
 6906 031e 04       		.byte	0x4
 6907 031f EA       		.byte	0xea
 6908 0320 26030000 		.4byte	0x326
 6909 0324 20       		.byte	0x20
 6910 0325 00       		.byte	0
 6911 0326 08       		.uleb128 0x8
 6912 0327 A2000000 		.4byte	0xa2
 6913 032b 36030000 		.4byte	0x336
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 223


 6914 032f 0D       		.uleb128 0xd
 6915 0330 DD010000 		.4byte	0x1dd
 6916 0334 0B       		.byte	0xb
 6917 0335 00       		.byte	0
 6918 0336 0C       		.uleb128 0xc
 6919 0337 44495200 		.ascii	"DIR\000"
 6920 033b 04       		.byte	0x4
 6921 033c F1       		.byte	0xf1
 6922 033d D6020000 		.4byte	0x2d6
 6923 0341 0A       		.uleb128 0xa
 6924 0342 18       		.byte	0x18
 6925 0343 04       		.byte	0x4
 6926 0344 F7       		.byte	0xf7
 6927 0345 87030000 		.4byte	0x387
 6928 0349 06       		.uleb128 0x6
 6929 034a FA000000 		.4byte	.LASF31
 6930 034e 04       		.byte	0x4
 6931 034f F8       		.byte	0xf8
 6932 0350 D5000000 		.4byte	0xd5
 6933 0354 00       		.byte	0
 6934 0355 06       		.uleb128 0x6
 6935 0356 7D030000 		.4byte	.LASF51
 6936 035a 04       		.byte	0x4
 6937 035b F9       		.byte	0xf9
 6938 035c AD000000 		.4byte	0xad
 6939 0360 04       		.byte	0x4
 6940 0361 06       		.uleb128 0x6
 6941 0362 9B020000 		.4byte	.LASF52
 6942 0366 04       		.byte	0x4
 6943 0367 FA       		.byte	0xfa
 6944 0368 AD000000 		.4byte	0xad
 6945 036c 06       		.byte	0x6
 6946 036d 06       		.uleb128 0x6
 6947 036e 78060000 		.4byte	.LASF53
 6948 0372 04       		.byte	0x4
 6949 0373 FB       		.byte	0xfb
 6950 0374 A2000000 		.4byte	0xa2
 6951 0378 08       		.byte	0x8
 6952 0379 0E       		.uleb128 0xe
 6953 037a 4B030000 		.4byte	.LASF54
 6954 037e 04       		.byte	0x4
 6955 037f 0001     		.2byte	0x100
 6956 0381 87030000 		.4byte	0x387
 6957 0385 09       		.byte	0x9
 6958 0386 00       		.byte	0
 6959 0387 08       		.uleb128 0x8
 6960 0388 C3000000 		.4byte	0xc3
 6961 038c 97030000 		.4byte	0x397
 6962 0390 0D       		.uleb128 0xd
 6963 0391 DD010000 		.4byte	0x1dd
 6964 0395 0C       		.byte	0xc
 6965 0396 00       		.byte	0
 6966 0397 0F       		.uleb128 0xf
 6967 0398 91060000 		.4byte	.LASF55
 6968 039c 04       		.byte	0x4
 6969 039d 0201     		.2byte	0x102
 6970 039f 41030000 		.4byte	0x341
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 224


 6971 03a3 10       		.uleb128 0x10
 6972 03a4 01       		.byte	0x1
 6973 03a5 2C000000 		.4byte	0x2c
 6974 03a9 04       		.byte	0x4
 6975 03aa 1401     		.2byte	0x114
 6976 03ac 29040000 		.4byte	0x429
 6977 03b0 11       		.uleb128 0x11
 6978 03b1 DE050000 		.4byte	.LASF56
 6979 03b5 00       		.byte	0
 6980 03b6 11       		.uleb128 0x11
 6981 03b7 12030000 		.4byte	.LASF57
 6982 03bb 01       		.byte	0x1
 6983 03bc 11       		.uleb128 0x11
 6984 03bd FE020000 		.4byte	.LASF58
 6985 03c1 02       		.byte	0x2
 6986 03c2 11       		.uleb128 0x11
 6987 03c3 F2060000 		.4byte	.LASF59
 6988 03c7 03       		.byte	0x3
 6989 03c8 11       		.uleb128 0x11
 6990 03c9 DD030000 		.4byte	.LASF60
 6991 03cd 04       		.byte	0x4
 6992 03ce 11       		.uleb128 0x11
 6993 03cf DC060000 		.4byte	.LASF61
 6994 03d3 05       		.byte	0x5
 6995 03d4 11       		.uleb128 0x11
 6996 03d5 30060000 		.4byte	.LASF62
 6997 03d9 06       		.byte	0x6
 6998 03da 11       		.uleb128 0x11
 6999 03db 11070000 		.4byte	.LASF63
 7000 03df 07       		.byte	0x7
 7001 03e0 11       		.uleb128 0x11
 7002 03e1 D7010000 		.4byte	.LASF64
 7003 03e5 08       		.byte	0x8
 7004 03e6 11       		.uleb128 0x11
 7005 03e7 15010000 		.4byte	.LASF65
 7006 03eb 09       		.byte	0x9
 7007 03ec 11       		.uleb128 0x11
 7008 03ed 51030000 		.4byte	.LASF66
 7009 03f1 0A       		.byte	0xa
 7010 03f2 11       		.uleb128 0x11
 7011 03f3 D9040000 		.4byte	.LASF67
 7012 03f7 0B       		.byte	0xb
 7013 03f8 11       		.uleb128 0x11
 7014 03f9 0F040000 		.4byte	.LASF68
 7015 03fd 0C       		.byte	0xc
 7016 03fe 11       		.uleb128 0x11
 7017 03ff AA010000 		.4byte	.LASF69
 7018 0403 0D       		.byte	0xd
 7019 0404 11       		.uleb128 0x11
 7020 0405 86050000 		.4byte	.LASF70
 7021 0409 0E       		.byte	0xe
 7022 040a 11       		.uleb128 0x11
 7023 040b BF030000 		.4byte	.LASF71
 7024 040f 0F       		.byte	0xf
 7025 0410 11       		.uleb128 0x11
 7026 0411 A0050000 		.4byte	.LASF72
 7027 0415 10       		.byte	0x10
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 225


 7028 0416 11       		.uleb128 0x11
 7029 0417 C4010000 		.4byte	.LASF73
 7030 041b 11       		.byte	0x11
 7031 041c 11       		.uleb128 0x11
 7032 041d 0A000000 		.4byte	.LASF74
 7033 0421 12       		.byte	0x12
 7034 0422 11       		.uleb128 0x11
 7035 0423 E5000000 		.4byte	.LASF75
 7036 0427 13       		.byte	0x13
 7037 0428 00       		.byte	0
 7038 0429 0F       		.uleb128 0xf
 7039 042a BA060000 		.4byte	.LASF76
 7040 042e 04       		.byte	0x4
 7041 042f 2901     		.2byte	0x129
 7042 0431 A3030000 		.4byte	0x3a3
 7043 0435 03       		.uleb128 0x3
 7044 0436 01060000 		.4byte	.LASF77
 7045 043a 05       		.byte	0x5
 7046 043b 0D       		.byte	0xd
 7047 043c A2000000 		.4byte	0xa2
 7048 0440 12       		.uleb128 0x12
 7049 0441 01       		.byte	0x1
 7050 0442 2C000000 		.4byte	0x2c
 7051 0446 05       		.byte	0x5
 7052 0447 10       		.byte	0x10
 7053 0448 6B040000 		.4byte	0x46b
 7054 044c 11       		.uleb128 0x11
 7055 044d D6030000 		.4byte	.LASF78
 7056 0451 00       		.byte	0
 7057 0452 11       		.uleb128 0x11
 7058 0453 C2060000 		.4byte	.LASF79
 7059 0457 01       		.byte	0x1
 7060 0458 11       		.uleb128 0x11
 7061 0459 00000000 		.4byte	.LASF80
 7062 045d 02       		.byte	0x2
 7063 045e 11       		.uleb128 0x11
 7064 045f 52000000 		.4byte	.LASF81
 7065 0463 03       		.byte	0x3
 7066 0464 11       		.uleb128 0x11
 7067 0465 3B010000 		.4byte	.LASF82
 7068 0469 04       		.byte	0x4
 7069 046a 00       		.byte	0
 7070 046b 13       		.uleb128 0x13
 7071 046c 1E060000 		.4byte	.LASF83
 7072 0470 01       		.byte	0x1
 7073 0471 6202     		.2byte	0x262
 7074 0473 AD000000 		.4byte	0xad
 7075 0477 00000000 		.4byte	.LFB0
 7076 047b 0A000000 		.4byte	.LFE0-.LFB0
 7077 047f 01       		.uleb128 0x1
 7078 0480 9C       		.byte	0x9c
 7079 0481 A5040000 		.4byte	0x4a5
 7080 0485 14       		.uleb128 0x14
 7081 0486 70747200 		.ascii	"ptr\000"
 7082 048a 01       		.byte	0x1
 7083 048b 6202     		.2byte	0x262
 7084 048d A5040000 		.4byte	0x4a5
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 226


 7085 0491 00000000 		.4byte	.LLST0
 7086 0495 15       		.uleb128 0x15
 7087 0496 727600   		.ascii	"rv\000"
 7088 0499 01       		.byte	0x1
 7089 049a 6402     		.2byte	0x264
 7090 049c AD000000 		.4byte	0xad
 7091 04a0 21000000 		.4byte	.LLST1
 7092 04a4 00       		.byte	0
 7093 04a5 0B       		.uleb128 0xb
 7094 04a6 04       		.byte	0x4
 7095 04a7 AB040000 		.4byte	0x4ab
 7096 04ab 16       		.uleb128 0x16
 7097 04ac A2000000 		.4byte	0xa2
 7098 04b0 13       		.uleb128 0x13
 7099 04b1 57060000 		.4byte	.LASF84
 7100 04b5 01       		.byte	0x1
 7101 04b6 6B02     		.2byte	0x26b
 7102 04b8 B8000000 		.4byte	0xb8
 7103 04bc 00000000 		.4byte	.LFB1
 7104 04c0 16000000 		.4byte	.LFE1-.LFB1
 7105 04c4 01       		.uleb128 0x1
 7106 04c5 9C       		.byte	0x9c
 7107 04c6 EA040000 		.4byte	0x4ea
 7108 04ca 14       		.uleb128 0x14
 7109 04cb 70747200 		.ascii	"ptr\000"
 7110 04cf 01       		.byte	0x1
 7111 04d0 6B02     		.2byte	0x26b
 7112 04d2 A5040000 		.4byte	0x4a5
 7113 04d6 63000000 		.4byte	.LLST2
 7114 04da 15       		.uleb128 0x15
 7115 04db 727600   		.ascii	"rv\000"
 7116 04de 01       		.byte	0x1
 7117 04df 6D02     		.2byte	0x26d
 7118 04e1 B8000000 		.4byte	0xb8
 7119 04e5 84000000 		.4byte	.LLST3
 7120 04e9 00       		.byte	0
 7121 04ea 17       		.uleb128 0x17
 7122 04eb 89060000 		.4byte	.LASF85
 7123 04ef 01       		.byte	0x1
 7124 04f0 8802     		.2byte	0x288
 7125 04f2 00000000 		.4byte	.LFB2
 7126 04f6 08000000 		.4byte	.LFE2-.LFB2
 7127 04fa 01       		.uleb128 0x1
 7128 04fb 9C       		.byte	0x9c
 7129 04fc 21050000 		.4byte	0x521
 7130 0500 14       		.uleb128 0x14
 7131 0501 70747200 		.ascii	"ptr\000"
 7132 0505 01       		.byte	0x1
 7133 0506 8802     		.2byte	0x288
 7134 0508 C5020000 		.4byte	0x2c5
 7135 050c BF000000 		.4byte	.LLST4
 7136 0510 14       		.uleb128 0x14
 7137 0511 76616C00 		.ascii	"val\000"
 7138 0515 01       		.byte	0x1
 7139 0516 8802     		.2byte	0x288
 7140 0518 AD000000 		.4byte	0xad
 7141 051c EC000000 		.4byte	.LLST5
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 227


 7142 0520 00       		.byte	0
 7143 0521 17       		.uleb128 0x17
 7144 0522 FE030000 		.4byte	.LASF86
 7145 0526 01       		.byte	0x1
 7146 0527 8E02     		.2byte	0x28e
 7147 0529 00000000 		.4byte	.LFB3
 7148 052d 14000000 		.4byte	.LFE3-.LFB3
 7149 0531 01       		.uleb128 0x1
 7150 0532 9C       		.byte	0x9c
 7151 0533 58050000 		.4byte	0x558
 7152 0537 14       		.uleb128 0x14
 7153 0538 70747200 		.ascii	"ptr\000"
 7154 053c 01       		.byte	0x1
 7155 053d 8E02     		.2byte	0x28e
 7156 053f C5020000 		.4byte	0x2c5
 7157 0543 0E010000 		.4byte	.LLST6
 7158 0547 14       		.uleb128 0x14
 7159 0548 76616C00 		.ascii	"val\000"
 7160 054c 01       		.byte	0x1
 7161 054d 8E02     		.2byte	0x28e
 7162 054f B8000000 		.4byte	0xb8
 7163 0553 55010000 		.4byte	.LLST7
 7164 0557 00       		.byte	0
 7165 0558 17       		.uleb128 0x17
 7166 0559 69060000 		.4byte	.LASF87
 7167 055d 01       		.byte	0x1
 7168 055e AC02     		.2byte	0x2ac
 7169 0560 00000000 		.4byte	.LFB4
 7170 0564 12000000 		.4byte	.LFE4-.LFB4
 7171 0568 01       		.uleb128 0x1
 7172 0569 9C       		.byte	0x9c
 7173 056a BB050000 		.4byte	0x5bb
 7174 056e 14       		.uleb128 0x14
 7175 056f 64737400 		.ascii	"dst\000"
 7176 0573 01       		.byte	0x1
 7177 0574 AC02     		.2byte	0x2ac
 7178 0576 BB050000 		.4byte	0x5bb
 7179 057a A0010000 		.4byte	.LLST8
 7180 057e 14       		.uleb128 0x14
 7181 057f 73726300 		.ascii	"src\000"
 7182 0583 01       		.byte	0x1
 7183 0584 AC02     		.2byte	0x2ac
 7184 0586 BD050000 		.4byte	0x5bd
 7185 058a C1010000 		.4byte	.LLST9
 7186 058e 14       		.uleb128 0x14
 7187 058f 636E7400 		.ascii	"cnt\000"
 7188 0593 01       		.byte	0x1
 7189 0594 AC02     		.2byte	0x2ac
 7190 0596 97000000 		.4byte	0x97
 7191 059a E2010000 		.4byte	.LLST10
 7192 059e 15       		.uleb128 0x15
 7193 059f 6400     		.ascii	"d\000"
 7194 05a1 01       		.byte	0x1
 7195 05a2 AE02     		.2byte	0x2ae
 7196 05a4 C5020000 		.4byte	0x2c5
 7197 05a8 18020000 		.4byte	.LLST11
 7198 05ac 15       		.uleb128 0x15
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 228


 7199 05ad 7300     		.ascii	"s\000"
 7200 05af 01       		.byte	0x1
 7201 05b0 AF02     		.2byte	0x2af
 7202 05b2 A5040000 		.4byte	0x4a5
 7203 05b6 43020000 		.4byte	.LLST12
 7204 05ba 00       		.byte	0
 7205 05bb 18       		.uleb128 0x18
 7206 05bc 04       		.byte	0x4
 7207 05bd 0B       		.uleb128 0xb
 7208 05be 04       		.byte	0x4
 7209 05bf C3050000 		.4byte	0x5c3
 7210 05c3 19       		.uleb128 0x19
 7211 05c4 17       		.uleb128 0x17
 7212 05c5 9B030000 		.4byte	.LASF88
 7213 05c9 01       		.byte	0x1
 7214 05ca BA02     		.2byte	0x2ba
 7215 05cc 00000000 		.4byte	.LFB5
 7216 05d0 0A000000 		.4byte	.LFE5-.LFB5
 7217 05d4 01       		.uleb128 0x1
 7218 05d5 9C       		.byte	0x9c
 7219 05d6 18060000 		.4byte	0x618
 7220 05da 1A       		.uleb128 0x1a
 7221 05db 64737400 		.ascii	"dst\000"
 7222 05df 01       		.byte	0x1
 7223 05e0 BA02     		.2byte	0x2ba
 7224 05e2 BB050000 		.4byte	0x5bb
 7225 05e6 04       		.uleb128 0x4
 7226 05e7 F3       		.byte	0xf3
 7227 05e8 01       		.uleb128 0x1
 7228 05e9 50       		.byte	0x50
 7229 05ea 9F       		.byte	0x9f
 7230 05eb 1A       		.uleb128 0x1a
 7231 05ec 76616C00 		.ascii	"val\000"
 7232 05f0 01       		.byte	0x1
 7233 05f1 BA02     		.2byte	0x2ba
 7234 05f3 73000000 		.4byte	0x73
 7235 05f7 01       		.uleb128 0x1
 7236 05f8 51       		.byte	0x51
 7237 05f9 14       		.uleb128 0x14
 7238 05fa 636E7400 		.ascii	"cnt\000"
 7239 05fe 01       		.byte	0x1
 7240 05ff BA02     		.2byte	0x2ba
 7241 0601 97000000 		.4byte	0x97
 7242 0605 6E020000 		.4byte	.LLST13
 7243 0609 15       		.uleb128 0x15
 7244 060a 6400     		.ascii	"d\000"
 7245 060c 01       		.byte	0x1
 7246 060d BC02     		.2byte	0x2bc
 7247 060f C5020000 		.4byte	0x2c5
 7248 0613 AA020000 		.4byte	.LLST14
 7249 0617 00       		.byte	0
 7250 0618 13       		.uleb128 0x13
 7251 0619 26030000 		.4byte	.LASF89
 7252 061d 01       		.byte	0x1
 7253 061e C502     		.2byte	0x2c5
 7254 0620 73000000 		.4byte	0x73
 7255 0624 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 229


 7256 0628 1E000000 		.4byte	.LFE6-.LFB6
 7257 062c 01       		.uleb128 0x1
 7258 062d 9C       		.byte	0x9c
 7259 062e 8B060000 		.4byte	0x68b
 7260 0632 14       		.uleb128 0x14
 7261 0633 64737400 		.ascii	"dst\000"
 7262 0637 01       		.byte	0x1
 7263 0638 C502     		.2byte	0x2c5
 7264 063a BD050000 		.4byte	0x5bd
 7265 063e CD020000 		.4byte	.LLST15
 7266 0642 14       		.uleb128 0x14
 7267 0643 73726300 		.ascii	"src\000"
 7268 0647 01       		.byte	0x1
 7269 0648 C502     		.2byte	0x2c5
 7270 064a BD050000 		.4byte	0x5bd
 7271 064e EE020000 		.4byte	.LLST16
 7272 0652 14       		.uleb128 0x14
 7273 0653 636E7400 		.ascii	"cnt\000"
 7274 0657 01       		.byte	0x1
 7275 0658 C502     		.2byte	0x2c5
 7276 065a 97000000 		.4byte	0x97
 7277 065e 0F030000 		.4byte	.LLST17
 7278 0662 15       		.uleb128 0x15
 7279 0663 6400     		.ascii	"d\000"
 7280 0665 01       		.byte	0x1
 7281 0666 C702     		.2byte	0x2c7
 7282 0668 A5040000 		.4byte	0x4a5
 7283 066c 3A030000 		.4byte	.LLST18
 7284 0670 15       		.uleb128 0x15
 7285 0671 7300     		.ascii	"s\000"
 7286 0673 01       		.byte	0x1
 7287 0674 C702     		.2byte	0x2c7
 7288 0676 A5040000 		.4byte	0x4a5
 7289 067a 58030000 		.4byte	.LLST19
 7290 067e 1B       		.uleb128 0x1b
 7291 067f 7200     		.ascii	"r\000"
 7292 0681 01       		.byte	0x1
 7293 0682 C802     		.2byte	0x2c8
 7294 0684 73000000 		.4byte	0x73
 7295 0688 01       		.uleb128 0x1
 7296 0689 53       		.byte	0x53
 7297 068a 00       		.byte	0
 7298 068b 13       		.uleb128 0x13
 7299 068c 37000000 		.4byte	.LASF90
 7300 0690 01       		.byte	0x1
 7301 0691 D302     		.2byte	0x2d3
 7302 0693 73000000 		.4byte	0x73
 7303 0697 00000000 		.4byte	.LFB7
 7304 069b 10000000 		.4byte	.LFE7-.LFB7
 7305 069f 01       		.uleb128 0x1
 7306 06a0 9C       		.byte	0x9c
 7307 06a1 C4060000 		.4byte	0x6c4
 7308 06a5 14       		.uleb128 0x14
 7309 06a6 73747200 		.ascii	"str\000"
 7310 06aa 01       		.byte	0x1
 7311 06ab D302     		.2byte	0x2d3
 7312 06ad C4060000 		.4byte	0x6c4
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 230


 7313 06b1 83030000 		.4byte	.LLST20
 7314 06b5 1A       		.uleb128 0x1a
 7315 06b6 63687200 		.ascii	"chr\000"
 7316 06ba 01       		.byte	0x1
 7317 06bb D302     		.2byte	0x2d3
 7318 06bd 73000000 		.4byte	0x73
 7319 06c1 01       		.uleb128 0x1
 7320 06c2 51       		.byte	0x51
 7321 06c3 00       		.byte	0
 7322 06c4 0B       		.uleb128 0xb
 7323 06c5 04       		.byte	0x4
 7324 06c6 CA060000 		.4byte	0x6ca
 7325 06ca 16       		.uleb128 0x16
 7326 06cb CE000000 		.4byte	0xce
 7327 06cf 13       		.uleb128 0x13
 7328 06d0 B7040000 		.4byte	.LASF91
 7329 06d4 01       		.byte	0x1
 7330 06d5 DB02     		.2byte	0x2db
 7331 06d7 73000000 		.4byte	0x73
 7332 06db 00000000 		.4byte	.LFB8
 7333 06df 24000000 		.4byte	.LFE8-.LFB8
 7334 06e3 01       		.uleb128 0x1
 7335 06e4 9C       		.byte	0x9c
 7336 06e5 F8060000 		.4byte	0x6f8
 7337 06e9 14       		.uleb128 0x14
 7338 06ea 6300     		.ascii	"c\000"
 7339 06ec 01       		.byte	0x1
 7340 06ed DB02     		.2byte	0x2db
 7341 06ef A2000000 		.4byte	0xa2
 7342 06f3 A1030000 		.4byte	.LLST21
 7343 06f7 00       		.byte	0
 7344 06f8 13       		.uleb128 0x13
 7345 06f9 0E060000 		.4byte	.LASF92
 7346 06fd 01       		.byte	0x1
 7347 06fe EF02     		.2byte	0x2ef
 7348 0700 73000000 		.4byte	0x73
 7349 0704 00000000 		.4byte	.LFB9
 7350 0708 26000000 		.4byte	.LFE9-.LFB9
 7351 070c 01       		.uleb128 0x1
 7352 070d 9C       		.byte	0x9c
 7353 070e 21070000 		.4byte	0x721
 7354 0712 14       		.uleb128 0x14
 7355 0713 6300     		.ascii	"c\000"
 7356 0715 01       		.byte	0x1
 7357 0716 EF02     		.2byte	0x2ef
 7358 0718 A2000000 		.4byte	0xa2
 7359 071c 26040000 		.4byte	.LLST22
 7360 0720 00       		.byte	0
 7361 0721 13       		.uleb128 0x13
 7362 0722 77020000 		.4byte	.LASF93
 7363 0726 01       		.byte	0x1
 7364 0727 8A04     		.2byte	0x48a
 7365 0729 E0000000 		.4byte	0xe0
 7366 072d 00000000 		.4byte	.LFB13
 7367 0731 18000000 		.4byte	.LFE13-.LFB13
 7368 0735 01       		.uleb128 0x1
 7369 0736 9C       		.byte	0x9c
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 231


 7370 0737 5B070000 		.4byte	0x75b
 7371 073b 14       		.uleb128 0x14
 7372 073c 667300   		.ascii	"fs\000"
 7373 073f 01       		.byte	0x1
 7374 0740 8B04     		.2byte	0x48b
 7375 0742 3E020000 		.4byte	0x23e
 7376 0746 AB040000 		.4byte	.LLST23
 7377 074a 1C       		.uleb128 0x1c
 7378 074b F9020000 		.4byte	.LASF94
 7379 074f 01       		.byte	0x1
 7380 0750 8C04     		.2byte	0x48c
 7381 0752 B8000000 		.4byte	0xb8
 7382 0756 E5040000 		.4byte	.LLST24
 7383 075a 00       		.byte	0
 7384 075b 13       		.uleb128 0x13
 7385 075c B9050000 		.4byte	.LASF95
 7386 0760 01       		.byte	0x1
 7387 0761 4807     		.2byte	0x748
 7388 0763 B8000000 		.4byte	0xb8
 7389 0767 00000000 		.4byte	.LFB22
 7390 076b 24000000 		.4byte	.LFE22-.LFB22
 7391 076f 01       		.uleb128 0x1
 7392 0770 9C       		.byte	0x9c
 7393 0771 C8070000 		.4byte	0x7c8
 7394 0775 14       		.uleb128 0x14
 7395 0776 667300   		.ascii	"fs\000"
 7396 0779 01       		.byte	0x1
 7397 077a 4907     		.2byte	0x749
 7398 077c 3E020000 		.4byte	0x23e
 7399 0780 03050000 		.4byte	.LLST25
 7400 0784 14       		.uleb128 0x14
 7401 0785 64697200 		.ascii	"dir\000"
 7402 0789 01       		.byte	0x1
 7403 078a 4A07     		.2byte	0x74a
 7404 078c A5040000 		.4byte	0x4a5
 7405 0790 21050000 		.4byte	.LLST26
 7406 0794 15       		.uleb128 0x15
 7407 0795 636C00   		.ascii	"cl\000"
 7408 0798 01       		.byte	0x1
 7409 0799 4D07     		.2byte	0x74d
 7410 079b B8000000 		.4byte	0xb8
 7411 079f 3F050000 		.4byte	.LLST27
 7412 07a3 1D       		.uleb128 0x1d
 7413 07a4 0E000000 		.4byte	.LVL67
 7414 07a8 6B040000 		.4byte	0x46b
 7415 07ac B7070000 		.4byte	0x7b7
 7416 07b0 1E       		.uleb128 0x1e
 7417 07b1 01       		.uleb128 0x1
 7418 07b2 50       		.byte	0x50
 7419 07b3 02       		.uleb128 0x2
 7420 07b4 75       		.byte	0x75
 7421 07b5 1A       		.sleb128 26
 7422 07b6 00       		.byte	0
 7423 07b7 1F       		.uleb128 0x1f
 7424 07b8 1E000000 		.4byte	.LVL70
 7425 07bc 6B040000 		.4byte	0x46b
 7426 07c0 1E       		.uleb128 0x1e
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 232


 7427 07c1 01       		.uleb128 0x1
 7428 07c2 50       		.byte	0x50
 7429 07c3 02       		.uleb128 0x2
 7430 07c4 75       		.byte	0x75
 7431 07c5 14       		.sleb128 20
 7432 07c6 00       		.byte	0
 7433 07c7 00       		.byte	0
 7434 07c8 17       		.uleb128 0x17
 7435 07c9 A1010000 		.4byte	.LASF96
 7436 07cd 01       		.byte	0x1
 7437 07ce 5907     		.2byte	0x759
 7438 07d0 00000000 		.4byte	.LFB23
 7439 07d4 24000000 		.4byte	.LFE23-.LFB23
 7440 07d8 01       		.uleb128 0x1
 7441 07d9 9C       		.byte	0x9c
 7442 07da 3F080000 		.4byte	0x83f
 7443 07de 14       		.uleb128 0x14
 7444 07df 667300   		.ascii	"fs\000"
 7445 07e2 01       		.byte	0x1
 7446 07e3 5A07     		.2byte	0x75a
 7447 07e5 3E020000 		.4byte	0x23e
 7448 07e9 68050000 		.4byte	.LLST28
 7449 07ed 14       		.uleb128 0x14
 7450 07ee 64697200 		.ascii	"dir\000"
 7451 07f2 01       		.byte	0x1
 7452 07f3 5B07     		.2byte	0x75b
 7453 07f5 C5020000 		.4byte	0x2c5
 7454 07f9 86050000 		.4byte	.LLST29
 7455 07fd 14       		.uleb128 0x14
 7456 07fe 636C00   		.ascii	"cl\000"
 7457 0801 01       		.byte	0x1
 7458 0802 5C07     		.2byte	0x75c
 7459 0804 B8000000 		.4byte	0xb8
 7460 0808 A4050000 		.4byte	.LLST30
 7461 080c 1D       		.uleb128 0x1d
 7462 080d 12000000 		.4byte	.LVL75
 7463 0811 EA040000 		.4byte	0x4ea
 7464 0815 26080000 		.4byte	0x826
 7465 0819 1E       		.uleb128 0x1e
 7466 081a 01       		.uleb128 0x1
 7467 081b 50       		.byte	0x50
 7468 081c 02       		.uleb128 0x2
 7469 081d 74       		.byte	0x74
 7470 081e 1A       		.sleb128 26
 7471 081f 1E       		.uleb128 0x1e
 7472 0820 01       		.uleb128 0x1
 7473 0821 51       		.byte	0x51
 7474 0822 02       		.uleb128 0x2
 7475 0823 75       		.byte	0x75
 7476 0824 00       		.sleb128 0
 7477 0825 00       		.byte	0
 7478 0826 1F       		.uleb128 0x1f
 7479 0827 22000000 		.4byte	.LVL76
 7480 082b EA040000 		.4byte	0x4ea
 7481 082f 1E       		.uleb128 0x1e
 7482 0830 01       		.uleb128 0x1
 7483 0831 50       		.byte	0x50
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 233


 7484 0832 02       		.uleb128 0x2
 7485 0833 74       		.byte	0x74
 7486 0834 14       		.sleb128 20
 7487 0835 1E       		.uleb128 0x1e
 7488 0836 01       		.uleb128 0x1
 7489 0837 51       		.byte	0x51
 7490 0838 04       		.uleb128 0x4
 7491 0839 75       		.byte	0x75
 7492 083a 00       		.sleb128 0
 7493 083b 40       		.byte	0x40
 7494 083c 25       		.byte	0x25
 7495 083d 00       		.byte	0
 7496 083e 00       		.byte	0
 7497 083f 17       		.uleb128 0x17
 7498 0840 AC030000 		.4byte	.LASF97
 7499 0844 01       		.byte	0x1
 7500 0845 730A     		.2byte	0xa73
 7501 0847 00000000 		.4byte	.LFB28
 7502 084b 6A000000 		.4byte	.LFE28-.LFB28
 7503 084f 01       		.uleb128 0x1
 7504 0850 9C       		.byte	0x9c
 7505 0851 BC080000 		.4byte	0x8bc
 7506 0855 14       		.uleb128 0x14
 7507 0856 647000   		.ascii	"dp\000"
 7508 0859 01       		.byte	0x1
 7509 085a 740A     		.2byte	0xa74
 7510 085c BC080000 		.4byte	0x8bc
 7511 0860 C2050000 		.4byte	.LLST31
 7512 0864 14       		.uleb128 0x14
 7513 0865 666E6F00 		.ascii	"fno\000"
 7514 0869 01       		.byte	0x1
 7515 086a 750A     		.2byte	0xa75
 7516 086c C2080000 		.4byte	0x8c2
 7517 0870 EB050000 		.4byte	.LLST32
 7518 0874 15       		.uleb128 0x15
 7519 0875 736900   		.ascii	"si\000"
 7520 0878 01       		.byte	0x1
 7521 0879 780A     		.2byte	0xa78
 7522 087b 97000000 		.4byte	0x97
 7523 087f 14060000 		.4byte	.LLST33
 7524 0883 15       		.uleb128 0x15
 7525 0884 646900   		.ascii	"di\000"
 7526 0887 01       		.byte	0x1
 7527 0888 780A     		.2byte	0xa78
 7528 088a 97000000 		.4byte	0x97
 7529 088e 3D060000 		.4byte	.LLST34
 7530 0892 15       		.uleb128 0x15
 7531 0893 6300     		.ascii	"c\000"
 7532 0895 01       		.byte	0x1
 7533 0896 7E0A     		.2byte	0xa7e
 7534 0898 C3000000 		.4byte	0xc3
 7535 089c 68060000 		.4byte	.LLST35
 7536 08a0 20       		.uleb128 0x20
 7537 08a1 50000000 		.4byte	.LVL89
 7538 08a5 B0040000 		.4byte	0x4b0
 7539 08a9 20       		.uleb128 0x20
 7540 08aa 5A000000 		.4byte	.LVL90
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 234


 7541 08ae 6B040000 		.4byte	0x46b
 7542 08b2 20       		.uleb128 0x20
 7543 08b3 64000000 		.4byte	.LVL91
 7544 08b7 6B040000 		.4byte	0x46b
 7545 08bb 00       		.byte	0
 7546 08bc 0B       		.uleb128 0xb
 7547 08bd 04       		.byte	0x4
 7548 08be 36030000 		.4byte	0x336
 7549 08c2 0B       		.uleb128 0xb
 7550 08c3 04       		.byte	0x4
 7551 08c4 97030000 		.4byte	0x397
 7552 08c8 13       		.uleb128 0x13
 7553 08c9 C7050000 		.4byte	.LASF98
 7554 08cd 01       		.byte	0x1
 7555 08ce 2B0B     		.2byte	0xb2b
 7556 08d0 29040000 		.4byte	0x429
 7557 08d4 00000000 		.4byte	.LFB29
 7558 08d8 00010000 		.4byte	.LFE29-.LFB29
 7559 08dc 01       		.uleb128 0x1
 7560 08dd 9C       		.byte	0x9c
 7561 08de C8090000 		.4byte	0x9c8
 7562 08e2 14       		.uleb128 0x14
 7563 08e3 647000   		.ascii	"dp\000"
 7564 08e6 01       		.byte	0x1
 7565 08e7 2C0B     		.2byte	0xb2c
 7566 08e9 BC080000 		.4byte	0x8bc
 7567 08ed 7B060000 		.4byte	.LLST36
 7568 08f1 1C       		.uleb128 0x1c
 7569 08f2 67000000 		.4byte	.LASF99
 7570 08f6 01       		.byte	0x1
 7571 08f7 2D0B     		.2byte	0xb2d
 7572 08f9 C8090000 		.4byte	0x9c8
 7573 08fd A6060000 		.4byte	.LLST37
 7574 0901 15       		.uleb128 0x15
 7575 0902 6300     		.ascii	"c\000"
 7576 0904 01       		.byte	0x1
 7577 0905 AE0B     		.2byte	0xbae
 7578 0907 A2000000 		.4byte	0xa2
 7579 090b D2060000 		.4byte	.LLST38
 7580 090f 15       		.uleb128 0x15
 7581 0910 6400     		.ascii	"d\000"
 7582 0912 01       		.byte	0x1
 7583 0913 AE0B     		.2byte	0xbae
 7584 0915 A2000000 		.4byte	0xa2
 7585 0919 FD060000 		.4byte	.LLST39
 7586 091d 15       		.uleb128 0x15
 7587 091e 73666E00 		.ascii	"sfn\000"
 7588 0922 01       		.byte	0x1
 7589 0923 AE0B     		.2byte	0xbae
 7590 0925 C5020000 		.4byte	0x2c5
 7591 0929 1B070000 		.4byte	.LLST40
 7592 092d 15       		.uleb128 0x15
 7593 092e 6E6900   		.ascii	"ni\000"
 7594 0931 01       		.byte	0x1
 7595 0932 AF0B     		.2byte	0xbaf
 7596 0934 97000000 		.4byte	0x97
 7597 0938 3E070000 		.4byte	.LLST41
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 235


 7598 093c 15       		.uleb128 0x15
 7599 093d 736900   		.ascii	"si\000"
 7600 0940 01       		.byte	0x1
 7601 0941 AF0B     		.2byte	0xbaf
 7602 0943 97000000 		.4byte	0x97
 7603 0947 68070000 		.4byte	.LLST42
 7604 094b 15       		.uleb128 0x15
 7605 094c 6900     		.ascii	"i\000"
 7606 094e 01       		.byte	0x1
 7607 094f AF0B     		.2byte	0xbaf
 7608 0951 97000000 		.4byte	0x97
 7609 0955 C9070000 		.4byte	.LLST43
 7610 0959 15       		.uleb128 0x15
 7611 095a 7000     		.ascii	"p\000"
 7612 095c 01       		.byte	0x1
 7613 095d B00B     		.2byte	0xbb0
 7614 095f C4060000 		.4byte	0x6c4
 7615 0963 2E080000 		.4byte	.LLST44
 7616 0967 1D       		.uleb128 0x1d
 7617 0968 1C000000 		.4byte	.LVL98
 7618 096c C4050000 		.4byte	0x5c4
 7619 0970 86090000 		.4byte	0x986
 7620 0974 1E       		.uleb128 0x1e
 7621 0975 01       		.uleb128 0x1
 7622 0976 50       		.byte	0x50
 7623 0977 02       		.uleb128 0x2
 7624 0978 7A       		.byte	0x7a
 7625 0979 00       		.sleb128 0
 7626 097a 1E       		.uleb128 0x1e
 7627 097b 01       		.uleb128 0x1
 7628 097c 51       		.byte	0x51
 7629 097d 02       		.uleb128 0x2
 7630 097e 08       		.byte	0x8
 7631 097f 20       		.byte	0x20
 7632 0980 1E       		.uleb128 0x1e
 7633 0981 01       		.uleb128 0x1
 7634 0982 52       		.byte	0x52
 7635 0983 01       		.uleb128 0x1
 7636 0984 3B       		.byte	0x3b
 7637 0985 00       		.byte	0
 7638 0986 1D       		.uleb128 0x1d
 7639 0987 6A000000 		.4byte	.LVL106
 7640 098b CF060000 		.4byte	0x6cf
 7641 098f 9A090000 		.4byte	0x99a
 7642 0993 1E       		.uleb128 0x1e
 7643 0994 01       		.uleb128 0x1
 7644 0995 50       		.byte	0x50
 7645 0996 02       		.uleb128 0x2
 7646 0997 74       		.byte	0x74
 7647 0998 00       		.sleb128 0
 7648 0999 00       		.byte	0
 7649 099a 1D       		.uleb128 0x1d
 7650 099b 78000000 		.4byte	.LVL109
 7651 099f F8060000 		.4byte	0x6f8
 7652 09a3 AE090000 		.4byte	0x9ae
 7653 09a7 1E       		.uleb128 0x1e
 7654 09a8 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 236


 7655 09a9 50       		.byte	0x50
 7656 09aa 02       		.uleb128 0x2
 7657 09ab 76       		.byte	0x76
 7658 09ac 00       		.sleb128 0
 7659 09ad 00       		.byte	0
 7660 09ae 1F       		.uleb128 0x1f
 7661 09af 98000000 		.4byte	.LVL114
 7662 09b3 8B060000 		.4byte	0x68b
 7663 09b7 1E       		.uleb128 0x1e
 7664 09b8 01       		.uleb128 0x1
 7665 09b9 50       		.byte	0x50
 7666 09ba 05       		.uleb128 0x5
 7667 09bb 03       		.byte	0x3
 7668 09bc 00000000 		.4byte	.LC0
 7669 09c0 1E       		.uleb128 0x1e
 7670 09c1 01       		.uleb128 0x1
 7671 09c2 51       		.byte	0x51
 7672 09c3 02       		.uleb128 0x2
 7673 09c4 74       		.byte	0x74
 7674 09c5 00       		.sleb128 0
 7675 09c6 00       		.byte	0
 7676 09c7 00       		.byte	0
 7677 09c8 0B       		.uleb128 0xb
 7678 09c9 04       		.byte	0x4
 7679 09ca CE090000 		.4byte	0x9ce
 7680 09ce 0B       		.uleb128 0xb
 7681 09cf 04       		.byte	0x4
 7682 09d0 D4090000 		.4byte	0x9d4
 7683 09d4 16       		.uleb128 0x16
 7684 09d5 C3000000 		.4byte	0xc3
 7685 09d9 13       		.uleb128 0x13
 7686 09da 32040000 		.4byte	.LASF100
 7687 09de 01       		.byte	0x1
 7688 09df 4B0C     		.2byte	0xc4b
 7689 09e1 73000000 		.4byte	0x73
 7690 09e5 00000000 		.4byte	.LFB31
 7691 09e9 52000000 		.4byte	.LFE31-.LFB31
 7692 09ed 01       		.uleb128 0x1
 7693 09ee 9C       		.byte	0x9c
 7694 09ef 4F0A0000 		.4byte	0xa4f
 7695 09f3 1C       		.uleb128 0x1c
 7696 09f4 67000000 		.4byte	.LASF99
 7697 09f8 01       		.byte	0x1
 7698 09f9 4C0C     		.2byte	0xc4c
 7699 09fb C8090000 		.4byte	0x9c8
 7700 09ff 41080000 		.4byte	.LLST45
 7701 0a03 15       		.uleb128 0x15
 7702 0a04 747000   		.ascii	"tp\000"
 7703 0a07 01       		.byte	0x1
 7704 0a08 4F0C     		.2byte	0xc4f
 7705 0a0a CE090000 		.4byte	0x9ce
 7706 0a0e AD080000 		.4byte	.LLST46
 7707 0a12 15       		.uleb128 0x15
 7708 0a13 747400   		.ascii	"tt\000"
 7709 0a16 01       		.byte	0x1
 7710 0a17 4F0C     		.2byte	0xc4f
 7711 0a19 CE090000 		.4byte	0x9ce
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 237


 7712 0a1d FA080000 		.4byte	.LLST47
 7713 0a21 15       		.uleb128 0x15
 7714 0a22 746300   		.ascii	"tc\000"
 7715 0a25 01       		.byte	0x1
 7716 0a26 500C     		.2byte	0xc50
 7717 0a28 C3000000 		.4byte	0xc3
 7718 0a2c 39090000 		.4byte	.LLST48
 7719 0a30 15       		.uleb128 0x15
 7720 0a31 6900     		.ascii	"i\000"
 7721 0a33 01       		.byte	0x1
 7722 0a34 510C     		.2byte	0xc51
 7723 0a36 73000000 		.4byte	0x73
 7724 0a3a 6F090000 		.4byte	.LLST49
 7725 0a3e 15       		.uleb128 0x15
 7726 0a3f 766F6C00 		.ascii	"vol\000"
 7727 0a43 01       		.byte	0x1
 7728 0a44 510C     		.2byte	0xc51
 7729 0a46 73000000 		.4byte	0x73
 7730 0a4a B0090000 		.4byte	.LLST50
 7731 0a4e 00       		.byte	0
 7732 0a4f 13       		.uleb128 0x13
 7733 0a50 78050000 		.4byte	.LASF101
 7734 0a54 01       		.byte	0x1
 7735 0a55 0F0E     		.2byte	0xe0f
 7736 0a57 29040000 		.4byte	0x429
 7737 0a5b 00000000 		.4byte	.LFB35
 7738 0a5f 46000000 		.4byte	.LFE35-.LFB35
 7739 0a63 01       		.uleb128 0x1
 7740 0a64 9C       		.byte	0x9c
 7741 0a65 A30A0000 		.4byte	0xaa3
 7742 0a69 14       		.uleb128 0x14
 7743 0a6a 6F626A00 		.ascii	"obj\000"
 7744 0a6e 01       		.byte	0x1
 7745 0a6f 100E     		.2byte	0xe10
 7746 0a71 A30A0000 		.4byte	0xaa3
 7747 0a75 DD090000 		.4byte	.LLST51
 7748 0a79 14       		.uleb128 0x14
 7749 0a7a 72667300 		.ascii	"rfs\000"
 7750 0a7e 01       		.byte	0x1
 7751 0a7f 110E     		.2byte	0xe11
 7752 0a81 A90A0000 		.4byte	0xaa9
 7753 0a85 530A0000 		.4byte	.LLST52
 7754 0a89 15       		.uleb128 0x15
 7755 0a8a 72657300 		.ascii	"res\000"
 7756 0a8e 01       		.byte	0x1
 7757 0a8f 140E     		.2byte	0xe14
 7758 0a91 29040000 		.4byte	0x429
 7759 0a95 870A0000 		.4byte	.LLST53
 7760 0a99 20       		.uleb128 0x20
 7761 0a9a 1E000000 		.4byte	.LVL150
 7762 0a9e 262D0000 		.4byte	0x2d26
 7763 0aa2 00       		.byte	0
 7764 0aa3 0B       		.uleb128 0xb
 7765 0aa4 04       		.byte	0x4
 7766 0aa5 44020000 		.4byte	0x244
 7767 0aa9 0B       		.uleb128 0xb
 7768 0aaa 04       		.byte	0x4
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 238


 7769 0aab 3E020000 		.4byte	0x23e
 7770 0aaf 13       		.uleb128 0x13
 7771 0ab0 05020000 		.4byte	.LASF102
 7772 0ab4 01       		.byte	0x1
 7773 0ab5 3004     		.2byte	0x430
 7774 0ab7 29040000 		.4byte	0x429
 7775 0abb 00000000 		.4byte	.LFB10
 7776 0abf 50000000 		.4byte	.LFE10-.LFB10
 7777 0ac3 01       		.uleb128 0x1
 7778 0ac4 9C       		.byte	0x9c
 7779 0ac5 170B0000 		.4byte	0xb17
 7780 0ac9 14       		.uleb128 0x14
 7781 0aca 667300   		.ascii	"fs\000"
 7782 0acd 01       		.byte	0x1
 7783 0ace 3104     		.2byte	0x431
 7784 0ad0 3E020000 		.4byte	0x23e
 7785 0ad4 A60A0000 		.4byte	.LLST54
 7786 0ad8 15       		.uleb128 0x15
 7787 0ad9 72657300 		.ascii	"res\000"
 7788 0add 01       		.byte	0x1
 7789 0ade 3404     		.2byte	0x434
 7790 0ae0 29040000 		.4byte	0x429
 7791 0ae4 E80A0000 		.4byte	.LLST55
 7792 0ae8 1D       		.uleb128 0x1d
 7793 0ae9 18000000 		.4byte	.LVL163
 7794 0aed 312D0000 		.4byte	0x2d31
 7795 0af1 010B0000 		.4byte	0xb01
 7796 0af5 1E       		.uleb128 0x1e
 7797 0af6 01       		.uleb128 0x1
 7798 0af7 51       		.byte	0x51
 7799 0af8 02       		.uleb128 0x2
 7800 0af9 75       		.byte	0x75
 7801 0afa 00       		.sleb128 0
 7802 0afb 1E       		.uleb128 0x1e
 7803 0afc 01       		.uleb128 0x1
 7804 0afd 53       		.byte	0x53
 7805 0afe 01       		.uleb128 0x1
 7806 0aff 31       		.byte	0x31
 7807 0b00 00       		.byte	0
 7808 0b01 1F       		.uleb128 0x1f
 7809 0b02 3C000000 		.4byte	.LVL164
 7810 0b06 312D0000 		.4byte	0x2d31
 7811 0b0a 1E       		.uleb128 0x1e
 7812 0b0b 01       		.uleb128 0x1
 7813 0b0c 51       		.byte	0x51
 7814 0b0d 02       		.uleb128 0x2
 7815 0b0e 75       		.byte	0x75
 7816 0b0f 00       		.sleb128 0
 7817 0b10 1E       		.uleb128 0x1e
 7818 0b11 01       		.uleb128 0x1
 7819 0b12 53       		.byte	0x53
 7820 0b13 01       		.uleb128 0x1
 7821 0b14 31       		.byte	0x31
 7822 0b15 00       		.byte	0
 7823 0b16 00       		.byte	0
 7824 0b17 13       		.uleb128 0x13
 7825 0b18 4B060000 		.4byte	.LASF103
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 239


 7826 0b1c 01       		.byte	0x1
 7827 0b1d 4604     		.2byte	0x446
 7828 0b1f 29040000 		.4byte	0x429
 7829 0b23 00000000 		.4byte	.LFB11
 7830 0b27 34000000 		.4byte	.LFE11-.LFB11
 7831 0b2b 01       		.uleb128 0x1
 7832 0b2c 9C       		.byte	0x9c
 7833 0b2d 900B0000 		.4byte	0xb90
 7834 0b31 14       		.uleb128 0x14
 7835 0b32 667300   		.ascii	"fs\000"
 7836 0b35 01       		.byte	0x1
 7837 0b36 4704     		.2byte	0x447
 7838 0b38 3E020000 		.4byte	0x23e
 7839 0b3c 070B0000 		.4byte	.LLST56
 7840 0b40 1C       		.uleb128 0x1c
 7841 0b41 9F000000 		.4byte	.LASF47
 7842 0b45 01       		.byte	0x1
 7843 0b46 4804     		.2byte	0x448
 7844 0b48 E0000000 		.4byte	0xe0
 7845 0b4c 3E0B0000 		.4byte	.LLST57
 7846 0b50 15       		.uleb128 0x15
 7847 0b51 72657300 		.ascii	"res\000"
 7848 0b55 01       		.byte	0x1
 7849 0b56 4B04     		.2byte	0x44b
 7850 0b58 29040000 		.4byte	0x429
 7851 0b5c 670B0000 		.4byte	.LLST58
 7852 0b60 1D       		.uleb128 0x1d
 7853 0b61 10000000 		.4byte	.LVL173
 7854 0b65 AF0A0000 		.4byte	0xaaf
 7855 0b69 740B0000 		.4byte	0xb74
 7856 0b6d 1E       		.uleb128 0x1e
 7857 0b6e 01       		.uleb128 0x1
 7858 0b6f 50       		.byte	0x50
 7859 0b70 02       		.uleb128 0x2
 7860 0b71 74       		.byte	0x74
 7861 0b72 00       		.sleb128 0
 7862 0b73 00       		.byte	0
 7863 0b74 1F       		.uleb128 0x1f
 7864 0b75 22000000 		.4byte	.LVL175
 7865 0b79 3C2D0000 		.4byte	0x2d3c
 7866 0b7d 1E       		.uleb128 0x1e
 7867 0b7e 01       		.uleb128 0x1
 7868 0b7f 51       		.byte	0x51
 7869 0b80 02       		.uleb128 0x2
 7870 0b81 74       		.byte	0x74
 7871 0b82 30       		.sleb128 48
 7872 0b83 1E       		.uleb128 0x1e
 7873 0b84 01       		.uleb128 0x1
 7874 0b85 52       		.byte	0x52
 7875 0b86 02       		.uleb128 0x2
 7876 0b87 75       		.byte	0x75
 7877 0b88 00       		.sleb128 0
 7878 0b89 1E       		.uleb128 0x1e
 7879 0b8a 01       		.uleb128 0x1
 7880 0b8b 53       		.byte	0x53
 7881 0b8c 01       		.uleb128 0x1
 7882 0b8d 31       		.byte	0x31
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 240


 7883 0b8e 00       		.byte	0
 7884 0b8f 00       		.byte	0
 7885 0b90 13       		.uleb128 0x13
 7886 0b91 D0040000 		.4byte	.LASF104
 7887 0b95 01       		.byte	0x1
 7888 0b96 DD0C     		.2byte	0xcdd
 7889 0b98 97000000 		.4byte	0x97
 7890 0b9c 00000000 		.4byte	.LFB32
 7891 0ba0 70000000 		.4byte	.LFE32-.LFB32
 7892 0ba4 01       		.uleb128 0x1
 7893 0ba5 9C       		.byte	0x9c
 7894 0ba6 3C0C0000 		.4byte	0xc3c
 7895 0baa 14       		.uleb128 0x14
 7896 0bab 667300   		.ascii	"fs\000"
 7897 0bae 01       		.byte	0x1
 7898 0baf DE0C     		.2byte	0xcde
 7899 0bb1 3E020000 		.4byte	0x23e
 7900 0bb5 A80B0000 		.4byte	.LLST59
 7901 0bb9 1C       		.uleb128 0x1c
 7902 0bba 9F000000 		.4byte	.LASF47
 7903 0bbe 01       		.byte	0x1
 7904 0bbf DF0C     		.2byte	0xcdf
 7905 0bc1 E0000000 		.4byte	0xe0
 7906 0bc5 D40B0000 		.4byte	.LLST60
 7907 0bc9 1D       		.uleb128 0x1d
 7908 0bca 12000000 		.4byte	.LVL180
 7909 0bce 170B0000 		.4byte	0xb17
 7910 0bd2 E40B0000 		.4byte	0xbe4
 7911 0bd6 1E       		.uleb128 0x1e
 7912 0bd7 01       		.uleb128 0x1
 7913 0bd8 50       		.byte	0x50
 7914 0bd9 02       		.uleb128 0x2
 7915 0bda 74       		.byte	0x74
 7916 0bdb 00       		.sleb128 0
 7917 0bdc 1E       		.uleb128 0x1e
 7918 0bdd 01       		.uleb128 0x1
 7919 0bde 51       		.byte	0x51
 7920 0bdf 03       		.uleb128 0x3
 7921 0be0 F3       		.byte	0xf3
 7922 0be1 01       		.uleb128 0x1
 7923 0be2 51       		.byte	0x51
 7924 0be3 00       		.byte	0
 7925 0be4 1D       		.uleb128 0x1d
 7926 0be5 1C000000 		.4byte	.LVL181
 7927 0be9 6B040000 		.4byte	0x46b
 7928 0bed F90B0000 		.4byte	0xbf9
 7929 0bf1 1E       		.uleb128 0x1e
 7930 0bf2 01       		.uleb128 0x1
 7931 0bf3 50       		.byte	0x50
 7932 0bf4 03       		.uleb128 0x3
 7933 0bf5 74       		.byte	0x74
 7934 0bf6 AE04     		.sleb128 558
 7935 0bf8 00       		.byte	0
 7936 0bf9 1D       		.uleb128 0x1d
 7937 0bfa 40000000 		.4byte	.LVL182
 7938 0bfe 18060000 		.4byte	0x618
 7939 0c02 1C0C0000 		.4byte	0xc1c
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 241


 7940 0c06 1E       		.uleb128 0x1e
 7941 0c07 01       		.uleb128 0x1
 7942 0c08 50       		.byte	0x50
 7943 0c09 03       		.uleb128 0x3
 7944 0c0a 74       		.byte	0x74
 7945 0c0b E600     		.sleb128 102
 7946 0c0d 1E       		.uleb128 0x1e
 7947 0c0e 01       		.uleb128 0x1
 7948 0c0f 51       		.byte	0x51
 7949 0c10 05       		.uleb128 0x5
 7950 0c11 03       		.byte	0x3
 7951 0c12 10000000 		.4byte	.LC1
 7952 0c16 1E       		.uleb128 0x1e
 7953 0c17 01       		.uleb128 0x1
 7954 0c18 52       		.byte	0x52
 7955 0c19 01       		.uleb128 0x1
 7956 0c1a 33       		.byte	0x33
 7957 0c1b 00       		.byte	0
 7958 0c1c 1F       		.uleb128 0x1f
 7959 0c1d 4E000000 		.4byte	.LVL183
 7960 0c21 18060000 		.4byte	0x618
 7961 0c25 1E       		.uleb128 0x1e
 7962 0c26 01       		.uleb128 0x1
 7963 0c27 50       		.byte	0x50
 7964 0c28 03       		.uleb128 0x3
 7965 0c29 74       		.byte	0x74
 7966 0c2a 8201     		.sleb128 130
 7967 0c2c 1E       		.uleb128 0x1e
 7968 0c2d 01       		.uleb128 0x1
 7969 0c2e 51       		.byte	0x51
 7970 0c2f 05       		.uleb128 0x5
 7971 0c30 03       		.byte	0x3
 7972 0c31 14000000 		.4byte	.LC2
 7973 0c35 1E       		.uleb128 0x1e
 7974 0c36 01       		.uleb128 0x1
 7975 0c37 52       		.byte	0x52
 7976 0c38 01       		.uleb128 0x1
 7977 0c39 35       		.byte	0x35
 7978 0c3a 00       		.byte	0
 7979 0c3b 00       		.byte	0
 7980 0c3c 13       		.uleb128 0x13
 7981 0c3d AB040000 		.4byte	.LASF105
 7982 0c41 01       		.byte	0x1
 7983 0c42 F40C     		.2byte	0xcf4
 7984 0c44 97000000 		.4byte	0x97
 7985 0c48 00000000 		.4byte	.LFB33
 7986 0c4c 6C000000 		.4byte	.LFE33-.LFB33
 7987 0c50 01       		.uleb128 0x1
 7988 0c51 9C       		.byte	0x9c
 7989 0c52 F70C0000 		.4byte	0xcf7
 7990 0c56 14       		.uleb128 0x14
 7991 0c57 667300   		.ascii	"fs\000"
 7992 0c5a 01       		.byte	0x1
 7993 0c5b F50C     		.2byte	0xcf5
 7994 0c5d 3E020000 		.4byte	0x23e
 7995 0c61 F50B0000 		.4byte	.LLST61
 7996 0c65 1C       		.uleb128 0x1c
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 242


 7997 0c66 B0000000 		.4byte	.LASF106
 7998 0c6a 01       		.byte	0x1
 7999 0c6b F60C     		.2byte	0xcf6
 8000 0c6d 97000000 		.4byte	0x97
 8001 0c71 130C0000 		.4byte	.LLST62
 8002 0c75 15       		.uleb128 0x15
 8003 0c76 666D7400 		.ascii	"fmt\000"
 8004 0c7a 01       		.byte	0x1
 8005 0c7b F90C     		.2byte	0xcf9
 8006 0c7d 97000000 		.4byte	0x97
 8007 0c81 310C0000 		.4byte	.LLST63
 8008 0c85 15       		.uleb128 0x15
 8009 0c86 6900     		.ascii	"i\000"
 8010 0c88 01       		.byte	0x1
 8011 0c89 F90C     		.2byte	0xcf9
 8012 0c8b 97000000 		.4byte	0x97
 8013 0c8f 5A0C0000 		.4byte	.LLST64
 8014 0c93 21       		.uleb128 0x21
 8015 0c94 94030000 		.4byte	.LASF107
 8016 0c98 01       		.byte	0x1
 8017 0c99 FA0C     		.2byte	0xcfa
 8018 0c9b F70C0000 		.4byte	0xcf7
 8019 0c9f 02       		.uleb128 0x2
 8020 0ca0 91       		.byte	0x91
 8021 0ca1 60       		.sleb128 -32
 8022 0ca2 1D       		.uleb128 0x1d
 8023 0ca3 0E000000 		.4byte	.LVL192
 8024 0ca7 900B0000 		.4byte	0xb90
 8025 0cab BB0C0000 		.4byte	0xcbb
 8026 0caf 1E       		.uleb128 0x1e
 8027 0cb0 01       		.uleb128 0x1
 8028 0cb1 50       		.byte	0x50
 8029 0cb2 02       		.uleb128 0x2
 8030 0cb3 76       		.byte	0x76
 8031 0cb4 00       		.sleb128 0
 8032 0cb5 1E       		.uleb128 0x1e
 8033 0cb6 01       		.uleb128 0x1
 8034 0cb7 51       		.byte	0x51
 8035 0cb8 01       		.uleb128 0x1
 8036 0cb9 30       		.byte	0x30
 8037 0cba 00       		.byte	0
 8038 0cbb 1D       		.uleb128 0x1d
 8039 0cbc 2A000000 		.4byte	.LVL194
 8040 0cc0 B0040000 		.4byte	0x4b0
 8041 0cc4 D70C0000 		.4byte	0xcd7
 8042 0cc8 1E       		.uleb128 0x1e
 8043 0cc9 01       		.uleb128 0x1
 8044 0cca 50       		.byte	0x50
 8045 0ccb 0A       		.uleb128 0xa
 8046 0ccc 74       		.byte	0x74
 8047 0ccd 00       		.sleb128 0
 8048 0cce 34       		.byte	0x34
 8049 0ccf 24       		.byte	0x24
 8050 0cd0 76       		.byte	0x76
 8051 0cd1 00       		.sleb128 0
 8052 0cd2 22       		.byte	0x22
 8053 0cd3 23       		.byte	0x23
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 243


 8054 0cd4 F603     		.uleb128 0x1f6
 8055 0cd6 00       		.byte	0
 8056 0cd7 1F       		.uleb128 0x1f
 8057 0cd8 58000000 		.4byte	.LVL201
 8058 0cdc 900B0000 		.4byte	0xb90
 8059 0ce0 1E       		.uleb128 0x1e
 8060 0ce1 01       		.uleb128 0x1
 8061 0ce2 50       		.byte	0x50
 8062 0ce3 02       		.uleb128 0x2
 8063 0ce4 76       		.byte	0x76
 8064 0ce5 00       		.sleb128 0
 8065 0ce6 1E       		.uleb128 0x1e
 8066 0ce7 01       		.uleb128 0x1
 8067 0ce8 51       		.byte	0x51
 8068 0ce9 0B       		.uleb128 0xb
 8069 0cea 74       		.byte	0x74
 8070 0ceb 00       		.sleb128 0
 8071 0cec 32       		.byte	0x32
 8072 0ced 24       		.byte	0x24
 8073 0cee 91       		.byte	0x91
 8074 0cef 00       		.sleb128 0
 8075 0cf0 22       		.byte	0x22
 8076 0cf1 08       		.byte	0x8
 8077 0cf2 20       		.byte	0x20
 8078 0cf3 1C       		.byte	0x1c
 8079 0cf4 06       		.byte	0x6
 8080 0cf5 00       		.byte	0
 8081 0cf6 00       		.byte	0
 8082 0cf7 08       		.uleb128 0x8
 8083 0cf8 B8000000 		.4byte	0xb8
 8084 0cfc 070D0000 		.4byte	0xd07
 8085 0d00 0D       		.uleb128 0xd
 8086 0d01 DD010000 		.4byte	0x1dd
 8087 0d05 03       		.byte	0x3
 8088 0d06 00       		.byte	0
 8089 0d07 13       		.uleb128 0x13
 8090 0d08 77040000 		.4byte	.LASF108
 8091 0d0c 01       		.byte	0x1
 8092 0d0d 2A0D     		.2byte	0xd2a
 8093 0d0f 29040000 		.4byte	0x429
 8094 0d13 00000000 		.4byte	.LFB34
 8095 0d17 BC020000 		.4byte	.LFE34-.LFB34
 8096 0d1b 01       		.uleb128 0x1
 8097 0d1c 9C       		.byte	0x9c
 8098 0d1d 9A0F0000 		.4byte	0xf9a
 8099 0d21 1C       		.uleb128 0x1c
 8100 0d22 67000000 		.4byte	.LASF99
 8101 0d26 01       		.byte	0x1
 8102 0d27 2B0D     		.2byte	0xd2b
 8103 0d29 C8090000 		.4byte	0x9c8
 8104 0d2d 830C0000 		.4byte	.LLST65
 8105 0d31 14       		.uleb128 0x14
 8106 0d32 72667300 		.ascii	"rfs\000"
 8107 0d36 01       		.byte	0x1
 8108 0d37 2C0D     		.2byte	0xd2c
 8109 0d39 A90A0000 		.4byte	0xaa9
 8110 0d3d A40C0000 		.4byte	.LLST66
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 244


 8111 0d41 1C       		.uleb128 0x1c
 8112 0d42 72020000 		.4byte	.LASF109
 8113 0d46 01       		.byte	0x1
 8114 0d47 2D0D     		.2byte	0xd2d
 8115 0d49 A2000000 		.4byte	0xa2
 8116 0d4d E90C0000 		.4byte	.LLST67
 8117 0d51 15       		.uleb128 0x15
 8118 0d52 766F6C00 		.ascii	"vol\000"
 8119 0d56 01       		.byte	0x1
 8120 0d57 300D     		.2byte	0xd30
 8121 0d59 73000000 		.4byte	0x73
 8122 0d5d 2E0D0000 		.4byte	.LLST68
 8123 0d61 22       		.uleb128 0x22
 8124 0d62 B5060000 		.4byte	.LASF40
 8125 0d66 01       		.byte	0x1
 8126 0d67 310D     		.2byte	0xd31
 8127 0d69 35040000 		.4byte	0x435
 8128 0d6d 780D0000 		.4byte	.LLST69
 8129 0d71 22       		.uleb128 0x22
 8130 0d72 C7020000 		.4byte	.LASF110
 8131 0d76 01       		.byte	0x1
 8132 0d77 320D     		.2byte	0xd32
 8133 0d79 E0000000 		.4byte	0xe0
 8134 0d7d C20D0000 		.4byte	.LLST70
 8135 0d81 22       		.uleb128 0x22
 8136 0d82 26070000 		.4byte	.LASF111
 8137 0d86 01       		.byte	0x1
 8138 0d87 330D     		.2byte	0xd33
 8139 0d89 B8000000 		.4byte	0xb8
 8140 0d8d E00D0000 		.4byte	.LLST71
 8141 0d91 22       		.uleb128 0x22
 8142 0d92 CD020000 		.4byte	.LASF112
 8143 0d96 01       		.byte	0x1
 8144 0d97 330D     		.2byte	0xd33
 8145 0d99 B8000000 		.4byte	0xb8
 8146 0d9d 1F0E0000 		.4byte	.LLST72
 8147 0da1 22       		.uleb128 0x22
 8148 0da2 A4000000 		.4byte	.LASF113
 8149 0da6 01       		.byte	0x1
 8150 0da7 330D     		.2byte	0xd33
 8151 0da9 B8000000 		.4byte	0xb8
 8152 0dad 7C0E0000 		.4byte	.LLST73
 8153 0db1 22       		.uleb128 0x22
 8154 0db2 B9030000 		.4byte	.LASF114
 8155 0db6 01       		.byte	0x1
 8156 0db7 330D     		.2byte	0xd33
 8157 0db9 B8000000 		.4byte	0xb8
 8158 0dbd D10E0000 		.4byte	.LLST74
 8159 0dc1 22       		.uleb128 0x22
 8160 0dc2 2E030000 		.4byte	.LASF115
 8161 0dc6 01       		.byte	0x1
 8162 0dc7 330D     		.2byte	0xd33
 8163 0dc9 B8000000 		.4byte	0xb8
 8164 0dcd 430F0000 		.4byte	.LLST75
 8165 0dd1 22       		.uleb128 0x22
 8166 0dd2 AB000000 		.4byte	.LASF116
 8167 0dd6 01       		.byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 245


 8168 0dd7 340D     		.2byte	0xd34
 8169 0dd9 AD000000 		.4byte	0xad
 8170 0ddd 7D0F0000 		.4byte	.LLST76
 8171 0de1 15       		.uleb128 0x15
 8172 0de2 667300   		.ascii	"fs\000"
 8173 0de5 01       		.byte	0x1
 8174 0de6 350D     		.2byte	0xd35
 8175 0de8 3E020000 		.4byte	0x23e
 8176 0dec D20F0000 		.4byte	.LLST77
 8177 0df0 15       		.uleb128 0x15
 8178 0df1 666D7400 		.ascii	"fmt\000"
 8179 0df5 01       		.byte	0x1
 8180 0df6 360D     		.2byte	0xd36
 8181 0df8 97000000 		.4byte	0x97
 8182 0dfc F00F0000 		.4byte	.LLST78
 8183 0e00 1D       		.uleb128 0x1d
 8184 0e01 10000000 		.4byte	.LVL206
 8185 0e05 D9090000 		.4byte	0x9d9
 8186 0e09 150E0000 		.4byte	0xe15
 8187 0e0d 1E       		.uleb128 0x1e
 8188 0e0e 01       		.uleb128 0x1
 8189 0e0f 50       		.byte	0x50
 8190 0e10 03       		.uleb128 0x3
 8191 0e11 F3       		.byte	0xf3
 8192 0e12 01       		.uleb128 0x1
 8193 0e13 50       		.byte	0x50
 8194 0e14 00       		.byte	0
 8195 0e15 20       		.uleb128 0x20
 8196 0e16 32000000 		.4byte	.LVL210
 8197 0e1a 262D0000 		.4byte	0x2d26
 8198 0e1e 1D       		.uleb128 0x1d
 8199 0e1f 58000000 		.4byte	.LVL213
 8200 0e23 472D0000 		.4byte	0x2d47
 8201 0e27 320E0000 		.4byte	0xe32
 8202 0e2b 1E       		.uleb128 0x1e
 8203 0e2c 01       		.uleb128 0x1
 8204 0e2d 50       		.byte	0x50
 8205 0e2e 02       		.uleb128 0x2
 8206 0e2f 75       		.byte	0x75
 8207 0e30 00       		.sleb128 0
 8208 0e31 00       		.byte	0
 8209 0e32 1D       		.uleb128 0x1d
 8210 0e33 72000000 		.4byte	.LVL215
 8211 0e37 3C0C0000 		.4byte	0xc3c
 8212 0e3b 4B0E0000 		.4byte	0xe4b
 8213 0e3f 1E       		.uleb128 0x1e
 8214 0e40 01       		.uleb128 0x1
 8215 0e41 50       		.byte	0x50
 8216 0e42 02       		.uleb128 0x2
 8217 0e43 74       		.byte	0x74
 8218 0e44 00       		.sleb128 0
 8219 0e45 1E       		.uleb128 0x1e
 8220 0e46 01       		.uleb128 0x1
 8221 0e47 51       		.byte	0x51
 8222 0e48 01       		.uleb128 0x1
 8223 0e49 30       		.byte	0x30
 8224 0e4a 00       		.byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 246


 8225 0e4b 1D       		.uleb128 0x1d
 8226 0e4c 88000000 		.4byte	.LVL218
 8227 0e50 6B040000 		.4byte	0x46b
 8228 0e54 5F0E0000 		.4byte	0xe5f
 8229 0e58 1E       		.uleb128 0x1e
 8230 0e59 01       		.uleb128 0x1
 8231 0e5a 50       		.byte	0x50
 8232 0e5b 02       		.uleb128 0x2
 8233 0e5c 74       		.byte	0x74
 8234 0e5d 3B       		.sleb128 59
 8235 0e5e 00       		.byte	0
 8236 0e5f 1D       		.uleb128 0x1d
 8237 0e60 98000000 		.4byte	.LVL219
 8238 0e64 6B040000 		.4byte	0x46b
 8239 0e68 740E0000 		.4byte	0xe74
 8240 0e6c 1E       		.uleb128 0x1e
 8241 0e6d 01       		.uleb128 0x1
 8242 0e6e 50       		.byte	0x50
 8243 0e6f 03       		.uleb128 0x3
 8244 0e70 74       		.byte	0x74
 8245 0e71 C600     		.sleb128 70
 8246 0e73 00       		.byte	0
 8247 0e74 1D       		.uleb128 0x1d
 8248 0e75 A4000000 		.4byte	.LVL222
 8249 0e79 B0040000 		.4byte	0x4b0
 8250 0e7d 890E0000 		.4byte	0xe89
 8251 0e81 1E       		.uleb128 0x1e
 8252 0e82 01       		.uleb128 0x1
 8253 0e83 50       		.byte	0x50
 8254 0e84 03       		.uleb128 0x3
 8255 0e85 74       		.byte	0x74
 8256 0e86 D400     		.sleb128 84
 8257 0e88 00       		.byte	0
 8258 0e89 1D       		.uleb128 0x1d
 8259 0e8a DE000000 		.4byte	.LVL226
 8260 0e8e 6B040000 		.4byte	0x46b
 8261 0e92 9E0E0000 		.4byte	0xe9e
 8262 0e96 1E       		.uleb128 0x1e
 8263 0e97 01       		.uleb128 0x1
 8264 0e98 50       		.byte	0x50
 8265 0e99 03       		.uleb128 0x3
 8266 0e9a 74       		.byte	0x74
 8267 0e9b C100     		.sleb128 65
 8268 0e9d 00       		.byte	0
 8269 0e9e 1D       		.uleb128 0x1d
 8270 0e9f F2000000 		.4byte	.LVL227
 8271 0ea3 6B040000 		.4byte	0x46b
 8272 0ea7 B30E0000 		.4byte	0xeb3
 8273 0eab 1E       		.uleb128 0x1e
 8274 0eac 01       		.uleb128 0x1
 8275 0ead 50       		.byte	0x50
 8276 0eae 03       		.uleb128 0x3
 8277 0eaf 74       		.byte	0x74
 8278 0eb0 C300     		.sleb128 67
 8279 0eb2 00       		.byte	0
 8280 0eb3 1D       		.uleb128 0x1d
 8281 0eb4 FE000000 		.4byte	.LVL230
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 247


 8282 0eb8 B0040000 		.4byte	0x4b0
 8283 0ebc C80E0000 		.4byte	0xec8
 8284 0ec0 1E       		.uleb128 0x1e
 8285 0ec1 01       		.uleb128 0x1
 8286 0ec2 50       		.byte	0x50
 8287 0ec3 03       		.uleb128 0x3
 8288 0ec4 74       		.byte	0x74
 8289 0ec5 D000     		.sleb128 80
 8290 0ec7 00       		.byte	0
 8291 0ec8 1D       		.uleb128 0x1d
 8292 0ec9 08010000 		.4byte	.LVL233
 8293 0ecd 6B040000 		.4byte	0x46b
 8294 0ed1 DC0E0000 		.4byte	0xedc
 8295 0ed5 1E       		.uleb128 0x1e
 8296 0ed6 01       		.uleb128 0x1
 8297 0ed7 50       		.byte	0x50
 8298 0ed8 02       		.uleb128 0x2
 8299 0ed9 74       		.byte	0x74
 8300 0eda 3E       		.sleb128 62
 8301 0edb 00       		.byte	0
 8302 0edc 1D       		.uleb128 0x1d
 8303 0edd 6A010000 		.4byte	.LVL244
 8304 0ee1 6B040000 		.4byte	0x46b
 8305 0ee5 F10E0000 		.4byte	0xef1
 8306 0ee9 1E       		.uleb128 0x1e
 8307 0eea 01       		.uleb128 0x1
 8308 0eeb 50       		.byte	0x50
 8309 0eec 03       		.uleb128 0x3
 8310 0eed 74       		.byte	0x74
 8311 0eee DA00     		.sleb128 90
 8312 0ef0 00       		.byte	0
 8313 0ef1 1D       		.uleb128 0x1d
 8314 0ef2 80010000 		.4byte	.LVL245
 8315 0ef6 B0040000 		.4byte	0x4b0
 8316 0efa 060F0000 		.4byte	0xf06
 8317 0efe 1E       		.uleb128 0x1e
 8318 0eff 01       		.uleb128 0x1
 8319 0f00 50       		.byte	0x50
 8320 0f01 03       		.uleb128 0x3
 8321 0f02 74       		.byte	0x74
 8322 0f03 DC00     		.sleb128 92
 8323 0f05 00       		.byte	0
 8324 0f06 1D       		.uleb128 0x1d
 8325 0f07 C8010000 		.4byte	.LVL253
 8326 0f0b 6B040000 		.4byte	0x46b
 8327 0f0f 1B0F0000 		.4byte	0xf1b
 8328 0f13 1E       		.uleb128 0x1e
 8329 0f14 01       		.uleb128 0x1
 8330 0f15 50       		.byte	0x50
 8331 0f16 03       		.uleb128 0x3
 8332 0f17 74       		.byte	0x74
 8333 0f18 E000     		.sleb128 96
 8334 0f1a 00       		.byte	0
 8335 0f1b 1D       		.uleb128 0x1d
 8336 0f1c D4010000 		.4byte	.LVL254
 8337 0f20 170B0000 		.4byte	0xb17
 8338 0f24 350F0000 		.4byte	0xf35
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 248


 8339 0f28 1E       		.uleb128 0x1e
 8340 0f29 01       		.uleb128 0x1
 8341 0f2a 50       		.byte	0x50
 8342 0f2b 02       		.uleb128 0x2
 8343 0f2c 74       		.byte	0x74
 8344 0f2d 00       		.sleb128 0
 8345 0f2e 1E       		.uleb128 0x1e
 8346 0f2f 01       		.uleb128 0x1
 8347 0f30 51       		.byte	0x51
 8348 0f31 02       		.uleb128 0x2
 8349 0f32 76       		.byte	0x76
 8350 0f33 01       		.sleb128 1
 8351 0f34 00       		.byte	0
 8352 0f35 1D       		.uleb128 0x1d
 8353 0f36 E2010000 		.4byte	.LVL255
 8354 0f3a 6B040000 		.4byte	0x46b
 8355 0f3e 4A0F0000 		.4byte	0xf4a
 8356 0f42 1E       		.uleb128 0x1e
 8357 0f43 01       		.uleb128 0x1
 8358 0f44 50       		.byte	0x50
 8359 0f45 03       		.uleb128 0x3
 8360 0f46 74       		.byte	0x74
 8361 0f47 AE04     		.sleb128 558
 8362 0f49 00       		.byte	0
 8363 0f4a 1D       		.uleb128 0x1d
 8364 0f4b F2010000 		.4byte	.LVL256
 8365 0f4f B0040000 		.4byte	0x4b0
 8366 0f53 5E0F0000 		.4byte	0xf5e
 8367 0f57 1E       		.uleb128 0x1e
 8368 0f58 01       		.uleb128 0x1
 8369 0f59 50       		.byte	0x50
 8370 0f5a 02       		.uleb128 0x2
 8371 0f5b 74       		.byte	0x74
 8372 0f5c 30       		.sleb128 48
 8373 0f5d 00       		.byte	0
 8374 0f5e 1D       		.uleb128 0x1d
 8375 0f5f 00020000 		.4byte	.LVL257
 8376 0f63 B0040000 		.4byte	0x4b0
 8377 0f67 730F0000 		.4byte	0xf73
 8378 0f6b 1E       		.uleb128 0x1e
 8379 0f6c 01       		.uleb128 0x1
 8380 0f6d 50       		.byte	0x50
 8381 0f6e 03       		.uleb128 0x3
 8382 0f6f 74       		.byte	0x74
 8383 0f70 9404     		.sleb128 532
 8384 0f72 00       		.byte	0
 8385 0f73 1D       		.uleb128 0x1d
 8386 0f74 0E020000 		.4byte	.LVL258
 8387 0f78 B0040000 		.4byte	0x4b0
 8388 0f7c 880F0000 		.4byte	0xf88
 8389 0f80 1E       		.uleb128 0x1e
 8390 0f81 01       		.uleb128 0x1
 8391 0f82 50       		.byte	0x50
 8392 0f83 03       		.uleb128 0x3
 8393 0f84 74       		.byte	0x74
 8394 0f85 9804     		.sleb128 536
 8395 0f87 00       		.byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 249


 8396 0f88 1F       		.uleb128 0x1f
 8397 0f89 18020000 		.4byte	.LVL259
 8398 0f8d B0040000 		.4byte	0x4b0
 8399 0f91 1E       		.uleb128 0x1e
 8400 0f92 01       		.uleb128 0x1
 8401 0f93 50       		.byte	0x50
 8402 0f94 03       		.uleb128 0x3
 8403 0f95 74       		.byte	0x74
 8404 0f96 9C04     		.sleb128 540
 8405 0f98 00       		.byte	0
 8406 0f99 00       		.byte	0
 8407 0f9a 13       		.uleb128 0x13
 8408 0f9b 21000000 		.4byte	.LASF117
 8409 0f9f 01       		.byte	0x1
 8410 0fa0 E804     		.2byte	0x4e8
 8411 0fa2 29040000 		.4byte	0x429
 8412 0fa6 00000000 		.4byte	.LFB15
 8413 0faa 04010000 		.4byte	.LFE15-.LFB15
 8414 0fae 01       		.uleb128 0x1
 8415 0faf 9C       		.byte	0x9c
 8416 0fb0 AA100000 		.4byte	0x10aa
 8417 0fb4 14       		.uleb128 0x14
 8418 0fb5 667300   		.ascii	"fs\000"
 8419 0fb8 01       		.byte	0x1
 8420 0fb9 E904     		.2byte	0x4e9
 8421 0fbb 3E020000 		.4byte	0x23e
 8422 0fbf 3B100000 		.4byte	.LLST79
 8423 0fc3 1C       		.uleb128 0x1c
 8424 0fc4 F9020000 		.4byte	.LASF94
 8425 0fc8 01       		.byte	0x1
 8426 0fc9 EA04     		.2byte	0x4ea
 8427 0fcb B8000000 		.4byte	0xb8
 8428 0fcf 9E100000 		.4byte	.LLST80
 8429 0fd3 14       		.uleb128 0x14
 8430 0fd4 76616C00 		.ascii	"val\000"
 8431 0fd8 01       		.byte	0x1
 8432 0fd9 EB04     		.2byte	0x4eb
 8433 0fdb B8000000 		.4byte	0xb8
 8434 0fdf 1D110000 		.4byte	.LLST81
 8435 0fe3 15       		.uleb128 0x15
 8436 0fe4 626300   		.ascii	"bc\000"
 8437 0fe7 01       		.byte	0x1
 8438 0fe8 EE04     		.2byte	0x4ee
 8439 0fea 97000000 		.4byte	0x97
 8440 0fee 9B110000 		.4byte	.LLST82
 8441 0ff2 15       		.uleb128 0x15
 8442 0ff3 7000     		.ascii	"p\000"
 8443 0ff5 01       		.byte	0x1
 8444 0ff6 EF04     		.2byte	0x4ef
 8445 0ff8 C5020000 		.4byte	0x2c5
 8446 0ffc DA110000 		.4byte	.LLST83
 8447 1000 15       		.uleb128 0x15
 8448 1001 72657300 		.ascii	"res\000"
 8449 1005 01       		.byte	0x1
 8450 1006 F004     		.2byte	0x4f0
 8451 1008 29040000 		.4byte	0x429
 8452 100c 02120000 		.4byte	.LLST84
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 250


 8453 1010 1D       		.uleb128 0x1d
 8454 1011 30000000 		.4byte	.LVL301
 8455 1015 170B0000 		.4byte	0xb17
 8456 1019 24100000 		.4byte	0x1024
 8457 101d 1E       		.uleb128 0x1e
 8458 101e 01       		.uleb128 0x1
 8459 101f 50       		.byte	0x50
 8460 1020 02       		.uleb128 0x2
 8461 1021 76       		.byte	0x76
 8462 1022 00       		.sleb128 0
 8463 1023 00       		.byte	0
 8464 1024 1D       		.uleb128 0x1d
 8465 1025 6E000000 		.4byte	.LVL306
 8466 1029 170B0000 		.4byte	0xb17
 8467 102d 38100000 		.4byte	0x1038
 8468 1031 1E       		.uleb128 0x1e
 8469 1032 01       		.uleb128 0x1
 8470 1033 50       		.byte	0x50
 8471 1034 02       		.uleb128 0x2
 8472 1035 76       		.byte	0x76
 8473 1036 00       		.sleb128 0
 8474 1037 00       		.byte	0
 8475 1038 1D       		.uleb128 0x1d
 8476 1039 A2000000 		.4byte	.LVL310
 8477 103d 170B0000 		.4byte	0xb17
 8478 1041 4C100000 		.4byte	0x104c
 8479 1045 1E       		.uleb128 0x1e
 8480 1046 01       		.uleb128 0x1
 8481 1047 50       		.byte	0x50
 8482 1048 02       		.uleb128 0x2
 8483 1049 76       		.byte	0x76
 8484 104a 00       		.sleb128 0
 8485 104b 00       		.byte	0
 8486 104c 1D       		.uleb128 0x1d
 8487 104d B8000000 		.4byte	.LVL312
 8488 1051 EA040000 		.4byte	0x4ea
 8489 1055 71100000 		.4byte	0x1071
 8490 1059 1E       		.uleb128 0x1e
 8491 105a 01       		.uleb128 0x1
 8492 105b 50       		.byte	0x50
 8493 105c 0D       		.uleb128 0xd
 8494 105d 74       		.byte	0x74
 8495 105e 00       		.sleb128 0
 8496 105f 31       		.byte	0x31
 8497 1060 24       		.byte	0x24
 8498 1061 0A       		.byte	0xa
 8499 1062 FE01     		.2byte	0x1fe
 8500 1064 1A       		.byte	0x1a
 8501 1065 76       		.byte	0x76
 8502 1066 00       		.sleb128 0
 8503 1067 22       		.byte	0x22
 8504 1068 23       		.byte	0x23
 8505 1069 30       		.uleb128 0x30
 8506 106a 1E       		.uleb128 0x1e
 8507 106b 01       		.uleb128 0x1
 8508 106c 51       		.byte	0x51
 8509 106d 02       		.uleb128 0x2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 251


 8510 106e 77       		.byte	0x77
 8511 106f 00       		.sleb128 0
 8512 1070 00       		.byte	0
 8513 1071 1D       		.uleb128 0x1d
 8514 1072 C8000000 		.4byte	.LVL315
 8515 1076 170B0000 		.4byte	0xb17
 8516 107a 85100000 		.4byte	0x1085
 8517 107e 1E       		.uleb128 0x1e
 8518 107f 01       		.uleb128 0x1
 8519 1080 50       		.byte	0x50
 8520 1081 02       		.uleb128 0x2
 8521 1082 76       		.byte	0x76
 8522 1083 00       		.sleb128 0
 8523 1084 00       		.byte	0
 8524 1085 1D       		.uleb128 0x1d
 8525 1086 E2000000 		.4byte	.LVL319
 8526 108a B0040000 		.4byte	0x4b0
 8527 108e 99100000 		.4byte	0x1099
 8528 1092 1E       		.uleb128 0x1e
 8529 1093 01       		.uleb128 0x1
 8530 1094 50       		.byte	0x50
 8531 1095 02       		.uleb128 0x2
 8532 1096 74       		.byte	0x74
 8533 1097 00       		.sleb128 0
 8534 1098 00       		.byte	0
 8535 1099 1F       		.uleb128 0x1f
 8536 109a EE000000 		.4byte	.LVL322
 8537 109e 21050000 		.4byte	0x521
 8538 10a2 1E       		.uleb128 0x1e
 8539 10a3 01       		.uleb128 0x1
 8540 10a4 50       		.byte	0x50
 8541 10a5 02       		.uleb128 0x2
 8542 10a6 74       		.byte	0x74
 8543 10a7 00       		.sleb128 0
 8544 10a8 00       		.byte	0
 8545 10a9 00       		.byte	0
 8546 10aa 13       		.uleb128 0x13
 8547 10ab 5A040000 		.4byte	.LASF118
 8548 10af 01       		.byte	0x1
 8549 10b0 9B04     		.2byte	0x49b
 8550 10b2 B8000000 		.4byte	0xb8
 8551 10b6 00000000 		.4byte	.LFB14
 8552 10ba D4000000 		.4byte	.LFE14-.LFB14
 8553 10be 01       		.uleb128 0x1
 8554 10bf 9C       		.byte	0x9c
 8555 10c0 A8110000 		.4byte	0x11a8
 8556 10c4 14       		.uleb128 0x14
 8557 10c5 6F626A00 		.ascii	"obj\000"
 8558 10c9 01       		.byte	0x1
 8559 10ca 9C04     		.2byte	0x49c
 8560 10cc A30A0000 		.4byte	0xaa3
 8561 10d0 71120000 		.4byte	.LLST85
 8562 10d4 1C       		.uleb128 0x1c
 8563 10d5 F9020000 		.4byte	.LASF94
 8564 10d9 01       		.byte	0x1
 8565 10da 9D04     		.2byte	0x49d
 8566 10dc B8000000 		.4byte	0xb8
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 252


 8567 10e0 0F130000 		.4byte	.LLST86
 8568 10e4 15       		.uleb128 0x15
 8569 10e5 776300   		.ascii	"wc\000"
 8570 10e8 01       		.byte	0x1
 8571 10e9 A004     		.2byte	0x4a0
 8572 10eb 97000000 		.4byte	0x97
 8573 10ef 6F130000 		.4byte	.LLST87
 8574 10f3 15       		.uleb128 0x15
 8575 10f4 626300   		.ascii	"bc\000"
 8576 10f7 01       		.byte	0x1
 8577 10f8 A004     		.2byte	0x4a0
 8578 10fa 97000000 		.4byte	0x97
 8579 10fe D1130000 		.4byte	.LLST88
 8580 1102 15       		.uleb128 0x15
 8581 1103 76616C00 		.ascii	"val\000"
 8582 1107 01       		.byte	0x1
 8583 1108 A104     		.2byte	0x4a1
 8584 110a B8000000 		.4byte	0xb8
 8585 110e 10140000 		.4byte	.LLST89
 8586 1112 1B       		.uleb128 0x1b
 8587 1113 667300   		.ascii	"fs\000"
 8588 1116 01       		.byte	0x1
 8589 1117 A204     		.2byte	0x4a2
 8590 1119 3E020000 		.4byte	0x23e
 8591 111d 01       		.uleb128 0x1
 8592 111e 56       		.byte	0x56
 8593 111f 1D       		.uleb128 0x1d
 8594 1120 2E000000 		.4byte	.LVL332
 8595 1124 170B0000 		.4byte	0xb17
 8596 1128 33110000 		.4byte	0x1133
 8597 112c 1E       		.uleb128 0x1e
 8598 112d 01       		.uleb128 0x1
 8599 112e 50       		.byte	0x50
 8600 112f 02       		.uleb128 0x2
 8601 1130 76       		.byte	0x76
 8602 1131 00       		.sleb128 0
 8603 1132 00       		.byte	0
 8604 1133 1D       		.uleb128 0x1d
 8605 1134 4A000000 		.4byte	.LVL335
 8606 1138 170B0000 		.4byte	0xb17
 8607 113c 47110000 		.4byte	0x1147
 8608 1140 1E       		.uleb128 0x1e
 8609 1141 01       		.uleb128 0x1
 8610 1142 50       		.byte	0x50
 8611 1143 02       		.uleb128 0x2
 8612 1144 76       		.byte	0x76
 8613 1145 00       		.sleb128 0
 8614 1146 00       		.byte	0
 8615 1147 1D       		.uleb128 0x1d
 8616 1148 78000000 		.4byte	.LVL343
 8617 114c 170B0000 		.4byte	0xb17
 8618 1150 5B110000 		.4byte	0x115b
 8619 1154 1E       		.uleb128 0x1e
 8620 1155 01       		.uleb128 0x1
 8621 1156 50       		.byte	0x50
 8622 1157 02       		.uleb128 0x2
 8623 1158 76       		.byte	0x76
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 253


 8624 1159 00       		.sleb128 0
 8625 115a 00       		.byte	0
 8626 115b 1D       		.uleb128 0x1d
 8627 115c 8A000000 		.4byte	.LVL344
 8628 1160 6B040000 		.4byte	0x46b
 8629 1164 7A110000 		.4byte	0x117a
 8630 1168 1E       		.uleb128 0x1e
 8631 1169 01       		.uleb128 0x1
 8632 116a 50       		.byte	0x50
 8633 116b 0D       		.uleb128 0xd
 8634 116c 74       		.byte	0x74
 8635 116d 00       		.sleb128 0
 8636 116e 31       		.byte	0x31
 8637 116f 24       		.byte	0x24
 8638 1170 0A       		.byte	0xa
 8639 1171 FE01     		.2byte	0x1fe
 8640 1173 1A       		.byte	0x1a
 8641 1174 76       		.byte	0x76
 8642 1175 00       		.sleb128 0
 8643 1176 22       		.byte	0x22
 8644 1177 23       		.byte	0x23
 8645 1178 30       		.uleb128 0x30
 8646 1179 00       		.byte	0
 8647 117a 1D       		.uleb128 0x1d
 8648 117b 98000000 		.4byte	.LVL348
 8649 117f 170B0000 		.4byte	0xb17
 8650 1183 8E110000 		.4byte	0x118e
 8651 1187 1E       		.uleb128 0x1e
 8652 1188 01       		.uleb128 0x1
 8653 1189 50       		.byte	0x50
 8654 118a 02       		.uleb128 0x2
 8655 118b 76       		.byte	0x76
 8656 118c 00       		.sleb128 0
 8657 118d 00       		.byte	0
 8658 118e 1F       		.uleb128 0x1f
 8659 118f AA000000 		.4byte	.LVL349
 8660 1193 B0040000 		.4byte	0x4b0
 8661 1197 1E       		.uleb128 0x1e
 8662 1198 01       		.uleb128 0x1
 8663 1199 50       		.byte	0x50
 8664 119a 0B       		.uleb128 0xb
 8665 119b 74       		.byte	0x74
 8666 119c 00       		.sleb128 0
 8667 119d 32       		.byte	0x32
 8668 119e 24       		.byte	0x24
 8669 119f 0A       		.byte	0xa
 8670 11a0 FC01     		.2byte	0x1fc
 8671 11a2 1A       		.byte	0x1a
 8672 11a3 76       		.byte	0x76
 8673 11a4 30       		.sleb128 48
 8674 11a5 22       		.byte	0x22
 8675 11a6 00       		.byte	0
 8676 11a7 00       		.byte	0
 8677 11a8 13       		.uleb128 0x13
 8678 11a9 81020000 		.4byte	.LASF119
 8679 11ad 01       		.byte	0x1
 8680 11ae B106     		.2byte	0x6b1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 254


 8681 11b0 29040000 		.4byte	0x429
 8682 11b4 00000000 		.4byte	.LFB19
 8683 11b8 B2000000 		.4byte	.LFE19-.LFB19
 8684 11bc 01       		.uleb128 0x1
 8685 11bd 9C       		.byte	0x9c
 8686 11be 3F120000 		.4byte	0x123f
 8687 11c2 14       		.uleb128 0x14
 8688 11c3 647000   		.ascii	"dp\000"
 8689 11c6 01       		.byte	0x1
 8690 11c7 B206     		.2byte	0x6b2
 8691 11c9 BC080000 		.4byte	0x8bc
 8692 11cd 60140000 		.4byte	.LLST90
 8693 11d1 14       		.uleb128 0x14
 8694 11d2 6F667300 		.ascii	"ofs\000"
 8695 11d6 01       		.byte	0x1
 8696 11d7 B306     		.2byte	0x6b3
 8697 11d9 B8000000 		.4byte	0xb8
 8698 11dd C3140000 		.4byte	.LLST91
 8699 11e1 15       		.uleb128 0x15
 8700 11e2 63737A00 		.ascii	"csz\000"
 8701 11e6 01       		.byte	0x1
 8702 11e7 B606     		.2byte	0x6b6
 8703 11e9 B8000000 		.4byte	0xb8
 8704 11ed F7140000 		.4byte	.LLST92
 8705 11f1 22       		.uleb128 0x22
 8706 11f2 F9020000 		.4byte	.LASF94
 8707 11f6 01       		.byte	0x1
 8708 11f7 B606     		.2byte	0x6b6
 8709 11f9 B8000000 		.4byte	0xb8
 8710 11fd 15150000 		.4byte	.LLST93
 8711 1201 1B       		.uleb128 0x1b
 8712 1202 667300   		.ascii	"fs\000"
 8713 1205 01       		.byte	0x1
 8714 1206 B706     		.2byte	0x6b7
 8715 1208 3E020000 		.4byte	0x23e
 8716 120c 01       		.uleb128 0x1
 8717 120d 57       		.byte	0x57
 8718 120e 1D       		.uleb128 0x1d
 8719 120f 46000000 		.4byte	.LVL368
 8720 1213 AA100000 		.4byte	0x10aa
 8721 1217 28120000 		.4byte	0x1228
 8722 121b 1E       		.uleb128 0x1e
 8723 121c 01       		.uleb128 0x1
 8724 121d 50       		.byte	0x50
 8725 121e 02       		.uleb128 0x2
 8726 121f 76       		.byte	0x76
 8727 1220 00       		.sleb128 0
 8728 1221 1E       		.uleb128 0x1e
 8729 1222 01       		.uleb128 0x1
 8730 1223 51       		.byte	0x51
 8731 1224 02       		.uleb128 0x2
 8732 1225 75       		.byte	0x75
 8733 1226 00       		.sleb128 0
 8734 1227 00       		.byte	0
 8735 1228 1F       		.uleb128 0x1f
 8736 1229 68000000 		.4byte	.LVL371
 8737 122d 21070000 		.4byte	0x721
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 255


 8738 1231 1E       		.uleb128 0x1e
 8739 1232 01       		.uleb128 0x1
 8740 1233 50       		.byte	0x50
 8741 1234 02       		.uleb128 0x2
 8742 1235 77       		.byte	0x77
 8743 1236 00       		.sleb128 0
 8744 1237 1E       		.uleb128 0x1e
 8745 1238 01       		.uleb128 0x1
 8746 1239 51       		.byte	0x51
 8747 123a 02       		.uleb128 0x2
 8748 123b 75       		.byte	0x75
 8749 123c 00       		.sleb128 0
 8750 123d 00       		.byte	0
 8751 123e 00       		.byte	0
 8752 123f 13       		.uleb128 0x13
 8753 1240 62040000 		.4byte	.LASF120
 8754 1244 01       		.byte	0x1
 8755 1245 0506     		.2byte	0x605
 8756 1247 B8000000 		.4byte	0xb8
 8757 124b 00000000 		.4byte	.LFB17
 8758 124f 14010000 		.4byte	.LFE17-.LFB17
 8759 1253 01       		.uleb128 0x1
 8760 1254 9C       		.byte	0x9c
 8761 1255 3F130000 		.4byte	0x133f
 8762 1259 14       		.uleb128 0x14
 8763 125a 6F626A00 		.ascii	"obj\000"
 8764 125e 01       		.byte	0x1
 8765 125f 0606     		.2byte	0x606
 8766 1261 A30A0000 		.4byte	0xaa3
 8767 1265 8B150000 		.4byte	.LLST94
 8768 1269 1C       		.uleb128 0x1c
 8769 126a F9020000 		.4byte	.LASF94
 8770 126e 01       		.byte	0x1
 8771 126f 0706     		.2byte	0x607
 8772 1271 B8000000 		.4byte	0xb8
 8773 1275 BF150000 		.4byte	.LLST95
 8774 1279 15       		.uleb128 0x15
 8775 127a 637300   		.ascii	"cs\000"
 8776 127d 01       		.byte	0x1
 8777 127e 0A06     		.2byte	0x60a
 8778 1280 B8000000 		.4byte	0xb8
 8779 1284 F3150000 		.4byte	.LLST96
 8780 1288 15       		.uleb128 0x15
 8781 1289 6E636C00 		.ascii	"ncl\000"
 8782 128d 01       		.byte	0x1
 8783 128e 0A06     		.2byte	0x60a
 8784 1290 B8000000 		.4byte	0xb8
 8785 1294 48160000 		.4byte	.LLST97
 8786 1298 15       		.uleb128 0x15
 8787 1299 73636C00 		.ascii	"scl\000"
 8788 129d 01       		.byte	0x1
 8789 129e 0A06     		.2byte	0x60a
 8790 12a0 B8000000 		.4byte	0xb8
 8791 12a4 B7160000 		.4byte	.LLST98
 8792 12a8 15       		.uleb128 0x15
 8793 12a9 72657300 		.ascii	"res\000"
 8794 12ad 01       		.byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 256


 8795 12ae 0B06     		.2byte	0x60b
 8796 12b0 29040000 		.4byte	0x429
 8797 12b4 02170000 		.4byte	.LLST99
 8798 12b8 1B       		.uleb128 0x1b
 8799 12b9 667300   		.ascii	"fs\000"
 8800 12bc 01       		.byte	0x1
 8801 12bd 0C06     		.2byte	0x60c
 8802 12bf 3E020000 		.4byte	0x23e
 8803 12c3 01       		.uleb128 0x1
 8804 12c4 56       		.byte	0x56
 8805 12c5 20       		.uleb128 0x20
 8806 12c6 1C000000 		.4byte	.LVL391
 8807 12ca AA100000 		.4byte	0x10aa
 8808 12ce 1D       		.uleb128 0x1d
 8809 12cf 52000000 		.4byte	.LVL399
 8810 12d3 AA100000 		.4byte	0x10aa
 8811 12d7 E8120000 		.4byte	0x12e8
 8812 12db 1E       		.uleb128 0x1e
 8813 12dc 01       		.uleb128 0x1
 8814 12dd 50       		.byte	0x50
 8815 12de 02       		.uleb128 0x2
 8816 12df 77       		.byte	0x77
 8817 12e0 00       		.sleb128 0
 8818 12e1 1E       		.uleb128 0x1e
 8819 12e2 01       		.uleb128 0x1
 8820 12e3 51       		.byte	0x51
 8821 12e4 02       		.uleb128 0x2
 8822 12e5 74       		.byte	0x74
 8823 12e6 00       		.sleb128 0
 8824 12e7 00       		.byte	0
 8825 12e8 1D       		.uleb128 0x1d
 8826 12e9 94000000 		.4byte	.LVL412
 8827 12ed AA100000 		.4byte	0x10aa
 8828 12f1 02130000 		.4byte	0x1302
 8829 12f5 1E       		.uleb128 0x1e
 8830 12f6 01       		.uleb128 0x1
 8831 12f7 50       		.byte	0x50
 8832 12f8 02       		.uleb128 0x2
 8833 12f9 77       		.byte	0x77
 8834 12fa 00       		.sleb128 0
 8835 12fb 1E       		.uleb128 0x1e
 8836 12fc 01       		.uleb128 0x1
 8837 12fd 51       		.byte	0x51
 8838 12fe 02       		.uleb128 0x2
 8839 12ff 74       		.byte	0x74
 8840 1300 00       		.sleb128 0
 8841 1301 00       		.byte	0
 8842 1302 1D       		.uleb128 0x1d
 8843 1303 B2000000 		.4byte	.LVL414
 8844 1307 9A0F0000 		.4byte	0xf9a
 8845 130b 22130000 		.4byte	0x1322
 8846 130f 1E       		.uleb128 0x1e
 8847 1310 01       		.uleb128 0x1
 8848 1311 50       		.byte	0x50
 8849 1312 02       		.uleb128 0x2
 8850 1313 76       		.byte	0x76
 8851 1314 00       		.sleb128 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 257


 8852 1315 1E       		.uleb128 0x1e
 8853 1316 01       		.uleb128 0x1
 8854 1317 51       		.byte	0x51
 8855 1318 02       		.uleb128 0x2
 8856 1319 74       		.byte	0x74
 8857 131a 00       		.sleb128 0
 8858 131b 1E       		.uleb128 0x1e
 8859 131c 01       		.uleb128 0x1
 8860 131d 52       		.byte	0x52
 8861 131e 02       		.uleb128 0x2
 8862 131f 09       		.byte	0x9
 8863 1320 FF       		.byte	0xff
 8864 1321 00       		.byte	0
 8865 1322 1F       		.uleb128 0x1f
 8866 1323 C6000000 		.4byte	.LVL416
 8867 1327 9A0F0000 		.4byte	0xf9a
 8868 132b 1E       		.uleb128 0x1e
 8869 132c 01       		.uleb128 0x1
 8870 132d 50       		.byte	0x50
 8871 132e 02       		.uleb128 0x2
 8872 132f 76       		.byte	0x76
 8873 1330 00       		.sleb128 0
 8874 1331 1E       		.uleb128 0x1e
 8875 1332 01       		.uleb128 0x1
 8876 1333 51       		.byte	0x51
 8877 1334 02       		.uleb128 0x2
 8878 1335 78       		.byte	0x78
 8879 1336 00       		.sleb128 0
 8880 1337 1E       		.uleb128 0x1e
 8881 1338 01       		.uleb128 0x1
 8882 1339 52       		.byte	0x52
 8883 133a 02       		.uleb128 0x2
 8884 133b 74       		.byte	0x74
 8885 133c 00       		.sleb128 0
 8886 133d 00       		.byte	0
 8887 133e 00       		.byte	0
 8888 133f 13       		.uleb128 0x13
 8889 1340 F4050000 		.4byte	.LASF121
 8890 1344 01       		.byte	0x1
 8891 1345 A605     		.2byte	0x5a6
 8892 1347 29040000 		.4byte	0x429
 8893 134b 00000000 		.4byte	.LFB16
 8894 134f 7C000000 		.4byte	.LFE16-.LFB16
 8895 1353 01       		.uleb128 0x1
 8896 1354 9C       		.byte	0x9c
 8897 1355 0D140000 		.4byte	0x140d
 8898 1359 14       		.uleb128 0x14
 8899 135a 6F626A00 		.ascii	"obj\000"
 8900 135e 01       		.byte	0x1
 8901 135f A705     		.2byte	0x5a7
 8902 1361 A30A0000 		.4byte	0xaa3
 8903 1365 36170000 		.4byte	.LLST100
 8904 1369 1C       		.uleb128 0x1c
 8905 136a F9020000 		.4byte	.LASF94
 8906 136e 01       		.byte	0x1
 8907 136f A805     		.2byte	0x5a8
 8908 1371 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 258


 8909 1375 83170000 		.4byte	.LLST101
 8910 1379 1C       		.uleb128 0x1c
 8911 137a E4050000 		.4byte	.LASF122
 8912 137e 01       		.byte	0x1
 8913 137f A905     		.2byte	0x5a9
 8914 1381 B8000000 		.4byte	0xb8
 8915 1385 C2170000 		.4byte	.LLST102
 8916 1389 15       		.uleb128 0x15
 8917 138a 72657300 		.ascii	"res\000"
 8918 138e 01       		.byte	0x1
 8919 138f AC05     		.2byte	0x5ac
 8920 1391 29040000 		.4byte	0x429
 8921 1395 12180000 		.4byte	.LLST103
 8922 1399 15       		.uleb128 0x15
 8923 139a 6E787400 		.ascii	"nxt\000"
 8924 139e 01       		.byte	0x1
 8925 139f AD05     		.2byte	0x5ad
 8926 13a1 B8000000 		.4byte	0xb8
 8927 13a5 5E180000 		.4byte	.LLST104
 8928 13a9 1B       		.uleb128 0x1b
 8929 13aa 667300   		.ascii	"fs\000"
 8930 13ad 01       		.byte	0x1
 8931 13ae AE05     		.2byte	0x5ae
 8932 13b0 3E020000 		.4byte	0x23e
 8933 13b4 01       		.uleb128 0x1
 8934 13b5 54       		.byte	0x54
 8935 13b6 1D       		.uleb128 0x1d
 8936 13b7 20000000 		.4byte	.LVL435
 8937 13bb 9A0F0000 		.4byte	0xf9a
 8938 13bf D7130000 		.4byte	0x13d7
 8939 13c3 1E       		.uleb128 0x1e
 8940 13c4 01       		.uleb128 0x1
 8941 13c5 50       		.byte	0x50
 8942 13c6 02       		.uleb128 0x2
 8943 13c7 74       		.byte	0x74
 8944 13c8 00       		.sleb128 0
 8945 13c9 1E       		.uleb128 0x1e
 8946 13ca 01       		.uleb128 0x1
 8947 13cb 51       		.byte	0x51
 8948 13cc 03       		.uleb128 0x3
 8949 13cd F3       		.byte	0xf3
 8950 13ce 01       		.uleb128 0x1
 8951 13cf 52       		.byte	0x52
 8952 13d0 1E       		.uleb128 0x1e
 8953 13d1 01       		.uleb128 0x1
 8954 13d2 52       		.byte	0x52
 8955 13d3 02       		.uleb128 0x2
 8956 13d4 09       		.byte	0x9
 8957 13d5 FF       		.byte	0xff
 8958 13d6 00       		.byte	0
 8959 13d7 1D       		.uleb128 0x1d
 8960 13d8 2A000000 		.4byte	.LVL437
 8961 13dc AA100000 		.4byte	0x10aa
 8962 13e0 F1130000 		.4byte	0x13f1
 8963 13e4 1E       		.uleb128 0x1e
 8964 13e5 01       		.uleb128 0x1
 8965 13e6 50       		.byte	0x50
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 259


 8966 13e7 02       		.uleb128 0x2
 8967 13e8 77       		.byte	0x77
 8968 13e9 00       		.sleb128 0
 8969 13ea 1E       		.uleb128 0x1e
 8970 13eb 01       		.uleb128 0x1
 8971 13ec 51       		.byte	0x51
 8972 13ed 02       		.uleb128 0x2
 8973 13ee 76       		.byte	0x76
 8974 13ef 00       		.sleb128 0
 8975 13f0 00       		.byte	0
 8976 13f1 1F       		.uleb128 0x1f
 8977 13f2 42000000 		.4byte	.LVL439
 8978 13f6 9A0F0000 		.4byte	0xf9a
 8979 13fa 1E       		.uleb128 0x1e
 8980 13fb 01       		.uleb128 0x1
 8981 13fc 50       		.byte	0x50
 8982 13fd 02       		.uleb128 0x2
 8983 13fe 74       		.byte	0x74
 8984 13ff 00       		.sleb128 0
 8985 1400 1E       		.uleb128 0x1e
 8986 1401 01       		.uleb128 0x1
 8987 1402 51       		.byte	0x51
 8988 1403 02       		.uleb128 0x2
 8989 1404 76       		.byte	0x76
 8990 1405 00       		.sleb128 0
 8991 1406 1E       		.uleb128 0x1e
 8992 1407 01       		.uleb128 0x1
 8993 1408 52       		.byte	0x52
 8994 1409 01       		.uleb128 0x1
 8995 140a 30       		.byte	0x30
 8996 140b 00       		.byte	0
 8997 140c 00       		.byte	0
 8998 140d 13       		.uleb128 0x13
 8999 140e 30010000 		.4byte	.LASF123
 9000 1412 01       		.byte	0x1
 9001 1413 450A     		.2byte	0xa45
 9002 1415 29040000 		.4byte	0x429
 9003 1419 00000000 		.4byte	.LFB27
 9004 141d 20000000 		.4byte	.LFE27-.LFB27
 9005 1421 01       		.uleb128 0x1
 9006 1422 9C       		.byte	0x9c
 9007 1423 64140000 		.4byte	0x1464
 9008 1427 14       		.uleb128 0x14
 9009 1428 647000   		.ascii	"dp\000"
 9010 142b 01       		.byte	0x1
 9011 142c 460A     		.2byte	0xa46
 9012 142e BC080000 		.4byte	0x8bc
 9013 1432 BE180000 		.4byte	.LLST105
 9014 1436 15       		.uleb128 0x15
 9015 1437 72657300 		.ascii	"res\000"
 9016 143b 01       		.byte	0x1
 9017 143c 490A     		.2byte	0xa49
 9018 143e 29040000 		.4byte	0x429
 9019 1442 DC180000 		.4byte	.LLST106
 9020 1446 1B       		.uleb128 0x1b
 9021 1447 667300   		.ascii	"fs\000"
 9022 144a 01       		.byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 260


 9023 144b 4A0A     		.2byte	0xa4a
 9024 144d 3E020000 		.4byte	0x23e
 9025 1451 01       		.uleb128 0x1
 9026 1452 55       		.byte	0x55
 9027 1453 1F       		.uleb128 0x1f
 9028 1454 0E000000 		.4byte	.LVL457
 9029 1458 170B0000 		.4byte	0xb17
 9030 145c 1E       		.uleb128 0x1e
 9031 145d 01       		.uleb128 0x1
 9032 145e 50       		.byte	0x50
 9033 145f 02       		.uleb128 0x2
 9034 1460 75       		.byte	0x75
 9035 1461 00       		.sleb128 0
 9036 1462 00       		.byte	0
 9037 1463 00       		.byte	0
 9038 1464 13       		.uleb128 0x13
 9039 1465 F4030000 		.4byte	.LASF124
 9040 1469 01       		.byte	0x1
 9041 146a 8A06     		.2byte	0x68a
 9042 146c 29040000 		.4byte	0x429
 9043 1470 00000000 		.4byte	.LFB18
 9044 1474 52000000 		.4byte	.LFE18-.LFB18
 9045 1478 01       		.uleb128 0x1
 9046 1479 9C       		.byte	0x9c
 9047 147a 48150000 		.4byte	0x1548
 9048 147e 14       		.uleb128 0x14
 9049 147f 667300   		.ascii	"fs\000"
 9050 1482 01       		.byte	0x1
 9051 1483 8B06     		.2byte	0x68b
 9052 1485 3E020000 		.4byte	0x23e
 9053 1489 EF180000 		.4byte	.LLST107
 9054 148d 1C       		.uleb128 0x1c
 9055 148e F9020000 		.4byte	.LASF94
 9056 1492 01       		.byte	0x1
 9057 1493 8C06     		.2byte	0x68c
 9058 1495 B8000000 		.4byte	0xb8
 9059 1499 0D190000 		.4byte	.LLST108
 9060 149d 22       		.uleb128 0x22
 9061 149e 9F000000 		.4byte	.LASF47
 9062 14a2 01       		.byte	0x1
 9063 14a3 8F06     		.2byte	0x68f
 9064 14a5 E0000000 		.4byte	0xe0
 9065 14a9 44190000 		.4byte	.LLST109
 9066 14ad 15       		.uleb128 0x15
 9067 14ae 6E00     		.ascii	"n\000"
 9068 14b0 01       		.byte	0x1
 9069 14b1 9006     		.2byte	0x690
 9070 14b3 97000000 		.4byte	0x97
 9071 14b7 62190000 		.4byte	.LLST110
 9072 14bb 15       		.uleb128 0x15
 9073 14bc 737A6200 		.ascii	"szb\000"
 9074 14c0 01       		.byte	0x1
 9075 14c1 9006     		.2byte	0x690
 9076 14c3 97000000 		.4byte	0x97
 9077 14c7 81190000 		.4byte	.LLST111
 9078 14cb 22       		.uleb128 0x22
 9079 14cc 3F040000 		.4byte	.LASF125
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 261


 9080 14d0 01       		.byte	0x1
 9081 14d1 9106     		.2byte	0x691
 9082 14d3 C5020000 		.4byte	0x2c5
 9083 14d7 95190000 		.4byte	.LLST112
 9084 14db 1D       		.uleb128 0x1d
 9085 14dc 0A000000 		.4byte	.LVL460
 9086 14e0 AF0A0000 		.4byte	0xaaf
 9087 14e4 EF140000 		.4byte	0x14ef
 9088 14e8 1E       		.uleb128 0x1e
 9089 14e9 01       		.uleb128 0x1
 9090 14ea 50       		.byte	0x50
 9091 14eb 02       		.uleb128 0x2
 9092 14ec 75       		.byte	0x75
 9093 14ed 00       		.sleb128 0
 9094 14ee 00       		.byte	0
 9095 14ef 1D       		.uleb128 0x1d
 9096 14f0 14000000 		.4byte	.LVL461
 9097 14f4 21070000 		.4byte	0x721
 9098 14f8 09150000 		.4byte	0x1509
 9099 14fc 1E       		.uleb128 0x1e
 9100 14fd 01       		.uleb128 0x1
 9101 14fe 50       		.byte	0x50
 9102 14ff 02       		.uleb128 0x2
 9103 1500 75       		.byte	0x75
 9104 1501 00       		.sleb128 0
 9105 1502 1E       		.uleb128 0x1e
 9106 1503 01       		.uleb128 0x1
 9107 1504 51       		.byte	0x51
 9108 1505 02       		.uleb128 0x2
 9109 1506 74       		.byte	0x74
 9110 1507 00       		.sleb128 0
 9111 1508 00       		.byte	0
 9112 1509 1D       		.uleb128 0x1d
 9113 150a 28000000 		.4byte	.LVL464
 9114 150e C4050000 		.4byte	0x5c4
 9115 1512 29150000 		.4byte	0x1529
 9116 1516 1E       		.uleb128 0x1e
 9117 1517 01       		.uleb128 0x1
 9118 1518 50       		.byte	0x50
 9119 1519 02       		.uleb128 0x2
 9120 151a 76       		.byte	0x76
 9121 151b 00       		.sleb128 0
 9122 151c 1E       		.uleb128 0x1e
 9123 151d 01       		.uleb128 0x1
 9124 151e 51       		.byte	0x51
 9125 151f 01       		.uleb128 0x1
 9126 1520 30       		.byte	0x30
 9127 1521 1E       		.uleb128 0x1e
 9128 1522 01       		.uleb128 0x1
 9129 1523 52       		.byte	0x52
 9130 1524 03       		.uleb128 0x3
 9131 1525 0A       		.byte	0xa
 9132 1526 0002     		.2byte	0x200
 9133 1528 00       		.byte	0
 9134 1529 1F       		.uleb128 0x1f
 9135 152a 40000000 		.4byte	.LVL468
 9136 152e 312D0000 		.4byte	0x2d31
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 262


 9137 1532 1E       		.uleb128 0x1e
 9138 1533 01       		.uleb128 0x1
 9139 1534 51       		.byte	0x51
 9140 1535 02       		.uleb128 0x2
 9141 1536 76       		.byte	0x76
 9142 1537 00       		.sleb128 0
 9143 1538 1E       		.uleb128 0x1e
 9144 1539 01       		.uleb128 0x1
 9145 153a 52       		.byte	0x52
 9146 153b 05       		.uleb128 0x5
 9147 153c 74       		.byte	0x74
 9148 153d 00       		.sleb128 0
 9149 153e 77       		.byte	0x77
 9150 153f 00       		.sleb128 0
 9151 1540 22       		.byte	0x22
 9152 1541 1E       		.uleb128 0x1e
 9153 1542 01       		.uleb128 0x1
 9154 1543 53       		.byte	0x53
 9155 1544 01       		.uleb128 0x1
 9156 1545 31       		.byte	0x31
 9157 1546 00       		.byte	0
 9158 1547 00       		.byte	0
 9159 1548 13       		.uleb128 0x13
 9160 1549 35030000 		.4byte	.LASF126
 9161 154d 01       		.byte	0x1
 9162 154e E106     		.2byte	0x6e1
 9163 1550 29040000 		.4byte	0x429
 9164 1554 00000000 		.4byte	.LFB20
 9165 1558 D6000000 		.4byte	.LFE20-.LFB20
 9166 155c 01       		.uleb128 0x1
 9167 155d 9C       		.byte	0x9c
 9168 155e FC150000 		.4byte	0x15fc
 9169 1562 14       		.uleb128 0x14
 9170 1563 647000   		.ascii	"dp\000"
 9171 1566 01       		.byte	0x1
 9172 1567 E206     		.2byte	0x6e2
 9173 1569 BC080000 		.4byte	0x8bc
 9174 156d A8190000 		.4byte	.LLST113
 9175 1571 1C       		.uleb128 0x1c
 9176 1572 1C020000 		.4byte	.LASF127
 9177 1576 01       		.byte	0x1
 9178 1577 E306     		.2byte	0x6e3
 9179 1579 73000000 		.4byte	0x73
 9180 157d 001A0000 		.4byte	.LLST114
 9181 1581 1B       		.uleb128 0x1b
 9182 1582 6F667300 		.ascii	"ofs\000"
 9183 1586 01       		.byte	0x1
 9184 1587 E606     		.2byte	0x6e6
 9185 1589 B8000000 		.4byte	0xb8
 9186 158d 01       		.uleb128 0x1
 9187 158e 55       		.byte	0x55
 9188 158f 22       		.uleb128 0x22
 9189 1590 F9020000 		.4byte	.LASF94
 9190 1594 01       		.byte	0x1
 9191 1595 E606     		.2byte	0x6e6
 9192 1597 B8000000 		.4byte	0xb8
 9193 159b 341A0000 		.4byte	.LLST115
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 263


 9194 159f 15       		.uleb128 0x15
 9195 15a0 667300   		.ascii	"fs\000"
 9196 15a3 01       		.byte	0x1
 9197 15a4 E706     		.2byte	0x6e7
 9198 15a6 3E020000 		.4byte	0x23e
 9199 15aa F71A0000 		.4byte	.LLST116
 9200 15ae 20       		.uleb128 0x20
 9201 15af 4E000000 		.4byte	.LVL476
 9202 15b3 AA100000 		.4byte	0x10aa
 9203 15b7 1D       		.uleb128 0x1d
 9204 15b8 78000000 		.4byte	.LVL481
 9205 15bc 3F120000 		.4byte	0x123f
 9206 15c0 CB150000 		.4byte	0x15cb
 9207 15c4 1E       		.uleb128 0x1e
 9208 15c5 01       		.uleb128 0x1
 9209 15c6 50       		.byte	0x50
 9210 15c7 02       		.uleb128 0x2
 9211 15c8 74       		.byte	0x74
 9212 15c9 00       		.sleb128 0
 9213 15ca 00       		.byte	0
 9214 15cb 1D       		.uleb128 0x1d
 9215 15cc 8E000000 		.4byte	.LVL483
 9216 15d0 64140000 		.4byte	0x1464
 9217 15d4 E5150000 		.4byte	0x15e5
 9218 15d8 1E       		.uleb128 0x1e
 9219 15d9 01       		.uleb128 0x1
 9220 15da 50       		.byte	0x50
 9221 15db 02       		.uleb128 0x2
 9222 15dc 76       		.byte	0x76
 9223 15dd 00       		.sleb128 0
 9224 15de 1E       		.uleb128 0x1e
 9225 15df 01       		.uleb128 0x1
 9226 15e0 51       		.byte	0x51
 9227 15e1 02       		.uleb128 0x2
 9228 15e2 79       		.byte	0x79
 9229 15e3 00       		.sleb128 0
 9230 15e4 00       		.byte	0
 9231 15e5 1F       		.uleb128 0x1f
 9232 15e6 9C000000 		.4byte	.LVL484
 9233 15ea 21070000 		.4byte	0x721
 9234 15ee 1E       		.uleb128 0x1e
 9235 15ef 01       		.uleb128 0x1
 9236 15f0 50       		.byte	0x50
 9237 15f1 02       		.uleb128 0x2
 9238 15f2 76       		.byte	0x76
 9239 15f3 00       		.sleb128 0
 9240 15f4 1E       		.uleb128 0x1e
 9241 15f5 01       		.uleb128 0x1
 9242 15f6 51       		.byte	0x51
 9243 15f7 02       		.uleb128 0x2
 9244 15f8 79       		.byte	0x79
 9245 15f9 00       		.sleb128 0
 9246 15fa 00       		.byte	0
 9247 15fb 00       		.byte	0
 9248 15fc 13       		.uleb128 0x13
 9249 15fd 96000000 		.4byte	.LASF128
 9250 1601 01       		.byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 264


 9251 1602 8A09     		.2byte	0x98a
 9252 1604 29040000 		.4byte	0x429
 9253 1608 00000000 		.4byte	.LFB25
 9254 160c 56000000 		.4byte	.LFE25-.LFB25
 9255 1610 01       		.uleb128 0x1
 9256 1611 9C       		.byte	0x9c
 9257 1612 AC160000 		.4byte	0x16ac
 9258 1616 14       		.uleb128 0x14
 9259 1617 647000   		.ascii	"dp\000"
 9260 161a 01       		.byte	0x1
 9261 161b 8B09     		.2byte	0x98b
 9262 161d BC080000 		.4byte	0x8bc
 9263 1621 221B0000 		.4byte	.LLST117
 9264 1625 15       		.uleb128 0x15
 9265 1626 72657300 		.ascii	"res\000"
 9266 162a 01       		.byte	0x1
 9267 162b 8E09     		.2byte	0x98e
 9268 162d 29040000 		.4byte	0x429
 9269 1631 401B0000 		.4byte	.LLST118
 9270 1635 1B       		.uleb128 0x1b
 9271 1636 667300   		.ascii	"fs\000"
 9272 1639 01       		.byte	0x1
 9273 163a 8F09     		.2byte	0x98f
 9274 163c 3E020000 		.4byte	0x23e
 9275 1640 01       		.uleb128 0x1
 9276 1641 56       		.byte	0x56
 9277 1642 15       		.uleb128 0x15
 9278 1643 6300     		.ascii	"c\000"
 9279 1645 01       		.byte	0x1
 9280 1646 9009     		.2byte	0x990
 9281 1648 A2000000 		.4byte	0xa2
 9282 164c 691B0000 		.4byte	.LLST119
 9283 1650 1D       		.uleb128 0x1d
 9284 1651 0C000000 		.4byte	.LVL503
 9285 1655 A8110000 		.4byte	0x11a8
 9286 1659 69160000 		.4byte	0x1669
 9287 165d 1E       		.uleb128 0x1e
 9288 165e 01       		.uleb128 0x1
 9289 165f 50       		.byte	0x50
 9290 1660 02       		.uleb128 0x2
 9291 1661 74       		.byte	0x74
 9292 1662 00       		.sleb128 0
 9293 1663 1E       		.uleb128 0x1e
 9294 1664 01       		.uleb128 0x1
 9295 1665 51       		.byte	0x51
 9296 1666 01       		.uleb128 0x1
 9297 1667 30       		.byte	0x30
 9298 1668 00       		.byte	0
 9299 1669 1D       		.uleb128 0x1d
 9300 166a 16000000 		.4byte	.LVL505
 9301 166e 170B0000 		.4byte	0xb17
 9302 1672 7D160000 		.4byte	0x167d
 9303 1676 1E       		.uleb128 0x1e
 9304 1677 01       		.uleb128 0x1
 9305 1678 50       		.byte	0x50
 9306 1679 02       		.uleb128 0x2
 9307 167a 76       		.byte	0x76
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 265


 9308 167b 00       		.sleb128 0
 9309 167c 00       		.byte	0
 9310 167d 1D       		.uleb128 0x1d
 9311 167e 3A000000 		.4byte	.LVL510
 9312 1682 18060000 		.4byte	0x618
 9313 1686 96160000 		.4byte	0x1696
 9314 168a 1E       		.uleb128 0x1e
 9315 168b 01       		.uleb128 0x1
 9316 168c 51       		.byte	0x51
 9317 168d 02       		.uleb128 0x2
 9318 168e 74       		.byte	0x74
 9319 168f 20       		.sleb128 32
 9320 1690 1E       		.uleb128 0x1e
 9321 1691 01       		.uleb128 0x1
 9322 1692 52       		.byte	0x52
 9323 1693 01       		.uleb128 0x1
 9324 1694 3B       		.byte	0x3b
 9325 1695 00       		.byte	0
 9326 1696 1F       		.uleb128 0x1f
 9327 1697 44000000 		.4byte	.LVL511
 9328 169b 48150000 		.4byte	0x1548
 9329 169f 1E       		.uleb128 0x1e
 9330 16a0 01       		.uleb128 0x1
 9331 16a1 50       		.byte	0x50
 9332 16a2 02       		.uleb128 0x2
 9333 16a3 74       		.byte	0x74
 9334 16a4 00       		.sleb128 0
 9335 16a5 1E       		.uleb128 0x1e
 9336 16a6 01       		.uleb128 0x1
 9337 16a7 51       		.byte	0x51
 9338 16a8 01       		.uleb128 0x1
 9339 16a9 30       		.byte	0x30
 9340 16aa 00       		.byte	0
 9341 16ab 00       		.byte	0
 9342 16ac 13       		.uleb128 0x13
 9343 16ad C4040000 		.4byte	.LASF129
 9344 16b1 01       		.byte	0x1
 9345 16b2 F40B     		.2byte	0xbf4
 9346 16b4 29040000 		.4byte	0x429
 9347 16b8 00000000 		.4byte	.LFB30
 9348 16bc 8E000000 		.4byte	.LFE30-.LFB30
 9349 16c0 01       		.uleb128 0x1
 9350 16c1 9C       		.byte	0x9c
 9351 16c2 69170000 		.4byte	0x1769
 9352 16c6 14       		.uleb128 0x14
 9353 16c7 647000   		.ascii	"dp\000"
 9354 16ca 01       		.byte	0x1
 9355 16cb F50B     		.2byte	0xbf5
 9356 16cd BC080000 		.4byte	0x8bc
 9357 16d1 931B0000 		.4byte	.LLST120
 9358 16d5 1C       		.uleb128 0x1c
 9359 16d6 67000000 		.4byte	.LASF99
 9360 16da 01       		.byte	0x1
 9361 16db F60B     		.2byte	0xbf6
 9362 16dd CE090000 		.4byte	0x9ce
 9363 16e1 B11B0000 		.4byte	.LLST121
 9364 16e5 15       		.uleb128 0x15
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 266


 9365 16e6 72657300 		.ascii	"res\000"
 9366 16ea 01       		.byte	0x1
 9367 16eb F90B     		.2byte	0xbf9
 9368 16ed 29040000 		.4byte	0x429
 9369 16f1 D21B0000 		.4byte	.LLST122
 9370 16f5 15       		.uleb128 0x15
 9371 16f6 6E7300   		.ascii	"ns\000"
 9372 16f9 01       		.byte	0x1
 9373 16fa FA0B     		.2byte	0xbfa
 9374 16fc A2000000 		.4byte	0xa2
 9375 1700 111C0000 		.4byte	.LLST123
 9376 1704 1B       		.uleb128 0x1b
 9377 1705 667300   		.ascii	"fs\000"
 9378 1708 01       		.byte	0x1
 9379 1709 FB0B     		.2byte	0xbfb
 9380 170b 3E020000 		.4byte	0x23e
 9381 170f 01       		.uleb128 0x1
 9382 1710 55       		.byte	0x55
 9383 1711 1D       		.uleb128 0x1d
 9384 1712 34000000 		.4byte	.LVL520
 9385 1716 A8110000 		.4byte	0x11a8
 9386 171a 2A170000 		.4byte	0x172a
 9387 171e 1E       		.uleb128 0x1e
 9388 171f 01       		.uleb128 0x1
 9389 1720 50       		.byte	0x50
 9390 1721 02       		.uleb128 0x2
 9391 1722 74       		.byte	0x74
 9392 1723 00       		.sleb128 0
 9393 1724 1E       		.uleb128 0x1e
 9394 1725 01       		.uleb128 0x1
 9395 1726 51       		.byte	0x51
 9396 1727 01       		.uleb128 0x1
 9397 1728 30       		.byte	0x30
 9398 1729 00       		.byte	0
 9399 172a 1D       		.uleb128 0x1d
 9400 172b 40000000 		.4byte	.LVL523
 9401 172f C8080000 		.4byte	0x8c8
 9402 1733 44170000 		.4byte	0x1744
 9403 1737 1E       		.uleb128 0x1e
 9404 1738 01       		.uleb128 0x1
 9405 1739 50       		.byte	0x50
 9406 173a 02       		.uleb128 0x2
 9407 173b 74       		.byte	0x74
 9408 173c 00       		.sleb128 0
 9409 173d 1E       		.uleb128 0x1e
 9410 173e 01       		.uleb128 0x1
 9411 173f 51       		.byte	0x51
 9412 1740 02       		.uleb128 0x2
 9413 1741 91       		.byte	0x91
 9414 1742 6C       		.sleb128 -20
 9415 1743 00       		.byte	0
 9416 1744 1D       		.uleb128 0x1d
 9417 1745 4A000000 		.4byte	.LVL525
 9418 1749 FC150000 		.4byte	0x15fc
 9419 174d 58170000 		.4byte	0x1758
 9420 1751 1E       		.uleb128 0x1e
 9421 1752 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 267


 9422 1753 50       		.byte	0x50
 9423 1754 02       		.uleb128 0x2
 9424 1755 74       		.byte	0x74
 9425 1756 00       		.sleb128 0
 9426 1757 00       		.byte	0
 9427 1758 1F       		.uleb128 0x1f
 9428 1759 7E000000 		.4byte	.LVL528
 9429 175d 5B070000 		.4byte	0x75b
 9430 1761 1E       		.uleb128 0x1e
 9431 1762 01       		.uleb128 0x1
 9432 1763 50       		.byte	0x50
 9433 1764 02       		.uleb128 0x2
 9434 1765 75       		.byte	0x75
 9435 1766 00       		.sleb128 0
 9436 1767 00       		.byte	0
 9437 1768 00       		.byte	0
 9438 1769 13       		.uleb128 0x13
 9439 176a EA050000 		.4byte	.LASF130
 9440 176e 01       		.byte	0x1
 9441 176f 1E07     		.2byte	0x71e
 9442 1771 29040000 		.4byte	0x429
 9443 1775 00000000 		.4byte	.LFB21
 9444 1779 4C000000 		.4byte	.LFE21-.LFB21
 9445 177d 01       		.uleb128 0x1
 9446 177e 9C       		.byte	0x9c
 9447 177f 10180000 		.4byte	0x1810
 9448 1783 14       		.uleb128 0x14
 9449 1784 647000   		.ascii	"dp\000"
 9450 1787 01       		.byte	0x1
 9451 1788 1F07     		.2byte	0x71f
 9452 178a BC080000 		.4byte	0x8bc
 9453 178e 2F1C0000 		.4byte	.LLST124
 9454 1792 1C       		.uleb128 0x1c
 9455 1793 09060000 		.4byte	.LASF131
 9456 1797 01       		.byte	0x1
 9457 1798 2007     		.2byte	0x720
 9458 179a 97000000 		.4byte	0x97
 9459 179e 4D1C0000 		.4byte	.LLST125
 9460 17a2 15       		.uleb128 0x15
 9461 17a3 72657300 		.ascii	"res\000"
 9462 17a7 01       		.byte	0x1
 9463 17a8 2307     		.2byte	0x723
 9464 17aa 29040000 		.4byte	0x429
 9465 17ae 6B1C0000 		.4byte	.LLST126
 9466 17b2 15       		.uleb128 0x15
 9467 17b3 6E00     		.ascii	"n\000"
 9468 17b5 01       		.byte	0x1
 9469 17b6 2407     		.2byte	0x724
 9470 17b8 97000000 		.4byte	0x97
 9471 17bc 9F1C0000 		.4byte	.LLST127
 9472 17c0 1B       		.uleb128 0x1b
 9473 17c1 667300   		.ascii	"fs\000"
 9474 17c4 01       		.byte	0x1
 9475 17c5 2507     		.2byte	0x725
 9476 17c7 3E020000 		.4byte	0x23e
 9477 17cb 01       		.uleb128 0x1
 9478 17cc 56       		.byte	0x56
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 268


 9479 17cd 1D       		.uleb128 0x1d
 9480 17ce 0E000000 		.4byte	.LVL534
 9481 17d2 A8110000 		.4byte	0x11a8
 9482 17d6 E6170000 		.4byte	0x17e6
 9483 17da 1E       		.uleb128 0x1e
 9484 17db 01       		.uleb128 0x1
 9485 17dc 50       		.byte	0x50
 9486 17dd 02       		.uleb128 0x2
 9487 17de 74       		.byte	0x74
 9488 17df 00       		.sleb128 0
 9489 17e0 1E       		.uleb128 0x1e
 9490 17e1 01       		.uleb128 0x1
 9491 17e2 51       		.byte	0x51
 9492 17e3 01       		.uleb128 0x1
 9493 17e4 30       		.byte	0x30
 9494 17e5 00       		.byte	0
 9495 17e6 1D       		.uleb128 0x1d
 9496 17e7 1C000000 		.4byte	.LVL537
 9497 17eb 170B0000 		.4byte	0xb17
 9498 17ef FA170000 		.4byte	0x17fa
 9499 17f3 1E       		.uleb128 0x1e
 9500 17f4 01       		.uleb128 0x1
 9501 17f5 50       		.byte	0x50
 9502 17f6 02       		.uleb128 0x2
 9503 17f7 76       		.byte	0x76
 9504 17f8 00       		.sleb128 0
 9505 17f9 00       		.byte	0
 9506 17fa 1F       		.uleb128 0x1f
 9507 17fb 3C000000 		.4byte	.LVL541
 9508 17ff 48150000 		.4byte	0x1548
 9509 1803 1E       		.uleb128 0x1e
 9510 1804 01       		.uleb128 0x1
 9511 1805 50       		.byte	0x50
 9512 1806 02       		.uleb128 0x2
 9513 1807 74       		.byte	0x74
 9514 1808 00       		.sleb128 0
 9515 1809 1E       		.uleb128 0x1e
 9516 180a 01       		.uleb128 0x1
 9517 180b 51       		.byte	0x51
 9518 180c 01       		.uleb128 0x1
 9519 180d 31       		.byte	0x31
 9520 180e 00       		.byte	0
 9521 180f 00       		.byte	0
 9522 1810 13       		.uleb128 0x13
 9523 1811 6C000000 		.4byte	.LASF132
 9524 1815 01       		.byte	0x1
 9525 1816 DB09     		.2byte	0x9db
 9526 1818 29040000 		.4byte	0x429
 9527 181c 00000000 		.4byte	.LFB26
 9528 1820 3A000000 		.4byte	.LFE26-.LFB26
 9529 1824 01       		.uleb128 0x1
 9530 1825 9C       		.byte	0x9c
 9531 1826 B2180000 		.4byte	0x18b2
 9532 182a 14       		.uleb128 0x14
 9533 182b 647000   		.ascii	"dp\000"
 9534 182e 01       		.byte	0x1
 9535 182f DC09     		.2byte	0x9dc
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 269


 9536 1831 BC080000 		.4byte	0x8bc
 9537 1835 B21C0000 		.4byte	.LLST128
 9538 1839 15       		.uleb128 0x15
 9539 183a 72657300 		.ascii	"res\000"
 9540 183e 01       		.byte	0x1
 9541 183f DF09     		.2byte	0x9df
 9542 1841 29040000 		.4byte	0x429
 9543 1845 D01C0000 		.4byte	.LLST129
 9544 1849 1B       		.uleb128 0x1b
 9545 184a 667300   		.ascii	"fs\000"
 9546 184d 01       		.byte	0x1
 9547 184e E009     		.2byte	0x9e0
 9548 1850 3E020000 		.4byte	0x23e
 9549 1854 01       		.uleb128 0x1
 9550 1855 56       		.byte	0x56
 9551 1856 1D       		.uleb128 0x1d
 9552 1857 0C000000 		.4byte	.LVL546
 9553 185b 69170000 		.4byte	0x1769
 9554 185f 6F180000 		.4byte	0x186f
 9555 1863 1E       		.uleb128 0x1e
 9556 1864 01       		.uleb128 0x1
 9557 1865 50       		.byte	0x50
 9558 1866 02       		.uleb128 0x2
 9559 1867 74       		.byte	0x74
 9560 1868 00       		.sleb128 0
 9561 1869 1E       		.uleb128 0x1e
 9562 186a 01       		.uleb128 0x1
 9563 186b 51       		.byte	0x51
 9564 186c 01       		.uleb128 0x1
 9565 186d 31       		.byte	0x31
 9566 186e 00       		.byte	0
 9567 186f 1D       		.uleb128 0x1d
 9568 1870 18000000 		.4byte	.LVL548
 9569 1874 170B0000 		.4byte	0xb17
 9570 1878 83180000 		.4byte	0x1883
 9571 187c 1E       		.uleb128 0x1e
 9572 187d 01       		.uleb128 0x1
 9573 187e 50       		.byte	0x50
 9574 187f 02       		.uleb128 0x2
 9575 1880 76       		.byte	0x76
 9576 1881 00       		.sleb128 0
 9577 1882 00       		.byte	0
 9578 1883 1D       		.uleb128 0x1d
 9579 1884 26000000 		.4byte	.LVL550
 9580 1888 C4050000 		.4byte	0x5c4
 9581 188c 9C180000 		.4byte	0x189c
 9582 1890 1E       		.uleb128 0x1e
 9583 1891 01       		.uleb128 0x1
 9584 1892 51       		.byte	0x51
 9585 1893 01       		.uleb128 0x1
 9586 1894 30       		.byte	0x30
 9587 1895 1E       		.uleb128 0x1e
 9588 1896 01       		.uleb128 0x1
 9589 1897 52       		.byte	0x52
 9590 1898 02       		.uleb128 0x2
 9591 1899 08       		.byte	0x8
 9592 189a 20       		.byte	0x20
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 270


 9593 189b 00       		.byte	0
 9594 189c 1F       		.uleb128 0x1f
 9595 189d 32000000 		.4byte	.LVL551
 9596 18a1 58050000 		.4byte	0x558
 9597 18a5 1E       		.uleb128 0x1e
 9598 18a6 01       		.uleb128 0x1
 9599 18a7 51       		.byte	0x51
 9600 18a8 02       		.uleb128 0x2
 9601 18a9 74       		.byte	0x74
 9602 18aa 20       		.sleb128 32
 9603 18ab 1E       		.uleb128 0x1e
 9604 18ac 01       		.uleb128 0x1
 9605 18ad 52       		.byte	0x52
 9606 18ae 01       		.uleb128 0x1
 9607 18af 3B       		.byte	0x3b
 9608 18b0 00       		.byte	0
 9609 18b1 00       		.byte	0
 9610 18b2 13       		.uleb128 0x13
 9611 18b3 CC060000 		.4byte	.LASF133
 9612 18b7 01       		.byte	0x1
 9613 18b8 3C09     		.2byte	0x93c
 9614 18ba 29040000 		.4byte	0x429
 9615 18be 00000000 		.4byte	.LFB24
 9616 18c2 60000000 		.4byte	.LFE24-.LFB24
 9617 18c6 01       		.uleb128 0x1
 9618 18c7 9C       		.byte	0x9c
 9619 18c8 50190000 		.4byte	0x1950
 9620 18cc 14       		.uleb128 0x14
 9621 18cd 647000   		.ascii	"dp\000"
 9622 18d0 01       		.byte	0x1
 9623 18d1 3D09     		.2byte	0x93d
 9624 18d3 BC080000 		.4byte	0x8bc
 9625 18d7 F91C0000 		.4byte	.LLST130
 9626 18db 14       		.uleb128 0x14
 9627 18dc 766F6C00 		.ascii	"vol\000"
 9628 18e0 01       		.byte	0x1
 9629 18e1 3E09     		.2byte	0x93e
 9630 18e3 73000000 		.4byte	0x73
 9631 18e7 171D0000 		.4byte	.LLST131
 9632 18eb 15       		.uleb128 0x15
 9633 18ec 72657300 		.ascii	"res\000"
 9634 18f0 01       		.byte	0x1
 9635 18f1 4109     		.2byte	0x941
 9636 18f3 29040000 		.4byte	0x429
 9637 18f7 351D0000 		.4byte	.LLST132
 9638 18fb 1B       		.uleb128 0x1b
 9639 18fc 667300   		.ascii	"fs\000"
 9640 18ff 01       		.byte	0x1
 9641 1900 4209     		.2byte	0x942
 9642 1902 3E020000 		.4byte	0x23e
 9643 1906 01       		.uleb128 0x1
 9644 1907 55       		.byte	0x55
 9645 1908 22       		.uleb128 0x22
 9646 1909 6D020000 		.4byte	.LASF39
 9647 190d 01       		.byte	0x1
 9648 190e 4309     		.2byte	0x943
 9649 1910 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 271


 9650 1914 8B1D0000 		.4byte	.LLST133
 9651 1918 15       		.uleb128 0x15
 9652 1919 6200     		.ascii	"b\000"
 9653 191b 01       		.byte	0x1
 9654 191c 4309     		.2byte	0x943
 9655 191e A2000000 		.4byte	0xa2
 9656 1922 AA1D0000 		.4byte	.LLST134
 9657 1926 1D       		.uleb128 0x1d
 9658 1927 12000000 		.4byte	.LVL557
 9659 192b 170B0000 		.4byte	0xb17
 9660 192f 3A190000 		.4byte	0x193a
 9661 1933 1E       		.uleb128 0x1e
 9662 1934 01       		.uleb128 0x1
 9663 1935 50       		.byte	0x50
 9664 1936 02       		.uleb128 0x2
 9665 1937 75       		.byte	0x75
 9666 1938 00       		.sleb128 0
 9667 1939 00       		.byte	0
 9668 193a 1F       		.uleb128 0x1f
 9669 193b 48000000 		.4byte	.LVL562
 9670 193f 48150000 		.4byte	0x1548
 9671 1943 1E       		.uleb128 0x1e
 9672 1944 01       		.uleb128 0x1
 9673 1945 50       		.byte	0x50
 9674 1946 02       		.uleb128 0x2
 9675 1947 74       		.byte	0x74
 9676 1948 00       		.sleb128 0
 9677 1949 1E       		.uleb128 0x1e
 9678 194a 01       		.uleb128 0x1
 9679 194b 51       		.byte	0x51
 9680 194c 01       		.uleb128 0x1
 9681 194d 30       		.byte	0x30
 9682 194e 00       		.byte	0
 9683 194f 00       		.byte	0
 9684 1950 13       		.uleb128 0x13
 9685 1951 07040000 		.4byte	.LASF134
 9686 1955 01       		.byte	0x1
 9687 1956 6504     		.2byte	0x465
 9688 1958 29040000 		.4byte	0x429
 9689 195c 00000000 		.4byte	.LFB12
 9690 1960 8C000000 		.4byte	.LFE12-.LFB12
 9691 1964 01       		.uleb128 0x1
 9692 1965 9C       		.byte	0x9c
 9693 1966 6C1A0000 		.4byte	0x1a6c
 9694 196a 14       		.uleb128 0x14
 9695 196b 667300   		.ascii	"fs\000"
 9696 196e 01       		.byte	0x1
 9697 196f 6604     		.2byte	0x466
 9698 1971 3E020000 		.4byte	0x23e
 9699 1975 C81D0000 		.4byte	.LLST135
 9700 1979 15       		.uleb128 0x15
 9701 197a 72657300 		.ascii	"res\000"
 9702 197e 01       		.byte	0x1
 9703 197f 6904     		.2byte	0x469
 9704 1981 29040000 		.4byte	0x429
 9705 1985 F41D0000 		.4byte	.LLST136
 9706 1989 1D       		.uleb128 0x1d
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 272


 9707 198a 08000000 		.4byte	.LVL567
 9708 198e AF0A0000 		.4byte	0xaaf
 9709 1992 9D190000 		.4byte	0x199d
 9710 1996 1E       		.uleb128 0x1e
 9711 1997 01       		.uleb128 0x1
 9712 1998 50       		.byte	0x50
 9713 1999 02       		.uleb128 0x2
 9714 199a 74       		.byte	0x74
 9715 199b 00       		.sleb128 0
 9716 199c 00       		.byte	0
 9717 199d 1D       		.uleb128 0x1d
 9718 199e 2A000000 		.4byte	.LVL569
 9719 19a2 C4050000 		.4byte	0x5c4
 9720 19a6 BD190000 		.4byte	0x19bd
 9721 19aa 1E       		.uleb128 0x1e
 9722 19ab 01       		.uleb128 0x1
 9723 19ac 50       		.byte	0x50
 9724 19ad 02       		.uleb128 0x2
 9725 19ae 76       		.byte	0x76
 9726 19af 00       		.sleb128 0
 9727 19b0 1E       		.uleb128 0x1e
 9728 19b1 01       		.uleb128 0x1
 9729 19b2 51       		.byte	0x51
 9730 19b3 01       		.uleb128 0x1
 9731 19b4 30       		.byte	0x30
 9732 19b5 1E       		.uleb128 0x1e
 9733 19b6 01       		.uleb128 0x1
 9734 19b7 52       		.byte	0x52
 9735 19b8 03       		.uleb128 0x3
 9736 19b9 0A       		.byte	0xa
 9737 19ba 0002     		.2byte	0x200
 9738 19bc 00       		.byte	0
 9739 19bd 1D       		.uleb128 0x1d
 9740 19be 36000000 		.4byte	.LVL570
 9741 19c2 EA040000 		.4byte	0x4ea
 9742 19c6 D9190000 		.4byte	0x19d9
 9743 19ca 1E       		.uleb128 0x1e
 9744 19cb 01       		.uleb128 0x1
 9745 19cc 50       		.byte	0x50
 9746 19cd 03       		.uleb128 0x3
 9747 19ce 74       		.byte	0x74
 9748 19cf AE04     		.sleb128 558
 9749 19d1 1E       		.uleb128 0x1e
 9750 19d2 01       		.uleb128 0x1
 9751 19d3 51       		.byte	0x51
 9752 19d4 03       		.uleb128 0x3
 9753 19d5 0B       		.byte	0xb
 9754 19d6 55AA     		.2byte	0xaa55
 9755 19d8 00       		.byte	0
 9756 19d9 1D       		.uleb128 0x1d
 9757 19da 3E000000 		.4byte	.LVL571
 9758 19de 21050000 		.4byte	0x521
 9759 19e2 F6190000 		.4byte	0x19f6
 9760 19e6 1E       		.uleb128 0x1e
 9761 19e7 01       		.uleb128 0x1
 9762 19e8 50       		.byte	0x50
 9763 19e9 02       		.uleb128 0x2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 273


 9764 19ea 76       		.byte	0x76
 9765 19eb 00       		.sleb128 0
 9766 19ec 1E       		.uleb128 0x1e
 9767 19ed 01       		.uleb128 0x1
 9768 19ee 51       		.byte	0x51
 9769 19ef 05       		.uleb128 0x5
 9770 19f0 0C       		.byte	0xc
 9771 19f1 52526141 		.4byte	0x41615252
 9772 19f5 00       		.byte	0
 9773 19f6 1D       		.uleb128 0x1d
 9774 19f7 48000000 		.4byte	.LVL572
 9775 19fb 21050000 		.4byte	0x521
 9776 19ff 141A0000 		.4byte	0x1a14
 9777 1a03 1E       		.uleb128 0x1e
 9778 1a04 01       		.uleb128 0x1
 9779 1a05 50       		.byte	0x50
 9780 1a06 03       		.uleb128 0x3
 9781 1a07 74       		.byte	0x74
 9782 1a08 9404     		.sleb128 532
 9783 1a0a 1E       		.uleb128 0x1e
 9784 1a0b 01       		.uleb128 0x1
 9785 1a0c 51       		.byte	0x51
 9786 1a0d 05       		.uleb128 0x5
 9787 1a0e 0C       		.byte	0xc
 9788 1a0f 72724161 		.4byte	0x61417272
 9789 1a13 00       		.byte	0
 9790 1a14 1D       		.uleb128 0x1d
 9791 1a15 52000000 		.4byte	.LVL573
 9792 1a19 21050000 		.4byte	0x521
 9793 1a1d 291A0000 		.4byte	0x1a29
 9794 1a21 1E       		.uleb128 0x1e
 9795 1a22 01       		.uleb128 0x1
 9796 1a23 50       		.byte	0x50
 9797 1a24 03       		.uleb128 0x3
 9798 1a25 74       		.byte	0x74
 9799 1a26 9804     		.sleb128 536
 9800 1a28 00       		.byte	0
 9801 1a29 1D       		.uleb128 0x1d
 9802 1a2a 5C000000 		.4byte	.LVL574
 9803 1a2e 21050000 		.4byte	0x521
 9804 1a32 3E1A0000 		.4byte	0x1a3e
 9805 1a36 1E       		.uleb128 0x1e
 9806 1a37 01       		.uleb128 0x1
 9807 1a38 50       		.byte	0x50
 9808 1a39 03       		.uleb128 0x3
 9809 1a3a 74       		.byte	0x74
 9810 1a3b 9C04     		.sleb128 540
 9811 1a3d 00       		.byte	0
 9812 1a3e 1D       		.uleb128 0x1d
 9813 1a3f 6C000000 		.4byte	.LVL575
 9814 1a43 312D0000 		.4byte	0x2d31
 9815 1a47 571A0000 		.4byte	0x1a57
 9816 1a4b 1E       		.uleb128 0x1e
 9817 1a4c 01       		.uleb128 0x1
 9818 1a4d 51       		.byte	0x51
 9819 1a4e 02       		.uleb128 0x2
 9820 1a4f 76       		.byte	0x76
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 274


 9821 1a50 00       		.sleb128 0
 9822 1a51 1E       		.uleb128 0x1e
 9823 1a52 01       		.uleb128 0x1
 9824 1a53 53       		.byte	0x53
 9825 1a54 01       		.uleb128 0x1
 9826 1a55 31       		.byte	0x31
 9827 1a56 00       		.byte	0
 9828 1a57 1F       		.uleb128 0x1f
 9829 1a58 7A000000 		.4byte	.LVL576
 9830 1a5c 522D0000 		.4byte	0x2d52
 9831 1a60 1E       		.uleb128 0x1e
 9832 1a61 01       		.uleb128 0x1
 9833 1a62 51       		.byte	0x51
 9834 1a63 01       		.uleb128 0x1
 9835 1a64 30       		.byte	0x30
 9836 1a65 1E       		.uleb128 0x1e
 9837 1a66 01       		.uleb128 0x1
 9838 1a67 52       		.byte	0x52
 9839 1a68 01       		.uleb128 0x1
 9840 1a69 30       		.byte	0x30
 9841 1a6a 00       		.byte	0
 9842 1a6b 00       		.byte	0
 9843 1a6c 23       		.uleb128 0x23
 9844 1a6d 4C040000 		.4byte	.LASF135
 9845 1a71 01       		.byte	0x1
 9846 1a72 3B0E     		.2byte	0xe3b
 9847 1a74 29040000 		.4byte	0x429
 9848 1a78 00000000 		.4byte	.LFB36
 9849 1a7c 50000000 		.4byte	.LFE36-.LFB36
 9850 1a80 01       		.uleb128 0x1
 9851 1a81 9C       		.byte	0x9c
 9852 1a82 231B0000 		.4byte	0x1b23
 9853 1a86 14       		.uleb128 0x14
 9854 1a87 667300   		.ascii	"fs\000"
 9855 1a8a 01       		.byte	0x1
 9856 1a8b 3C0E     		.2byte	0xe3c
 9857 1a8d 3E020000 		.4byte	0x23e
 9858 1a91 121E0000 		.4byte	.LLST137
 9859 1a95 1C       		.uleb128 0x1c
 9860 1a96 67000000 		.4byte	.LASF99
 9861 1a9a 01       		.byte	0x1
 9862 1a9b 3D0E     		.2byte	0xe3d
 9863 1a9d CE090000 		.4byte	0x9ce
 9864 1aa1 551E0000 		.4byte	.LLST138
 9865 1aa5 14       		.uleb128 0x14
 9866 1aa6 6F707400 		.ascii	"opt\000"
 9867 1aaa 01       		.byte	0x1
 9868 1aab 3E0E     		.2byte	0xe3e
 9869 1aad A2000000 		.4byte	0xa2
 9870 1ab1 8C1E0000 		.4byte	.LLST139
 9871 1ab5 15       		.uleb128 0x15
 9872 1ab6 63667300 		.ascii	"cfs\000"
 9873 1aba 01       		.byte	0x1
 9874 1abb 410E     		.2byte	0xe41
 9875 1abd 3E020000 		.4byte	0x23e
 9876 1ac1 AD1E0000 		.4byte	.LLST140
 9877 1ac5 15       		.uleb128 0x15
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 275


 9878 1ac6 766F6C00 		.ascii	"vol\000"
 9879 1aca 01       		.byte	0x1
 9880 1acb 420E     		.2byte	0xe42
 9881 1acd 73000000 		.4byte	0x73
 9882 1ad1 C01E0000 		.4byte	.LLST141
 9883 1ad5 15       		.uleb128 0x15
 9884 1ad6 72657300 		.ascii	"res\000"
 9885 1ada 01       		.byte	0x1
 9886 1adb 430E     		.2byte	0xe43
 9887 1add 29040000 		.4byte	0x429
 9888 1ae1 E91E0000 		.4byte	.LLST142
 9889 1ae5 1B       		.uleb128 0x1b
 9890 1ae6 727000   		.ascii	"rp\000"
 9891 1ae9 01       		.byte	0x1
 9892 1aea 440E     		.2byte	0xe44
 9893 1aec CE090000 		.4byte	0x9ce
 9894 1af0 02       		.uleb128 0x2
 9895 1af1 91       		.byte	0x91
 9896 1af2 74       		.sleb128 -12
 9897 1af3 1D       		.uleb128 0x1d
 9898 1af4 14000000 		.4byte	.LVL581
 9899 1af8 D9090000 		.4byte	0x9d9
 9900 1afc 071B0000 		.4byte	0x1b07
 9901 1b00 1E       		.uleb128 0x1e
 9902 1b01 01       		.uleb128 0x1
 9903 1b02 50       		.byte	0x50
 9904 1b03 02       		.uleb128 0x2
 9905 1b04 91       		.byte	0x91
 9906 1b05 74       		.sleb128 -12
 9907 1b06 00       		.byte	0
 9908 1b07 1F       		.uleb128 0x1f
 9909 1b08 40000000 		.4byte	.LVL586
 9910 1b0c 070D0000 		.4byte	0xd07
 9911 1b10 1E       		.uleb128 0x1e
 9912 1b11 01       		.uleb128 0x1
 9913 1b12 50       		.byte	0x50
 9914 1b13 02       		.uleb128 0x2
 9915 1b14 7D       		.byte	0x7d
 9916 1b15 00       		.sleb128 0
 9917 1b16 1E       		.uleb128 0x1e
 9918 1b17 01       		.uleb128 0x1
 9919 1b18 51       		.byte	0x51
 9920 1b19 02       		.uleb128 0x2
 9921 1b1a 91       		.byte	0x91
 9922 1b1b 6C       		.sleb128 -20
 9923 1b1c 1E       		.uleb128 0x1e
 9924 1b1d 01       		.uleb128 0x1
 9925 1b1e 52       		.byte	0x52
 9926 1b1f 01       		.uleb128 0x1
 9927 1b20 30       		.byte	0x30
 9928 1b21 00       		.byte	0
 9929 1b22 00       		.byte	0
 9930 1b23 23       		.uleb128 0x23
 9931 1b24 D5060000 		.4byte	.LASF136
 9932 1b28 01       		.byte	0x1
 9933 1b29 6B0E     		.2byte	0xe6b
 9934 1b2b 29040000 		.4byte	0x429
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 276


 9935 1b2f 00000000 		.4byte	.LFB37
 9936 1b33 CE010000 		.4byte	.LFE37-.LFB37
 9937 1b37 01       		.uleb128 0x1
 9938 1b38 9C       		.byte	0x9c
 9939 1b39 4B1D0000 		.4byte	0x1d4b
 9940 1b3d 14       		.uleb128 0x14
 9941 1b3e 667000   		.ascii	"fp\000"
 9942 1b41 01       		.byte	0x1
 9943 1b42 6C0E     		.2byte	0xe6c
 9944 1b44 4B1D0000 		.4byte	0x1d4b
 9945 1b48 FC1E0000 		.4byte	.LLST143
 9946 1b4c 1C       		.uleb128 0x1c
 9947 1b4d 67000000 		.4byte	.LASF99
 9948 1b51 01       		.byte	0x1
 9949 1b52 6D0E     		.2byte	0xe6d
 9950 1b54 CE090000 		.4byte	0x9ce
 9951 1b58 4C1F0000 		.4byte	.LLST144
 9952 1b5c 1C       		.uleb128 0x1c
 9953 1b5d 72020000 		.4byte	.LASF109
 9954 1b61 01       		.byte	0x1
 9955 1b62 6E0E     		.2byte	0xe6e
 9956 1b64 A2000000 		.4byte	0xa2
 9957 1b68 9D1F0000 		.4byte	.LLST145
 9958 1b6c 15       		.uleb128 0x15
 9959 1b6d 72657300 		.ascii	"res\000"
 9960 1b71 01       		.byte	0x1
 9961 1b72 710E     		.2byte	0xe71
 9962 1b74 29040000 		.4byte	0x429
 9963 1b78 C61F0000 		.4byte	.LLST146
 9964 1b7c 1B       		.uleb128 0x1b
 9965 1b7d 646A00   		.ascii	"dj\000"
 9966 1b80 01       		.byte	0x1
 9967 1b81 720E     		.2byte	0xe72
 9968 1b83 36030000 		.4byte	0x336
 9969 1b87 03       		.uleb128 0x3
 9970 1b88 91       		.byte	0x91
 9971 1b89 BC7F     		.sleb128 -68
 9972 1b8b 1B       		.uleb128 0x1b
 9973 1b8c 667300   		.ascii	"fs\000"
 9974 1b8f 01       		.byte	0x1
 9975 1b90 730E     		.2byte	0xe73
 9976 1b92 3E020000 		.4byte	0x23e
 9977 1b96 03       		.uleb128 0x3
 9978 1b97 91       		.byte	0x91
 9979 1b98 B87F     		.sleb128 -72
 9980 1b9a 15       		.uleb128 0x15
 9981 1b9b 636C00   		.ascii	"cl\000"
 9982 1b9e 01       		.byte	0x1
 9983 1b9f 750E     		.2byte	0xe75
 9984 1ba1 B8000000 		.4byte	0xb8
 9985 1ba5 31200000 		.4byte	.LLST147
 9986 1ba9 15       		.uleb128 0x15
 9987 1baa 62637300 		.ascii	"bcs\000"
 9988 1bae 01       		.byte	0x1
 9989 1baf 750E     		.2byte	0xe75
 9990 1bb1 B8000000 		.4byte	0xb8
 9991 1bb5 4F200000 		.4byte	.LLST148
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 277


 9992 1bb9 22       		.uleb128 0x22
 9993 1bba F9020000 		.4byte	.LASF94
 9994 1bbe 01       		.byte	0x1
 9995 1bbf 750E     		.2byte	0xe75
 9996 1bc1 B8000000 		.4byte	0xb8
 9997 1bc5 62200000 		.4byte	.LLST149
 9998 1bc9 15       		.uleb128 0x15
 9999 1bca 736300   		.ascii	"sc\000"
 10000 1bcd 01       		.byte	0x1
 10001 1bce 760E     		.2byte	0xe76
 10002 1bd0 E0000000 		.4byte	0xe0
 10003 1bd4 8B200000 		.4byte	.LLST150
 10004 1bd8 15       		.uleb128 0x15
 10005 1bd9 6F667300 		.ascii	"ofs\000"
 10006 1bdd 01       		.byte	0x1
 10007 1bde 770E     		.2byte	0xe77
 10008 1be0 D5000000 		.4byte	0xd5
 10009 1be4 B4200000 		.4byte	.LLST151
 10010 1be8 1D       		.uleb128 0x1d
 10011 1be9 20000000 		.4byte	.LVL597
 10012 1bed 070D0000 		.4byte	0xd07
 10013 1bf1 0A1C0000 		.4byte	0x1c0a
 10014 1bf5 1E       		.uleb128 0x1e
 10015 1bf6 01       		.uleb128 0x1
 10016 1bf7 50       		.byte	0x50
 10017 1bf8 03       		.uleb128 0x3
 10018 1bf9 91       		.byte	0x91
 10019 1bfa B47F     		.sleb128 -76
 10020 1bfc 1E       		.uleb128 0x1e
 10021 1bfd 01       		.uleb128 0x1
 10022 1bfe 51       		.byte	0x51
 10023 1bff 03       		.uleb128 0x3
 10024 1c00 91       		.byte	0x91
 10025 1c01 B87F     		.sleb128 -72
 10026 1c03 1E       		.uleb128 0x1e
 10027 1c04 01       		.uleb128 0x1
 10028 1c05 52       		.byte	0x52
 10029 1c06 02       		.uleb128 0x2
 10030 1c07 77       		.byte	0x77
 10031 1c08 00       		.sleb128 0
 10032 1c09 00       		.byte	0
 10033 1c0a 1D       		.uleb128 0x1d
 10034 1c0b 34000000 		.4byte	.LVL599
 10035 1c0f AC160000 		.4byte	0x16ac
 10036 1c13 1F1C0000 		.4byte	0x1c1f
 10037 1c17 1E       		.uleb128 0x1e
 10038 1c18 01       		.uleb128 0x1
 10039 1c19 50       		.byte	0x50
 10040 1c1a 03       		.uleb128 0x3
 10041 1c1b 91       		.byte	0x91
 10042 1c1c BC7F     		.sleb128 -68
 10043 1c1e 00       		.byte	0
 10044 1c1f 1D       		.uleb128 0x1d
 10045 1c20 54000000 		.4byte	.LVL601
 10046 1c24 10180000 		.4byte	0x1810
 10047 1c28 341C0000 		.4byte	0x1c34
 10048 1c2c 1E       		.uleb128 0x1e
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 278


 10049 1c2d 01       		.uleb128 0x1
 10050 1c2e 50       		.byte	0x50
 10051 1c2f 03       		.uleb128 0x3
 10052 1c30 91       		.byte	0x91
 10053 1c31 BC7F     		.sleb128 -68
 10054 1c33 00       		.byte	0
 10055 1c34 1D       		.uleb128 0x1d
 10056 1c35 88000000 		.4byte	.LVL607
 10057 1c39 5B070000 		.4byte	0x75b
 10058 1c3d 481C0000 		.4byte	0x1c48
 10059 1c41 1E       		.uleb128 0x1e
 10060 1c42 01       		.uleb128 0x1
 10061 1c43 51       		.byte	0x51
 10062 1c44 02       		.uleb128 0x2
 10063 1c45 76       		.byte	0x76
 10064 1c46 00       		.sleb128 0
 10065 1c47 00       		.byte	0
 10066 1c48 20       		.uleb128 0x20
 10067 1c49 8E000000 		.4byte	.LVL609
 10068 1c4d 5D2D0000 		.4byte	0x2d5d
 10069 1c51 1D       		.uleb128 0x1d
 10070 1c52 98000000 		.4byte	.LVL610
 10071 1c56 21050000 		.4byte	0x521
 10072 1c5a 651C0000 		.4byte	0x1c65
 10073 1c5e 1E       		.uleb128 0x1e
 10074 1c5f 01       		.uleb128 0x1
 10075 1c60 50       		.byte	0x50
 10076 1c61 02       		.uleb128 0x2
 10077 1c62 76       		.byte	0x76
 10078 1c63 0E       		.sleb128 14
 10079 1c64 00       		.byte	0
 10080 1c65 1D       		.uleb128 0x1d
 10081 1c66 A8000000 		.4byte	.LVL611
 10082 1c6a C8070000 		.4byte	0x7c8
 10083 1c6e 781C0000 		.4byte	0x1c78
 10084 1c72 1E       		.uleb128 0x1e
 10085 1c73 01       		.uleb128 0x1
 10086 1c74 52       		.byte	0x52
 10087 1c75 01       		.uleb128 0x1
 10088 1c76 30       		.byte	0x30
 10089 1c77 00       		.byte	0
 10090 1c78 1D       		.uleb128 0x1d
 10091 1c79 B2000000 		.4byte	.LVL612
 10092 1c7d 21050000 		.4byte	0x521
 10093 1c81 8B1C0000 		.4byte	0x1c8b
 10094 1c85 1E       		.uleb128 0x1e
 10095 1c86 01       		.uleb128 0x1
 10096 1c87 51       		.byte	0x51
 10097 1c88 01       		.uleb128 0x1
 10098 1c89 30       		.byte	0x30
 10099 1c8a 00       		.byte	0
 10100 1c8b 1D       		.uleb128 0x1d
 10101 1c8c CC000000 		.4byte	.LVL614
 10102 1c90 3F130000 		.4byte	0x133f
 10103 1c94 AB1C0000 		.4byte	0x1cab
 10104 1c98 1E       		.uleb128 0x1e
 10105 1c99 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 279


 10106 1c9a 50       		.byte	0x50
 10107 1c9b 03       		.uleb128 0x3
 10108 1c9c 91       		.byte	0x91
 10109 1c9d BC7F     		.sleb128 -68
 10110 1c9f 1E       		.uleb128 0x1e
 10111 1ca0 01       		.uleb128 0x1
 10112 1ca1 51       		.byte	0x51
 10113 1ca2 02       		.uleb128 0x2
 10114 1ca3 78       		.byte	0x78
 10115 1ca4 00       		.sleb128 0
 10116 1ca5 1E       		.uleb128 0x1e
 10117 1ca6 01       		.uleb128 0x1
 10118 1ca7 52       		.byte	0x52
 10119 1ca8 01       		.uleb128 0x1
 10120 1ca9 30       		.byte	0x30
 10121 1caa 00       		.byte	0
 10122 1cab 1D       		.uleb128 0x1d
 10123 1cac D8000000 		.4byte	.LVL616
 10124 1cb0 170B0000 		.4byte	0xb17
 10125 1cb4 BF1C0000 		.4byte	0x1cbf
 10126 1cb8 1E       		.uleb128 0x1e
 10127 1cb9 01       		.uleb128 0x1
 10128 1cba 51       		.byte	0x51
 10129 1cbb 02       		.uleb128 0x2
 10130 1cbc 76       		.byte	0x76
 10131 1cbd 00       		.sleb128 0
 10132 1cbe 00       		.byte	0
 10133 1cbf 1D       		.uleb128 0x1d
 10134 1cc0 2C010000 		.4byte	.LVL623
 10135 1cc4 5B070000 		.4byte	0x75b
 10136 1cc8 D91C0000 		.4byte	0x1cd9
 10137 1ccc 1E       		.uleb128 0x1e
 10138 1ccd 01       		.uleb128 0x1
 10139 1cce 50       		.byte	0x50
 10140 1ccf 02       		.uleb128 0x2
 10141 1cd0 76       		.byte	0x76
 10142 1cd1 00       		.sleb128 0
 10143 1cd2 1E       		.uleb128 0x1e
 10144 1cd3 01       		.uleb128 0x1
 10145 1cd4 51       		.byte	0x51
 10146 1cd5 02       		.uleb128 0x2
 10147 1cd6 78       		.byte	0x78
 10148 1cd7 00       		.sleb128 0
 10149 1cd8 00       		.byte	0
 10150 1cd9 1D       		.uleb128 0x1d
 10151 1cda 36010000 		.4byte	.LVL624
 10152 1cde B0040000 		.4byte	0x4b0
 10153 1ce2 ED1C0000 		.4byte	0x1ced
 10154 1ce6 1E       		.uleb128 0x1e
 10155 1ce7 01       		.uleb128 0x1
 10156 1ce8 50       		.byte	0x50
 10157 1ce9 02       		.uleb128 0x2
 10158 1cea 78       		.byte	0x78
 10159 1ceb 1C       		.sleb128 28
 10160 1cec 00       		.byte	0
 10161 1ced 1D       		.uleb128 0x1d
 10162 1cee 56010000 		.4byte	.LVL625
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 280


 10163 1cf2 C4050000 		.4byte	0x5c4
 10164 1cf6 0D1D0000 		.4byte	0x1d0d
 10165 1cfa 1E       		.uleb128 0x1e
 10166 1cfb 01       		.uleb128 0x1
 10167 1cfc 50       		.byte	0x50
 10168 1cfd 02       		.uleb128 0x2
 10169 1cfe 78       		.byte	0x78
 10170 1cff 00       		.sleb128 0
 10171 1d00 1E       		.uleb128 0x1e
 10172 1d01 01       		.uleb128 0x1
 10173 1d02 51       		.byte	0x51
 10174 1d03 01       		.uleb128 0x1
 10175 1d04 30       		.byte	0x30
 10176 1d05 1E       		.uleb128 0x1e
 10177 1d06 01       		.uleb128 0x1
 10178 1d07 52       		.byte	0x52
 10179 1d08 03       		.uleb128 0x3
 10180 1d09 0A       		.byte	0xa
 10181 1d0a 0002     		.2byte	0x200
 10182 1d0c 00       		.byte	0
 10183 1d0d 1D       		.uleb128 0x1d
 10184 1d0e 72010000 		.4byte	.LVL629
 10185 1d12 AA100000 		.4byte	0x10aa
 10186 1d16 211D0000 		.4byte	0x1d21
 10187 1d1a 1E       		.uleb128 0x1e
 10188 1d1b 01       		.uleb128 0x1
 10189 1d1c 50       		.byte	0x50
 10190 1d1d 02       		.uleb128 0x2
 10191 1d1e 75       		.byte	0x75
 10192 1d1f 00       		.sleb128 0
 10193 1d20 00       		.byte	0
 10194 1d21 1D       		.uleb128 0x1d
 10195 1d22 9C010000 		.4byte	.LVL635
 10196 1d26 21070000 		.4byte	0x721
 10197 1d2a 351D0000 		.4byte	0x1d35
 10198 1d2e 1E       		.uleb128 0x1e
 10199 1d2f 01       		.uleb128 0x1
 10200 1d30 50       		.byte	0x50
 10201 1d31 02       		.uleb128 0x2
 10202 1d32 77       		.byte	0x77
 10203 1d33 00       		.sleb128 0
 10204 1d34 00       		.byte	0
 10205 1d35 1F       		.uleb128 0x1f
 10206 1d36 AE010000 		.4byte	.LVL637
 10207 1d3a 3C2D0000 		.4byte	0x2d3c
 10208 1d3e 1E       		.uleb128 0x1e
 10209 1d3f 01       		.uleb128 0x1
 10210 1d40 51       		.byte	0x51
 10211 1d41 02       		.uleb128 0x2
 10212 1d42 78       		.byte	0x78
 10213 1d43 00       		.sleb128 0
 10214 1d44 1E       		.uleb128 0x1e
 10215 1d45 01       		.uleb128 0x1
 10216 1d46 53       		.byte	0x53
 10217 1d47 01       		.uleb128 0x1
 10218 1d48 31       		.byte	0x31
 10219 1d49 00       		.byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 281


 10220 1d4a 00       		.byte	0
 10221 1d4b 0B       		.uleb128 0xb
 10222 1d4c 04       		.byte	0x4
 10223 1d4d CB020000 		.4byte	0x2cb
 10224 1d51 23       		.uleb128 0x23
 10225 1d52 4B000000 		.4byte	.LASF137
 10226 1d56 01       		.byte	0x1
 10227 1d57 2B0F     		.2byte	0xf2b
 10228 1d59 29040000 		.4byte	0x429
 10229 1d5d 00000000 		.4byte	.LFB38
 10230 1d61 74010000 		.4byte	.LFE38-.LFB38
 10231 1d65 01       		.uleb128 0x1
 10232 1d66 9C       		.byte	0x9c
 10233 1d67 031F0000 		.4byte	0x1f03
 10234 1d6b 14       		.uleb128 0x14
 10235 1d6c 667000   		.ascii	"fp\000"
 10236 1d6f 01       		.byte	0x1
 10237 1d70 2C0F     		.2byte	0xf2c
 10238 1d72 4B1D0000 		.4byte	0x1d4b
 10239 1d76 C7200000 		.4byte	.LLST152
 10240 1d7a 1C       		.uleb128 0x1c
 10241 1d7b 9C010000 		.4byte	.LASF138
 10242 1d7f 01       		.byte	0x1
 10243 1d80 2D0F     		.2byte	0xf2d
 10244 1d82 BB050000 		.4byte	0x5bb
 10245 1d86 E5200000 		.4byte	.LLST153
 10246 1d8a 14       		.uleb128 0x14
 10247 1d8b 62747200 		.ascii	"btr\000"
 10248 1d8f 01       		.byte	0x1
 10249 1d90 2E0F     		.2byte	0xf2e
 10250 1d92 97000000 		.4byte	0x97
 10251 1d96 2A210000 		.4byte	.LLST154
 10252 1d9a 14       		.uleb128 0x14
 10253 1d9b 627200   		.ascii	"br\000"
 10254 1d9e 01       		.byte	0x1
 10255 1d9f 2F0F     		.2byte	0xf2f
 10256 1da1 031F0000 		.4byte	0x1f03
 10257 1da5 5E210000 		.4byte	.LLST155
 10258 1da9 15       		.uleb128 0x15
 10259 1daa 72657300 		.ascii	"res\000"
 10260 1dae 01       		.byte	0x1
 10261 1daf 320F     		.2byte	0xf32
 10262 1db1 29040000 		.4byte	0x429
 10263 1db5 7C210000 		.4byte	.LLST156
 10264 1db9 1B       		.uleb128 0x1b
 10265 1dba 667300   		.ascii	"fs\000"
 10266 1dbd 01       		.byte	0x1
 10267 1dbe 330F     		.2byte	0xf33
 10268 1dc0 3E020000 		.4byte	0x23e
 10269 1dc4 02       		.uleb128 0x2
 10270 1dc5 91       		.byte	0x91
 10271 1dc6 54       		.sleb128 -44
 10272 1dc7 22       		.uleb128 0x22
 10273 1dc8 F9020000 		.4byte	.LASF94
 10274 1dcc 01       		.byte	0x1
 10275 1dcd 340F     		.2byte	0xf34
 10276 1dcf B8000000 		.4byte	0xb8
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 282


 10277 1dd3 9A210000 		.4byte	.LLST157
 10278 1dd7 22       		.uleb128 0x22
 10279 1dd8 9F000000 		.4byte	.LASF47
 10280 1ddc 01       		.byte	0x1
 10281 1ddd 350F     		.2byte	0xf35
 10282 1ddf E0000000 		.4byte	0xe0
 10283 1de3 CE210000 		.4byte	.LLST158
 10284 1de7 22       		.uleb128 0x22
 10285 1de8 71060000 		.4byte	.LASF139
 10286 1dec 01       		.byte	0x1
 10287 1ded 360F     		.2byte	0xf36
 10288 1def D5000000 		.4byte	0xd5
 10289 1df3 02220000 		.4byte	.LLST159
 10290 1df7 22       		.uleb128 0x22
 10291 1df8 A4060000 		.4byte	.LASF140
 10292 1dfc 01       		.byte	0x1
 10293 1dfd 370F     		.2byte	0xf37
 10294 1dff 97000000 		.4byte	0x97
 10295 1e03 26220000 		.4byte	.LLST160
 10296 1e07 15       		.uleb128 0x15
 10297 1e08 636300   		.ascii	"cc\000"
 10298 1e0b 01       		.byte	0x1
 10299 1e0c 370F     		.2byte	0xf37
 10300 1e0e 97000000 		.4byte	0x97
 10301 1e12 44220000 		.4byte	.LLST161
 10302 1e16 22       		.uleb128 0x22
 10303 1e17 31000000 		.4byte	.LASF141
 10304 1e1b 01       		.byte	0x1
 10305 1e1c 370F     		.2byte	0xf37
 10306 1e1e 97000000 		.4byte	0x97
 10307 1e22 71220000 		.4byte	.LLST162
 10308 1e26 22       		.uleb128 0x22
 10309 1e27 79000000 		.4byte	.LASF142
 10310 1e2b 01       		.byte	0x1
 10311 1e2c 380F     		.2byte	0xf38
 10312 1e2e C5020000 		.4byte	0x2c5
 10313 1e32 96220000 		.4byte	.LLST163
 10314 1e36 1D       		.uleb128 0x1d
 10315 1e37 1A000000 		.4byte	.LVL650
 10316 1e3b 4F0A0000 		.4byte	0xa4f
 10317 1e3f 501E0000 		.4byte	0x1e50
 10318 1e43 1E       		.uleb128 0x1e
 10319 1e44 01       		.uleb128 0x1
 10320 1e45 50       		.byte	0x50
 10321 1e46 02       		.uleb128 0x2
 10322 1e47 74       		.byte	0x74
 10323 1e48 00       		.sleb128 0
 10324 1e49 1E       		.uleb128 0x1e
 10325 1e4a 01       		.uleb128 0x1
 10326 1e4b 51       		.byte	0x51
 10327 1e4c 02       		.uleb128 0x2
 10328 1e4d 91       		.byte	0x91
 10329 1e4e 54       		.sleb128 -44
 10330 1e4f 00       		.byte	0
 10331 1e50 1D       		.uleb128 0x1d
 10332 1e51 6A000000 		.4byte	.LVL659
 10333 1e55 AA100000 		.4byte	0x10aa
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 283


 10334 1e59 651E0000 		.4byte	0x1e65
 10335 1e5d 1E       		.uleb128 0x1e
 10336 1e5e 01       		.uleb128 0x1
 10337 1e5f 50       		.byte	0x50
 10338 1e60 03       		.uleb128 0x3
 10339 1e61 91       		.byte	0x91
 10340 1e62 4C       		.sleb128 -52
 10341 1e63 06       		.byte	0x6
 10342 1e64 00       		.byte	0
 10343 1e65 1D       		.uleb128 0x1d
 10344 1e66 8E000000 		.4byte	.LVL665
 10345 1e6a 21070000 		.4byte	0x721
 10346 1e6e 791E0000 		.4byte	0x1e79
 10347 1e72 1E       		.uleb128 0x1e
 10348 1e73 01       		.uleb128 0x1
 10349 1e74 50       		.byte	0x50
 10350 1e75 02       		.uleb128 0x2
 10351 1e76 7B       		.byte	0x7b
 10352 1e77 00       		.sleb128 0
 10353 1e78 00       		.byte	0
 10354 1e79 1D       		.uleb128 0x1d
 10355 1e7a BC000000 		.4byte	.LVL671
 10356 1e7e 3C2D0000 		.4byte	0x2d3c
 10357 1e82 991E0000 		.4byte	0x1e99
 10358 1e86 1E       		.uleb128 0x1e
 10359 1e87 01       		.uleb128 0x1
 10360 1e88 51       		.byte	0x51
 10361 1e89 02       		.uleb128 0x2
 10362 1e8a 78       		.byte	0x78
 10363 1e8b 00       		.sleb128 0
 10364 1e8c 1E       		.uleb128 0x1e
 10365 1e8d 01       		.uleb128 0x1
 10366 1e8e 52       		.byte	0x52
 10367 1e8f 02       		.uleb128 0x2
 10368 1e90 7A       		.byte	0x7a
 10369 1e91 00       		.sleb128 0
 10370 1e92 1E       		.uleb128 0x1e
 10371 1e93 01       		.uleb128 0x1
 10372 1e94 53       		.byte	0x53
 10373 1e95 02       		.uleb128 0x2
 10374 1e96 75       		.byte	0x75
 10375 1e97 00       		.sleb128 0
 10376 1e98 00       		.byte	0
 10377 1e99 1D       		.uleb128 0x1d
 10378 1e9a E6000000 		.4byte	.LVL672
 10379 1e9e 58050000 		.4byte	0x558
 10380 1ea2 B41E0000 		.4byte	0x1eb4
 10381 1ea6 1E       		.uleb128 0x1e
 10382 1ea7 01       		.uleb128 0x1
 10383 1ea8 51       		.byte	0x51
 10384 1ea9 02       		.uleb128 0x2
 10385 1eaa 74       		.byte	0x74
 10386 1eab 28       		.sleb128 40
 10387 1eac 1E       		.uleb128 0x1e
 10388 1ead 01       		.uleb128 0x1
 10389 1eae 52       		.byte	0x52
 10390 1eaf 03       		.uleb128 0x3
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 284


 10391 1eb0 0A       		.byte	0xa
 10392 1eb1 0002     		.2byte	0x200
 10393 1eb3 00       		.byte	0
 10394 1eb4 1D       		.uleb128 0x1d
 10395 1eb5 06010000 		.4byte	.LVL675
 10396 1eb9 312D0000 		.4byte	0x2d31
 10397 1ebd CD1E0000 		.4byte	0x1ecd
 10398 1ec1 1E       		.uleb128 0x1e
 10399 1ec2 01       		.uleb128 0x1
 10400 1ec3 51       		.byte	0x51
 10401 1ec4 02       		.uleb128 0x2
 10402 1ec5 74       		.byte	0x74
 10403 1ec6 28       		.sleb128 40
 10404 1ec7 1E       		.uleb128 0x1e
 10405 1ec8 01       		.uleb128 0x1
 10406 1ec9 53       		.byte	0x53
 10407 1eca 01       		.uleb128 0x1
 10408 1ecb 31       		.byte	0x31
 10409 1ecc 00       		.byte	0
 10410 1ecd 1D       		.uleb128 0x1d
 10411 1ece 26010000 		.4byte	.LVL676
 10412 1ed2 3C2D0000 		.4byte	0x2d3c
 10413 1ed6 EC1E0000 		.4byte	0x1eec
 10414 1eda 1E       		.uleb128 0x1e
 10415 1edb 01       		.uleb128 0x1
 10416 1edc 51       		.byte	0x51
 10417 1edd 02       		.uleb128 0x2
 10418 1ede 74       		.byte	0x74
 10419 1edf 28       		.sleb128 40
 10420 1ee0 1E       		.uleb128 0x1e
 10421 1ee1 01       		.uleb128 0x1
 10422 1ee2 52       		.byte	0x52
 10423 1ee3 02       		.uleb128 0x2
 10424 1ee4 7A       		.byte	0x7a
 10425 1ee5 00       		.sleb128 0
 10426 1ee6 1E       		.uleb128 0x1e
 10427 1ee7 01       		.uleb128 0x1
 10428 1ee8 53       		.byte	0x53
 10429 1ee9 01       		.uleb128 0x1
 10430 1eea 31       		.byte	0x31
 10431 1eeb 00       		.byte	0
 10432 1eec 1F       		.uleb128 0x1f
 10433 1eed 50010000 		.4byte	.LVL680
 10434 1ef1 58050000 		.4byte	0x558
 10435 1ef5 1E       		.uleb128 0x1e
 10436 1ef6 01       		.uleb128 0x1
 10437 1ef7 50       		.byte	0x50
 10438 1ef8 02       		.uleb128 0x2
 10439 1ef9 78       		.byte	0x78
 10440 1efa 00       		.sleb128 0
 10441 1efb 1E       		.uleb128 0x1e
 10442 1efc 01       		.uleb128 0x1
 10443 1efd 52       		.byte	0x52
 10444 1efe 02       		.uleb128 0x2
 10445 1eff 75       		.byte	0x75
 10446 1f00 00       		.sleb128 0
 10447 1f01 00       		.byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 285


 10448 1f02 00       		.byte	0
 10449 1f03 0B       		.uleb128 0xb
 10450 1f04 04       		.byte	0x4
 10451 1f05 97000000 		.4byte	0x97
 10452 1f09 23       		.uleb128 0x23
 10453 1f0a EE010000 		.4byte	.LASF143
 10454 1f0e 01       		.byte	0x1
 10455 1f0f 900F     		.2byte	0xf90
 10456 1f11 29040000 		.4byte	0x429
 10457 1f15 00000000 		.4byte	.LFB39
 10458 1f19 AC010000 		.4byte	.LFE39-.LFB39
 10459 1f1d 01       		.uleb128 0x1
 10460 1f1e 9C       		.byte	0x9c
 10461 1f1f C5200000 		.4byte	0x20c5
 10462 1f23 14       		.uleb128 0x14
 10463 1f24 667000   		.ascii	"fp\000"
 10464 1f27 01       		.byte	0x1
 10465 1f28 910F     		.2byte	0xf91
 10466 1f2a 4B1D0000 		.4byte	0x1d4b
 10467 1f2e B4220000 		.4byte	.LLST164
 10468 1f32 1C       		.uleb128 0x1c
 10469 1f33 9C010000 		.4byte	.LASF138
 10470 1f37 01       		.byte	0x1
 10471 1f38 920F     		.2byte	0xf92
 10472 1f3a BD050000 		.4byte	0x5bd
 10473 1f3e D2220000 		.4byte	.LLST165
 10474 1f42 14       		.uleb128 0x14
 10475 1f43 62747700 		.ascii	"btw\000"
 10476 1f47 01       		.byte	0x1
 10477 1f48 930F     		.2byte	0xf93
 10478 1f4a 97000000 		.4byte	0x97
 10479 1f4e 17230000 		.4byte	.LLST166
 10480 1f52 14       		.uleb128 0x14
 10481 1f53 627700   		.ascii	"bw\000"
 10482 1f56 01       		.byte	0x1
 10483 1f57 940F     		.2byte	0xf94
 10484 1f59 031F0000 		.4byte	0x1f03
 10485 1f5d 35230000 		.4byte	.LLST167
 10486 1f61 15       		.uleb128 0x15
 10487 1f62 72657300 		.ascii	"res\000"
 10488 1f66 01       		.byte	0x1
 10489 1f67 970F     		.2byte	0xf97
 10490 1f69 29040000 		.4byte	0x429
 10491 1f6d 53230000 		.4byte	.LLST168
 10492 1f71 1B       		.uleb128 0x1b
 10493 1f72 667300   		.ascii	"fs\000"
 10494 1f75 01       		.byte	0x1
 10495 1f76 980F     		.2byte	0xf98
 10496 1f78 3E020000 		.4byte	0x23e
 10497 1f7c 02       		.uleb128 0x2
 10498 1f7d 91       		.byte	0x91
 10499 1f7e 54       		.sleb128 -44
 10500 1f7f 22       		.uleb128 0x22
 10501 1f80 F9020000 		.4byte	.LASF94
 10502 1f84 01       		.byte	0x1
 10503 1f85 990F     		.2byte	0xf99
 10504 1f87 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 286


 10505 1f8b 71230000 		.4byte	.LLST169
 10506 1f8f 22       		.uleb128 0x22
 10507 1f90 9F000000 		.4byte	.LASF47
 10508 1f94 01       		.byte	0x1
 10509 1f95 9A0F     		.2byte	0xf9a
 10510 1f97 E0000000 		.4byte	0xe0
 10511 1f9b BC230000 		.4byte	.LLST170
 10512 1f9f 22       		.uleb128 0x22
 10513 1fa0 8A030000 		.4byte	.LASF144
 10514 1fa4 01       		.byte	0x1
 10515 1fa5 9B0F     		.2byte	0xf9b
 10516 1fa7 97000000 		.4byte	0x97
 10517 1fab F0230000 		.4byte	.LLST171
 10518 1faf 15       		.uleb128 0x15
 10519 1fb0 636300   		.ascii	"cc\000"
 10520 1fb3 01       		.byte	0x1
 10521 1fb4 9B0F     		.2byte	0xf9b
 10522 1fb6 97000000 		.4byte	0x97
 10523 1fba 0E240000 		.4byte	.LLST172
 10524 1fbe 22       		.uleb128 0x22
 10525 1fbf 31000000 		.4byte	.LASF141
 10526 1fc3 01       		.byte	0x1
 10527 1fc4 9B0F     		.2byte	0xf9b
 10528 1fc6 97000000 		.4byte	0x97
 10529 1fca 3B240000 		.4byte	.LLST173
 10530 1fce 22       		.uleb128 0x22
 10531 1fcf 9B040000 		.4byte	.LASF145
 10532 1fd3 01       		.byte	0x1
 10533 1fd4 9C0F     		.2byte	0xf9c
 10534 1fd6 A5040000 		.4byte	0x4a5
 10535 1fda 60240000 		.4byte	.LLST174
 10536 1fde 1D       		.uleb128 0x1d
 10537 1fdf 1A000000 		.4byte	.LVL691
 10538 1fe3 4F0A0000 		.4byte	0xa4f
 10539 1fe7 F81F0000 		.4byte	0x1ff8
 10540 1feb 1E       		.uleb128 0x1e
 10541 1fec 01       		.uleb128 0x1
 10542 1fed 50       		.byte	0x50
 10543 1fee 02       		.uleb128 0x2
 10544 1fef 74       		.byte	0x74
 10545 1ff0 00       		.sleb128 0
 10546 1ff1 1E       		.uleb128 0x1e
 10547 1ff2 01       		.uleb128 0x1
 10548 1ff3 51       		.byte	0x51
 10549 1ff4 02       		.uleb128 0x2
 10550 1ff5 91       		.byte	0x91
 10551 1ff6 54       		.sleb128 -44
 10552 1ff7 00       		.byte	0
 10553 1ff8 1D       		.uleb128 0x1d
 10554 1ff9 68000000 		.4byte	.LVL699
 10555 1ffd 3F120000 		.4byte	0x123f
 10556 2001 12200000 		.4byte	0x2012
 10557 2005 1E       		.uleb128 0x1e
 10558 2006 01       		.uleb128 0x1
 10559 2007 50       		.byte	0x50
 10560 2008 03       		.uleb128 0x3
 10561 2009 91       		.byte	0x91
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 287


 10562 200a 4C       		.sleb128 -52
 10563 200b 06       		.byte	0x6
 10564 200c 1E       		.uleb128 0x1e
 10565 200d 01       		.uleb128 0x1
 10566 200e 51       		.byte	0x51
 10567 200f 01       		.uleb128 0x1
 10568 2010 30       		.byte	0x30
 10569 2011 00       		.byte	0
 10570 2012 1D       		.uleb128 0x1d
 10571 2013 72000000 		.4byte	.LVL701
 10572 2017 3F120000 		.4byte	0x123f
 10573 201b 27200000 		.4byte	0x2027
 10574 201f 1E       		.uleb128 0x1e
 10575 2020 01       		.uleb128 0x1
 10576 2021 50       		.byte	0x50
 10577 2022 03       		.uleb128 0x3
 10578 2023 91       		.byte	0x91
 10579 2024 4C       		.sleb128 -52
 10580 2025 06       		.byte	0x6
 10581 2026 00       		.byte	0
 10582 2027 1D       		.uleb128 0x1d
 10583 2028 AE000000 		.4byte	.LVL707
 10584 202c 312D0000 		.4byte	0x2d31
 10585 2030 40200000 		.4byte	0x2040
 10586 2034 1E       		.uleb128 0x1e
 10587 2035 01       		.uleb128 0x1
 10588 2036 51       		.byte	0x51
 10589 2037 02       		.uleb128 0x2
 10590 2038 74       		.byte	0x74
 10591 2039 28       		.sleb128 40
 10592 203a 1E       		.uleb128 0x1e
 10593 203b 01       		.uleb128 0x1
 10594 203c 53       		.byte	0x53
 10595 203d 01       		.uleb128 0x1
 10596 203e 31       		.byte	0x31
 10597 203f 00       		.byte	0
 10598 2040 1D       		.uleb128 0x1d
 10599 2041 CA000000 		.4byte	.LVL708
 10600 2045 21070000 		.4byte	0x721
 10601 2049 54200000 		.4byte	0x2054
 10602 204d 1E       		.uleb128 0x1e
 10603 204e 01       		.uleb128 0x1
 10604 204f 50       		.byte	0x50
 10605 2050 02       		.uleb128 0x2
 10606 2051 7B       		.byte	0x7b
 10607 2052 00       		.sleb128 0
 10608 2053 00       		.byte	0
 10609 2054 1D       		.uleb128 0x1d
 10610 2055 F8000000 		.4byte	.LVL714
 10611 2059 312D0000 		.4byte	0x2d31
 10612 205d 74200000 		.4byte	0x2074
 10613 2061 1E       		.uleb128 0x1e
 10614 2062 01       		.uleb128 0x1
 10615 2063 51       		.byte	0x51
 10616 2064 02       		.uleb128 0x2
 10617 2065 78       		.byte	0x78
 10618 2066 00       		.sleb128 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 288


 10619 2067 1E       		.uleb128 0x1e
 10620 2068 01       		.uleb128 0x1
 10621 2069 52       		.byte	0x52
 10622 206a 02       		.uleb128 0x2
 10623 206b 7A       		.byte	0x7a
 10624 206c 00       		.sleb128 0
 10625 206d 1E       		.uleb128 0x1e
 10626 206e 01       		.uleb128 0x1
 10627 206f 53       		.byte	0x53
 10628 2070 02       		.uleb128 0x2
 10629 2071 75       		.byte	0x75
 10630 2072 00       		.sleb128 0
 10631 2073 00       		.byte	0
 10632 2074 1D       		.uleb128 0x1d
 10633 2075 1A010000 		.4byte	.LVL715
 10634 2079 58050000 		.4byte	0x558
 10635 207d 8F200000 		.4byte	0x208f
 10636 2081 1E       		.uleb128 0x1e
 10637 2082 01       		.uleb128 0x1
 10638 2083 50       		.byte	0x50
 10639 2084 02       		.uleb128 0x2
 10640 2085 74       		.byte	0x74
 10641 2086 28       		.sleb128 40
 10642 2087 1E       		.uleb128 0x1e
 10643 2088 01       		.uleb128 0x1
 10644 2089 52       		.byte	0x52
 10645 208a 03       		.uleb128 0x3
 10646 208b 0A       		.byte	0xa
 10647 208c 0002     		.2byte	0x200
 10648 208e 00       		.byte	0
 10649 208f 1D       		.uleb128 0x1d
 10650 2090 44010000 		.4byte	.LVL718
 10651 2094 3C2D0000 		.4byte	0x2d3c
 10652 2098 AE200000 		.4byte	0x20ae
 10653 209c 1E       		.uleb128 0x1e
 10654 209d 01       		.uleb128 0x1
 10655 209e 51       		.byte	0x51
 10656 209f 02       		.uleb128 0x2
 10657 20a0 74       		.byte	0x74
 10658 20a1 28       		.sleb128 40
 10659 20a2 1E       		.uleb128 0x1e
 10660 20a3 01       		.uleb128 0x1
 10661 20a4 52       		.byte	0x52
 10662 20a5 02       		.uleb128 0x2
 10663 20a6 7A       		.byte	0x7a
 10664 20a7 00       		.sleb128 0
 10665 20a8 1E       		.uleb128 0x1e
 10666 20a9 01       		.uleb128 0x1
 10667 20aa 53       		.byte	0x53
 10668 20ab 01       		.uleb128 0x1
 10669 20ac 31       		.byte	0x31
 10670 20ad 00       		.byte	0
 10671 20ae 1F       		.uleb128 0x1f
 10672 20af 6E010000 		.4byte	.LVL722
 10673 20b3 58050000 		.4byte	0x558
 10674 20b7 1E       		.uleb128 0x1e
 10675 20b8 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 289


 10676 20b9 51       		.byte	0x51
 10677 20ba 02       		.uleb128 0x2
 10678 20bb 78       		.byte	0x78
 10679 20bc 00       		.sleb128 0
 10680 20bd 1E       		.uleb128 0x1e
 10681 20be 01       		.uleb128 0x1
 10682 20bf 52       		.byte	0x52
 10683 20c0 02       		.uleb128 0x2
 10684 20c1 75       		.byte	0x75
 10685 20c2 00       		.sleb128 0
 10686 20c3 00       		.byte	0
 10687 20c4 00       		.byte	0
 10688 20c5 23       		.uleb128 0x23
 10689 20c6 83030000 		.4byte	.LASF146
 10690 20ca 01       		.byte	0x1
 10691 20cb 0A10     		.2byte	0x100a
 10692 20cd 29040000 		.4byte	0x429
 10693 20d1 00000000 		.4byte	.LFB40
 10694 20d5 9C000000 		.4byte	.LFE40-.LFB40
 10695 20d9 01       		.uleb128 0x1
 10696 20da 9C       		.byte	0x9c
 10697 20db D5210000 		.4byte	0x21d5
 10698 20df 14       		.uleb128 0x14
 10699 20e0 667000   		.ascii	"fp\000"
 10700 20e3 01       		.byte	0x1
 10701 20e4 0B10     		.2byte	0x100b
 10702 20e6 4B1D0000 		.4byte	0x1d4b
 10703 20ea 7E240000 		.4byte	.LLST175
 10704 20ee 15       		.uleb128 0x15
 10705 20ef 72657300 		.ascii	"res\000"
 10706 20f3 01       		.byte	0x1
 10707 20f4 0E10     		.2byte	0x100e
 10708 20f6 29040000 		.4byte	0x429
 10709 20fa 9C240000 		.4byte	.LLST176
 10710 20fe 1B       		.uleb128 0x1b
 10711 20ff 667300   		.ascii	"fs\000"
 10712 2102 01       		.byte	0x1
 10713 2103 0F10     		.2byte	0x100f
 10714 2105 3E020000 		.4byte	0x23e
 10715 2109 02       		.uleb128 0x2
 10716 210a 91       		.byte	0x91
 10717 210b 6C       		.sleb128 -20
 10718 210c 15       		.uleb128 0x15
 10719 210d 746D00   		.ascii	"tm\000"
 10720 2110 01       		.byte	0x1
 10721 2111 1010     		.2byte	0x1010
 10722 2113 B8000000 		.4byte	0xb8
 10723 2117 C5240000 		.4byte	.LLST177
 10724 211b 15       		.uleb128 0x15
 10725 211c 64697200 		.ascii	"dir\000"
 10726 2120 01       		.byte	0x1
 10727 2121 1110     		.2byte	0x1011
 10728 2123 C5020000 		.4byte	0x2c5
 10729 2127 E3240000 		.4byte	.LLST178
 10730 212b 1D       		.uleb128 0x1d
 10731 212c 0C000000 		.4byte	.LVL729
 10732 2130 4F0A0000 		.4byte	0xa4f
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 290


 10733 2134 45210000 		.4byte	0x2145
 10734 2138 1E       		.uleb128 0x1e
 10735 2139 01       		.uleb128 0x1
 10736 213a 50       		.byte	0x50
 10737 213b 02       		.uleb128 0x2
 10738 213c 74       		.byte	0x74
 10739 213d 00       		.sleb128 0
 10740 213e 1E       		.uleb128 0x1e
 10741 213f 01       		.uleb128 0x1
 10742 2140 51       		.byte	0x51
 10743 2141 02       		.uleb128 0x2
 10744 2142 91       		.byte	0x91
 10745 2143 6C       		.sleb128 -20
 10746 2144 00       		.byte	0
 10747 2145 1D       		.uleb128 0x1d
 10748 2146 2E000000 		.4byte	.LVL731
 10749 214a 312D0000 		.4byte	0x2d31
 10750 214e 5E210000 		.4byte	0x215e
 10751 2152 1E       		.uleb128 0x1e
 10752 2153 01       		.uleb128 0x1
 10753 2154 51       		.byte	0x51
 10754 2155 02       		.uleb128 0x2
 10755 2156 74       		.byte	0x74
 10756 2157 28       		.sleb128 40
 10757 2158 1E       		.uleb128 0x1e
 10758 2159 01       		.uleb128 0x1
 10759 215a 53       		.byte	0x53
 10760 215b 01       		.uleb128 0x1
 10761 215c 31       		.byte	0x31
 10762 215d 00       		.byte	0
 10763 215e 20       		.uleb128 0x20
 10764 215f 3C000000 		.4byte	.LVL732
 10765 2163 5D2D0000 		.4byte	0x2d5d
 10766 2167 20       		.uleb128 0x20
 10767 2168 46000000 		.4byte	.LVL735
 10768 216c 170B0000 		.4byte	0xb17
 10769 2170 1D       		.uleb128 0x1d
 10770 2171 5C000000 		.4byte	.LVL738
 10771 2175 C8070000 		.4byte	0x7c8
 10772 2179 84210000 		.4byte	0x2184
 10773 217d 1E       		.uleb128 0x1e
 10774 217e 01       		.uleb128 0x1
 10775 217f 51       		.byte	0x51
 10776 2180 02       		.uleb128 0x2
 10777 2181 75       		.byte	0x75
 10778 2182 00       		.sleb128 0
 10779 2183 00       		.byte	0
 10780 2184 1D       		.uleb128 0x1d
 10781 2185 66000000 		.4byte	.LVL739
 10782 2189 21050000 		.4byte	0x521
 10783 218d 98210000 		.4byte	0x2198
 10784 2191 1E       		.uleb128 0x1e
 10785 2192 01       		.uleb128 0x1
 10786 2193 50       		.byte	0x50
 10787 2194 02       		.uleb128 0x2
 10788 2195 75       		.byte	0x75
 10789 2196 1C       		.sleb128 28
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 291


 10790 2197 00       		.byte	0
 10791 2198 1D       		.uleb128 0x1d
 10792 2199 70000000 		.4byte	.LVL740
 10793 219d 21050000 		.4byte	0x521
 10794 21a1 B2210000 		.4byte	0x21b2
 10795 21a5 1E       		.uleb128 0x1e
 10796 21a6 01       		.uleb128 0x1
 10797 21a7 50       		.byte	0x50
 10798 21a8 02       		.uleb128 0x2
 10799 21a9 75       		.byte	0x75
 10800 21aa 16       		.sleb128 22
 10801 21ab 1E       		.uleb128 0x1e
 10802 21ac 01       		.uleb128 0x1
 10803 21ad 51       		.byte	0x51
 10804 21ae 02       		.uleb128 0x2
 10805 21af 76       		.byte	0x76
 10806 21b0 00       		.sleb128 0
 10807 21b1 00       		.byte	0
 10808 21b2 1D       		.uleb128 0x1d
 10809 21b3 7A000000 		.4byte	.LVL741
 10810 21b7 EA040000 		.4byte	0x4ea
 10811 21bb CB210000 		.4byte	0x21cb
 10812 21bf 1E       		.uleb128 0x1e
 10813 21c0 01       		.uleb128 0x1
 10814 21c1 50       		.byte	0x50
 10815 21c2 02       		.uleb128 0x2
 10816 21c3 75       		.byte	0x75
 10817 21c4 12       		.sleb128 18
 10818 21c5 1E       		.uleb128 0x1e
 10819 21c6 01       		.uleb128 0x1
 10820 21c7 51       		.byte	0x51
 10821 21c8 01       		.uleb128 0x1
 10822 21c9 30       		.byte	0x30
 10823 21ca 00       		.byte	0
 10824 21cb 20       		.uleb128 0x20
 10825 21cc 86000000 		.4byte	.LVL742
 10826 21d0 50190000 		.4byte	0x1950
 10827 21d4 00       		.byte	0
 10828 21d5 23       		.uleb128 0x23
 10829 21d6 BF020000 		.4byte	.LASF147
 10830 21da 01       		.byte	0x1
 10831 21db 5B10     		.2byte	0x105b
 10832 21dd 29040000 		.4byte	0x429
 10833 21e1 00000000 		.4byte	.LFB41
 10834 21e5 24000000 		.4byte	.LFE41-.LFB41
 10835 21e9 01       		.uleb128 0x1
 10836 21ea 9C       		.byte	0x9c
 10837 21eb 47220000 		.4byte	0x2247
 10838 21ef 14       		.uleb128 0x14
 10839 21f0 667000   		.ascii	"fp\000"
 10840 21f3 01       		.byte	0x1
 10841 21f4 5C10     		.2byte	0x105c
 10842 21f6 4B1D0000 		.4byte	0x1d4b
 10843 21fa F6240000 		.4byte	.LLST179
 10844 21fe 15       		.uleb128 0x15
 10845 21ff 72657300 		.ascii	"res\000"
 10846 2203 01       		.byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 292


 10847 2204 5F10     		.2byte	0x105f
 10848 2206 29040000 		.4byte	0x429
 10849 220a 14250000 		.4byte	.LLST180
 10850 220e 1B       		.uleb128 0x1b
 10851 220f 667300   		.ascii	"fs\000"
 10852 2212 01       		.byte	0x1
 10853 2213 6010     		.2byte	0x1060
 10854 2215 3E020000 		.4byte	0x23e
 10855 2219 02       		.uleb128 0x2
 10856 221a 91       		.byte	0x91
 10857 221b 74       		.sleb128 -12
 10858 221c 1D       		.uleb128 0x1d
 10859 221d 0A000000 		.4byte	.LVL747
 10860 2221 C5200000 		.4byte	0x20c5
 10861 2225 30220000 		.4byte	0x2230
 10862 2229 1E       		.uleb128 0x1e
 10863 222a 01       		.uleb128 0x1
 10864 222b 50       		.byte	0x50
 10865 222c 02       		.uleb128 0x2
 10866 222d 74       		.byte	0x74
 10867 222e 00       		.sleb128 0
 10868 222f 00       		.byte	0
 10869 2230 1F       		.uleb128 0x1f
 10870 2231 16000000 		.4byte	.LVL749
 10871 2235 4F0A0000 		.4byte	0xa4f
 10872 2239 1E       		.uleb128 0x1e
 10873 223a 01       		.uleb128 0x1
 10874 223b 50       		.byte	0x50
 10875 223c 02       		.uleb128 0x2
 10876 223d 74       		.byte	0x74
 10877 223e 00       		.sleb128 0
 10878 223f 1E       		.uleb128 0x1e
 10879 2240 01       		.uleb128 0x1
 10880 2241 51       		.byte	0x51
 10881 2242 02       		.uleb128 0x2
 10882 2243 91       		.byte	0x91
 10883 2244 74       		.sleb128 -12
 10884 2245 00       		.byte	0
 10885 2246 00       		.byte	0
 10886 2247 23       		.uleb128 0x23
 10887 2248 6F040000 		.4byte	.LASF148
 10888 224c 01       		.byte	0x1
 10889 224d 3211     		.2byte	0x1132
 10890 224f 29040000 		.4byte	0x429
 10891 2253 00000000 		.4byte	.LFB42
 10892 2257 7A010000 		.4byte	.LFE42-.LFB42
 10893 225b 01       		.uleb128 0x1
 10894 225c 9C       		.byte	0x9c
 10895 225d 72230000 		.4byte	0x2372
 10896 2261 14       		.uleb128 0x14
 10897 2262 667000   		.ascii	"fp\000"
 10898 2265 01       		.byte	0x1
 10899 2266 3311     		.2byte	0x1133
 10900 2268 4B1D0000 		.4byte	0x1d4b
 10901 226c 3D250000 		.4byte	.LLST181
 10902 2270 14       		.uleb128 0x14
 10903 2271 6F667300 		.ascii	"ofs\000"
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 293


 10904 2275 01       		.byte	0x1
 10905 2276 3411     		.2byte	0x1134
 10906 2278 D5000000 		.4byte	0xd5
 10907 227c 5B250000 		.4byte	.LLST182
 10908 2280 15       		.uleb128 0x15
 10909 2281 72657300 		.ascii	"res\000"
 10910 2285 01       		.byte	0x1
 10911 2286 3711     		.2byte	0x1137
 10912 2288 29040000 		.4byte	0x429
 10913 228c A5250000 		.4byte	.LLST183
 10914 2290 1B       		.uleb128 0x1b
 10915 2291 667300   		.ascii	"fs\000"
 10916 2294 01       		.byte	0x1
 10917 2295 3811     		.2byte	0x1138
 10918 2297 3E020000 		.4byte	0x23e
 10919 229b 02       		.uleb128 0x2
 10920 229c 91       		.byte	0x91
 10921 229d 64       		.sleb128 -28
 10922 229e 22       		.uleb128 0x22
 10923 229f F9020000 		.4byte	.LASF94
 10924 22a3 01       		.byte	0x1
 10925 22a4 3911     		.2byte	0x1139
 10926 22a6 B8000000 		.4byte	0xb8
 10927 22aa 10260000 		.4byte	.LLST184
 10928 22ae 15       		.uleb128 0x15
 10929 22af 62637300 		.ascii	"bcs\000"
 10930 22b3 01       		.byte	0x1
 10931 22b4 3911     		.2byte	0x1139
 10932 22b6 B8000000 		.4byte	0xb8
 10933 22ba E9260000 		.4byte	.LLST185
 10934 22be 22       		.uleb128 0x22
 10935 22bf AF060000 		.4byte	.LASF149
 10936 22c3 01       		.byte	0x1
 10937 22c4 3A11     		.2byte	0x113a
 10938 22c6 E0000000 		.4byte	0xe0
 10939 22ca 07270000 		.4byte	.LLST186
 10940 22ce 22       		.uleb128 0x22
 10941 22cf 45000000 		.4byte	.LASF150
 10942 22d3 01       		.byte	0x1
 10943 22d4 3B11     		.2byte	0x113b
 10944 22d6 D5000000 		.4byte	0xd5
 10945 22da 5E270000 		.4byte	.LLST187
 10946 22de 1D       		.uleb128 0x1d
 10947 22df 12000000 		.4byte	.LVL753
 10948 22e3 4F0A0000 		.4byte	0xa4f
 10949 22e7 F8220000 		.4byte	0x22f8
 10950 22eb 1E       		.uleb128 0x1e
 10951 22ec 01       		.uleb128 0x1
 10952 22ed 50       		.byte	0x50
 10953 22ee 02       		.uleb128 0x2
 10954 22ef 74       		.byte	0x74
 10955 22f0 00       		.sleb128 0
 10956 22f1 1E       		.uleb128 0x1e
 10957 22f2 01       		.uleb128 0x1
 10958 22f3 51       		.byte	0x51
 10959 22f4 02       		.uleb128 0x2
 10960 22f5 91       		.byte	0x91
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 294


 10961 22f6 64       		.sleb128 -28
 10962 22f7 00       		.byte	0
 10963 22f8 1D       		.uleb128 0x1d
 10964 22f9 66000000 		.4byte	.LVL764
 10965 22fd 3F120000 		.4byte	0x123f
 10966 2301 0C230000 		.4byte	0x230c
 10967 2305 1E       		.uleb128 0x1e
 10968 2306 01       		.uleb128 0x1
 10969 2307 50       		.byte	0x50
 10970 2308 02       		.uleb128 0x2
 10971 2309 74       		.byte	0x74
 10972 230a 00       		.sleb128 0
 10973 230b 00       		.byte	0
 10974 230c 1D       		.uleb128 0x1d
 10975 230d A2000000 		.4byte	.LVL776
 10976 2311 3F120000 		.4byte	0x123f
 10977 2315 20230000 		.4byte	0x2320
 10978 2319 1E       		.uleb128 0x1e
 10979 231a 01       		.uleb128 0x1
 10980 231b 50       		.byte	0x50
 10981 231c 02       		.uleb128 0x2
 10982 231d 74       		.byte	0x74
 10983 231e 00       		.sleb128 0
 10984 231f 00       		.byte	0
 10985 2320 1D       		.uleb128 0x1d
 10986 2321 AE000000 		.4byte	.LVL778
 10987 2325 AA100000 		.4byte	0x10aa
 10988 2329 34230000 		.4byte	0x2334
 10989 232d 1E       		.uleb128 0x1e
 10990 232e 01       		.uleb128 0x1
 10991 232f 50       		.byte	0x50
 10992 2330 02       		.uleb128 0x2
 10993 2331 74       		.byte	0x74
 10994 2332 00       		.sleb128 0
 10995 2333 00       		.byte	0
 10996 2334 20       		.uleb128 0x20
 10997 2335 EE000000 		.4byte	.LVL789
 10998 2339 21070000 		.4byte	0x721
 10999 233d 1D       		.uleb128 0x1d
 11000 233e 38010000 		.4byte	.LVL798
 11001 2342 312D0000 		.4byte	0x2d31
 11002 2346 56230000 		.4byte	0x2356
 11003 234a 1E       		.uleb128 0x1e
 11004 234b 01       		.uleb128 0x1
 11005 234c 51       		.byte	0x51
 11006 234d 02       		.uleb128 0x2
 11007 234e 74       		.byte	0x74
 11008 234f 28       		.sleb128 40
 11009 2350 1E       		.uleb128 0x1e
 11010 2351 01       		.uleb128 0x1
 11011 2352 53       		.byte	0x53
 11012 2353 01       		.uleb128 0x1
 11013 2354 31       		.byte	0x31
 11014 2355 00       		.byte	0
 11015 2356 1F       		.uleb128 0x1f
 11016 2357 5A010000 		.4byte	.LVL801
 11017 235b 3C2D0000 		.4byte	0x2d3c
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 295


 11018 235f 1E       		.uleb128 0x1e
 11019 2360 01       		.uleb128 0x1
 11020 2361 51       		.byte	0x51
 11021 2362 02       		.uleb128 0x2
 11022 2363 74       		.byte	0x74
 11023 2364 28       		.sleb128 40
 11024 2365 1E       		.uleb128 0x1e
 11025 2366 01       		.uleb128 0x1
 11026 2367 52       		.byte	0x52
 11027 2368 02       		.uleb128 0x2
 11028 2369 75       		.byte	0x75
 11029 236a 00       		.sleb128 0
 11030 236b 1E       		.uleb128 0x1e
 11031 236c 01       		.uleb128 0x1
 11032 236d 53       		.byte	0x53
 11033 236e 01       		.uleb128 0x1
 11034 236f 31       		.byte	0x31
 11035 2370 00       		.byte	0
 11036 2371 00       		.byte	0
 11037 2372 23       		.uleb128 0x23
 11038 2373 26060000 		.4byte	.LASF151
 11039 2377 01       		.byte	0x1
 11040 2378 D511     		.2byte	0x11d5
 11041 237a 29040000 		.4byte	0x429
 11042 237e 00000000 		.4byte	.LFB43
 11043 2382 72000000 		.4byte	.LFE43-.LFB43
 11044 2386 01       		.uleb128 0x1
 11045 2387 9C       		.byte	0x9c
 11046 2388 1B240000 		.4byte	0x241b
 11047 238c 14       		.uleb128 0x14
 11048 238d 647000   		.ascii	"dp\000"
 11049 2390 01       		.byte	0x1
 11050 2391 D611     		.2byte	0x11d6
 11051 2393 BC080000 		.4byte	0x8bc
 11052 2397 89270000 		.4byte	.LLST188
 11053 239b 1C       		.uleb128 0x1c
 11054 239c 67000000 		.4byte	.LASF99
 11055 23a0 01       		.byte	0x1
 11056 23a1 D711     		.2byte	0x11d7
 11057 23a3 CE090000 		.4byte	0x9ce
 11058 23a7 D9270000 		.4byte	.LLST189
 11059 23ab 15       		.uleb128 0x15
 11060 23ac 72657300 		.ascii	"res\000"
 11061 23b0 01       		.byte	0x1
 11062 23b1 DA11     		.2byte	0x11da
 11063 23b3 29040000 		.4byte	0x429
 11064 23b7 27280000 		.4byte	.LLST190
 11065 23bb 1B       		.uleb128 0x1b
 11066 23bc 667300   		.ascii	"fs\000"
 11067 23bf 01       		.byte	0x1
 11068 23c0 DB11     		.2byte	0x11db
 11069 23c2 3E020000 		.4byte	0x23e
 11070 23c6 02       		.uleb128 0x2
 11071 23c7 91       		.byte	0x91
 11072 23c8 6C       		.sleb128 -20
 11073 23c9 1D       		.uleb128 0x1d
 11074 23ca 14000000 		.4byte	.LVL810
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 296


 11075 23ce 070D0000 		.4byte	0xd07
 11076 23d2 E8230000 		.4byte	0x23e8
 11077 23d6 1E       		.uleb128 0x1e
 11078 23d7 01       		.uleb128 0x1
 11079 23d8 50       		.byte	0x50
 11080 23d9 02       		.uleb128 0x2
 11081 23da 91       		.byte	0x91
 11082 23db 64       		.sleb128 -28
 11083 23dc 1E       		.uleb128 0x1e
 11084 23dd 01       		.uleb128 0x1
 11085 23de 51       		.byte	0x51
 11086 23df 02       		.uleb128 0x2
 11087 23e0 91       		.byte	0x91
 11088 23e1 6C       		.sleb128 -20
 11089 23e2 1E       		.uleb128 0x1e
 11090 23e3 01       		.uleb128 0x1
 11091 23e4 52       		.byte	0x52
 11092 23e5 01       		.uleb128 0x1
 11093 23e6 30       		.byte	0x30
 11094 23e7 00       		.byte	0
 11095 23e8 1D       		.uleb128 0x1d
 11096 23e9 24000000 		.4byte	.LVL812
 11097 23ed AC160000 		.4byte	0x16ac
 11098 23f1 FC230000 		.4byte	0x23fc
 11099 23f5 1E       		.uleb128 0x1e
 11100 23f6 01       		.uleb128 0x1
 11101 23f7 50       		.byte	0x50
 11102 23f8 02       		.uleb128 0x2
 11103 23f9 75       		.byte	0x75
 11104 23fa 00       		.sleb128 0
 11105 23fb 00       		.byte	0
 11106 23fc 20       		.uleb128 0x20
 11107 23fd 40000000 		.4byte	.LVL814
 11108 2401 5B070000 		.4byte	0x75b
 11109 2405 1F       		.uleb128 0x1f
 11110 2406 56000000 		.4byte	.LVL817
 11111 240a A8110000 		.4byte	0x11a8
 11112 240e 1E       		.uleb128 0x1e
 11113 240f 01       		.uleb128 0x1
 11114 2410 50       		.byte	0x50
 11115 2411 02       		.uleb128 0x2
 11116 2412 75       		.byte	0x75
 11117 2413 00       		.sleb128 0
 11118 2414 1E       		.uleb128 0x1e
 11119 2415 01       		.uleb128 0x1
 11120 2416 51       		.byte	0x51
 11121 2417 01       		.uleb128 0x1
 11122 2418 30       		.byte	0x30
 11123 2419 00       		.byte	0
 11124 241a 00       		.byte	0
 11125 241b 23       		.uleb128 0x23
 11126 241c E7060000 		.4byte	.LASF152
 11127 2420 01       		.byte	0x1
 11128 2421 1712     		.2byte	0x1217
 11129 2423 29040000 		.4byte	0x429
 11130 2427 00000000 		.4byte	.LFB44
 11131 242b 1A000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 297


 11132 242f 01       		.uleb128 0x1
 11133 2430 9C       		.byte	0x9c
 11134 2431 79240000 		.4byte	0x2479
 11135 2435 14       		.uleb128 0x14
 11136 2436 647000   		.ascii	"dp\000"
 11137 2439 01       		.byte	0x1
 11138 243a 1812     		.2byte	0x1218
 11139 243c BC080000 		.4byte	0x8bc
 11140 2440 66280000 		.4byte	.LLST191
 11141 2444 15       		.uleb128 0x15
 11142 2445 72657300 		.ascii	"res\000"
 11143 2449 01       		.byte	0x1
 11144 244a 1B12     		.2byte	0x121b
 11145 244c 29040000 		.4byte	0x429
 11146 2450 84280000 		.4byte	.LLST192
 11147 2454 1B       		.uleb128 0x1b
 11148 2455 667300   		.ascii	"fs\000"
 11149 2458 01       		.byte	0x1
 11150 2459 1C12     		.2byte	0x121c
 11151 245b 3E020000 		.4byte	0x23e
 11152 245f 02       		.uleb128 0x2
 11153 2460 91       		.byte	0x91
 11154 2461 74       		.sleb128 -12
 11155 2462 1F       		.uleb128 0x1f
 11156 2463 0C000000 		.4byte	.LVL825
 11157 2467 4F0A0000 		.4byte	0xa4f
 11158 246b 1E       		.uleb128 0x1e
 11159 246c 01       		.uleb128 0x1
 11160 246d 50       		.byte	0x50
 11161 246e 02       		.uleb128 0x2
 11162 246f 74       		.byte	0x74
 11163 2470 00       		.sleb128 0
 11164 2471 1E       		.uleb128 0x1e
 11165 2472 01       		.uleb128 0x1
 11166 2473 51       		.byte	0x51
 11167 2474 02       		.uleb128 0x2
 11168 2475 91       		.byte	0x91
 11169 2476 74       		.sleb128 -12
 11170 2477 00       		.byte	0
 11171 2478 00       		.byte	0
 11172 2479 23       		.uleb128 0x23
 11173 247a 96050000 		.4byte	.LASF153
 11174 247e 01       		.byte	0x1
 11175 247f 3512     		.2byte	0x1235
 11176 2481 29040000 		.4byte	0x429
 11177 2485 00000000 		.4byte	.LFB45
 11178 2489 4C000000 		.4byte	.LFE45-.LFB45
 11179 248d 01       		.uleb128 0x1
 11180 248e 9C       		.byte	0x9c
 11181 248f 4C250000 		.4byte	0x254c
 11182 2493 14       		.uleb128 0x14
 11183 2494 647000   		.ascii	"dp\000"
 11184 2497 01       		.byte	0x1
 11185 2498 3612     		.2byte	0x1236
 11186 249a BC080000 		.4byte	0x8bc
 11187 249e 97280000 		.4byte	.LLST193
 11188 24a2 14       		.uleb128 0x14
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 298


 11189 24a3 666E6F00 		.ascii	"fno\000"
 11190 24a7 01       		.byte	0x1
 11191 24a8 3712     		.2byte	0x1237
 11192 24aa C2080000 		.4byte	0x8c2
 11193 24ae B5280000 		.4byte	.LLST194
 11194 24b2 15       		.uleb128 0x15
 11195 24b3 72657300 		.ascii	"res\000"
 11196 24b7 01       		.byte	0x1
 11197 24b8 3A12     		.2byte	0x123a
 11198 24ba 29040000 		.4byte	0x429
 11199 24be D3280000 		.4byte	.LLST195
 11200 24c2 1B       		.uleb128 0x1b
 11201 24c3 667300   		.ascii	"fs\000"
 11202 24c6 01       		.byte	0x1
 11203 24c7 3B12     		.2byte	0x123b
 11204 24c9 3E020000 		.4byte	0x23e
 11205 24cd 02       		.uleb128 0x2
 11206 24ce 91       		.byte	0x91
 11207 24cf 6C       		.sleb128 -20
 11208 24d0 1D       		.uleb128 0x1d
 11209 24d1 0E000000 		.4byte	.LVL829
 11210 24d5 4F0A0000 		.4byte	0xa4f
 11211 24d9 EA240000 		.4byte	0x24ea
 11212 24dd 1E       		.uleb128 0x1e
 11213 24de 01       		.uleb128 0x1
 11214 24df 50       		.byte	0x50
 11215 24e0 02       		.uleb128 0x2
 11216 24e1 75       		.byte	0x75
 11217 24e2 00       		.sleb128 0
 11218 24e3 1E       		.uleb128 0x1e
 11219 24e4 01       		.uleb128 0x1
 11220 24e5 51       		.byte	0x51
 11221 24e6 02       		.uleb128 0x2
 11222 24e7 91       		.byte	0x91
 11223 24e8 6C       		.sleb128 -20
 11224 24e9 00       		.byte	0
 11225 24ea 1D       		.uleb128 0x1d
 11226 24eb 1C000000 		.4byte	.LVL831
 11227 24ef A8110000 		.4byte	0x11a8
 11228 24f3 03250000 		.4byte	0x2503
 11229 24f7 1E       		.uleb128 0x1e
 11230 24f8 01       		.uleb128 0x1
 11231 24f9 50       		.byte	0x50
 11232 24fa 02       		.uleb128 0x2
 11233 24fb 75       		.byte	0x75
 11234 24fc 00       		.sleb128 0
 11235 24fd 1E       		.uleb128 0x1e
 11236 24fe 01       		.uleb128 0x1
 11237 24ff 51       		.byte	0x51
 11238 2500 01       		.uleb128 0x1
 11239 2501 30       		.byte	0x30
 11240 2502 00       		.byte	0
 11241 2503 1D       		.uleb128 0x1d
 11242 2504 28000000 		.4byte	.LVL835
 11243 2508 B2180000 		.4byte	0x18b2
 11244 250c 1C250000 		.4byte	0x251c
 11245 2510 1E       		.uleb128 0x1e
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 299


 11246 2511 01       		.uleb128 0x1
 11247 2512 50       		.byte	0x50
 11248 2513 02       		.uleb128 0x2
 11249 2514 75       		.byte	0x75
 11250 2515 00       		.sleb128 0
 11251 2516 1E       		.uleb128 0x1e
 11252 2517 01       		.uleb128 0x1
 11253 2518 51       		.byte	0x51
 11254 2519 01       		.uleb128 0x1
 11255 251a 30       		.byte	0x30
 11256 251b 00       		.byte	0
 11257 251c 1D       		.uleb128 0x1d
 11258 251d 38000000 		.4byte	.LVL837
 11259 2521 3F080000 		.4byte	0x83f
 11260 2525 36250000 		.4byte	0x2536
 11261 2529 1E       		.uleb128 0x1e
 11262 252a 01       		.uleb128 0x1
 11263 252b 50       		.byte	0x50
 11264 252c 02       		.uleb128 0x2
 11265 252d 75       		.byte	0x75
 11266 252e 00       		.sleb128 0
 11267 252f 1E       		.uleb128 0x1e
 11268 2530 01       		.uleb128 0x1
 11269 2531 51       		.byte	0x51
 11270 2532 02       		.uleb128 0x2
 11271 2533 76       		.byte	0x76
 11272 2534 00       		.sleb128 0
 11273 2535 00       		.byte	0
 11274 2536 1F       		.uleb128 0x1f
 11275 2537 40000000 		.4byte	.LVL838
 11276 253b 48150000 		.4byte	0x1548
 11277 253f 1E       		.uleb128 0x1e
 11278 2540 01       		.uleb128 0x1
 11279 2541 50       		.byte	0x50
 11280 2542 02       		.uleb128 0x2
 11281 2543 75       		.byte	0x75
 11282 2544 00       		.sleb128 0
 11283 2545 1E       		.uleb128 0x1e
 11284 2546 01       		.uleb128 0x1
 11285 2547 51       		.byte	0x51
 11286 2548 01       		.uleb128 0x1
 11287 2549 30       		.byte	0x30
 11288 254a 00       		.byte	0
 11289 254b 00       		.byte	0
 11290 254c 23       		.uleb128 0x23
 11291 254d FE010000 		.4byte	.LASF154
 11292 2551 01       		.byte	0x1
 11293 2552 8D12     		.2byte	0x128d
 11294 2554 29040000 		.4byte	0x429
 11295 2558 00000000 		.4byte	.LFB46
 11296 255c 3E000000 		.4byte	.LFE46-.LFB46
 11297 2560 01       		.uleb128 0x1
 11298 2561 9C       		.byte	0x9c
 11299 2562 EF250000 		.4byte	0x25ef
 11300 2566 1C       		.uleb128 0x1c
 11301 2567 67000000 		.4byte	.LASF99
 11302 256b 01       		.byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 300


 11303 256c 8E12     		.2byte	0x128e
 11304 256e CE090000 		.4byte	0x9ce
 11305 2572 28290000 		.4byte	.LLST196
 11306 2576 14       		.uleb128 0x14
 11307 2577 666E6F00 		.ascii	"fno\000"
 11308 257b 01       		.byte	0x1
 11309 257c 8F12     		.2byte	0x128f
 11310 257e C2080000 		.4byte	0x8c2
 11311 2582 54290000 		.4byte	.LLST197
 11312 2586 15       		.uleb128 0x15
 11313 2587 72657300 		.ascii	"res\000"
 11314 258b 01       		.byte	0x1
 11315 258c 9212     		.2byte	0x1292
 11316 258e 29040000 		.4byte	0x429
 11317 2592 72290000 		.4byte	.LLST198
 11318 2596 1B       		.uleb128 0x1b
 11319 2597 646A00   		.ascii	"dj\000"
 11320 259a 01       		.byte	0x1
 11321 259b 9312     		.2byte	0x1293
 11322 259d 36030000 		.4byte	0x336
 11323 25a1 02       		.uleb128 0x2
 11324 25a2 91       		.byte	0x91
 11325 25a3 44       		.sleb128 -60
 11326 25a4 1D       		.uleb128 0x1d
 11327 25a5 12000000 		.4byte	.LVL843
 11328 25a9 070D0000 		.4byte	0xd07
 11329 25ad C4250000 		.4byte	0x25c4
 11330 25b1 1E       		.uleb128 0x1e
 11331 25b2 01       		.uleb128 0x1
 11332 25b3 50       		.byte	0x50
 11333 25b4 03       		.uleb128 0x3
 11334 25b5 91       		.byte	0x91
 11335 25b6 BC7F     		.sleb128 -68
 11336 25b8 1E       		.uleb128 0x1e
 11337 25b9 01       		.uleb128 0x1
 11338 25ba 51       		.byte	0x51
 11339 25bb 02       		.uleb128 0x2
 11340 25bc 91       		.byte	0x91
 11341 25bd 44       		.sleb128 -60
 11342 25be 1E       		.uleb128 0x1e
 11343 25bf 01       		.uleb128 0x1
 11344 25c0 52       		.byte	0x52
 11345 25c1 01       		.uleb128 0x1
 11346 25c2 30       		.byte	0x30
 11347 25c3 00       		.byte	0
 11348 25c4 1D       		.uleb128 0x1d
 11349 25c5 1E000000 		.4byte	.LVL845
 11350 25c9 AC160000 		.4byte	0x16ac
 11351 25cd D8250000 		.4byte	0x25d8
 11352 25d1 1E       		.uleb128 0x1e
 11353 25d2 01       		.uleb128 0x1
 11354 25d3 50       		.byte	0x50
 11355 25d4 02       		.uleb128 0x2
 11356 25d5 91       		.byte	0x91
 11357 25d6 44       		.sleb128 -60
 11358 25d7 00       		.byte	0
 11359 25d8 1F       		.uleb128 0x1f
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 301


 11360 25d9 34000000 		.4byte	.LVL847
 11361 25dd 3F080000 		.4byte	0x83f
 11362 25e1 1E       		.uleb128 0x1e
 11363 25e2 01       		.uleb128 0x1
 11364 25e3 50       		.byte	0x50
 11365 25e4 02       		.uleb128 0x2
 11366 25e5 91       		.byte	0x91
 11367 25e6 44       		.sleb128 -60
 11368 25e7 1E       		.uleb128 0x1e
 11369 25e8 01       		.uleb128 0x1
 11370 25e9 51       		.byte	0x51
 11371 25ea 02       		.uleb128 0x2
 11372 25eb 75       		.byte	0x75
 11373 25ec 00       		.sleb128 0
 11374 25ed 00       		.byte	0
 11375 25ee 00       		.byte	0
 11376 25ef 23       		.uleb128 0x23
 11377 25f0 28040000 		.4byte	.LASF155
 11378 25f4 01       		.byte	0x1
 11379 25f5 B012     		.2byte	0x12b0
 11380 25f7 29040000 		.4byte	0x429
 11381 25fb 00000000 		.4byte	.LFB47
 11382 25ff CE000000 		.4byte	.LFE47-.LFB47
 11383 2603 01       		.uleb128 0x1
 11384 2604 9C       		.byte	0x9c
 11385 2605 14270000 		.4byte	0x2714
 11386 2609 1C       		.uleb128 0x1c
 11387 260a 67000000 		.4byte	.LASF99
 11388 260e 01       		.byte	0x1
 11389 260f B112     		.2byte	0x12b1
 11390 2611 CE090000 		.4byte	0x9ce
 11391 2615 A6290000 		.4byte	.LLST199
 11392 2619 1C       		.uleb128 0x1c
 11393 261a B9030000 		.4byte	.LASF114
 11394 261e 01       		.byte	0x1
 11395 261f B212     		.2byte	0x12b2
 11396 2621 14270000 		.4byte	0x2714
 11397 2625 D1290000 		.4byte	.LLST200
 11398 2629 1C       		.uleb128 0x1c
 11399 262a E8030000 		.4byte	.LASF156
 11400 262e 01       		.byte	0x1
 11401 262f B312     		.2byte	0x12b3
 11402 2631 A90A0000 		.4byte	0xaa9
 11403 2635 EF290000 		.4byte	.LLST201
 11404 2639 15       		.uleb128 0x15
 11405 263a 72657300 		.ascii	"res\000"
 11406 263e 01       		.byte	0x1
 11407 263f B612     		.2byte	0x12b6
 11408 2641 29040000 		.4byte	0x429
 11409 2645 342A0000 		.4byte	.LLST202
 11410 2649 1B       		.uleb128 0x1b
 11411 264a 667300   		.ascii	"fs\000"
 11412 264d 01       		.byte	0x1
 11413 264e B712     		.2byte	0x12b7
 11414 2650 3E020000 		.4byte	0x23e
 11415 2654 02       		.uleb128 0x2
 11416 2655 91       		.byte	0x91
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 302


 11417 2656 5C       		.sleb128 -36
 11418 2657 22       		.uleb128 0x22
 11419 2658 3E030000 		.4byte	.LASF157
 11420 265c 01       		.byte	0x1
 11421 265d B812     		.2byte	0x12b8
 11422 265f B8000000 		.4byte	0xb8
 11423 2663 7E2A0000 		.4byte	.LLST203
 11424 2667 22       		.uleb128 0x22
 11425 2668 F9020000 		.4byte	.LASF94
 11426 266c 01       		.byte	0x1
 11427 266d B812     		.2byte	0x12b8
 11428 266f B8000000 		.4byte	0xb8
 11429 2673 B42A0000 		.4byte	.LLST204
 11430 2677 22       		.uleb128 0x22
 11431 2678 B5060000 		.4byte	.LASF40
 11432 267c 01       		.byte	0x1
 11433 267d B812     		.2byte	0x12b8
 11434 267f B8000000 		.4byte	0xb8
 11435 2683 012B0000 		.4byte	.LLST205
 11436 2687 22       		.uleb128 0x22
 11437 2688 9F000000 		.4byte	.LASF47
 11438 268c 01       		.byte	0x1
 11439 268d B912     		.2byte	0x12b9
 11440 268f E0000000 		.4byte	0xe0
 11441 2693 1F2B0000 		.4byte	.LLST206
 11442 2697 15       		.uleb128 0x15
 11443 2698 6900     		.ascii	"i\000"
 11444 269a 01       		.byte	0x1
 11445 269b BA12     		.2byte	0x12ba
 11446 269d 97000000 		.4byte	0x97
 11447 26a1 482B0000 		.4byte	.LLST207
 11448 26a5 1B       		.uleb128 0x1b
 11449 26a6 6F626A00 		.ascii	"obj\000"
 11450 26aa 01       		.byte	0x1
 11451 26ab BB12     		.2byte	0x12bb
 11452 26ad 44020000 		.4byte	0x244
 11453 26b1 02       		.uleb128 0x2
 11454 26b2 91       		.byte	0x91
 11455 26b3 4C       		.sleb128 -52
 11456 26b4 1D       		.uleb128 0x1d
 11457 26b5 16000000 		.4byte	.LVL854
 11458 26b9 070D0000 		.4byte	0xd07
 11459 26bd D3260000 		.4byte	0x26d3
 11460 26c1 1E       		.uleb128 0x1e
 11461 26c2 01       		.uleb128 0x1
 11462 26c3 50       		.byte	0x50
 11463 26c4 02       		.uleb128 0x2
 11464 26c5 91       		.byte	0x91
 11465 26c6 44       		.sleb128 -60
 11466 26c7 1E       		.uleb128 0x1e
 11467 26c8 01       		.uleb128 0x1
 11468 26c9 51       		.byte	0x51
 11469 26ca 02       		.uleb128 0x2
 11470 26cb 91       		.byte	0x91
 11471 26cc 5C       		.sleb128 -36
 11472 26cd 1E       		.uleb128 0x1e
 11473 26ce 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 303


 11474 26cf 52       		.byte	0x52
 11475 26d0 01       		.uleb128 0x1
 11476 26d1 30       		.byte	0x30
 11477 26d2 00       		.byte	0
 11478 26d3 1D       		.uleb128 0x1d
 11479 26d4 44000000 		.4byte	.LVL859
 11480 26d8 AA100000 		.4byte	0x10aa
 11481 26dc ED260000 		.4byte	0x26ed
 11482 26e0 1E       		.uleb128 0x1e
 11483 26e1 01       		.uleb128 0x1
 11484 26e2 50       		.byte	0x50
 11485 26e3 02       		.uleb128 0x2
 11486 26e4 91       		.byte	0x91
 11487 26e5 4C       		.sleb128 -52
 11488 26e6 1E       		.uleb128 0x1e
 11489 26e7 01       		.uleb128 0x1
 11490 26e8 51       		.byte	0x51
 11491 26e9 02       		.uleb128 0x2
 11492 26ea 74       		.byte	0x74
 11493 26eb 00       		.sleb128 0
 11494 26ec 00       		.byte	0
 11495 26ed 1D       		.uleb128 0x1d
 11496 26ee 72000000 		.4byte	.LVL867
 11497 26f2 170B0000 		.4byte	0xb17
 11498 26f6 01270000 		.4byte	0x2701
 11499 26fa 1E       		.uleb128 0x1e
 11500 26fb 01       		.uleb128 0x1
 11501 26fc 51       		.byte	0x51
 11502 26fd 02       		.uleb128 0x2
 11503 26fe 77       		.byte	0x77
 11504 26ff 00       		.sleb128 0
 11505 2700 00       		.byte	0
 11506 2701 20       		.uleb128 0x20
 11507 2702 88000000 		.4byte	.LVL869
 11508 2706 6B040000 		.4byte	0x46b
 11509 270a 20       		.uleb128 0x20
 11510 270b 98000000 		.4byte	.LVL872
 11511 270f B0040000 		.4byte	0x4b0
 11512 2713 00       		.byte	0
 11513 2714 0B       		.uleb128 0xb
 11514 2715 04       		.byte	0x4
 11515 2716 B8000000 		.4byte	0xb8
 11516 271a 23       		.uleb128 0x23
 11517 271b 99060000 		.4byte	.LASF158
 11518 271f 01       		.byte	0x1
 11519 2720 0A13     		.2byte	0x130a
 11520 2722 29040000 		.4byte	0x429
 11521 2726 00000000 		.4byte	.LFB48
 11522 272a B4000000 		.4byte	.LFE48-.LFB48
 11523 272e 01       		.uleb128 0x1
 11524 272f 9C       		.byte	0x9c
 11525 2730 E2270000 		.4byte	0x27e2
 11526 2734 14       		.uleb128 0x14
 11527 2735 667000   		.ascii	"fp\000"
 11528 2738 01       		.byte	0x1
 11529 2739 0B13     		.2byte	0x130b
 11530 273b 4B1D0000 		.4byte	0x1d4b
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 304


 11531 273f 672B0000 		.4byte	.LLST208
 11532 2743 15       		.uleb128 0x15
 11533 2744 72657300 		.ascii	"res\000"
 11534 2748 01       		.byte	0x1
 11535 2749 0E13     		.2byte	0x130e
 11536 274b 29040000 		.4byte	0x429
 11537 274f 852B0000 		.4byte	.LLST209
 11538 2753 1B       		.uleb128 0x1b
 11539 2754 667300   		.ascii	"fs\000"
 11540 2757 01       		.byte	0x1
 11541 2758 0F13     		.2byte	0x130f
 11542 275a 3E020000 		.4byte	0x23e
 11543 275e 02       		.uleb128 0x2
 11544 275f 91       		.byte	0x91
 11545 2760 6C       		.sleb128 -20
 11546 2761 15       		.uleb128 0x15
 11547 2762 6E636C00 		.ascii	"ncl\000"
 11548 2766 01       		.byte	0x1
 11549 2767 1013     		.2byte	0x1310
 11550 2769 B8000000 		.4byte	0xb8
 11551 276d D02B0000 		.4byte	.LLST210
 11552 2771 1D       		.uleb128 0x1d
 11553 2772 0C000000 		.4byte	.LVL881
 11554 2776 4F0A0000 		.4byte	0xa4f
 11555 277a 8B270000 		.4byte	0x278b
 11556 277e 1E       		.uleb128 0x1e
 11557 277f 01       		.uleb128 0x1
 11558 2780 50       		.byte	0x50
 11559 2781 02       		.uleb128 0x2
 11560 2782 75       		.byte	0x75
 11561 2783 00       		.sleb128 0
 11562 2784 1E       		.uleb128 0x1e
 11563 2785 01       		.uleb128 0x1
 11564 2786 51       		.byte	0x51
 11565 2787 02       		.uleb128 0x2
 11566 2788 91       		.byte	0x91
 11567 2789 6C       		.sleb128 -20
 11568 278a 00       		.byte	0
 11569 278b 1D       		.uleb128 0x1d
 11570 278c 32000000 		.4byte	.LVL883
 11571 2790 3F130000 		.4byte	0x133f
 11572 2794 A4270000 		.4byte	0x27a4
 11573 2798 1E       		.uleb128 0x1e
 11574 2799 01       		.uleb128 0x1
 11575 279a 50       		.byte	0x50
 11576 279b 02       		.uleb128 0x2
 11577 279c 75       		.byte	0x75
 11578 279d 00       		.sleb128 0
 11579 279e 1E       		.uleb128 0x1e
 11580 279f 01       		.uleb128 0x1
 11581 27a0 52       		.byte	0x52
 11582 27a1 01       		.uleb128 0x1
 11583 27a2 30       		.byte	0x30
 11584 27a3 00       		.byte	0
 11585 27a4 1D       		.uleb128 0x1d
 11586 27a5 42000000 		.4byte	.LVL885
 11587 27a9 AA100000 		.4byte	0x10aa
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 305


 11588 27ad B8270000 		.4byte	0x27b8
 11589 27b1 1E       		.uleb128 0x1e
 11590 27b2 01       		.uleb128 0x1
 11591 27b3 50       		.byte	0x50
 11592 27b4 02       		.uleb128 0x2
 11593 27b5 75       		.byte	0x75
 11594 27b6 00       		.sleb128 0
 11595 27b7 00       		.byte	0
 11596 27b8 1D       		.uleb128 0x1d
 11597 27b9 64000000 		.4byte	.LVL889
 11598 27bd 3F130000 		.4byte	0x133f
 11599 27c1 CC270000 		.4byte	0x27cc
 11600 27c5 1E       		.uleb128 0x1e
 11601 27c6 01       		.uleb128 0x1
 11602 27c7 50       		.byte	0x50
 11603 27c8 02       		.uleb128 0x2
 11604 27c9 75       		.byte	0x75
 11605 27ca 00       		.sleb128 0
 11606 27cb 00       		.byte	0
 11607 27cc 1F       		.uleb128 0x1f
 11608 27cd 8A000000 		.4byte	.LVL891
 11609 27d1 312D0000 		.4byte	0x2d31
 11610 27d5 1E       		.uleb128 0x1e
 11611 27d6 01       		.uleb128 0x1
 11612 27d7 51       		.byte	0x51
 11613 27d8 02       		.uleb128 0x2
 11614 27d9 75       		.byte	0x75
 11615 27da 28       		.sleb128 40
 11616 27db 1E       		.uleb128 0x1e
 11617 27dc 01       		.uleb128 0x1
 11618 27dd 53       		.byte	0x53
 11619 27de 01       		.uleb128 0x1
 11620 27df 31       		.byte	0x31
 11621 27e0 00       		.byte	0
 11622 27e1 00       		.byte	0
 11623 27e2 23       		.uleb128 0x23
 11624 27e3 92040000 		.4byte	.LASF159
 11625 27e7 01       		.byte	0x1
 11626 27e8 3C13     		.2byte	0x133c
 11627 27ea 29040000 		.4byte	0x429
 11628 27ee 00000000 		.4byte	.LFB49
 11629 27f2 AC000000 		.4byte	.LFE49-.LFB49
 11630 27f6 01       		.uleb128 0x1
 11631 27f7 9C       		.byte	0x9c
 11632 27f8 13290000 		.4byte	0x2913
 11633 27fc 1C       		.uleb128 0x1c
 11634 27fd 67000000 		.4byte	.LASF99
 11635 2801 01       		.byte	0x1
 11636 2802 3D13     		.2byte	0x133d
 11637 2804 CE090000 		.4byte	0x9ce
 11638 2808 EE2B0000 		.4byte	.LLST211
 11639 280c 15       		.uleb128 0x15
 11640 280d 72657300 		.ascii	"res\000"
 11641 2811 01       		.byte	0x1
 11642 2812 4013     		.2byte	0x1340
 11643 2814 29040000 		.4byte	0x429
 11644 2818 1A2C0000 		.4byte	.LLST212
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 306


 11645 281c 1B       		.uleb128 0x1b
 11646 281d 646A00   		.ascii	"dj\000"
 11647 2820 01       		.byte	0x1
 11648 2821 4113     		.2byte	0x1341
 11649 2823 36030000 		.4byte	0x336
 11650 2827 02       		.uleb128 0x2
 11651 2828 91       		.byte	0x91
 11652 2829 44       		.sleb128 -60
 11653 282a 1B       		.uleb128 0x1b
 11654 282b 73646A00 		.ascii	"sdj\000"
 11655 282f 01       		.byte	0x1
 11656 2830 4113     		.2byte	0x1341
 11657 2832 36030000 		.4byte	0x336
 11658 2836 03       		.uleb128 0x3
 11659 2837 91       		.byte	0x91
 11660 2838 987F     		.sleb128 -104
 11661 283a 22       		.uleb128 0x22
 11662 283b 54040000 		.4byte	.LASF160
 11663 283f 01       		.byte	0x1
 11664 2840 4213     		.2byte	0x1342
 11665 2842 B8000000 		.4byte	0xb8
 11666 2846 852C0000 		.4byte	.LLST213
 11667 284a 1B       		.uleb128 0x1b
 11668 284b 667300   		.ascii	"fs\000"
 11669 284e 01       		.byte	0x1
 11670 284f 4313     		.2byte	0x1343
 11671 2851 3E020000 		.4byte	0x23e
 11672 2855 03       		.uleb128 0x3
 11673 2856 91       		.byte	0x91
 11674 2857 947F     		.sleb128 -108
 11675 2859 1D       		.uleb128 0x1d
 11676 285a 10000000 		.4byte	.LVL899
 11677 285e 070D0000 		.4byte	0xd07
 11678 2862 7A280000 		.4byte	0x287a
 11679 2866 1E       		.uleb128 0x1e
 11680 2867 01       		.uleb128 0x1
 11681 2868 50       		.byte	0x50
 11682 2869 03       		.uleb128 0x3
 11683 286a 91       		.byte	0x91
 11684 286b 8C7F     		.sleb128 -116
 11685 286d 1E       		.uleb128 0x1e
 11686 286e 01       		.uleb128 0x1
 11687 286f 51       		.byte	0x51
 11688 2870 03       		.uleb128 0x3
 11689 2871 91       		.byte	0x91
 11690 2872 947F     		.sleb128 -108
 11691 2874 1E       		.uleb128 0x1e
 11692 2875 01       		.uleb128 0x1
 11693 2876 52       		.byte	0x52
 11694 2877 01       		.uleb128 0x1
 11695 2878 32       		.byte	0x32
 11696 2879 00       		.byte	0
 11697 287a 1D       		.uleb128 0x1d
 11698 287b 22000000 		.4byte	.LVL901
 11699 287f AC160000 		.4byte	0x16ac
 11700 2883 8E280000 		.4byte	0x288e
 11701 2887 1E       		.uleb128 0x1e
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 307


 11702 2888 01       		.uleb128 0x1
 11703 2889 50       		.byte	0x50
 11704 288a 02       		.uleb128 0x2
 11705 288b 91       		.byte	0x91
 11706 288c 44       		.sleb128 -60
 11707 288d 00       		.byte	0
 11708 288e 1D       		.uleb128 0x1d
 11709 288f 4E000000 		.4byte	.LVL903
 11710 2893 5B070000 		.4byte	0x75b
 11711 2897 A2280000 		.4byte	0x28a2
 11712 289b 1E       		.uleb128 0x1e
 11713 289c 01       		.uleb128 0x1
 11714 289d 50       		.byte	0x50
 11715 289e 02       		.uleb128 0x2
 11716 289f 76       		.byte	0x76
 11717 28a0 00       		.sleb128 0
 11718 28a1 00       		.byte	0
 11719 28a2 1D       		.uleb128 0x1d
 11720 28a3 66000000 		.4byte	.LVL906
 11721 28a7 A8110000 		.4byte	0x11a8
 11722 28ab BC280000 		.4byte	0x28bc
 11723 28af 1E       		.uleb128 0x1e
 11724 28b0 01       		.uleb128 0x1
 11725 28b1 50       		.byte	0x50
 11726 28b2 03       		.uleb128 0x3
 11727 28b3 91       		.byte	0x91
 11728 28b4 987F     		.sleb128 -104
 11729 28b6 1E       		.uleb128 0x1e
 11730 28b7 01       		.uleb128 0x1
 11731 28b8 51       		.byte	0x51
 11732 28b9 01       		.uleb128 0x1
 11733 28ba 30       		.byte	0x30
 11734 28bb 00       		.byte	0
 11735 28bc 1D       		.uleb128 0x1d
 11736 28bd 72000000 		.4byte	.LVL908
 11737 28c1 B2180000 		.4byte	0x18b2
 11738 28c5 D6280000 		.4byte	0x28d6
 11739 28c9 1E       		.uleb128 0x1e
 11740 28ca 01       		.uleb128 0x1
 11741 28cb 50       		.byte	0x50
 11742 28cc 03       		.uleb128 0x3
 11743 28cd 91       		.byte	0x91
 11744 28ce 987F     		.sleb128 -104
 11745 28d0 1E       		.uleb128 0x1e
 11746 28d1 01       		.uleb128 0x1
 11747 28d2 51       		.byte	0x51
 11748 28d3 01       		.uleb128 0x1
 11749 28d4 30       		.byte	0x30
 11750 28d5 00       		.byte	0
 11751 28d6 1D       		.uleb128 0x1d
 11752 28d7 8A000000 		.4byte	.LVL912
 11753 28db 0D140000 		.4byte	0x140d
 11754 28df EA280000 		.4byte	0x28ea
 11755 28e3 1E       		.uleb128 0x1e
 11756 28e4 01       		.uleb128 0x1
 11757 28e5 50       		.byte	0x50
 11758 28e6 02       		.uleb128 0x2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 308


 11759 28e7 91       		.byte	0x91
 11760 28e8 44       		.sleb128 -60
 11761 28e9 00       		.byte	0
 11762 28ea 1D       		.uleb128 0x1d
 11763 28eb 9A000000 		.4byte	.LVL914
 11764 28ef 3F130000 		.4byte	0x133f
 11765 28f3 09290000 		.4byte	0x2909
 11766 28f7 1E       		.uleb128 0x1e
 11767 28f8 01       		.uleb128 0x1
 11768 28f9 50       		.byte	0x50
 11769 28fa 02       		.uleb128 0x2
 11770 28fb 91       		.byte	0x91
 11771 28fc 44       		.sleb128 -60
 11772 28fd 1E       		.uleb128 0x1e
 11773 28fe 01       		.uleb128 0x1
 11774 28ff 51       		.byte	0x51
 11775 2900 02       		.uleb128 0x2
 11776 2901 75       		.byte	0x75
 11777 2902 00       		.sleb128 0
 11778 2903 1E       		.uleb128 0x1e
 11779 2904 01       		.uleb128 0x1
 11780 2905 52       		.byte	0x52
 11781 2906 01       		.uleb128 0x1
 11782 2907 30       		.byte	0x30
 11783 2908 00       		.byte	0
 11784 2909 20       		.uleb128 0x20
 11785 290a A4000000 		.4byte	.LVL916
 11786 290e 50190000 		.4byte	0x1950
 11787 2912 00       		.byte	0
 11788 2913 23       		.uleb128 0x23
 11789 2914 75030000 		.4byte	.LASF161
 11790 2918 01       		.byte	0x1
 11791 2919 9A13     		.2byte	0x139a
 11792 291b 29040000 		.4byte	0x429
 11793 291f 00000000 		.4byte	.LFB50
 11794 2923 FE000000 		.4byte	.LFE50-.LFB50
 11795 2927 01       		.uleb128 0x1
 11796 2928 9C       		.byte	0x9c
 11797 2929 D52A0000 		.4byte	0x2ad5
 11798 292d 1C       		.uleb128 0x1c
 11799 292e 67000000 		.4byte	.LASF99
 11800 2932 01       		.byte	0x1
 11801 2933 9B13     		.2byte	0x139b
 11802 2935 CE090000 		.4byte	0x9ce
 11803 2939 C62C0000 		.4byte	.LLST214
 11804 293d 15       		.uleb128 0x15
 11805 293e 72657300 		.ascii	"res\000"
 11806 2942 01       		.byte	0x1
 11807 2943 9E13     		.2byte	0x139e
 11808 2945 29040000 		.4byte	0x429
 11809 2949 F22C0000 		.4byte	.LLST215
 11810 294d 1B       		.uleb128 0x1b
 11811 294e 646A00   		.ascii	"dj\000"
 11812 2951 01       		.byte	0x1
 11813 2952 9F13     		.2byte	0x139f
 11814 2954 36030000 		.4byte	0x336
 11815 2958 02       		.uleb128 0x2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 309


 11816 2959 91       		.byte	0x91
 11817 295a 44       		.sleb128 -60
 11818 295b 21       		.uleb128 0x21
 11819 295c E0000000 		.4byte	.LASF162
 11820 2960 01       		.byte	0x1
 11821 2961 A013     		.2byte	0x13a0
 11822 2963 44020000 		.4byte	0x244
 11823 2967 03       		.uleb128 0x3
 11824 2968 91       		.byte	0x91
 11825 2969 B47F     		.sleb128 -76
 11826 296b 1B       		.uleb128 0x1b
 11827 296c 667300   		.ascii	"fs\000"
 11828 296f 01       		.byte	0x1
 11829 2970 A113     		.2byte	0x13a1
 11830 2972 3E020000 		.4byte	0x23e
 11831 2976 03       		.uleb128 0x3
 11832 2977 91       		.byte	0x91
 11833 2978 B07F     		.sleb128 -80
 11834 297a 15       		.uleb128 0x15
 11835 297b 64636C00 		.ascii	"dcl\000"
 11836 297f 01       		.byte	0x1
 11837 2980 A213     		.2byte	0x13a2
 11838 2982 B8000000 		.4byte	0xb8
 11839 2986 5E2D0000 		.4byte	.LLST216
 11840 298a 15       		.uleb128 0x15
 11841 298b 70636C00 		.ascii	"pcl\000"
 11842 298f 01       		.byte	0x1
 11843 2990 A213     		.2byte	0x13a2
 11844 2992 B8000000 		.4byte	0xb8
 11845 2996 7C2D0000 		.4byte	.LLST217
 11846 299a 15       		.uleb128 0x15
 11847 299b 746D00   		.ascii	"tm\000"
 11848 299e 01       		.byte	0x1
 11849 299f A213     		.2byte	0x13a2
 11850 29a1 B8000000 		.4byte	0xb8
 11851 29a5 902D0000 		.4byte	.LLST218
 11852 29a9 1D       		.uleb128 0x1d
 11853 29aa 10000000 		.4byte	.LVL920
 11854 29ae 070D0000 		.4byte	0xd07
 11855 29b2 CA290000 		.4byte	0x29ca
 11856 29b6 1E       		.uleb128 0x1e
 11857 29b7 01       		.uleb128 0x1
 11858 29b8 50       		.byte	0x50
 11859 29b9 03       		.uleb128 0x3
 11860 29ba 91       		.byte	0x91
 11861 29bb AC7F     		.sleb128 -84
 11862 29bd 1E       		.uleb128 0x1e
 11863 29be 01       		.uleb128 0x1
 11864 29bf 51       		.byte	0x51
 11865 29c0 03       		.uleb128 0x3
 11866 29c1 91       		.byte	0x91
 11867 29c2 B07F     		.sleb128 -80
 11868 29c4 1E       		.uleb128 0x1e
 11869 29c5 01       		.uleb128 0x1
 11870 29c6 52       		.byte	0x52
 11871 29c7 01       		.uleb128 0x1
 11872 29c8 32       		.byte	0x32
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 310


 11873 29c9 00       		.byte	0
 11874 29ca 1D       		.uleb128 0x1d
 11875 29cb 22000000 		.4byte	.LVL922
 11876 29cf AC160000 		.4byte	0x16ac
 11877 29d3 DE290000 		.4byte	0x29de
 11878 29d7 1E       		.uleb128 0x1e
 11879 29d8 01       		.uleb128 0x1
 11880 29d9 50       		.byte	0x50
 11881 29da 02       		.uleb128 0x2
 11882 29db 91       		.byte	0x91
 11883 29dc 44       		.sleb128 -60
 11884 29dd 00       		.byte	0
 11885 29de 1D       		.uleb128 0x1d
 11886 29df 3A000000 		.4byte	.LVL925
 11887 29e3 3F120000 		.4byte	0x123f
 11888 29e7 F8290000 		.4byte	0x29f8
 11889 29eb 1E       		.uleb128 0x1e
 11890 29ec 01       		.uleb128 0x1
 11891 29ed 50       		.byte	0x50
 11892 29ee 03       		.uleb128 0x3
 11893 29ef 91       		.byte	0x91
 11894 29f0 B47F     		.sleb128 -76
 11895 29f2 1E       		.uleb128 0x1e
 11896 29f3 01       		.uleb128 0x1
 11897 29f4 51       		.byte	0x51
 11898 29f5 01       		.uleb128 0x1
 11899 29f6 30       		.byte	0x30
 11900 29f7 00       		.byte	0
 11901 29f8 20       		.uleb128 0x20
 11902 29f9 52000000 		.4byte	.LVL929
 11903 29fd 5D2D0000 		.4byte	0x2d5d
 11904 2a01 1D       		.uleb128 0x1d
 11905 2a02 5E000000 		.4byte	.LVL932
 11906 2a06 64140000 		.4byte	0x1464
 11907 2a0a 152A0000 		.4byte	0x2a15
 11908 2a0e 1E       		.uleb128 0x1e
 11909 2a0f 01       		.uleb128 0x1
 11910 2a10 51       		.byte	0x51
 11911 2a11 02       		.uleb128 0x2
 11912 2a12 75       		.byte	0x75
 11913 2a13 00       		.sleb128 0
 11914 2a14 00       		.byte	0
 11915 2a15 1D       		.uleb128 0x1d
 11916 2a16 6E000000 		.4byte	.LVL934
 11917 2a1a C4050000 		.4byte	0x5c4
 11918 2a1e 2E2A0000 		.4byte	0x2a2e
 11919 2a22 1E       		.uleb128 0x1e
 11920 2a23 01       		.uleb128 0x1
 11921 2a24 51       		.byte	0x51
 11922 2a25 02       		.uleb128 0x2
 11923 2a26 08       		.byte	0x8
 11924 2a27 20       		.byte	0x20
 11925 2a28 1E       		.uleb128 0x1e
 11926 2a29 01       		.uleb128 0x1
 11927 2a2a 52       		.byte	0x52
 11928 2a2b 01       		.uleb128 0x1
 11929 2a2c 3B       		.byte	0x3b
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 311


 11930 2a2d 00       		.byte	0
 11931 2a2e 1D       		.uleb128 0x1d
 11932 2a2f 84000000 		.4byte	.LVL935
 11933 2a33 21050000 		.4byte	0x521
 11934 2a37 422A0000 		.4byte	0x2a42
 11935 2a3b 1E       		.uleb128 0x1e
 11936 2a3c 01       		.uleb128 0x1
 11937 2a3d 51       		.byte	0x51
 11938 2a3e 02       		.uleb128 0x2
 11939 2a3f 76       		.byte	0x76
 11940 2a40 00       		.sleb128 0
 11941 2a41 00       		.byte	0
 11942 2a42 1D       		.uleb128 0x1d
 11943 2a43 90000000 		.4byte	.LVL936
 11944 2a47 C8070000 		.4byte	0x7c8
 11945 2a4b 562A0000 		.4byte	0x2a56
 11946 2a4f 1E       		.uleb128 0x1e
 11947 2a50 01       		.uleb128 0x1
 11948 2a51 52       		.byte	0x52
 11949 2a52 02       		.uleb128 0x2
 11950 2a53 75       		.byte	0x75
 11951 2a54 00       		.sleb128 0
 11952 2a55 00       		.byte	0
 11953 2a56 1D       		.uleb128 0x1d
 11954 2a57 9E000000 		.4byte	.LVL937
 11955 2a5b 58050000 		.4byte	0x558
 11956 2a5f 6A2A0000 		.4byte	0x2a6a
 11957 2a63 1E       		.uleb128 0x1e
 11958 2a64 01       		.uleb128 0x1
 11959 2a65 52       		.byte	0x52
 11960 2a66 02       		.uleb128 0x2
 11961 2a67 08       		.byte	0x8
 11962 2a68 20       		.byte	0x20
 11963 2a69 00       		.byte	0
 11964 2a6a 20       		.uleb128 0x20
 11965 2a6b AE000000 		.4byte	.LVL939
 11966 2a6f C8070000 		.4byte	0x7c8
 11967 2a73 1D       		.uleb128 0x1d
 11968 2a74 BA000000 		.4byte	.LVL940
 11969 2a78 10180000 		.4byte	0x1810
 11970 2a7c 872A0000 		.4byte	0x2a87
 11971 2a80 1E       		.uleb128 0x1e
 11972 2a81 01       		.uleb128 0x1
 11973 2a82 50       		.byte	0x50
 11974 2a83 02       		.uleb128 0x2
 11975 2a84 91       		.byte	0x91
 11976 2a85 44       		.sleb128 -60
 11977 2a86 00       		.byte	0
 11978 2a87 1D       		.uleb128 0x1d
 11979 2a88 C8000000 		.4byte	.LVL942
 11980 2a8c 21050000 		.4byte	0x521
 11981 2a90 9B2A0000 		.4byte	0x2a9b
 11982 2a94 1E       		.uleb128 0x1e
 11983 2a95 01       		.uleb128 0x1
 11984 2a96 51       		.byte	0x51
 11985 2a97 02       		.uleb128 0x2
 11986 2a98 76       		.byte	0x76
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 312


 11987 2a99 00       		.sleb128 0
 11988 2a9a 00       		.byte	0
 11989 2a9b 1D       		.uleb128 0x1d
 11990 2a9c D2000000 		.4byte	.LVL943
 11991 2aa0 C8070000 		.4byte	0x7c8
 11992 2aa4 AF2A0000 		.4byte	0x2aaf
 11993 2aa8 1E       		.uleb128 0x1e
 11994 2aa9 01       		.uleb128 0x1
 11995 2aaa 52       		.byte	0x52
 11996 2aab 02       		.uleb128 0x2
 11997 2aac 75       		.byte	0x75
 11998 2aad 00       		.sleb128 0
 11999 2aae 00       		.byte	0
 12000 2aaf 20       		.uleb128 0x20
 12001 2ab0 E6000000 		.4byte	.LVL944
 12002 2ab4 50190000 		.4byte	0x1950
 12003 2ab8 1F       		.uleb128 0x1f
 12004 2ab9 F4000000 		.4byte	.LVL946
 12005 2abd 3F130000 		.4byte	0x133f
 12006 2ac1 1E       		.uleb128 0x1e
 12007 2ac2 01       		.uleb128 0x1
 12008 2ac3 50       		.byte	0x50
 12009 2ac4 03       		.uleb128 0x3
 12010 2ac5 91       		.byte	0x91
 12011 2ac6 B47F     		.sleb128 -76
 12012 2ac8 1E       		.uleb128 0x1e
 12013 2ac9 01       		.uleb128 0x1
 12014 2aca 51       		.byte	0x51
 12015 2acb 02       		.uleb128 0x2
 12016 2acc 75       		.byte	0x75
 12017 2acd 00       		.sleb128 0
 12018 2ace 1E       		.uleb128 0x1e
 12019 2acf 01       		.uleb128 0x1
 12020 2ad0 52       		.byte	0x52
 12021 2ad1 01       		.uleb128 0x1
 12022 2ad2 30       		.byte	0x30
 12023 2ad3 00       		.byte	0
 12024 2ad4 00       		.byte	0
 12025 2ad5 23       		.uleb128 0x23
 12026 2ad6 F0020000 		.4byte	.LASF163
 12027 2ada 01       		.byte	0x1
 12028 2adb EE13     		.2byte	0x13ee
 12029 2add 29040000 		.4byte	0x429
 12030 2ae1 00000000 		.4byte	.LFB51
 12031 2ae5 1C010000 		.4byte	.LFE51-.LFB51
 12032 2ae9 01       		.uleb128 0x1
 12033 2aea 9C       		.byte	0x9c
 12034 2aeb B62C0000 		.4byte	0x2cb6
 12035 2aef 1C       		.uleb128 0x1c
 12036 2af0 80060000 		.4byte	.LASF164
 12037 2af4 01       		.byte	0x1
 12038 2af5 EF13     		.2byte	0x13ef
 12039 2af7 CE090000 		.4byte	0x9ce
 12040 2afb AE2D0000 		.4byte	.LLST219
 12041 2aff 1C       		.uleb128 0x1c
 12042 2b00 09030000 		.4byte	.LASF165
 12043 2b04 01       		.byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 313


 12044 2b05 F013     		.2byte	0x13f0
 12045 2b07 CE090000 		.4byte	0x9ce
 12046 2b0b E72D0000 		.4byte	.LLST220
 12047 2b0f 15       		.uleb128 0x15
 12048 2b10 72657300 		.ascii	"res\000"
 12049 2b14 01       		.byte	0x1
 12050 2b15 F313     		.2byte	0x13f3
 12051 2b17 29040000 		.4byte	0x429
 12052 2b1b 072E0000 		.4byte	.LLST221
 12053 2b1f 1B       		.uleb128 0x1b
 12054 2b20 646A6F00 		.ascii	"djo\000"
 12055 2b24 01       		.byte	0x1
 12056 2b25 F413     		.2byte	0x13f4
 12057 2b27 36030000 		.4byte	0x336
 12058 2b2b 02       		.uleb128 0x2
 12059 2b2c 91       		.byte	0x91
 12060 2b2d 44       		.sleb128 -60
 12061 2b2e 1B       		.uleb128 0x1b
 12062 2b2f 646A6E00 		.ascii	"djn\000"
 12063 2b33 01       		.byte	0x1
 12064 2b34 F413     		.2byte	0x13f4
 12065 2b36 36030000 		.4byte	0x336
 12066 2b3a 03       		.uleb128 0x3
 12067 2b3b 91       		.byte	0x91
 12068 2b3c 987F     		.sleb128 -104
 12069 2b3e 1B       		.uleb128 0x1b
 12070 2b3f 667300   		.ascii	"fs\000"
 12071 2b42 01       		.byte	0x1
 12072 2b43 F513     		.2byte	0x13f5
 12073 2b45 3E020000 		.4byte	0x23e
 12074 2b49 03       		.uleb128 0x3
 12075 2b4a 91       		.byte	0x91
 12076 2b4b 947F     		.sleb128 -108
 12077 2b4d 1B       		.uleb128 0x1b
 12078 2b4e 62756600 		.ascii	"buf\000"
 12079 2b52 01       		.byte	0x1
 12080 2b53 F613     		.2byte	0x13f6
 12081 2b55 B62C0000 		.4byte	0x2cb6
 12082 2b59 03       		.uleb128 0x3
 12083 2b5a 91       		.byte	0x91
 12084 2b5b F47E     		.sleb128 -140
 12085 2b5d 15       		.uleb128 0x15
 12086 2b5e 64697200 		.ascii	"dir\000"
 12087 2b62 01       		.byte	0x1
 12088 2b63 F613     		.2byte	0x13f6
 12089 2b65 C5020000 		.4byte	0x2c5
 12090 2b69 7D2E0000 		.4byte	.LLST222
 12091 2b6d 22       		.uleb128 0x22
 12092 2b6e 9F000000 		.4byte	.LASF47
 12093 2b72 01       		.byte	0x1
 12094 2b73 F713     		.2byte	0x13f7
 12095 2b75 E0000000 		.4byte	0xe0
 12096 2b79 A62E0000 		.4byte	.LLST223
 12097 2b7d 1D       		.uleb128 0x1d
 12098 2b7e 10000000 		.4byte	.LVL951
 12099 2b82 D9090000 		.4byte	0x9d9
 12100 2b86 922B0000 		.4byte	0x2b92
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 314


 12101 2b8a 1E       		.uleb128 0x1e
 12102 2b8b 01       		.uleb128 0x1
 12103 2b8c 50       		.byte	0x50
 12104 2b8d 03       		.uleb128 0x3
 12105 2b8e 91       		.byte	0x91
 12106 2b8f E87E     		.sleb128 -152
 12107 2b91 00       		.byte	0
 12108 2b92 1D       		.uleb128 0x1d
 12109 2b93 1A000000 		.4byte	.LVL953
 12110 2b97 070D0000 		.4byte	0xd07
 12111 2b9b B32B0000 		.4byte	0x2bb3
 12112 2b9f 1E       		.uleb128 0x1e
 12113 2ba0 01       		.uleb128 0x1
 12114 2ba1 50       		.byte	0x50
 12115 2ba2 03       		.uleb128 0x3
 12116 2ba3 91       		.byte	0x91
 12117 2ba4 EC7E     		.sleb128 -148
 12118 2ba6 1E       		.uleb128 0x1e
 12119 2ba7 01       		.uleb128 0x1
 12120 2ba8 51       		.byte	0x51
 12121 2ba9 03       		.uleb128 0x3
 12122 2baa 91       		.byte	0x91
 12123 2bab 947F     		.sleb128 -108
 12124 2bad 1E       		.uleb128 0x1e
 12125 2bae 01       		.uleb128 0x1
 12126 2baf 52       		.byte	0x52
 12127 2bb0 01       		.uleb128 0x1
 12128 2bb1 32       		.byte	0x32
 12129 2bb2 00       		.byte	0
 12130 2bb3 1D       		.uleb128 0x1d
 12131 2bb4 2C000000 		.4byte	.LVL955
 12132 2bb8 AC160000 		.4byte	0x16ac
 12133 2bbc C72B0000 		.4byte	0x2bc7
 12134 2bc0 1E       		.uleb128 0x1e
 12135 2bc1 01       		.uleb128 0x1
 12136 2bc2 50       		.byte	0x50
 12137 2bc3 02       		.uleb128 0x2
 12138 2bc4 91       		.byte	0x91
 12139 2bc5 44       		.sleb128 -60
 12140 2bc6 00       		.byte	0
 12141 2bc7 1D       		.uleb128 0x1d
 12142 2bc8 4A000000 		.4byte	.LVL957
 12143 2bcc 58050000 		.4byte	0x558
 12144 2bd0 E22B0000 		.4byte	0x2be2
 12145 2bd4 1E       		.uleb128 0x1e
 12146 2bd5 01       		.uleb128 0x1
 12147 2bd6 50       		.byte	0x50
 12148 2bd7 03       		.uleb128 0x3
 12149 2bd8 91       		.byte	0x91
 12150 2bd9 F47E     		.sleb128 -140
 12151 2bdb 1E       		.uleb128 0x1e
 12152 2bdc 01       		.uleb128 0x1
 12153 2bdd 52       		.byte	0x52
 12154 2bde 02       		.uleb128 0x2
 12155 2bdf 08       		.byte	0x8
 12156 2be0 20       		.byte	0x20
 12157 2be1 00       		.byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 315


 12158 2be2 1D       		.uleb128 0x1d
 12159 2be3 54000000 		.4byte	.LVL958
 12160 2be7 58050000 		.4byte	0x558
 12161 2beb 032C0000 		.4byte	0x2c03
 12162 2bef 1E       		.uleb128 0x1e
 12163 2bf0 01       		.uleb128 0x1
 12164 2bf1 50       		.byte	0x50
 12165 2bf2 03       		.uleb128 0x3
 12166 2bf3 91       		.byte	0x91
 12167 2bf4 987F     		.sleb128 -104
 12168 2bf6 1E       		.uleb128 0x1e
 12169 2bf7 01       		.uleb128 0x1
 12170 2bf8 51       		.byte	0x51
 12171 2bf9 02       		.uleb128 0x2
 12172 2bfa 91       		.byte	0x91
 12173 2bfb 44       		.sleb128 -60
 12174 2bfc 1E       		.uleb128 0x1e
 12175 2bfd 01       		.uleb128 0x1
 12176 2bfe 52       		.byte	0x52
 12177 2bff 02       		.uleb128 0x2
 12178 2c00 08       		.byte	0x8
 12179 2c01 2C       		.byte	0x2c
 12180 2c02 00       		.byte	0
 12181 2c03 1D       		.uleb128 0x1d
 12182 2c04 5C000000 		.4byte	.LVL959
 12183 2c08 AC160000 		.4byte	0x16ac
 12184 2c0c 182C0000 		.4byte	0x2c18
 12185 2c10 1E       		.uleb128 0x1e
 12186 2c11 01       		.uleb128 0x1
 12187 2c12 50       		.byte	0x50
 12188 2c13 03       		.uleb128 0x3
 12189 2c14 91       		.byte	0x91
 12190 2c15 987F     		.sleb128 -104
 12191 2c17 00       		.byte	0
 12192 2c18 1D       		.uleb128 0x1d
 12193 2c19 84000000 		.4byte	.LVL961
 12194 2c1d 10180000 		.4byte	0x1810
 12195 2c21 2D2C0000 		.4byte	0x2c2d
 12196 2c25 1E       		.uleb128 0x1e
 12197 2c26 01       		.uleb128 0x1
 12198 2c27 50       		.byte	0x50
 12199 2c28 03       		.uleb128 0x3
 12200 2c29 91       		.byte	0x91
 12201 2c2a 987F     		.sleb128 -104
 12202 2c2c 00       		.byte	0
 12203 2c2d 1D       		.uleb128 0x1d
 12204 2c2e 9A000000 		.4byte	.LVL964
 12205 2c32 58050000 		.4byte	0x558
 12206 2c36 4D2C0000 		.4byte	0x2c4d
 12207 2c3a 1E       		.uleb128 0x1e
 12208 2c3b 01       		.uleb128 0x1
 12209 2c3c 50       		.byte	0x50
 12210 2c3d 02       		.uleb128 0x2
 12211 2c3e 75       		.byte	0x75
 12212 2c3f 0D       		.sleb128 13
 12213 2c40 1E       		.uleb128 0x1e
 12214 2c41 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 316


 12215 2c42 51       		.byte	0x51
 12216 2c43 03       		.uleb128 0x3
 12217 2c44 91       		.byte	0x91
 12218 2c45 817F     		.sleb128 -127
 12219 2c47 1E       		.uleb128 0x1e
 12220 2c48 01       		.uleb128 0x1
 12221 2c49 52       		.byte	0x52
 12222 2c4a 01       		.uleb128 0x1
 12223 2c4b 43       		.byte	0x43
 12224 2c4c 00       		.byte	0
 12225 2c4d 1D       		.uleb128 0x1d
 12226 2c4e CC000000 		.4byte	.LVL965
 12227 2c52 5B070000 		.4byte	0x75b
 12228 2c56 672C0000 		.4byte	0x2c67
 12229 2c5a 1E       		.uleb128 0x1e
 12230 2c5b 01       		.uleb128 0x1
 12231 2c5c 50       		.byte	0x50
 12232 2c5d 02       		.uleb128 0x2
 12233 2c5e 74       		.byte	0x74
 12234 2c5f 00       		.sleb128 0
 12235 2c60 1E       		.uleb128 0x1e
 12236 2c61 01       		.uleb128 0x1
 12237 2c62 51       		.byte	0x51
 12238 2c63 02       		.uleb128 0x2
 12239 2c64 75       		.byte	0x75
 12240 2c65 00       		.sleb128 0
 12241 2c66 00       		.byte	0
 12242 2c67 1D       		.uleb128 0x1d
 12243 2c68 D4000000 		.4byte	.LVL966
 12244 2c6c 21070000 		.4byte	0x721
 12245 2c70 7B2C0000 		.4byte	0x2c7b
 12246 2c74 1E       		.uleb128 0x1e
 12247 2c75 01       		.uleb128 0x1
 12248 2c76 50       		.byte	0x50
 12249 2c77 02       		.uleb128 0x2
 12250 2c78 74       		.byte	0x74
 12251 2c79 00       		.sleb128 0
 12252 2c7a 00       		.byte	0
 12253 2c7b 1D       		.uleb128 0x1d
 12254 2c7c DE000000 		.4byte	.LVL968
 12255 2c80 170B0000 		.4byte	0xb17
 12256 2c84 8F2C0000 		.4byte	0x2c8f
 12257 2c88 1E       		.uleb128 0x1e
 12258 2c89 01       		.uleb128 0x1
 12259 2c8a 50       		.byte	0x50
 12260 2c8b 02       		.uleb128 0x2
 12261 2c8c 74       		.byte	0x74
 12262 2c8d 00       		.sleb128 0
 12263 2c8e 00       		.byte	0
 12264 2c8f 20       		.uleb128 0x20
 12265 2c90 F8000000 		.4byte	.LVL971
 12266 2c94 C8070000 		.4byte	0x7c8
 12267 2c98 1D       		.uleb128 0x1d
 12268 2c99 0A010000 		.4byte	.LVL974
 12269 2c9d 0D140000 		.4byte	0x140d
 12270 2ca1 AC2C0000 		.4byte	0x2cac
 12271 2ca5 1E       		.uleb128 0x1e
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 317


 12272 2ca6 01       		.uleb128 0x1
 12273 2ca7 50       		.byte	0x50
 12274 2ca8 02       		.uleb128 0x2
 12275 2ca9 91       		.byte	0x91
 12276 2caa 44       		.sleb128 -60
 12277 2cab 00       		.byte	0
 12278 2cac 20       		.uleb128 0x20
 12279 2cad 14010000 		.4byte	.LVL976
 12280 2cb1 50190000 		.4byte	0x1950
 12281 2cb5 00       		.byte	0
 12282 2cb6 08       		.uleb128 0x8
 12283 2cb7 A2000000 		.4byte	0xa2
 12284 2cbb C62C0000 		.4byte	0x2cc6
 12285 2cbf 0D       		.uleb128 0xd
 12286 2cc0 DD010000 		.4byte	0x1dd
 12287 2cc4 1F       		.byte	0x1f
 12288 2cc5 00       		.byte	0
 12289 2cc6 08       		.uleb128 0x8
 12290 2cc7 3E020000 		.4byte	0x23e
 12291 2ccb D62C0000 		.4byte	0x2cd6
 12292 2ccf 0D       		.uleb128 0xd
 12293 2cd0 DD010000 		.4byte	0x1dd
 12294 2cd4 00       		.byte	0
 12295 2cd5 00       		.byte	0
 12296 2cd6 21       		.uleb128 0x21
 12297 2cd7 3F000000 		.4byte	.LASF166
 12298 2cdb 01       		.byte	0x1
 12299 2cdc CC01     		.2byte	0x1cc
 12300 2cde C62C0000 		.4byte	0x2cc6
 12301 2ce2 05       		.uleb128 0x5
 12302 2ce3 03       		.byte	0x3
 12303 2ce4 00000000 		.4byte	FatFs
 12304 2ce8 21       		.uleb128 0x21
 12305 2ce9 1B070000 		.4byte	.LASF167
 12306 2ced 01       		.byte	0x1
 12307 2cee CD01     		.2byte	0x1cd
 12308 2cf0 AD000000 		.4byte	0xad
 12309 2cf4 05       		.uleb128 0x5
 12310 2cf5 03       		.byte	0x3
 12311 2cf6 04000000 		.4byte	Fsid
 12312 2cfa 08       		.uleb128 0x8
 12313 2cfb AB040000 		.4byte	0x4ab
 12314 2cff 0A2D0000 		.4byte	0x2d0a
 12315 2d03 0D       		.uleb128 0xd
 12316 2d04 DD010000 		.4byte	0x1dd
 12317 2d08 09       		.byte	0x9
 12318 2d09 00       		.byte	0
 12319 2d0a 24       		.uleb128 0x24
 12320 2d0b 44030000 		.4byte	.LASF168
 12321 2d0f 01       		.byte	0x1
 12322 2d10 5002     		.2byte	0x250
 12323 2d12 212D0000 		.4byte	0x2d21
 12324 2d16 0A       		.byte	0xa
 12325 2d17 81       		.byte	0x81
 12326 2d18 9F       		.byte	0x9f
 12327 2d19 E0       		.byte	0xe0
 12328 2d1a FC       		.byte	0xfc
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 318


 12329 2d1b 40       		.byte	0x40
 12330 2d1c 7E       		.byte	0x7e
 12331 2d1d 80       		.byte	0x80
 12332 2d1e FC       		.byte	0xfc
 12333 2d1f 00       		.byte	0
 12334 2d20 00       		.byte	0
 12335 2d21 16       		.uleb128 0x16
 12336 2d22 FA2C0000 		.4byte	0x2cfa
 12337 2d26 25       		.uleb128 0x25
 12338 2d27 B3020000 		.4byte	.LASF169
 12339 2d2b B3020000 		.4byte	.LASF169
 12340 2d2f 05       		.byte	0x5
 12341 2d30 1E       		.byte	0x1e
 12342 2d31 25       		.uleb128 0x25
 12343 2d32 40060000 		.4byte	.LASF170
 12344 2d36 40060000 		.4byte	.LASF170
 12345 2d3a 05       		.byte	0x5
 12346 2d3b 20       		.byte	0x20
 12347 2d3c 25       		.uleb128 0x25
 12348 2d3d 07070000 		.4byte	.LASF171
 12349 2d41 07070000 		.4byte	.LASF171
 12350 2d45 05       		.byte	0x5
 12351 2d46 1F       		.byte	0x1f
 12352 2d47 25       		.uleb128 0x25
 12353 2d48 2A020000 		.4byte	.LASF172
 12354 2d4c 2A020000 		.4byte	.LASF172
 12355 2d50 05       		.byte	0x5
 12356 2d51 1D       		.byte	0x1d
 12357 2d52 25       		.uleb128 0x25
 12358 2d53 64030000 		.4byte	.LASF173
 12359 2d57 64030000 		.4byte	.LASF173
 12360 2d5b 05       		.byte	0x5
 12361 2d5c 21       		.byte	0x21
 12362 2d5d 26       		.uleb128 0x26
 12363 2d5e 09010000 		.4byte	.LASF174
 12364 2d62 09010000 		.4byte	.LASF174
 12365 2d66 04       		.byte	0x4
 12366 2d67 6801     		.2byte	0x168
 12367 2d69 00       		.byte	0
 12368              		.section	.debug_abbrev,"",%progbits
 12369              	.Ldebug_abbrev0:
 12370 0000 01       		.uleb128 0x1
 12371 0001 11       		.uleb128 0x11
 12372 0002 01       		.byte	0x1
 12373 0003 25       		.uleb128 0x25
 12374 0004 0E       		.uleb128 0xe
 12375 0005 13       		.uleb128 0x13
 12376 0006 0B       		.uleb128 0xb
 12377 0007 03       		.uleb128 0x3
 12378 0008 0E       		.uleb128 0xe
 12379 0009 1B       		.uleb128 0x1b
 12380 000a 0E       		.uleb128 0xe
 12381 000b 55       		.uleb128 0x55
 12382 000c 17       		.uleb128 0x17
 12383 000d 11       		.uleb128 0x11
 12384 000e 01       		.uleb128 0x1
 12385 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 319


 12386 0010 17       		.uleb128 0x17
 12387 0011 00       		.byte	0
 12388 0012 00       		.byte	0
 12389 0013 02       		.uleb128 0x2
 12390 0014 24       		.uleb128 0x24
 12391 0015 00       		.byte	0
 12392 0016 0B       		.uleb128 0xb
 12393 0017 0B       		.uleb128 0xb
 12394 0018 3E       		.uleb128 0x3e
 12395 0019 0B       		.uleb128 0xb
 12396 001a 03       		.uleb128 0x3
 12397 001b 0E       		.uleb128 0xe
 12398 001c 00       		.byte	0
 12399 001d 00       		.byte	0
 12400 001e 03       		.uleb128 0x3
 12401 001f 16       		.uleb128 0x16
 12402 0020 00       		.byte	0
 12403 0021 03       		.uleb128 0x3
 12404 0022 0E       		.uleb128 0xe
 12405 0023 3A       		.uleb128 0x3a
 12406 0024 0B       		.uleb128 0xb
 12407 0025 3B       		.uleb128 0x3b
 12408 0026 0B       		.uleb128 0xb
 12409 0027 49       		.uleb128 0x49
 12410 0028 13       		.uleb128 0x13
 12411 0029 00       		.byte	0
 12412 002a 00       		.byte	0
 12413 002b 04       		.uleb128 0x4
 12414 002c 24       		.uleb128 0x24
 12415 002d 00       		.byte	0
 12416 002e 0B       		.uleb128 0xb
 12417 002f 0B       		.uleb128 0xb
 12418 0030 3E       		.uleb128 0x3e
 12419 0031 0B       		.uleb128 0xb
 12420 0032 03       		.uleb128 0x3
 12421 0033 08       		.uleb128 0x8
 12422 0034 00       		.byte	0
 12423 0035 00       		.byte	0
 12424 0036 05       		.uleb128 0x5
 12425 0037 13       		.uleb128 0x13
 12426 0038 01       		.byte	0x1
 12427 0039 0B       		.uleb128 0xb
 12428 003a 05       		.uleb128 0x5
 12429 003b 3A       		.uleb128 0x3a
 12430 003c 0B       		.uleb128 0xb
 12431 003d 3B       		.uleb128 0x3b
 12432 003e 0B       		.uleb128 0xb
 12433 003f 01       		.uleb128 0x1
 12434 0040 13       		.uleb128 0x13
 12435 0041 00       		.byte	0
 12436 0042 00       		.byte	0
 12437 0043 06       		.uleb128 0x6
 12438 0044 0D       		.uleb128 0xd
 12439 0045 00       		.byte	0
 12440 0046 03       		.uleb128 0x3
 12441 0047 0E       		.uleb128 0xe
 12442 0048 3A       		.uleb128 0x3a
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 320


 12443 0049 0B       		.uleb128 0xb
 12444 004a 3B       		.uleb128 0x3b
 12445 004b 0B       		.uleb128 0xb
 12446 004c 49       		.uleb128 0x49
 12447 004d 13       		.uleb128 0x13
 12448 004e 38       		.uleb128 0x38
 12449 004f 0B       		.uleb128 0xb
 12450 0050 00       		.byte	0
 12451 0051 00       		.byte	0
 12452 0052 07       		.uleb128 0x7
 12453 0053 0D       		.uleb128 0xd
 12454 0054 00       		.byte	0
 12455 0055 03       		.uleb128 0x3
 12456 0056 08       		.uleb128 0x8
 12457 0057 3A       		.uleb128 0x3a
 12458 0058 0B       		.uleb128 0xb
 12459 0059 3B       		.uleb128 0x3b
 12460 005a 0B       		.uleb128 0xb
 12461 005b 49       		.uleb128 0x49
 12462 005c 13       		.uleb128 0x13
 12463 005d 38       		.uleb128 0x38
 12464 005e 0B       		.uleb128 0xb
 12465 005f 00       		.byte	0
 12466 0060 00       		.byte	0
 12467 0061 08       		.uleb128 0x8
 12468 0062 01       		.uleb128 0x1
 12469 0063 01       		.byte	0x1
 12470 0064 49       		.uleb128 0x49
 12471 0065 13       		.uleb128 0x13
 12472 0066 01       		.uleb128 0x1
 12473 0067 13       		.uleb128 0x13
 12474 0068 00       		.byte	0
 12475 0069 00       		.byte	0
 12476 006a 09       		.uleb128 0x9
 12477 006b 21       		.uleb128 0x21
 12478 006c 00       		.byte	0
 12479 006d 49       		.uleb128 0x49
 12480 006e 13       		.uleb128 0x13
 12481 006f 2F       		.uleb128 0x2f
 12482 0070 05       		.uleb128 0x5
 12483 0071 00       		.byte	0
 12484 0072 00       		.byte	0
 12485 0073 0A       		.uleb128 0xa
 12486 0074 13       		.uleb128 0x13
 12487 0075 01       		.byte	0x1
 12488 0076 0B       		.uleb128 0xb
 12489 0077 0B       		.uleb128 0xb
 12490 0078 3A       		.uleb128 0x3a
 12491 0079 0B       		.uleb128 0xb
 12492 007a 3B       		.uleb128 0x3b
 12493 007b 0B       		.uleb128 0xb
 12494 007c 01       		.uleb128 0x1
 12495 007d 13       		.uleb128 0x13
 12496 007e 00       		.byte	0
 12497 007f 00       		.byte	0
 12498 0080 0B       		.uleb128 0xb
 12499 0081 0F       		.uleb128 0xf
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 321


 12500 0082 00       		.byte	0
 12501 0083 0B       		.uleb128 0xb
 12502 0084 0B       		.uleb128 0xb
 12503 0085 49       		.uleb128 0x49
 12504 0086 13       		.uleb128 0x13
 12505 0087 00       		.byte	0
 12506 0088 00       		.byte	0
 12507 0089 0C       		.uleb128 0xc
 12508 008a 16       		.uleb128 0x16
 12509 008b 00       		.byte	0
 12510 008c 03       		.uleb128 0x3
 12511 008d 08       		.uleb128 0x8
 12512 008e 3A       		.uleb128 0x3a
 12513 008f 0B       		.uleb128 0xb
 12514 0090 3B       		.uleb128 0x3b
 12515 0091 0B       		.uleb128 0xb
 12516 0092 49       		.uleb128 0x49
 12517 0093 13       		.uleb128 0x13
 12518 0094 00       		.byte	0
 12519 0095 00       		.byte	0
 12520 0096 0D       		.uleb128 0xd
 12521 0097 21       		.uleb128 0x21
 12522 0098 00       		.byte	0
 12523 0099 49       		.uleb128 0x49
 12524 009a 13       		.uleb128 0x13
 12525 009b 2F       		.uleb128 0x2f
 12526 009c 0B       		.uleb128 0xb
 12527 009d 00       		.byte	0
 12528 009e 00       		.byte	0
 12529 009f 0E       		.uleb128 0xe
 12530 00a0 0D       		.uleb128 0xd
 12531 00a1 00       		.byte	0
 12532 00a2 03       		.uleb128 0x3
 12533 00a3 0E       		.uleb128 0xe
 12534 00a4 3A       		.uleb128 0x3a
 12535 00a5 0B       		.uleb128 0xb
 12536 00a6 3B       		.uleb128 0x3b
 12537 00a7 05       		.uleb128 0x5
 12538 00a8 49       		.uleb128 0x49
 12539 00a9 13       		.uleb128 0x13
 12540 00aa 38       		.uleb128 0x38
 12541 00ab 0B       		.uleb128 0xb
 12542 00ac 00       		.byte	0
 12543 00ad 00       		.byte	0
 12544 00ae 0F       		.uleb128 0xf
 12545 00af 16       		.uleb128 0x16
 12546 00b0 00       		.byte	0
 12547 00b1 03       		.uleb128 0x3
 12548 00b2 0E       		.uleb128 0xe
 12549 00b3 3A       		.uleb128 0x3a
 12550 00b4 0B       		.uleb128 0xb
 12551 00b5 3B       		.uleb128 0x3b
 12552 00b6 05       		.uleb128 0x5
 12553 00b7 49       		.uleb128 0x49
 12554 00b8 13       		.uleb128 0x13
 12555 00b9 00       		.byte	0
 12556 00ba 00       		.byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 322


 12557 00bb 10       		.uleb128 0x10
 12558 00bc 04       		.uleb128 0x4
 12559 00bd 01       		.byte	0x1
 12560 00be 0B       		.uleb128 0xb
 12561 00bf 0B       		.uleb128 0xb
 12562 00c0 49       		.uleb128 0x49
 12563 00c1 13       		.uleb128 0x13
 12564 00c2 3A       		.uleb128 0x3a
 12565 00c3 0B       		.uleb128 0xb
 12566 00c4 3B       		.uleb128 0x3b
 12567 00c5 05       		.uleb128 0x5
 12568 00c6 01       		.uleb128 0x1
 12569 00c7 13       		.uleb128 0x13
 12570 00c8 00       		.byte	0
 12571 00c9 00       		.byte	0
 12572 00ca 11       		.uleb128 0x11
 12573 00cb 28       		.uleb128 0x28
 12574 00cc 00       		.byte	0
 12575 00cd 03       		.uleb128 0x3
 12576 00ce 0E       		.uleb128 0xe
 12577 00cf 1C       		.uleb128 0x1c
 12578 00d0 0B       		.uleb128 0xb
 12579 00d1 00       		.byte	0
 12580 00d2 00       		.byte	0
 12581 00d3 12       		.uleb128 0x12
 12582 00d4 04       		.uleb128 0x4
 12583 00d5 01       		.byte	0x1
 12584 00d6 0B       		.uleb128 0xb
 12585 00d7 0B       		.uleb128 0xb
 12586 00d8 49       		.uleb128 0x49
 12587 00d9 13       		.uleb128 0x13
 12588 00da 3A       		.uleb128 0x3a
 12589 00db 0B       		.uleb128 0xb
 12590 00dc 3B       		.uleb128 0x3b
 12591 00dd 0B       		.uleb128 0xb
 12592 00de 01       		.uleb128 0x1
 12593 00df 13       		.uleb128 0x13
 12594 00e0 00       		.byte	0
 12595 00e1 00       		.byte	0
 12596 00e2 13       		.uleb128 0x13
 12597 00e3 2E       		.uleb128 0x2e
 12598 00e4 01       		.byte	0x1
 12599 00e5 03       		.uleb128 0x3
 12600 00e6 0E       		.uleb128 0xe
 12601 00e7 3A       		.uleb128 0x3a
 12602 00e8 0B       		.uleb128 0xb
 12603 00e9 3B       		.uleb128 0x3b
 12604 00ea 05       		.uleb128 0x5
 12605 00eb 27       		.uleb128 0x27
 12606 00ec 19       		.uleb128 0x19
 12607 00ed 49       		.uleb128 0x49
 12608 00ee 13       		.uleb128 0x13
 12609 00ef 11       		.uleb128 0x11
 12610 00f0 01       		.uleb128 0x1
 12611 00f1 12       		.uleb128 0x12
 12612 00f2 06       		.uleb128 0x6
 12613 00f3 40       		.uleb128 0x40
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 323


 12614 00f4 18       		.uleb128 0x18
 12615 00f5 9742     		.uleb128 0x2117
 12616 00f7 19       		.uleb128 0x19
 12617 00f8 01       		.uleb128 0x1
 12618 00f9 13       		.uleb128 0x13
 12619 00fa 00       		.byte	0
 12620 00fb 00       		.byte	0
 12621 00fc 14       		.uleb128 0x14
 12622 00fd 05       		.uleb128 0x5
 12623 00fe 00       		.byte	0
 12624 00ff 03       		.uleb128 0x3
 12625 0100 08       		.uleb128 0x8
 12626 0101 3A       		.uleb128 0x3a
 12627 0102 0B       		.uleb128 0xb
 12628 0103 3B       		.uleb128 0x3b
 12629 0104 05       		.uleb128 0x5
 12630 0105 49       		.uleb128 0x49
 12631 0106 13       		.uleb128 0x13
 12632 0107 02       		.uleb128 0x2
 12633 0108 17       		.uleb128 0x17
 12634 0109 00       		.byte	0
 12635 010a 00       		.byte	0
 12636 010b 15       		.uleb128 0x15
 12637 010c 34       		.uleb128 0x34
 12638 010d 00       		.byte	0
 12639 010e 03       		.uleb128 0x3
 12640 010f 08       		.uleb128 0x8
 12641 0110 3A       		.uleb128 0x3a
 12642 0111 0B       		.uleb128 0xb
 12643 0112 3B       		.uleb128 0x3b
 12644 0113 05       		.uleb128 0x5
 12645 0114 49       		.uleb128 0x49
 12646 0115 13       		.uleb128 0x13
 12647 0116 02       		.uleb128 0x2
 12648 0117 17       		.uleb128 0x17
 12649 0118 00       		.byte	0
 12650 0119 00       		.byte	0
 12651 011a 16       		.uleb128 0x16
 12652 011b 26       		.uleb128 0x26
 12653 011c 00       		.byte	0
 12654 011d 49       		.uleb128 0x49
 12655 011e 13       		.uleb128 0x13
 12656 011f 00       		.byte	0
 12657 0120 00       		.byte	0
 12658 0121 17       		.uleb128 0x17
 12659 0122 2E       		.uleb128 0x2e
 12660 0123 01       		.byte	0x1
 12661 0124 03       		.uleb128 0x3
 12662 0125 0E       		.uleb128 0xe
 12663 0126 3A       		.uleb128 0x3a
 12664 0127 0B       		.uleb128 0xb
 12665 0128 3B       		.uleb128 0x3b
 12666 0129 05       		.uleb128 0x5
 12667 012a 27       		.uleb128 0x27
 12668 012b 19       		.uleb128 0x19
 12669 012c 11       		.uleb128 0x11
 12670 012d 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 324


 12671 012e 12       		.uleb128 0x12
 12672 012f 06       		.uleb128 0x6
 12673 0130 40       		.uleb128 0x40
 12674 0131 18       		.uleb128 0x18
 12675 0132 9742     		.uleb128 0x2117
 12676 0134 19       		.uleb128 0x19
 12677 0135 01       		.uleb128 0x1
 12678 0136 13       		.uleb128 0x13
 12679 0137 00       		.byte	0
 12680 0138 00       		.byte	0
 12681 0139 18       		.uleb128 0x18
 12682 013a 0F       		.uleb128 0xf
 12683 013b 00       		.byte	0
 12684 013c 0B       		.uleb128 0xb
 12685 013d 0B       		.uleb128 0xb
 12686 013e 00       		.byte	0
 12687 013f 00       		.byte	0
 12688 0140 19       		.uleb128 0x19
 12689 0141 26       		.uleb128 0x26
 12690 0142 00       		.byte	0
 12691 0143 00       		.byte	0
 12692 0144 00       		.byte	0
 12693 0145 1A       		.uleb128 0x1a
 12694 0146 05       		.uleb128 0x5
 12695 0147 00       		.byte	0
 12696 0148 03       		.uleb128 0x3
 12697 0149 08       		.uleb128 0x8
 12698 014a 3A       		.uleb128 0x3a
 12699 014b 0B       		.uleb128 0xb
 12700 014c 3B       		.uleb128 0x3b
 12701 014d 05       		.uleb128 0x5
 12702 014e 49       		.uleb128 0x49
 12703 014f 13       		.uleb128 0x13
 12704 0150 02       		.uleb128 0x2
 12705 0151 18       		.uleb128 0x18
 12706 0152 00       		.byte	0
 12707 0153 00       		.byte	0
 12708 0154 1B       		.uleb128 0x1b
 12709 0155 34       		.uleb128 0x34
 12710 0156 00       		.byte	0
 12711 0157 03       		.uleb128 0x3
 12712 0158 08       		.uleb128 0x8
 12713 0159 3A       		.uleb128 0x3a
 12714 015a 0B       		.uleb128 0xb
 12715 015b 3B       		.uleb128 0x3b
 12716 015c 05       		.uleb128 0x5
 12717 015d 49       		.uleb128 0x49
 12718 015e 13       		.uleb128 0x13
 12719 015f 02       		.uleb128 0x2
 12720 0160 18       		.uleb128 0x18
 12721 0161 00       		.byte	0
 12722 0162 00       		.byte	0
 12723 0163 1C       		.uleb128 0x1c
 12724 0164 05       		.uleb128 0x5
 12725 0165 00       		.byte	0
 12726 0166 03       		.uleb128 0x3
 12727 0167 0E       		.uleb128 0xe
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 325


 12728 0168 3A       		.uleb128 0x3a
 12729 0169 0B       		.uleb128 0xb
 12730 016a 3B       		.uleb128 0x3b
 12731 016b 05       		.uleb128 0x5
 12732 016c 49       		.uleb128 0x49
 12733 016d 13       		.uleb128 0x13
 12734 016e 02       		.uleb128 0x2
 12735 016f 17       		.uleb128 0x17
 12736 0170 00       		.byte	0
 12737 0171 00       		.byte	0
 12738 0172 1D       		.uleb128 0x1d
 12739 0173 898201   		.uleb128 0x4109
 12740 0176 01       		.byte	0x1
 12741 0177 11       		.uleb128 0x11
 12742 0178 01       		.uleb128 0x1
 12743 0179 31       		.uleb128 0x31
 12744 017a 13       		.uleb128 0x13
 12745 017b 01       		.uleb128 0x1
 12746 017c 13       		.uleb128 0x13
 12747 017d 00       		.byte	0
 12748 017e 00       		.byte	0
 12749 017f 1E       		.uleb128 0x1e
 12750 0180 8A8201   		.uleb128 0x410a
 12751 0183 00       		.byte	0
 12752 0184 02       		.uleb128 0x2
 12753 0185 18       		.uleb128 0x18
 12754 0186 9142     		.uleb128 0x2111
 12755 0188 18       		.uleb128 0x18
 12756 0189 00       		.byte	0
 12757 018a 00       		.byte	0
 12758 018b 1F       		.uleb128 0x1f
 12759 018c 898201   		.uleb128 0x4109
 12760 018f 01       		.byte	0x1
 12761 0190 11       		.uleb128 0x11
 12762 0191 01       		.uleb128 0x1
 12763 0192 31       		.uleb128 0x31
 12764 0193 13       		.uleb128 0x13
 12765 0194 00       		.byte	0
 12766 0195 00       		.byte	0
 12767 0196 20       		.uleb128 0x20
 12768 0197 898201   		.uleb128 0x4109
 12769 019a 00       		.byte	0
 12770 019b 11       		.uleb128 0x11
 12771 019c 01       		.uleb128 0x1
 12772 019d 31       		.uleb128 0x31
 12773 019e 13       		.uleb128 0x13
 12774 019f 00       		.byte	0
 12775 01a0 00       		.byte	0
 12776 01a1 21       		.uleb128 0x21
 12777 01a2 34       		.uleb128 0x34
 12778 01a3 00       		.byte	0
 12779 01a4 03       		.uleb128 0x3
 12780 01a5 0E       		.uleb128 0xe
 12781 01a6 3A       		.uleb128 0x3a
 12782 01a7 0B       		.uleb128 0xb
 12783 01a8 3B       		.uleb128 0x3b
 12784 01a9 05       		.uleb128 0x5
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 326


 12785 01aa 49       		.uleb128 0x49
 12786 01ab 13       		.uleb128 0x13
 12787 01ac 02       		.uleb128 0x2
 12788 01ad 18       		.uleb128 0x18
 12789 01ae 00       		.byte	0
 12790 01af 00       		.byte	0
 12791 01b0 22       		.uleb128 0x22
 12792 01b1 34       		.uleb128 0x34
 12793 01b2 00       		.byte	0
 12794 01b3 03       		.uleb128 0x3
 12795 01b4 0E       		.uleb128 0xe
 12796 01b5 3A       		.uleb128 0x3a
 12797 01b6 0B       		.uleb128 0xb
 12798 01b7 3B       		.uleb128 0x3b
 12799 01b8 05       		.uleb128 0x5
 12800 01b9 49       		.uleb128 0x49
 12801 01ba 13       		.uleb128 0x13
 12802 01bb 02       		.uleb128 0x2
 12803 01bc 17       		.uleb128 0x17
 12804 01bd 00       		.byte	0
 12805 01be 00       		.byte	0
 12806 01bf 23       		.uleb128 0x23
 12807 01c0 2E       		.uleb128 0x2e
 12808 01c1 01       		.byte	0x1
 12809 01c2 3F       		.uleb128 0x3f
 12810 01c3 19       		.uleb128 0x19
 12811 01c4 03       		.uleb128 0x3
 12812 01c5 0E       		.uleb128 0xe
 12813 01c6 3A       		.uleb128 0x3a
 12814 01c7 0B       		.uleb128 0xb
 12815 01c8 3B       		.uleb128 0x3b
 12816 01c9 05       		.uleb128 0x5
 12817 01ca 27       		.uleb128 0x27
 12818 01cb 19       		.uleb128 0x19
 12819 01cc 49       		.uleb128 0x49
 12820 01cd 13       		.uleb128 0x13
 12821 01ce 11       		.uleb128 0x11
 12822 01cf 01       		.uleb128 0x1
 12823 01d0 12       		.uleb128 0x12
 12824 01d1 06       		.uleb128 0x6
 12825 01d2 40       		.uleb128 0x40
 12826 01d3 18       		.uleb128 0x18
 12827 01d4 9742     		.uleb128 0x2117
 12828 01d6 19       		.uleb128 0x19
 12829 01d7 01       		.uleb128 0x1
 12830 01d8 13       		.uleb128 0x13
 12831 01d9 00       		.byte	0
 12832 01da 00       		.byte	0
 12833 01db 24       		.uleb128 0x24
 12834 01dc 34       		.uleb128 0x34
 12835 01dd 00       		.byte	0
 12836 01de 03       		.uleb128 0x3
 12837 01df 0E       		.uleb128 0xe
 12838 01e0 3A       		.uleb128 0x3a
 12839 01e1 0B       		.uleb128 0xb
 12840 01e2 3B       		.uleb128 0x3b
 12841 01e3 05       		.uleb128 0x5
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 327


 12842 01e4 49       		.uleb128 0x49
 12843 01e5 13       		.uleb128 0x13
 12844 01e6 1C       		.uleb128 0x1c
 12845 01e7 0A       		.uleb128 0xa
 12846 01e8 00       		.byte	0
 12847 01e9 00       		.byte	0
 12848 01ea 25       		.uleb128 0x25
 12849 01eb 2E       		.uleb128 0x2e
 12850 01ec 00       		.byte	0
 12851 01ed 3F       		.uleb128 0x3f
 12852 01ee 19       		.uleb128 0x19
 12853 01ef 3C       		.uleb128 0x3c
 12854 01f0 19       		.uleb128 0x19
 12855 01f1 6E       		.uleb128 0x6e
 12856 01f2 0E       		.uleb128 0xe
 12857 01f3 03       		.uleb128 0x3
 12858 01f4 0E       		.uleb128 0xe
 12859 01f5 3A       		.uleb128 0x3a
 12860 01f6 0B       		.uleb128 0xb
 12861 01f7 3B       		.uleb128 0x3b
 12862 01f8 0B       		.uleb128 0xb
 12863 01f9 00       		.byte	0
 12864 01fa 00       		.byte	0
 12865 01fb 26       		.uleb128 0x26
 12866 01fc 2E       		.uleb128 0x2e
 12867 01fd 00       		.byte	0
 12868 01fe 3F       		.uleb128 0x3f
 12869 01ff 19       		.uleb128 0x19
 12870 0200 3C       		.uleb128 0x3c
 12871 0201 19       		.uleb128 0x19
 12872 0202 6E       		.uleb128 0x6e
 12873 0203 0E       		.uleb128 0xe
 12874 0204 03       		.uleb128 0x3
 12875 0205 0E       		.uleb128 0xe
 12876 0206 3A       		.uleb128 0x3a
 12877 0207 0B       		.uleb128 0xb
 12878 0208 3B       		.uleb128 0x3b
 12879 0209 05       		.uleb128 0x5
 12880 020a 00       		.byte	0
 12881 020b 00       		.byte	0
 12882 020c 00       		.byte	0
 12883              		.section	.debug_loc,"",%progbits
 12884              	.Ldebug_loc0:
 12885              	.LLST0:
 12886 0000 00000000 		.4byte	.LVL0
 12887 0004 04000000 		.4byte	.LVL2
 12888 0008 0100     		.2byte	0x1
 12889 000a 50       		.byte	0x50
 12890 000b 04000000 		.4byte	.LVL2
 12891 000f 0A000000 		.4byte	.LFE0
 12892 0013 0400     		.2byte	0x4
 12893 0015 F3       		.byte	0xf3
 12894 0016 01       		.uleb128 0x1
 12895 0017 50       		.byte	0x50
 12896 0018 9F       		.byte	0x9f
 12897 0019 00000000 		.4byte	0
 12898 001d 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 328


 12899              	.LLST1:
 12900 0021 02000000 		.4byte	.LVL1
 12901 0025 04000000 		.4byte	.LVL2
 12902 0029 0600     		.2byte	0x6
 12903 002b 72       		.byte	0x72
 12904 002c 00       		.sleb128 0
 12905 002d 08       		.byte	0x8
 12906 002e FF       		.byte	0xff
 12907 002f 1A       		.byte	0x1a
 12908 0030 9F       		.byte	0x9f
 12909 0031 04000000 		.4byte	.LVL2
 12910 0035 08000000 		.4byte	.LVL3
 12911 0039 0800     		.2byte	0x8
 12912 003b 72       		.byte	0x72
 12913 003c 00       		.sleb128 0
 12914 003d 38       		.byte	0x38
 12915 003e 24       		.byte	0x24
 12916 003f 70       		.byte	0x70
 12917 0040 00       		.sleb128 0
 12918 0041 21       		.byte	0x21
 12919 0042 9F       		.byte	0x9f
 12920 0043 08000000 		.4byte	.LVL3
 12921 0047 0A000000 		.4byte	.LFE0
 12922 004b 0E00     		.2byte	0xe
 12923 004d 72       		.byte	0x72
 12924 004e 00       		.sleb128 0
 12925 004f 38       		.byte	0x38
 12926 0050 24       		.byte	0x24
 12927 0051 F3       		.byte	0xf3
 12928 0052 01       		.uleb128 0x1
 12929 0053 50       		.byte	0x50
 12930 0054 94       		.byte	0x94
 12931 0055 01       		.byte	0x1
 12932 0056 08       		.byte	0x8
 12933 0057 FF       		.byte	0xff
 12934 0058 1A       		.byte	0x1a
 12935 0059 21       		.byte	0x21
 12936 005a 9F       		.byte	0x9f
 12937 005b 00000000 		.4byte	0
 12938 005f 00000000 		.4byte	0
 12939              	.LLST2:
 12940 0063 00000000 		.4byte	.LVL4
 12941 0067 10000000 		.4byte	.LVL8
 12942 006b 0100     		.2byte	0x1
 12943 006d 50       		.byte	0x50
 12944 006e 10000000 		.4byte	.LVL8
 12945 0072 16000000 		.4byte	.LFE1
 12946 0076 0400     		.2byte	0x4
 12947 0078 F3       		.byte	0xf3
 12948 0079 01       		.uleb128 0x1
 12949 007a 50       		.byte	0x50
 12950 007b 9F       		.byte	0x9f
 12951 007c 00000000 		.4byte	0
 12952 0080 00000000 		.4byte	0
 12953              	.LLST3:
 12954 0084 02000000 		.4byte	.LVL5
 12955 0088 0E000000 		.4byte	.LVL7
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 329


 12956 008c 0100     		.2byte	0x1
 12957 008e 52       		.byte	0x52
 12958 008f 0E000000 		.4byte	.LVL7
 12959 0093 10000000 		.4byte	.LVL8
 12960 0097 0100     		.2byte	0x1
 12961 0099 53       		.byte	0x53
 12962 009a 10000000 		.4byte	.LVL8
 12963 009e 14000000 		.4byte	.LVL9
 12964 00a2 0800     		.2byte	0x8
 12965 00a4 73       		.byte	0x73
 12966 00a5 00       		.sleb128 0
 12967 00a6 38       		.byte	0x38
 12968 00a7 24       		.byte	0x24
 12969 00a8 70       		.byte	0x70
 12970 00a9 00       		.sleb128 0
 12971 00aa 21       		.byte	0x21
 12972 00ab 9F       		.byte	0x9f
 12973 00ac 14000000 		.4byte	.LVL9
 12974 00b0 16000000 		.4byte	.LFE1
 12975 00b4 0100     		.2byte	0x1
 12976 00b6 50       		.byte	0x50
 12977 00b7 00000000 		.4byte	0
 12978 00bb 00000000 		.4byte	0
 12979              	.LLST4:
 12980 00bf 00000000 		.4byte	.LVL10
 12981 00c3 00000000 		.4byte	.LVL10
 12982 00c7 0100     		.2byte	0x1
 12983 00c9 50       		.byte	0x50
 12984 00ca 00000000 		.4byte	.LVL10
 12985 00ce 02000000 		.4byte	.LVL11
 12986 00d2 0300     		.2byte	0x3
 12987 00d4 70       		.byte	0x70
 12988 00d5 01       		.sleb128 1
 12989 00d6 9F       		.byte	0x9f
 12990 00d7 02000000 		.4byte	.LVL11
 12991 00db 08000000 		.4byte	.LFE2
 12992 00df 0300     		.2byte	0x3
 12993 00e1 70       		.byte	0x70
 12994 00e2 02       		.sleb128 2
 12995 00e3 9F       		.byte	0x9f
 12996 00e4 00000000 		.4byte	0
 12997 00e8 00000000 		.4byte	0
 12998              	.LLST5:
 12999 00ec 00000000 		.4byte	.LVL10
 13000 00f0 02000000 		.4byte	.LVL11
 13001 00f4 0100     		.2byte	0x1
 13002 00f6 51       		.byte	0x51
 13003 00f7 02000000 		.4byte	.LVL11
 13004 00fb 04000000 		.4byte	.LVL12
 13005 00ff 0500     		.2byte	0x5
 13006 0101 71       		.byte	0x71
 13007 0102 00       		.sleb128 0
 13008 0103 38       		.byte	0x38
 13009 0104 25       		.byte	0x25
 13010 0105 9F       		.byte	0x9f
 13011 0106 00000000 		.4byte	0
 13012 010a 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 330


 13013              	.LLST6:
 13014 010e 00000000 		.4byte	.LVL13
 13015 0112 00000000 		.4byte	.LVL13
 13016 0116 0100     		.2byte	0x1
 13017 0118 50       		.byte	0x50
 13018 0119 00000000 		.4byte	.LVL13
 13019 011d 02000000 		.4byte	.LVL14
 13020 0121 0300     		.2byte	0x3
 13021 0123 70       		.byte	0x70
 13022 0124 01       		.sleb128 1
 13023 0125 9F       		.byte	0x9f
 13024 0126 02000000 		.4byte	.LVL14
 13025 012a 08000000 		.4byte	.LVL15
 13026 012e 0300     		.2byte	0x3
 13027 0130 70       		.byte	0x70
 13028 0131 02       		.sleb128 2
 13029 0132 9F       		.byte	0x9f
 13030 0133 08000000 		.4byte	.LVL15
 13031 0137 0E000000 		.4byte	.LVL16
 13032 013b 0300     		.2byte	0x3
 13033 013d 70       		.byte	0x70
 13034 013e 03       		.sleb128 3
 13035 013f 9F       		.byte	0x9f
 13036 0140 0E000000 		.4byte	.LVL16
 13037 0144 14000000 		.4byte	.LFE3
 13038 0148 0300     		.2byte	0x3
 13039 014a 70       		.byte	0x70
 13040 014b 04       		.sleb128 4
 13041 014c 9F       		.byte	0x9f
 13042 014d 00000000 		.4byte	0
 13043 0151 00000000 		.4byte	0
 13044              	.LLST7:
 13045 0155 00000000 		.4byte	.LVL13
 13046 0159 02000000 		.4byte	.LVL14
 13047 015d 0100     		.2byte	0x1
 13048 015f 51       		.byte	0x51
 13049 0160 02000000 		.4byte	.LVL14
 13050 0164 08000000 		.4byte	.LVL15
 13051 0168 0500     		.2byte	0x5
 13052 016a 71       		.byte	0x71
 13053 016b 00       		.sleb128 0
 13054 016c 38       		.byte	0x38
 13055 016d 25       		.byte	0x25
 13056 016e 9F       		.byte	0x9f
 13057 016f 08000000 		.4byte	.LVL15
 13058 0173 0E000000 		.4byte	.LVL16
 13059 0177 0500     		.2byte	0x5
 13060 0179 71       		.byte	0x71
 13061 017a 00       		.sleb128 0
 13062 017b 40       		.byte	0x40
 13063 017c 25       		.byte	0x25
 13064 017d 9F       		.byte	0x9f
 13065 017e 0E000000 		.4byte	.LVL16
 13066 0182 10000000 		.4byte	.LVL17
 13067 0186 0500     		.2byte	0x5
 13068 0188 71       		.byte	0x71
 13069 0189 00       		.sleb128 0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 331


 13070 018a 48       		.byte	0x48
 13071 018b 25       		.byte	0x25
 13072 018c 9F       		.byte	0x9f
 13073 018d 10000000 		.4byte	.LVL17
 13074 0191 14000000 		.4byte	.LFE3
 13075 0195 0100     		.2byte	0x1
 13076 0197 51       		.byte	0x51
 13077 0198 00000000 		.4byte	0
 13078 019c 00000000 		.4byte	0
 13079              	.LLST8:
 13080 01a0 00000000 		.4byte	.LVL18
 13081 01a4 04000000 		.4byte	.LVL19
 13082 01a8 0100     		.2byte	0x1
 13083 01aa 50       		.byte	0x50
 13084 01ab 04000000 		.4byte	.LVL19
 13085 01af 12000000 		.4byte	.LFE4
 13086 01b3 0400     		.2byte	0x4
 13087 01b5 F3       		.byte	0xf3
 13088 01b6 01       		.uleb128 0x1
 13089 01b7 50       		.byte	0x50
 13090 01b8 9F       		.byte	0x9f
 13091 01b9 00000000 		.4byte	0
 13092 01bd 00000000 		.4byte	0
 13093              	.LLST9:
 13094 01c1 00000000 		.4byte	.LVL18
 13095 01c5 04000000 		.4byte	.LVL19
 13096 01c9 0100     		.2byte	0x1
 13097 01cb 51       		.byte	0x51
 13098 01cc 04000000 		.4byte	.LVL19
 13099 01d0 12000000 		.4byte	.LFE4
 13100 01d4 0400     		.2byte	0x4
 13101 01d6 F3       		.byte	0xf3
 13102 01d7 01       		.uleb128 0x1
 13103 01d8 51       		.byte	0x51
 13104 01d9 9F       		.byte	0x9f
 13105 01da 00000000 		.4byte	0
 13106 01de 00000000 		.4byte	0
 13107              	.LLST10:
 13108 01e2 00000000 		.4byte	.LVL18
 13109 01e6 04000000 		.4byte	.LVL19
 13110 01ea 0100     		.2byte	0x1
 13111 01ec 52       		.byte	0x52
 13112 01ed 04000000 		.4byte	.LVL19
 13113 01f1 08000000 		.4byte	.LVL20
 13114 01f5 0100     		.2byte	0x1
 13115 01f7 53       		.byte	0x53
 13116 01f8 08000000 		.4byte	.LVL20
 13117 01fc 0E000000 		.4byte	.LVL23
 13118 0200 0300     		.2byte	0x3
 13119 0202 73       		.byte	0x73
 13120 0203 7F       		.sleb128 -1
 13121 0204 9F       		.byte	0x9f
 13122 0205 0E000000 		.4byte	.LVL23
 13123 0209 12000000 		.4byte	.LFE4
 13124 020d 0100     		.2byte	0x1
 13125 020f 53       		.byte	0x53
 13126 0210 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 332


 13127 0214 00000000 		.4byte	0
 13128              	.LLST11:
 13129 0218 00000000 		.4byte	.LVL18
 13130 021c 04000000 		.4byte	.LVL19
 13131 0220 0100     		.2byte	0x1
 13132 0222 50       		.byte	0x50
 13133 0223 04000000 		.4byte	.LVL19
 13134 0227 0A000000 		.4byte	.LVL21
 13135 022b 0300     		.2byte	0x3
 13136 022d 70       		.byte	0x70
 13137 022e 01       		.sleb128 1
 13138 022f 9F       		.byte	0x9f
 13139 0230 0A000000 		.4byte	.LVL21
 13140 0234 12000000 		.4byte	.LFE4
 13141 0238 0100     		.2byte	0x1
 13142 023a 50       		.byte	0x50
 13143 023b 00000000 		.4byte	0
 13144 023f 00000000 		.4byte	0
 13145              	.LLST12:
 13146 0243 00000000 		.4byte	.LVL18
 13147 0247 04000000 		.4byte	.LVL19
 13148 024b 0100     		.2byte	0x1
 13149 024d 51       		.byte	0x51
 13150 024e 04000000 		.4byte	.LVL19
 13151 0252 0C000000 		.4byte	.LVL22
 13152 0256 0300     		.2byte	0x3
 13153 0258 71       		.byte	0x71
 13154 0259 01       		.sleb128 1
 13155 025a 9F       		.byte	0x9f
 13156 025b 0C000000 		.4byte	.LVL22
 13157 025f 12000000 		.4byte	.LFE4
 13158 0263 0100     		.2byte	0x1
 13159 0265 51       		.byte	0x51
 13160 0266 00000000 		.4byte	0
 13161 026a 00000000 		.4byte	0
 13162              	.LLST13:
 13163 026e 00000000 		.4byte	.LVL24
 13164 0272 00000000 		.4byte	.LVL24
 13165 0276 0100     		.2byte	0x1
 13166 0278 52       		.byte	0x52
 13167 0279 00000000 		.4byte	.LVL24
 13168 027d 02000000 		.4byte	.LVL25
 13169 0281 0400     		.2byte	0x4
 13170 0283 F3       		.byte	0xf3
 13171 0284 01       		.uleb128 0x1
 13172 0285 52       		.byte	0x52
 13173 0286 9F       		.byte	0x9f
 13174 0287 02000000 		.4byte	.LVL25
 13175 028b 06000000 		.4byte	.LVL27
 13176 028f 0600     		.2byte	0x6
 13177 0291 F3       		.byte	0xf3
 13178 0292 01       		.uleb128 0x1
 13179 0293 52       		.byte	0x52
 13180 0294 31       		.byte	0x31
 13181 0295 1C       		.byte	0x1c
 13182 0296 9F       		.byte	0x9f
 13183 0297 06000000 		.4byte	.LVL27
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 333


 13184 029b 0A000000 		.4byte	.LFE5
 13185 029f 0100     		.2byte	0x1
 13186 02a1 52       		.byte	0x52
 13187 02a2 00000000 		.4byte	0
 13188 02a6 00000000 		.4byte	0
 13189              	.LLST14:
 13190 02aa 00000000 		.4byte	.LVL24
 13191 02ae 04000000 		.4byte	.LVL26
 13192 02b2 0600     		.2byte	0x6
 13193 02b4 F3       		.byte	0xf3
 13194 02b5 01       		.uleb128 0x1
 13195 02b6 50       		.byte	0x50
 13196 02b7 23       		.byte	0x23
 13197 02b8 01       		.uleb128 0x1
 13198 02b9 9F       		.byte	0x9f
 13199 02ba 04000000 		.4byte	.LVL26
 13200 02be 0A000000 		.4byte	.LFE5
 13201 02c2 0100     		.2byte	0x1
 13202 02c4 50       		.byte	0x50
 13203 02c5 00000000 		.4byte	0
 13204 02c9 00000000 		.4byte	0
 13205              	.LLST15:
 13206 02cd 00000000 		.4byte	.LVL28
 13207 02d1 02000000 		.4byte	.LVL29
 13208 02d5 0100     		.2byte	0x1
 13209 02d7 50       		.byte	0x50
 13210 02d8 02000000 		.4byte	.LVL29
 13211 02dc 1E000000 		.4byte	.LFE6
 13212 02e0 0400     		.2byte	0x4
 13213 02e2 F3       		.byte	0xf3
 13214 02e3 01       		.uleb128 0x1
 13215 02e4 50       		.byte	0x50
 13216 02e5 9F       		.byte	0x9f
 13217 02e6 00000000 		.4byte	0
 13218 02ea 00000000 		.4byte	0
 13219              	.LLST16:
 13220 02ee 00000000 		.4byte	.LVL28
 13221 02f2 02000000 		.4byte	.LVL29
 13222 02f6 0100     		.2byte	0x1
 13223 02f8 51       		.byte	0x51
 13224 02f9 02000000 		.4byte	.LVL29
 13225 02fd 1E000000 		.4byte	.LFE6
 13226 0301 0400     		.2byte	0x4
 13227 0303 F3       		.byte	0xf3
 13228 0304 01       		.uleb128 0x1
 13229 0305 51       		.byte	0x51
 13230 0306 9F       		.byte	0x9f
 13231 0307 00000000 		.4byte	0
 13232 030b 00000000 		.4byte	0
 13233              	.LLST17:
 13234 030f 00000000 		.4byte	.LVL28
 13235 0313 0A000000 		.4byte	.LVL32
 13236 0317 0100     		.2byte	0x1
 13237 0319 52       		.byte	0x52
 13238 031a 0A000000 		.4byte	.LVL32
 13239 031e 0C000000 		.4byte	.LVL33
 13240 0322 0300     		.2byte	0x3
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 334


 13241 0324 72       		.byte	0x72
 13242 0325 7F       		.sleb128 -1
 13243 0326 9F       		.byte	0x9f
 13244 0327 0C000000 		.4byte	.LVL33
 13245 032b 1E000000 		.4byte	.LFE6
 13246 032f 0100     		.2byte	0x1
 13247 0331 52       		.byte	0x52
 13248 0332 00000000 		.4byte	0
 13249 0336 00000000 		.4byte	0
 13250              	.LLST18:
 13251 033a 02000000 		.4byte	.LVL29
 13252 033e 04000000 		.4byte	.LVL30
 13253 0342 0100     		.2byte	0x1
 13254 0344 50       		.byte	0x50
 13255 0345 04000000 		.4byte	.LVL30
 13256 0349 1C000000 		.4byte	.LVL36
 13257 034d 0100     		.2byte	0x1
 13258 034f 55       		.byte	0x55
 13259 0350 00000000 		.4byte	0
 13260 0354 00000000 		.4byte	0
 13261              	.LLST19:
 13262 0358 02000000 		.4byte	.LVL29
 13263 035c 06000000 		.4byte	.LVL31
 13264 0360 0100     		.2byte	0x1
 13265 0362 51       		.byte	0x51
 13266 0363 06000000 		.4byte	.LVL31
 13267 0367 10000000 		.4byte	.LVL34
 13268 036b 0300     		.2byte	0x3
 13269 036d 71       		.byte	0x71
 13270 036e 01       		.sleb128 1
 13271 036f 9F       		.byte	0x9f
 13272 0370 10000000 		.4byte	.LVL34
 13273 0374 18000000 		.4byte	.LVL35
 13274 0378 0100     		.2byte	0x1
 13275 037a 54       		.byte	0x54
 13276 037b 00000000 		.4byte	0
 13277 037f 00000000 		.4byte	0
 13278              	.LLST20:
 13279 0383 00000000 		.4byte	.LVL37
 13280 0387 04000000 		.4byte	.LVL38
 13281 038b 0100     		.2byte	0x1
 13282 038d 50       		.byte	0x50
 13283 038e 04000000 		.4byte	.LVL38
 13284 0392 0E000000 		.4byte	.LVL39
 13285 0396 0100     		.2byte	0x1
 13286 0398 50       		.byte	0x50
 13287 0399 00000000 		.4byte	0
 13288 039d 00000000 		.4byte	0
 13289              	.LLST21:
 13290 03a1 00000000 		.4byte	.LVL40
 13291 03a5 12000000 		.4byte	.LVL41
 13292 03a9 0100     		.2byte	0x1
 13293 03ab 50       		.byte	0x50
 13294 03ac 12000000 		.4byte	.LVL41
 13295 03b0 14000000 		.4byte	.LVL42
 13296 03b4 0400     		.2byte	0x4
 13297 03b6 F3       		.byte	0xf3
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 335


 13298 03b7 01       		.uleb128 0x1
 13299 03b8 50       		.byte	0x50
 13300 03b9 9F       		.byte	0x9f
 13301 03ba 14000000 		.4byte	.LVL42
 13302 03be 16000000 		.4byte	.LVL43
 13303 03c2 0100     		.2byte	0x1
 13304 03c4 50       		.byte	0x50
 13305 03c5 16000000 		.4byte	.LVL43
 13306 03c9 18000000 		.4byte	.LVL44
 13307 03cd 0400     		.2byte	0x4
 13308 03cf F3       		.byte	0xf3
 13309 03d0 01       		.uleb128 0x1
 13310 03d1 50       		.byte	0x50
 13311 03d2 9F       		.byte	0x9f
 13312 03d3 18000000 		.4byte	.LVL44
 13313 03d7 1A000000 		.4byte	.LVL45
 13314 03db 0100     		.2byte	0x1
 13315 03dd 50       		.byte	0x50
 13316 03de 1A000000 		.4byte	.LVL45
 13317 03e2 1C000000 		.4byte	.LVL46
 13318 03e6 0400     		.2byte	0x4
 13319 03e8 F3       		.byte	0xf3
 13320 03e9 01       		.uleb128 0x1
 13321 03ea 50       		.byte	0x50
 13322 03eb 9F       		.byte	0x9f
 13323 03ec 1C000000 		.4byte	.LVL46
 13324 03f0 1E000000 		.4byte	.LVL47
 13325 03f4 0100     		.2byte	0x1
 13326 03f6 50       		.byte	0x50
 13327 03f7 1E000000 		.4byte	.LVL47
 13328 03fb 20000000 		.4byte	.LVL48
 13329 03ff 0400     		.2byte	0x4
 13330 0401 F3       		.byte	0xf3
 13331 0402 01       		.uleb128 0x1
 13332 0403 50       		.byte	0x50
 13333 0404 9F       		.byte	0x9f
 13334 0405 20000000 		.4byte	.LVL48
 13335 0409 22000000 		.4byte	.LVL49
 13336 040d 0100     		.2byte	0x1
 13337 040f 50       		.byte	0x50
 13338 0410 22000000 		.4byte	.LVL49
 13339 0414 24000000 		.4byte	.LFE8
 13340 0418 0400     		.2byte	0x4
 13341 041a F3       		.byte	0xf3
 13342 041b 01       		.uleb128 0x1
 13343 041c 50       		.byte	0x50
 13344 041d 9F       		.byte	0x9f
 13345 041e 00000000 		.4byte	0
 13346 0422 00000000 		.4byte	0
 13347              	.LLST22:
 13348 0426 00000000 		.4byte	.LVL50
 13349 042a 14000000 		.4byte	.LVL51
 13350 042e 0100     		.2byte	0x1
 13351 0430 50       		.byte	0x50
 13352 0431 14000000 		.4byte	.LVL51
 13353 0435 16000000 		.4byte	.LVL52
 13354 0439 0400     		.2byte	0x4
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 336


 13355 043b F3       		.byte	0xf3
 13356 043c 01       		.uleb128 0x1
 13357 043d 50       		.byte	0x50
 13358 043e 9F       		.byte	0x9f
 13359 043f 16000000 		.4byte	.LVL52
 13360 0443 18000000 		.4byte	.LVL53
 13361 0447 0100     		.2byte	0x1
 13362 0449 50       		.byte	0x50
 13363 044a 18000000 		.4byte	.LVL53
 13364 044e 1A000000 		.4byte	.LVL54
 13365 0452 0400     		.2byte	0x4
 13366 0454 F3       		.byte	0xf3
 13367 0455 01       		.uleb128 0x1
 13368 0456 50       		.byte	0x50
 13369 0457 9F       		.byte	0x9f
 13370 0458 1A000000 		.4byte	.LVL54
 13371 045c 1C000000 		.4byte	.LVL55
 13372 0460 0100     		.2byte	0x1
 13373 0462 50       		.byte	0x50
 13374 0463 1C000000 		.4byte	.LVL55
 13375 0467 1E000000 		.4byte	.LVL56
 13376 046b 0400     		.2byte	0x4
 13377 046d F3       		.byte	0xf3
 13378 046e 01       		.uleb128 0x1
 13379 046f 50       		.byte	0x50
 13380 0470 9F       		.byte	0x9f
 13381 0471 1E000000 		.4byte	.LVL56
 13382 0475 20000000 		.4byte	.LVL57
 13383 0479 0100     		.2byte	0x1
 13384 047b 50       		.byte	0x50
 13385 047c 20000000 		.4byte	.LVL57
 13386 0480 22000000 		.4byte	.LVL58
 13387 0484 0400     		.2byte	0x4
 13388 0486 F3       		.byte	0xf3
 13389 0487 01       		.uleb128 0x1
 13390 0488 50       		.byte	0x50
 13391 0489 9F       		.byte	0x9f
 13392 048a 22000000 		.4byte	.LVL58
 13393 048e 24000000 		.4byte	.LVL59
 13394 0492 0100     		.2byte	0x1
 13395 0494 50       		.byte	0x50
 13396 0495 24000000 		.4byte	.LVL59
 13397 0499 26000000 		.4byte	.LFE9
 13398 049d 0400     		.2byte	0x4
 13399 049f F3       		.byte	0xf3
 13400 04a0 01       		.uleb128 0x1
 13401 04a1 50       		.byte	0x50
 13402 04a2 9F       		.byte	0x9f
 13403 04a3 00000000 		.4byte	0
 13404 04a7 00000000 		.4byte	0
 13405              	.LLST23:
 13406 04ab 00000000 		.4byte	.LVL60
 13407 04af 0E000000 		.4byte	.LVL62
 13408 04b3 0100     		.2byte	0x1
 13409 04b5 50       		.byte	0x50
 13410 04b6 0E000000 		.4byte	.LVL62
 13411 04ba 14000000 		.4byte	.LVL63
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 337


 13412 04be 0400     		.2byte	0x4
 13413 04c0 F3       		.byte	0xf3
 13414 04c1 01       		.uleb128 0x1
 13415 04c2 50       		.byte	0x50
 13416 04c3 9F       		.byte	0x9f
 13417 04c4 14000000 		.4byte	.LVL63
 13418 04c8 16000000 		.4byte	.LVL64
 13419 04cc 0100     		.2byte	0x1
 13420 04ce 50       		.byte	0x50
 13421 04cf 16000000 		.4byte	.LVL64
 13422 04d3 18000000 		.4byte	.LFE13
 13423 04d7 0400     		.2byte	0x4
 13424 04d9 F3       		.byte	0xf3
 13425 04da 01       		.uleb128 0x1
 13426 04db 50       		.byte	0x50
 13427 04dc 9F       		.byte	0x9f
 13428 04dd 00000000 		.4byte	0
 13429 04e1 00000000 		.4byte	0
 13430              	.LLST24:
 13431 04e5 00000000 		.4byte	.LVL60
 13432 04e9 02000000 		.4byte	.LVL61
 13433 04ed 0100     		.2byte	0x1
 13434 04ef 51       		.byte	0x51
 13435 04f0 02000000 		.4byte	.LVL61
 13436 04f4 18000000 		.4byte	.LFE13
 13437 04f8 0100     		.2byte	0x1
 13438 04fa 51       		.byte	0x51
 13439 04fb 00000000 		.4byte	0
 13440 04ff 00000000 		.4byte	0
 13441              	.LLST25:
 13442 0503 00000000 		.4byte	.LVL65
 13443 0507 0A000000 		.4byte	.LVL66
 13444 050b 0100     		.2byte	0x1
 13445 050d 50       		.byte	0x50
 13446 050e 0A000000 		.4byte	.LVL66
 13447 0512 24000000 		.4byte	.LFE22
 13448 0516 0100     		.2byte	0x1
 13449 0518 56       		.byte	0x56
 13450 0519 00000000 		.4byte	0
 13451 051d 00000000 		.4byte	0
 13452              	.LLST26:
 13453 0521 00000000 		.4byte	.LVL65
 13454 0525 0D000000 		.4byte	.LVL67-1
 13455 0529 0100     		.2byte	0x1
 13456 052b 51       		.byte	0x51
 13457 052c 0D000000 		.4byte	.LVL67-1
 13458 0530 24000000 		.4byte	.LFE22
 13459 0534 0100     		.2byte	0x1
 13460 0536 55       		.byte	0x55
 13461 0537 00000000 		.4byte	0
 13462 053b 00000000 		.4byte	0
 13463              	.LLST27:
 13464 053f 10000000 		.4byte	.LVL68
 13465 0543 1A000000 		.4byte	.LVL69
 13466 0547 0100     		.2byte	0x1
 13467 0549 50       		.byte	0x50
 13468 054a 1A000000 		.4byte	.LVL69
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 338


 13469 054e 22000000 		.4byte	.LVL71
 13470 0552 0100     		.2byte	0x1
 13471 0554 54       		.byte	0x54
 13472 0555 22000000 		.4byte	.LVL71
 13473 0559 24000000 		.4byte	.LFE22
 13474 055d 0100     		.2byte	0x1
 13475 055f 50       		.byte	0x50
 13476 0560 00000000 		.4byte	0
 13477 0564 00000000 		.4byte	0
 13478              	.LLST28:
 13479 0568 00000000 		.4byte	.LVL72
 13480 056c 0E000000 		.4byte	.LVL74
 13481 0570 0100     		.2byte	0x1
 13482 0572 50       		.byte	0x50
 13483 0573 0E000000 		.4byte	.LVL74
 13484 0577 24000000 		.4byte	.LFE23
 13485 057b 0100     		.2byte	0x1
 13486 057d 56       		.byte	0x56
 13487 057e 00000000 		.4byte	0
 13488 0582 00000000 		.4byte	0
 13489              	.LLST29:
 13490 0586 00000000 		.4byte	.LVL72
 13491 058a 0A000000 		.4byte	.LVL73
 13492 058e 0100     		.2byte	0x1
 13493 0590 51       		.byte	0x51
 13494 0591 0A000000 		.4byte	.LVL73
 13495 0595 24000000 		.4byte	.LFE23
 13496 0599 0100     		.2byte	0x1
 13497 059b 54       		.byte	0x54
 13498 059c 00000000 		.4byte	0
 13499 05a0 00000000 		.4byte	0
 13500              	.LLST30:
 13501 05a4 00000000 		.4byte	.LVL72
 13502 05a8 11000000 		.4byte	.LVL75-1
 13503 05ac 0100     		.2byte	0x1
 13504 05ae 52       		.byte	0x52
 13505 05af 11000000 		.4byte	.LVL75-1
 13506 05b3 24000000 		.4byte	.LFE23
 13507 05b7 0100     		.2byte	0x1
 13508 05b9 55       		.byte	0x55
 13509 05ba 00000000 		.4byte	0
 13510 05be 00000000 		.4byte	0
 13511              	.LLST31:
 13512 05c2 00000000 		.4byte	.LVL77
 13513 05c6 4A000000 		.4byte	.LVL88
 13514 05ca 0100     		.2byte	0x1
 13515 05cc 50       		.byte	0x50
 13516 05cd 4A000000 		.4byte	.LVL88
 13517 05d1 68000000 		.4byte	.LVL92
 13518 05d5 0100     		.2byte	0x1
 13519 05d7 55       		.byte	0x55
 13520 05d8 68000000 		.4byte	.LVL92
 13521 05dc 6A000000 		.4byte	.LFE28
 13522 05e0 0100     		.2byte	0x1
 13523 05e2 50       		.byte	0x50
 13524 05e3 00000000 		.4byte	0
 13525 05e7 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 339


 13526              	.LLST32:
 13527 05eb 00000000 		.4byte	.LVL77
 13528 05ef 4F000000 		.4byte	.LVL89-1
 13529 05f3 0100     		.2byte	0x1
 13530 05f5 51       		.byte	0x51
 13531 05f6 4F000000 		.4byte	.LVL89-1
 13532 05fa 68000000 		.4byte	.LVL92
 13533 05fe 0100     		.2byte	0x1
 13534 0600 56       		.byte	0x56
 13535 0601 68000000 		.4byte	.LVL92
 13536 0605 6A000000 		.4byte	.LFE28
 13537 0609 0100     		.2byte	0x1
 13538 060b 51       		.byte	0x51
 13539 060c 00000000 		.4byte	0
 13540 0610 00000000 		.4byte	0
 13541              	.LLST33:
 13542 0614 10000000 		.4byte	.LVL78
 13543 0618 14000000 		.4byte	.LVL79
 13544 061c 0100     		.2byte	0x1
 13545 061e 53       		.byte	0x53
 13546 061f 14000000 		.4byte	.LVL79
 13547 0623 34000000 		.4byte	.LVL85
 13548 0627 0100     		.2byte	0x1
 13549 0629 52       		.byte	0x52
 13550 062a 34000000 		.4byte	.LVL85
 13551 062e 40000000 		.4byte	.LVL87
 13552 0632 0100     		.2byte	0x1
 13553 0634 53       		.byte	0x53
 13554 0635 00000000 		.4byte	0
 13555 0639 00000000 		.4byte	0
 13556              	.LLST34:
 13557 063d 10000000 		.4byte	.LVL78
 13558 0641 24000000 		.4byte	.LVL82
 13559 0645 0100     		.2byte	0x1
 13560 0647 54       		.byte	0x54
 13561 0648 24000000 		.4byte	.LVL82
 13562 064c 32000000 		.4byte	.LVL84
 13563 0650 0300     		.2byte	0x3
 13564 0652 74       		.byte	0x74
 13565 0653 01       		.sleb128 1
 13566 0654 9F       		.byte	0x9f
 13567 0655 32000000 		.4byte	.LVL84
 13568 0659 3E000000 		.4byte	.LVL86
 13569 065d 0100     		.2byte	0x1
 13570 065f 54       		.byte	0x54
 13571 0660 00000000 		.4byte	0
 13572 0664 00000000 		.4byte	0
 13573              	.LLST35:
 13574 0668 16000000 		.4byte	.LVL80
 13575 066c 34000000 		.4byte	.LVL85
 13576 0670 0100     		.2byte	0x1
 13577 0672 53       		.byte	0x53
 13578 0673 00000000 		.4byte	0
 13579 0677 00000000 		.4byte	0
 13580              	.LLST36:
 13581 067b 00000000 		.4byte	.LVL93
 13582 067f 18000000 		.4byte	.LVL97
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 340


 13583 0683 0100     		.2byte	0x1
 13584 0685 50       		.byte	0x50
 13585 0686 18000000 		.4byte	.LVL97
 13586 068a FC000000 		.4byte	.LVL123
 13587 068e 0200     		.2byte	0x2
 13588 0690 91       		.byte	0x91
 13589 0691 54       		.sleb128 -44
 13590 0692 FC000000 		.4byte	.LVL123
 13591 0696 00010000 		.4byte	.LFE29
 13592 069a 0200     		.2byte	0x2
 13593 069c 7D       		.byte	0x7d
 13594 069d 54       		.sleb128 -44
 13595 069e 00000000 		.4byte	0
 13596 06a2 00000000 		.4byte	0
 13597              	.LLST37:
 13598 06a6 00000000 		.4byte	.LVL93
 13599 06aa 16000000 		.4byte	.LVL96
 13600 06ae 0100     		.2byte	0x1
 13601 06b0 51       		.byte	0x51
 13602 06b1 16000000 		.4byte	.LVL96
 13603 06b5 FC000000 		.4byte	.LVL123
 13604 06b9 0100     		.2byte	0x1
 13605 06bb 5B       		.byte	0x5b
 13606 06bc FC000000 		.4byte	.LVL123
 13607 06c0 00010000 		.4byte	.LFE29
 13608 06c4 0400     		.2byte	0x4
 13609 06c6 F3       		.byte	0xf3
 13610 06c7 01       		.uleb128 0x1
 13611 06c8 51       		.byte	0x51
 13612 06c9 9F       		.byte	0x9f
 13613 06ca 00000000 		.4byte	0
 13614 06ce 00000000 		.4byte	0
 13615              	.LLST38:
 13616 06d2 2A000000 		.4byte	.LVL101
 13617 06d6 A6000000 		.4byte	.LVL115
 13618 06da 0100     		.2byte	0x1
 13619 06dc 54       		.byte	0x54
 13620 06dd A6000000 		.4byte	.LVL115
 13621 06e1 A8000000 		.4byte	.LVL116
 13622 06e5 0300     		.2byte	0x3
 13623 06e7 74       		.byte	0x74
 13624 06e8 20       		.sleb128 32
 13625 06e9 9F       		.byte	0x9f
 13626 06ea A8000000 		.4byte	.LVL116
 13627 06ee FC000000 		.4byte	.LVL123
 13628 06f2 0100     		.2byte	0x1
 13629 06f4 54       		.byte	0x54
 13630 06f5 00000000 		.4byte	0
 13631 06f9 00000000 		.4byte	0
 13632              	.LLST39:
 13633 06fd 72000000 		.4byte	.LVL108
 13634 0701 90000000 		.4byte	.LVL113
 13635 0705 0100     		.2byte	0x1
 13636 0707 56       		.byte	0x56
 13637 0708 E8000000 		.4byte	.LVL120
 13638 070c F0000000 		.4byte	.LVL121
 13639 0710 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 341


 13640 0712 56       		.byte	0x56
 13641 0713 00000000 		.4byte	0
 13642 0717 00000000 		.4byte	0
 13643              	.LLST40:
 13644 071b 12000000 		.4byte	.LVL95
 13645 071f FC000000 		.4byte	.LVL123
 13646 0723 0100     		.2byte	0x1
 13647 0725 5A       		.byte	0x5a
 13648 0726 FC000000 		.4byte	.LVL123
 13649 072a 00010000 		.4byte	.LFE29
 13650 072e 0600     		.2byte	0x6
 13651 0730 7D       		.byte	0x7d
 13652 0731 54       		.sleb128 -44
 13653 0732 06       		.byte	0x6
 13654 0733 23       		.byte	0x23
 13655 0734 20       		.uleb128 0x20
 13656 0735 9F       		.byte	0x9f
 13657 0736 00000000 		.4byte	0
 13658 073a 00000000 		.4byte	0
 13659              	.LLST41:
 13660 073e 1C000000 		.4byte	.LVL98
 13661 0742 24000000 		.4byte	.LVL99
 13662 0746 0200     		.2byte	0x2
 13663 0748 38       		.byte	0x38
 13664 0749 9F       		.byte	0x9f
 13665 074a 24000000 		.4byte	.LVL99
 13666 074e 62000000 		.4byte	.LVL104
 13667 0752 0100     		.2byte	0x1
 13668 0754 59       		.byte	0x59
 13669 0755 64000000 		.4byte	.LVL105
 13670 0759 FC000000 		.4byte	.LVL123
 13671 075d 0100     		.2byte	0x1
 13672 075f 59       		.byte	0x59
 13673 0760 00000000 		.4byte	0
 13674 0764 00000000 		.4byte	0
 13675              	.LLST42:
 13676 0768 1C000000 		.4byte	.LVL98
 13677 076c 24000000 		.4byte	.LVL99
 13678 0770 0200     		.2byte	0x2
 13679 0772 30       		.byte	0x30
 13680 0773 9F       		.byte	0x9f
 13681 0774 24000000 		.4byte	.LVL99
 13682 0778 26000000 		.4byte	.LVL100
 13683 077c 0100     		.2byte	0x1
 13684 077e 57       		.byte	0x57
 13685 077f 26000000 		.4byte	.LVL100
 13686 0783 6E000000 		.4byte	.LVL107
 13687 0787 0100     		.2byte	0x1
 13688 0789 56       		.byte	0x56
 13689 078a 6E000000 		.4byte	.LVL107
 13690 078e 90000000 		.4byte	.LVL113
 13691 0792 0100     		.2byte	0x1
 13692 0794 57       		.byte	0x57
 13693 0795 90000000 		.4byte	.LVL113
 13694 0799 B4000000 		.4byte	.LVL118
 13695 079d 0100     		.2byte	0x1
 13696 079f 56       		.byte	0x56
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 342


 13697 07a0 E0000000 		.4byte	.LVL119
 13698 07a4 E8000000 		.4byte	.LVL120
 13699 07a8 0100     		.2byte	0x1
 13700 07aa 56       		.byte	0x56
 13701 07ab E8000000 		.4byte	.LVL120
 13702 07af F0000000 		.4byte	.LVL121
 13703 07b3 0100     		.2byte	0x1
 13704 07b5 57       		.byte	0x57
 13705 07b6 F0000000 		.4byte	.LVL121
 13706 07ba F4000000 		.4byte	.LVL122
 13707 07be 0100     		.2byte	0x1
 13708 07c0 56       		.byte	0x56
 13709 07c1 00000000 		.4byte	0
 13710 07c5 00000000 		.4byte	0
 13711              	.LLST43:
 13712 07c9 1C000000 		.4byte	.LVL98
 13713 07cd 24000000 		.4byte	.LVL99
 13714 07d1 0200     		.2byte	0x2
 13715 07d3 30       		.byte	0x30
 13716 07d4 9F       		.byte	0x9f
 13717 07d5 24000000 		.4byte	.LVL99
 13718 07d9 5E000000 		.4byte	.LVL103
 13719 07dd 0100     		.2byte	0x1
 13720 07df 55       		.byte	0x55
 13721 07e0 64000000 		.4byte	.LVL105
 13722 07e4 84000000 		.4byte	.LVL110
 13723 07e8 0100     		.2byte	0x1
 13724 07ea 55       		.byte	0x55
 13725 07eb 88000000 		.4byte	.LVL111
 13726 07ef 8E000000 		.4byte	.LVL112
 13727 07f3 0100     		.2byte	0x1
 13728 07f5 55       		.byte	0x55
 13729 07f6 8E000000 		.4byte	.LVL112
 13730 07fa 90000000 		.4byte	.LVL113
 13731 07fe 0300     		.2byte	0x3
 13732 0800 75       		.byte	0x75
 13733 0801 7E       		.sleb128 -2
 13734 0802 9F       		.byte	0x9f
 13735 0803 90000000 		.4byte	.LVL113
 13736 0807 A8000000 		.4byte	.LVL116
 13737 080b 0100     		.2byte	0x1
 13738 080d 55       		.byte	0x55
 13739 080e A8000000 		.4byte	.LVL116
 13740 0812 AE000000 		.4byte	.LVL117
 13741 0816 0300     		.2byte	0x3
 13742 0818 75       		.byte	0x75
 13743 0819 01       		.sleb128 1
 13744 081a 9F       		.byte	0x9f
 13745 081b AE000000 		.4byte	.LVL117
 13746 081f FC000000 		.4byte	.LVL123
 13747 0823 0100     		.2byte	0x1
 13748 0825 55       		.byte	0x55
 13749 0826 00000000 		.4byte	0
 13750 082a 00000000 		.4byte	0
 13751              	.LLST44:
 13752 082e 0E000000 		.4byte	.LVL94
 13753 0832 FC000000 		.4byte	.LVL123
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 343


 13754 0836 0100     		.2byte	0x1
 13755 0838 58       		.byte	0x58
 13756 0839 00000000 		.4byte	0
 13757 083d 00000000 		.4byte	0
 13758              	.LLST45:
 13759 0841 00000000 		.4byte	.LVL124
 13760 0845 3E000000 		.4byte	.LVL139
 13761 0849 0100     		.2byte	0x1
 13762 084b 50       		.byte	0x50
 13763 084c 3E000000 		.4byte	.LVL139
 13764 0850 40000000 		.4byte	.LVL140
 13765 0854 0400     		.2byte	0x4
 13766 0856 F3       		.byte	0xf3
 13767 0857 01       		.uleb128 0x1
 13768 0858 50       		.byte	0x50
 13769 0859 9F       		.byte	0x9f
 13770 085a 40000000 		.4byte	.LVL140
 13771 085e 44000000 		.4byte	.LVL141
 13772 0862 0100     		.2byte	0x1
 13773 0864 50       		.byte	0x50
 13774 0865 44000000 		.4byte	.LVL141
 13775 0869 46000000 		.4byte	.LVL142
 13776 086d 0400     		.2byte	0x4
 13777 086f F3       		.byte	0xf3
 13778 0870 01       		.uleb128 0x1
 13779 0871 50       		.byte	0x50
 13780 0872 9F       		.byte	0x9f
 13781 0873 46000000 		.4byte	.LVL142
 13782 0877 48000000 		.4byte	.LVL143
 13783 087b 0100     		.2byte	0x1
 13784 087d 50       		.byte	0x50
 13785 087e 48000000 		.4byte	.LVL143
 13786 0882 4A000000 		.4byte	.LVL144
 13787 0886 0400     		.2byte	0x4
 13788 0888 F3       		.byte	0xf3
 13789 0889 01       		.uleb128 0x1
 13790 088a 50       		.byte	0x50
 13791 088b 9F       		.byte	0x9f
 13792 088c 4A000000 		.4byte	.LVL144
 13793 0890 4E000000 		.4byte	.LVL145
 13794 0894 0100     		.2byte	0x1
 13795 0896 50       		.byte	0x50
 13796 0897 4E000000 		.4byte	.LVL145
 13797 089b 52000000 		.4byte	.LFE31
 13798 089f 0400     		.2byte	0x4
 13799 08a1 F3       		.byte	0xf3
 13800 08a2 01       		.uleb128 0x1
 13801 08a3 50       		.byte	0x50
 13802 08a4 9F       		.byte	0x9f
 13803 08a5 00000000 		.4byte	0
 13804 08a9 00000000 		.4byte	0
 13805              	.LLST46:
 13806 08ad 04000000 		.4byte	.LVL126
 13807 08b1 28000000 		.4byte	.LVL132
 13808 08b5 0100     		.2byte	0x1
 13809 08b7 54       		.byte	0x54
 13810 08b8 28000000 		.4byte	.LVL132
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 344


 13811 08bc 30000000 		.4byte	.LVL134
 13812 08c0 0200     		.2byte	0x2
 13813 08c2 70       		.byte	0x70
 13814 08c3 00       		.sleb128 0
 13815 08c4 30000000 		.4byte	.LVL134
 13816 08c8 34000000 		.4byte	.LVL135
 13817 08cc 0100     		.2byte	0x1
 13818 08ce 54       		.byte	0x54
 13819 08cf 34000000 		.4byte	.LVL135
 13820 08d3 3C000000 		.4byte	.LVL138
 13821 08d7 0200     		.2byte	0x2
 13822 08d9 70       		.byte	0x70
 13823 08da 00       		.sleb128 0
 13824 08db 40000000 		.4byte	.LVL140
 13825 08df 4A000000 		.4byte	.LVL144
 13826 08e3 0100     		.2byte	0x1
 13827 08e5 54       		.byte	0x54
 13828 08e6 4A000000 		.4byte	.LVL144
 13829 08ea 4E000000 		.4byte	.LVL145
 13830 08ee 0200     		.2byte	0x2
 13831 08f0 70       		.byte	0x70
 13832 08f1 00       		.sleb128 0
 13833 08f2 00000000 		.4byte	0
 13834 08f6 00000000 		.4byte	0
 13835              	.LLST47:
 13836 08fa 04000000 		.4byte	.LVL126
 13837 08fe 08000000 		.4byte	.LVL127
 13838 0902 0100     		.2byte	0x1
 13839 0904 54       		.byte	0x54
 13840 0905 08000000 		.4byte	.LVL127
 13841 0909 0A000000 		.4byte	.LVL128
 13842 090d 0100     		.2byte	0x1
 13843 090f 52       		.byte	0x52
 13844 0910 0A000000 		.4byte	.LVL128
 13845 0914 40000000 		.4byte	.LVL140
 13846 0918 0100     		.2byte	0x1
 13847 091a 51       		.byte	0x51
 13848 091b 40000000 		.4byte	.LVL140
 13849 091f 46000000 		.4byte	.LVL142
 13850 0923 0100     		.2byte	0x1
 13851 0925 54       		.byte	0x54
 13852 0926 46000000 		.4byte	.LVL142
 13853 092a 4E000000 		.4byte	.LVL145
 13854 092e 0100     		.2byte	0x1
 13855 0930 51       		.byte	0x51
 13856 0931 00000000 		.4byte	0
 13857 0935 00000000 		.4byte	0
 13858              	.LLST48:
 13859 0939 0C000000 		.4byte	.LVL129
 13860 093d 1C000000 		.4byte	.LVL131
 13861 0941 0100     		.2byte	0x1
 13862 0943 53       		.byte	0x53
 13863 0944 1C000000 		.4byte	.LVL131
 13864 0948 3C000000 		.4byte	.LVL138
 13865 094c 0200     		.2byte	0x2
 13866 094e 71       		.byte	0x71
 13867 094f 7F       		.sleb128 -1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 345


 13868 0950 46000000 		.4byte	.LVL142
 13869 0954 4A000000 		.4byte	.LVL144
 13870 0958 0100     		.2byte	0x1
 13871 095a 53       		.byte	0x53
 13872 095b 4A000000 		.4byte	.LVL144
 13873 095f 4E000000 		.4byte	.LVL145
 13874 0963 0200     		.2byte	0x2
 13875 0965 71       		.byte	0x71
 13876 0966 7F       		.sleb128 -1
 13877 0967 00000000 		.4byte	0
 13878 096b 00000000 		.4byte	0
 13879              	.LLST49:
 13880 096f 1A000000 		.4byte	.LVL130
 13881 0973 2E000000 		.4byte	.LVL133
 13882 0977 0200     		.2byte	0x2
 13883 0979 31       		.byte	0x31
 13884 097a 9F       		.byte	0x9f
 13885 097b 2E000000 		.4byte	.LVL133
 13886 097f 30000000 		.4byte	.LVL134
 13887 0983 0100     		.2byte	0x1
 13888 0985 53       		.byte	0x53
 13889 0986 30000000 		.4byte	.LVL134
 13890 098a 36000000 		.4byte	.LVL136
 13891 098e 0200     		.2byte	0x2
 13892 0990 31       		.byte	0x31
 13893 0991 9F       		.byte	0x9f
 13894 0992 36000000 		.4byte	.LVL136
 13895 0996 40000000 		.4byte	.LVL140
 13896 099a 0100     		.2byte	0x1
 13897 099c 53       		.byte	0x53
 13898 099d 4A000000 		.4byte	.LVL144
 13899 09a1 4E000000 		.4byte	.LVL145
 13900 09a5 0100     		.2byte	0x1
 13901 09a7 53       		.byte	0x53
 13902 09a8 00000000 		.4byte	0
 13903 09ac 00000000 		.4byte	0
 13904              	.LLST50:
 13905 09b0 02000000 		.4byte	.LVL125
 13906 09b4 3A000000 		.4byte	.LVL137
 13907 09b8 0300     		.2byte	0x3
 13908 09ba 09       		.byte	0x9
 13909 09bb FF       		.byte	0xff
 13910 09bc 9F       		.byte	0x9f
 13911 09bd 3A000000 		.4byte	.LVL137
 13912 09c1 40000000 		.4byte	.LVL140
 13913 09c5 0100     		.2byte	0x1
 13914 09c7 53       		.byte	0x53
 13915 09c8 40000000 		.4byte	.LVL140
 13916 09cc 4E000000 		.4byte	.LVL145
 13917 09d0 0300     		.2byte	0x3
 13918 09d2 09       		.byte	0x9
 13919 09d3 FF       		.byte	0xff
 13920 09d4 9F       		.byte	0x9f
 13921 09d5 00000000 		.4byte	0
 13922 09d9 00000000 		.4byte	0
 13923              	.LLST51:
 13924 09dd 00000000 		.4byte	.LVL146
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 346


 13925 09e1 1A000000 		.4byte	.LVL149
 13926 09e5 0100     		.2byte	0x1
 13927 09e7 50       		.byte	0x50
 13928 09e8 1A000000 		.4byte	.LVL149
 13929 09ec 28000000 		.4byte	.LVL151
 13930 09f0 0100     		.2byte	0x1
 13931 09f2 54       		.byte	0x54
 13932 09f3 28000000 		.4byte	.LVL151
 13933 09f7 2A000000 		.4byte	.LVL152
 13934 09fb 0100     		.2byte	0x1
 13935 09fd 50       		.byte	0x50
 13936 09fe 2A000000 		.4byte	.LVL152
 13937 0a02 2C000000 		.4byte	.LVL153
 13938 0a06 0100     		.2byte	0x1
 13939 0a08 54       		.byte	0x54
 13940 0a09 2C000000 		.4byte	.LVL153
 13941 0a0d 2E000000 		.4byte	.LVL154
 13942 0a11 0100     		.2byte	0x1
 13943 0a13 50       		.byte	0x50
 13944 0a14 2E000000 		.4byte	.LVL154
 13945 0a18 30000000 		.4byte	.LVL155
 13946 0a1c 0100     		.2byte	0x1
 13947 0a1e 54       		.byte	0x54
 13948 0a1f 30000000 		.4byte	.LVL155
 13949 0a23 32000000 		.4byte	.LVL156
 13950 0a27 0100     		.2byte	0x1
 13951 0a29 50       		.byte	0x50
 13952 0a2a 32000000 		.4byte	.LVL156
 13953 0a2e 34000000 		.4byte	.LVL157
 13954 0a32 0100     		.2byte	0x1
 13955 0a34 54       		.byte	0x54
 13956 0a35 34000000 		.4byte	.LVL157
 13957 0a39 36000000 		.4byte	.LVL158
 13958 0a3d 0100     		.2byte	0x1
 13959 0a3f 50       		.byte	0x50
 13960 0a40 36000000 		.4byte	.LVL158
 13961 0a44 46000000 		.4byte	.LFE35
 13962 0a48 0100     		.2byte	0x1
 13963 0a4a 54       		.byte	0x54
 13964 0a4b 00000000 		.4byte	0
 13965 0a4f 00000000 		.4byte	0
 13966              	.LLST52:
 13967 0a53 00000000 		.4byte	.LVL146
 13968 0a57 12000000 		.4byte	.LVL148
 13969 0a5b 0100     		.2byte	0x1
 13970 0a5d 51       		.byte	0x51
 13971 0a5e 12000000 		.4byte	.LVL148
 13972 0a62 28000000 		.4byte	.LVL151
 13973 0a66 0100     		.2byte	0x1
 13974 0a68 55       		.byte	0x55
 13975 0a69 28000000 		.4byte	.LVL151
 13976 0a6d 34000000 		.4byte	.LVL157
 13977 0a71 0100     		.2byte	0x1
 13978 0a73 51       		.byte	0x51
 13979 0a74 34000000 		.4byte	.LVL157
 13980 0a78 46000000 		.4byte	.LFE35
 13981 0a7c 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 347


 13982 0a7e 55       		.byte	0x55
 13983 0a7f 00000000 		.4byte	0
 13984 0a83 00000000 		.4byte	0
 13985              	.LLST53:
 13986 0a87 04000000 		.4byte	.LVL147
 13987 0a8b 3A000000 		.4byte	.LVL159
 13988 0a8f 0200     		.2byte	0x2
 13989 0a91 39       		.byte	0x39
 13990 0a92 9F       		.byte	0x9f
 13991 0a93 3A000000 		.4byte	.LVL159
 13992 0a97 46000000 		.4byte	.LFE35
 13993 0a9b 0100     		.2byte	0x1
 13994 0a9d 50       		.byte	0x50
 13995 0a9e 00000000 		.4byte	0
 13996 0aa2 00000000 		.4byte	0
 13997              	.LLST54:
 13998 0aa6 00000000 		.4byte	.LVL160
 13999 0aaa 14000000 		.4byte	.LVL162
 14000 0aae 0100     		.2byte	0x1
 14001 0ab0 50       		.byte	0x50
 14002 0ab1 14000000 		.4byte	.LVL162
 14003 0ab5 40000000 		.4byte	.LVL165
 14004 0ab9 0100     		.2byte	0x1
 14005 0abb 54       		.byte	0x54
 14006 0abc 40000000 		.4byte	.LVL165
 14007 0ac0 42000000 		.4byte	.LVL166
 14008 0ac4 0100     		.2byte	0x1
 14009 0ac6 50       		.byte	0x50
 14010 0ac7 42000000 		.4byte	.LVL166
 14011 0acb 44000000 		.4byte	.LVL167
 14012 0acf 0400     		.2byte	0x4
 14013 0ad1 F3       		.byte	0xf3
 14014 0ad2 01       		.uleb128 0x1
 14015 0ad3 50       		.byte	0x50
 14016 0ad4 9F       		.byte	0x9f
 14017 0ad5 44000000 		.4byte	.LVL167
 14018 0ad9 50000000 		.4byte	.LFE10
 14019 0add 0100     		.2byte	0x1
 14020 0adf 54       		.byte	0x54
 14021 0ae0 00000000 		.4byte	0
 14022 0ae4 00000000 		.4byte	0
 14023              	.LLST55:
 14024 0ae8 02000000 		.4byte	.LVL161
 14025 0aec 4E000000 		.4byte	.LVL170
 14026 0af0 0200     		.2byte	0x2
 14027 0af2 30       		.byte	0x30
 14028 0af3 9F       		.byte	0x9f
 14029 0af4 4E000000 		.4byte	.LVL170
 14030 0af8 50000000 		.4byte	.LFE10
 14031 0afc 0100     		.2byte	0x1
 14032 0afe 50       		.byte	0x50
 14033 0aff 00000000 		.4byte	0
 14034 0b03 00000000 		.4byte	0
 14035              	.LLST56:
 14036 0b07 00000000 		.4byte	.LVL171
 14037 0b0b 0F000000 		.4byte	.LVL173-1
 14038 0b0f 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 348


 14039 0b11 50       		.byte	0x50
 14040 0b12 0F000000 		.4byte	.LVL173-1
 14041 0b16 2E000000 		.4byte	.LVL177
 14042 0b1a 0100     		.2byte	0x1
 14043 0b1c 54       		.byte	0x54
 14044 0b1d 2E000000 		.4byte	.LVL177
 14045 0b21 30000000 		.4byte	.LVL178
 14046 0b25 0100     		.2byte	0x1
 14047 0b27 50       		.byte	0x50
 14048 0b28 30000000 		.4byte	.LVL178
 14049 0b2c 34000000 		.4byte	.LFE11
 14050 0b30 0400     		.2byte	0x4
 14051 0b32 F3       		.byte	0xf3
 14052 0b33 01       		.uleb128 0x1
 14053 0b34 50       		.byte	0x50
 14054 0b35 9F       		.byte	0x9f
 14055 0b36 00000000 		.4byte	0
 14056 0b3a 00000000 		.4byte	0
 14057              	.LLST57:
 14058 0b3e 00000000 		.4byte	.LVL171
 14059 0b42 0F000000 		.4byte	.LVL173-1
 14060 0b46 0100     		.2byte	0x1
 14061 0b48 51       		.byte	0x51
 14062 0b49 0F000000 		.4byte	.LVL173-1
 14063 0b4d 2E000000 		.4byte	.LVL177
 14064 0b51 0100     		.2byte	0x1
 14065 0b53 55       		.byte	0x55
 14066 0b54 2E000000 		.4byte	.LVL177
 14067 0b58 30000000 		.4byte	.LVL178
 14068 0b5c 0100     		.2byte	0x1
 14069 0b5e 51       		.byte	0x51
 14070 0b5f 00000000 		.4byte	0
 14071 0b63 00000000 		.4byte	0
 14072              	.LLST58:
 14073 0b67 02000000 		.4byte	.LVL172
 14074 0b6b 10000000 		.4byte	.LVL173
 14075 0b6f 0200     		.2byte	0x2
 14076 0b71 30       		.byte	0x30
 14077 0b72 9F       		.byte	0x9f
 14078 0b73 10000000 		.4byte	.LVL173
 14079 0b77 1E000000 		.4byte	.LVL174
 14080 0b7b 0100     		.2byte	0x1
 14081 0b7d 50       		.byte	0x50
 14082 0b7e 2A000000 		.4byte	.LVL176
 14083 0b82 2E000000 		.4byte	.LVL177
 14084 0b86 0100     		.2byte	0x1
 14085 0b88 56       		.byte	0x56
 14086 0b89 2E000000 		.4byte	.LVL177
 14087 0b8d 30000000 		.4byte	.LVL178
 14088 0b91 0200     		.2byte	0x2
 14089 0b93 30       		.byte	0x30
 14090 0b94 9F       		.byte	0x9f
 14091 0b95 30000000 		.4byte	.LVL178
 14092 0b99 34000000 		.4byte	.LFE11
 14093 0b9d 0100     		.2byte	0x1
 14094 0b9f 56       		.byte	0x56
 14095 0ba0 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 349


 14096 0ba4 00000000 		.4byte	0
 14097              	.LLST59:
 14098 0ba8 00000000 		.4byte	.LVL179
 14099 0bac 11000000 		.4byte	.LVL180-1
 14100 0bb0 0100     		.2byte	0x1
 14101 0bb2 50       		.byte	0x50
 14102 0bb3 11000000 		.4byte	.LVL180-1
 14103 0bb7 66000000 		.4byte	.LVL189
 14104 0bbb 0100     		.2byte	0x1
 14105 0bbd 54       		.byte	0x54
 14106 0bbe 66000000 		.4byte	.LVL189
 14107 0bc2 70000000 		.4byte	.LFE32
 14108 0bc6 0400     		.2byte	0x4
 14109 0bc8 F3       		.byte	0xf3
 14110 0bc9 01       		.uleb128 0x1
 14111 0bca 50       		.byte	0x50
 14112 0bcb 9F       		.byte	0x9f
 14113 0bcc 00000000 		.4byte	0
 14114 0bd0 00000000 		.4byte	0
 14115              	.LLST60:
 14116 0bd4 00000000 		.4byte	.LVL179
 14117 0bd8 11000000 		.4byte	.LVL180-1
 14118 0bdc 0100     		.2byte	0x1
 14119 0bde 51       		.byte	0x51
 14120 0bdf 11000000 		.4byte	.LVL180-1
 14121 0be3 70000000 		.4byte	.LFE32
 14122 0be7 0400     		.2byte	0x4
 14123 0be9 F3       		.byte	0xf3
 14124 0bea 01       		.uleb128 0x1
 14125 0beb 51       		.byte	0x51
 14126 0bec 9F       		.byte	0x9f
 14127 0bed 00000000 		.4byte	0
 14128 0bf1 00000000 		.4byte	0
 14129              	.LLST61:
 14130 0bf5 00000000 		.4byte	.LVL190
 14131 0bf9 0D000000 		.4byte	.LVL192-1
 14132 0bfd 0100     		.2byte	0x1
 14133 0bff 50       		.byte	0x50
 14134 0c00 0D000000 		.4byte	.LVL192-1
 14135 0c04 6C000000 		.4byte	.LFE33
 14136 0c08 0100     		.2byte	0x1
 14137 0c0a 56       		.byte	0x56
 14138 0c0b 00000000 		.4byte	0
 14139 0c0f 00000000 		.4byte	0
 14140              	.LLST62:
 14141 0c13 00000000 		.4byte	.LVL190
 14142 0c17 0A000000 		.4byte	.LVL191
 14143 0c1b 0100     		.2byte	0x1
 14144 0c1d 51       		.byte	0x51
 14145 0c1e 0A000000 		.4byte	.LVL191
 14146 0c22 6C000000 		.4byte	.LFE33
 14147 0c26 0100     		.2byte	0x1
 14148 0c28 55       		.byte	0x55
 14149 0c29 00000000 		.4byte	0
 14150 0c2d 00000000 		.4byte	0
 14151              	.LLST63:
 14152 0c31 0E000000 		.4byte	.LVL192
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 350


 14153 0c35 1A000000 		.4byte	.LVL193
 14154 0c39 0100     		.2byte	0x1
 14155 0c3b 50       		.byte	0x50
 14156 0c3c 38000000 		.4byte	.LVL196
 14157 0c40 3A000000 		.4byte	.LVL197
 14158 0c44 0100     		.2byte	0x1
 14159 0c46 50       		.byte	0x50
 14160 0c47 5C000000 		.4byte	.LVL202
 14161 0c4b 6C000000 		.4byte	.LFE33
 14162 0c4f 0100     		.2byte	0x1
 14163 0c51 50       		.byte	0x50
 14164 0c52 00000000 		.4byte	0
 14165 0c56 00000000 		.4byte	0
 14166              	.LLST64:
 14167 0c5a 1A000000 		.4byte	.LVL193
 14168 0c5e 38000000 		.4byte	.LVL196
 14169 0c62 0100     		.2byte	0x1
 14170 0c64 54       		.byte	0x54
 14171 0c65 3A000000 		.4byte	.LVL197
 14172 0c69 42000000 		.4byte	.LVL198
 14173 0c6d 0100     		.2byte	0x1
 14174 0c6f 54       		.byte	0x54
 14175 0c70 44000000 		.4byte	.LVL199
 14176 0c74 68000000 		.4byte	.LVL204
 14177 0c78 0100     		.2byte	0x1
 14178 0c7a 54       		.byte	0x54
 14179 0c7b 00000000 		.4byte	0
 14180 0c7f 00000000 		.4byte	0
 14181              	.LLST65:
 14182 0c83 00000000 		.4byte	.LVL205
 14183 0c87 0F000000 		.4byte	.LVL206-1
 14184 0c8b 0100     		.2byte	0x1
 14185 0c8d 50       		.byte	0x50
 14186 0c8e 0F000000 		.4byte	.LVL206-1
 14187 0c92 BC020000 		.4byte	.LFE34
 14188 0c96 0400     		.2byte	0x4
 14189 0c98 F3       		.byte	0xf3
 14190 0c99 01       		.uleb128 0x1
 14191 0c9a 50       		.byte	0x50
 14192 0c9b 9F       		.byte	0x9f
 14193 0c9c 00000000 		.4byte	0
 14194 0ca0 00000000 		.4byte	0
 14195              	.LLST66:
 14196 0ca4 00000000 		.4byte	.LVL205
 14197 0ca8 0F000000 		.4byte	.LVL206-1
 14198 0cac 0100     		.2byte	0x1
 14199 0cae 51       		.byte	0x51
 14200 0caf 0F000000 		.4byte	.LVL206-1
 14201 0cb3 80000000 		.4byte	.LVL216
 14202 0cb7 0100     		.2byte	0x1
 14203 0cb9 56       		.byte	0x56
 14204 0cba 80000000 		.4byte	.LVL216
 14205 0cbe 2E020000 		.4byte	.LVL260
 14206 0cc2 0400     		.2byte	0x4
 14207 0cc4 F3       		.byte	0xf3
 14208 0cc5 01       		.uleb128 0x1
 14209 0cc6 51       		.byte	0x51
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 351


 14210 0cc7 9F       		.byte	0x9f
 14211 0cc8 2E020000 		.4byte	.LVL260
 14212 0ccc 5E020000 		.4byte	.LVL276
 14213 0cd0 0100     		.2byte	0x1
 14214 0cd2 56       		.byte	0x56
 14215 0cd3 5E020000 		.4byte	.LVL276
 14216 0cd7 BC020000 		.4byte	.LFE34
 14217 0cdb 0400     		.2byte	0x4
 14218 0cdd F3       		.byte	0xf3
 14219 0cde 01       		.uleb128 0x1
 14220 0cdf 51       		.byte	0x51
 14221 0ce0 9F       		.byte	0x9f
 14222 0ce1 00000000 		.4byte	0
 14223 0ce5 00000000 		.4byte	0
 14224              	.LLST67:
 14225 0ce9 00000000 		.4byte	.LVL205
 14226 0ced 0F000000 		.4byte	.LVL206-1
 14227 0cf1 0100     		.2byte	0x1
 14228 0cf3 52       		.byte	0x52
 14229 0cf4 0F000000 		.4byte	.LVL206-1
 14230 0cf8 28000000 		.4byte	.LVL208
 14231 0cfc 0400     		.2byte	0x4
 14232 0cfe F3       		.byte	0xf3
 14233 0cff 01       		.uleb128 0x1
 14234 0d00 52       		.byte	0x52
 14235 0d01 9F       		.byte	0x9f
 14236 0d02 28000000 		.4byte	.LVL208
 14237 0d06 F4000000 		.4byte	.LVL228
 14238 0d0a 0100     		.2byte	0x1
 14239 0d0c 57       		.byte	0x57
 14240 0d0d 2E020000 		.4byte	.LVL260
 14241 0d11 3A020000 		.4byte	.LVL264
 14242 0d15 0400     		.2byte	0x4
 14243 0d17 F3       		.byte	0xf3
 14244 0d18 01       		.uleb128 0x1
 14245 0d19 52       		.byte	0x52
 14246 0d1a 9F       		.byte	0x9f
 14247 0d1b 3A020000 		.4byte	.LVL264
 14248 0d1f 7C020000 		.4byte	.LVL282
 14249 0d23 0100     		.2byte	0x1
 14250 0d25 57       		.byte	0x57
 14251 0d26 00000000 		.4byte	0
 14252 0d2a 00000000 		.4byte	0
 14253              	.LLST68:
 14254 0d2e 10000000 		.4byte	.LVL206
 14255 0d32 2E000000 		.4byte	.LVL209
 14256 0d36 0100     		.2byte	0x1
 14257 0d38 50       		.byte	0x50
 14258 0d39 2E000000 		.4byte	.LVL209
 14259 0d3d C6000000 		.4byte	.LVL225
 14260 0d41 0100     		.2byte	0x1
 14261 0d43 55       		.byte	0x55
 14262 0d44 2E020000 		.4byte	.LVL260
 14263 0d48 30020000 		.4byte	.LVL261
 14264 0d4c 0100     		.2byte	0x1
 14265 0d4e 50       		.byte	0x50
 14266 0d4f 30020000 		.4byte	.LVL261
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 352


 14267 0d53 34020000 		.4byte	.LVL262
 14268 0d57 0100     		.2byte	0x1
 14269 0d59 55       		.byte	0x55
 14270 0d5a 34020000 		.4byte	.LVL262
 14271 0d5e 36020000 		.4byte	.LVL263
 14272 0d62 0100     		.2byte	0x1
 14273 0d64 50       		.byte	0x50
 14274 0d65 36020000 		.4byte	.LVL263
 14275 0d69 6A020000 		.4byte	.LVL279
 14276 0d6d 0100     		.2byte	0x1
 14277 0d6f 55       		.byte	0x55
 14278 0d70 00000000 		.4byte	0
 14279 0d74 00000000 		.4byte	0
 14280              	.LLST69:
 14281 0d78 32000000 		.4byte	.LVL210
 14282 0d7c 48000000 		.4byte	.LVL211
 14283 0d80 0100     		.2byte	0x1
 14284 0d82 50       		.byte	0x50
 14285 0d83 58000000 		.4byte	.LVL213
 14286 0d87 6E000000 		.4byte	.LVL214
 14287 0d8b 0100     		.2byte	0x1
 14288 0d8d 50       		.byte	0x50
 14289 0d8e 3A020000 		.4byte	.LVL264
 14290 0d92 3C020000 		.4byte	.LVL265
 14291 0d96 0100     		.2byte	0x1
 14292 0d98 50       		.byte	0x50
 14293 0d99 40020000 		.4byte	.LVL266
 14294 0d9d 42020000 		.4byte	.LVL267
 14295 0da1 0100     		.2byte	0x1
 14296 0da3 50       		.byte	0x50
 14297 0da4 46020000 		.4byte	.LVL268
 14298 0da8 48020000 		.4byte	.LVL269
 14299 0dac 0100     		.2byte	0x1
 14300 0dae 50       		.byte	0x50
 14301 0daf 4C020000 		.4byte	.LVL270
 14302 0db3 4E020000 		.4byte	.LVL271
 14303 0db7 0100     		.2byte	0x1
 14304 0db9 50       		.byte	0x50
 14305 0dba 00000000 		.4byte	0
 14306 0dbe 00000000 		.4byte	0
 14307              	.LLST70:
 14308 0dc2 80000000 		.4byte	.LVL216
 14309 0dc6 2E020000 		.4byte	.LVL260
 14310 0dca 0100     		.2byte	0x1
 14311 0dcc 56       		.byte	0x56
 14312 0dcd 5E020000 		.4byte	.LVL276
 14313 0dd1 AC020000 		.4byte	.LVL295
 14314 0dd5 0100     		.2byte	0x1
 14315 0dd7 56       		.byte	0x56
 14316 0dd8 00000000 		.4byte	0
 14317 0ddc 00000000 		.4byte	0
 14318              	.LLST71:
 14319 0de0 F4000000 		.4byte	.LVL228
 14320 0de4 FA000000 		.4byte	.LVL229
 14321 0de8 0100     		.2byte	0x1
 14322 0dea 50       		.byte	0x50
 14323 0deb FA000000 		.4byte	.LVL229
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 353


 14324 0def 00010000 		.4byte	.LVL231
 14325 0df3 0100     		.2byte	0x1
 14326 0df5 57       		.byte	0x57
 14327 0df6 00010000 		.4byte	.LVL231
 14328 0dfa 04010000 		.4byte	.LVL232
 14329 0dfe 0100     		.2byte	0x1
 14330 0e00 50       		.byte	0x50
 14331 0e01 04010000 		.4byte	.LVL232
 14332 0e05 20010000 		.4byte	.LVL235
 14333 0e09 0100     		.2byte	0x1
 14334 0e0b 57       		.byte	0x57
 14335 0e0c 7C020000 		.4byte	.LVL282
 14336 0e10 88020000 		.4byte	.LVL286
 14337 0e14 0100     		.2byte	0x1
 14338 0e16 57       		.byte	0x57
 14339 0e17 00000000 		.4byte	0
 14340 0e1b 00000000 		.4byte	0
 14341              	.LLST72:
 14342 0e1f 18010000 		.4byte	.LVL234
 14343 0e23 5C010000 		.4byte	.LVL242
 14344 0e27 0100     		.2byte	0x1
 14345 0e29 52       		.byte	0x52
 14346 0e2a 5C010000 		.4byte	.LVL242
 14347 0e2e 66010000 		.4byte	.LVL243
 14348 0e32 0B00     		.2byte	0xb
 14349 0e34 7A       		.byte	0x7a
 14350 0e35 00       		.sleb128 0
 14351 0e36 34       		.byte	0x34
 14352 0e37 25       		.byte	0x25
 14353 0e38 70       		.byte	0x70
 14354 0e39 00       		.sleb128 0
 14355 0e3a 22       		.byte	0x22
 14356 0e3b 79       		.byte	0x79
 14357 0e3c 00       		.sleb128 0
 14358 0e3d 22       		.byte	0x22
 14359 0e3e 9F       		.byte	0x9f
 14360 0e3f 86010000 		.4byte	.LVL247
 14361 0e43 A6010000 		.4byte	.LVL251
 14362 0e47 0B00     		.2byte	0xb
 14363 0e49 7A       		.byte	0x7a
 14364 0e4a 00       		.sleb128 0
 14365 0e4b 34       		.byte	0x34
 14366 0e4c 25       		.byte	0x25
 14367 0e4d 70       		.byte	0x70
 14368 0e4e 00       		.sleb128 0
 14369 0e4f 22       		.byte	0x22
 14370 0e50 79       		.byte	0x79
 14371 0e51 00       		.sleb128 0
 14372 0e52 22       		.byte	0x22
 14373 0e53 9F       		.byte	0x9f
 14374 0e54 82020000 		.4byte	.LVL284
 14375 0e58 94020000 		.4byte	.LVL290
 14376 0e5c 0100     		.2byte	0x1
 14377 0e5e 52       		.byte	0x52
 14378 0e5f A0020000 		.4byte	.LVL292
 14379 0e63 A2020000 		.4byte	.LVL293
 14380 0e67 0B00     		.2byte	0xb
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 354


 14381 0e69 7A       		.byte	0x7a
 14382 0e6a 00       		.sleb128 0
 14383 0e6b 34       		.byte	0x34
 14384 0e6c 25       		.byte	0x25
 14385 0e6d 70       		.byte	0x70
 14386 0e6e 00       		.sleb128 0
 14387 0e6f 22       		.byte	0x22
 14388 0e70 79       		.byte	0x79
 14389 0e71 00       		.sleb128 0
 14390 0e72 22       		.byte	0x22
 14391 0e73 9F       		.byte	0x9f
 14392 0e74 00000000 		.4byte	0
 14393 0e78 00000000 		.4byte	0
 14394              	.LLST73:
 14395 0e7c 9A000000 		.4byte	.LVL220
 14396 0e80 A0000000 		.4byte	.LVL221
 14397 0e84 0100     		.2byte	0x1
 14398 0e86 50       		.byte	0x50
 14399 0e87 A0000000 		.4byte	.LVL221
 14400 0e8b A6000000 		.4byte	.LVL223
 14401 0e8f 0100     		.2byte	0x1
 14402 0e91 58       		.byte	0x58
 14403 0e92 A6000000 		.4byte	.LVL223
 14404 0e96 C2000000 		.4byte	.LVL224
 14405 0e9a 0100     		.2byte	0x1
 14406 0e9c 50       		.byte	0x50
 14407 0e9d C2000000 		.4byte	.LVL224
 14408 0ea1 2E020000 		.4byte	.LVL260
 14409 0ea5 0100     		.2byte	0x1
 14410 0ea7 59       		.byte	0x59
 14411 0ea8 64020000 		.4byte	.LVL277
 14412 0eac 66020000 		.4byte	.LVL278
 14413 0eb0 0100     		.2byte	0x1
 14414 0eb2 50       		.byte	0x50
 14415 0eb3 66020000 		.4byte	.LVL278
 14416 0eb7 6A020000 		.4byte	.LVL279
 14417 0ebb 0100     		.2byte	0x1
 14418 0ebd 58       		.byte	0x58
 14419 0ebe 6A020000 		.4byte	.LVL279
 14420 0ec2 AC020000 		.4byte	.LVL295
 14421 0ec6 0100     		.2byte	0x1
 14422 0ec8 59       		.byte	0x59
 14423 0ec9 00000000 		.4byte	0
 14424 0ecd 00000000 		.4byte	0
 14425              	.LLST74:
 14426 0ed1 24010000 		.4byte	.LVL236
 14427 0ed5 52010000 		.4byte	.LVL241
 14428 0ed9 0100     		.2byte	0x1
 14429 0edb 55       		.byte	0x55
 14430 0edc 52010000 		.4byte	.LVL241
 14431 0ee0 84010000 		.4byte	.LVL246
 14432 0ee4 0300     		.2byte	0x3
 14433 0ee6 75       		.byte	0x75
 14434 0ee7 7E       		.sleb128 -2
 14435 0ee8 9F       		.byte	0x9f
 14436 0ee9 86010000 		.4byte	.LVL247
 14437 0eed 98010000 		.4byte	.LVL248
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 355


 14438 0ef1 0300     		.2byte	0x3
 14439 0ef3 75       		.byte	0x75
 14440 0ef4 7E       		.sleb128 -2
 14441 0ef5 9F       		.byte	0x9f
 14442 0ef6 98010000 		.4byte	.LVL248
 14443 0efa 9A010000 		.4byte	.LVL249
 14444 0efe 0600     		.2byte	0x6
 14445 0f00 74       		.byte	0x74
 14446 0f01 14       		.sleb128 20
 14447 0f02 06       		.byte	0x6
 14448 0f03 32       		.byte	0x32
 14449 0f04 1C       		.byte	0x1c
 14450 0f05 9F       		.byte	0x9f
 14451 0f06 9A010000 		.4byte	.LVL249
 14452 0f0a A2010000 		.4byte	.LVL250
 14453 0f0e 0300     		.2byte	0x3
 14454 0f10 75       		.byte	0x75
 14455 0f11 7E       		.sleb128 -2
 14456 0f12 9F       		.byte	0x9f
 14457 0f13 A2010000 		.4byte	.LVL250
 14458 0f17 A6010000 		.4byte	.LVL251
 14459 0f1b 0600     		.2byte	0x6
 14460 0f1d 74       		.byte	0x74
 14461 0f1e 14       		.sleb128 20
 14462 0f1f 06       		.byte	0x6
 14463 0f20 32       		.byte	0x32
 14464 0f21 1C       		.byte	0x1c
 14465 0f22 9F       		.byte	0x9f
 14466 0f23 88020000 		.4byte	.LVL286
 14467 0f27 94020000 		.4byte	.LVL290
 14468 0f2b 0100     		.2byte	0x1
 14469 0f2d 55       		.byte	0x55
 14470 0f2e 94020000 		.4byte	.LVL290
 14471 0f32 A6020000 		.4byte	.LVL294
 14472 0f36 0300     		.2byte	0x3
 14473 0f38 75       		.byte	0x75
 14474 0f39 7E       		.sleb128 -2
 14475 0f3a 9F       		.byte	0x9f
 14476 0f3b 00000000 		.4byte	0
 14477 0f3f 00000000 		.4byte	0
 14478              	.LLST75:
 14479 0f43 84010000 		.4byte	.LVL246
 14480 0f47 86010000 		.4byte	.LVL247
 14481 0f4b 0100     		.2byte	0x1
 14482 0f4d 55       		.byte	0x55
 14483 0f4e A6010000 		.4byte	.LVL251
 14484 0f52 AA010000 		.4byte	.LVL252
 14485 0f56 0100     		.2byte	0x1
 14486 0f58 55       		.byte	0x55
 14487 0f59 AA010000 		.4byte	.LVL252
 14488 0f5d 2E020000 		.4byte	.LVL260
 14489 0f61 0400     		.2byte	0x4
 14490 0f63 75       		.byte	0x75
 14491 0f64 817C     		.sleb128 -511
 14492 0f66 9F       		.byte	0x9f
 14493 0f67 A6020000 		.4byte	.LVL294
 14494 0f6b AC020000 		.4byte	.LVL295
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 356


 14495 0f6f 0400     		.2byte	0x4
 14496 0f71 75       		.byte	0x75
 14497 0f72 817C     		.sleb128 -511
 14498 0f74 9F       		.byte	0x9f
 14499 0f75 00000000 		.4byte	0
 14500 0f79 00000000 		.4byte	0
 14501              	.LLST76:
 14502 0f7d 08010000 		.4byte	.LVL233
 14503 0f81 66010000 		.4byte	.LVL243
 14504 0f85 0100     		.2byte	0x1
 14505 0f87 50       		.byte	0x50
 14506 0f88 86010000 		.4byte	.LVL247
 14507 0f8c A6010000 		.4byte	.LVL251
 14508 0f90 0100     		.2byte	0x1
 14509 0f92 50       		.byte	0x50
 14510 0f93 7C020000 		.4byte	.LVL282
 14511 0f97 7E020000 		.4byte	.LVL283
 14512 0f9b 0100     		.2byte	0x1
 14513 0f9d 50       		.byte	0x50
 14514 0f9e 82020000 		.4byte	.LVL284
 14515 0fa2 84020000 		.4byte	.LVL285
 14516 0fa6 0100     		.2byte	0x1
 14517 0fa8 50       		.byte	0x50
 14518 0fa9 88020000 		.4byte	.LVL286
 14519 0fad 8A020000 		.4byte	.LVL287
 14520 0fb1 0100     		.2byte	0x1
 14521 0fb3 50       		.byte	0x50
 14522 0fb4 8E020000 		.4byte	.LVL288
 14523 0fb8 90020000 		.4byte	.LVL289
 14524 0fbc 0100     		.2byte	0x1
 14525 0fbe 50       		.byte	0x50
 14526 0fbf A0020000 		.4byte	.LVL292
 14527 0fc3 A2020000 		.4byte	.LVL293
 14528 0fc7 0100     		.2byte	0x1
 14529 0fc9 50       		.byte	0x50
 14530 0fca 00000000 		.4byte	0
 14531 0fce 00000000 		.4byte	0
 14532              	.LLST77:
 14533 0fd2 1C000000 		.4byte	.LVL207
 14534 0fd6 2E020000 		.4byte	.LVL260
 14535 0fda 0100     		.2byte	0x1
 14536 0fdc 54       		.byte	0x54
 14537 0fdd 34020000 		.4byte	.LVL262
 14538 0fe1 AC020000 		.4byte	.LVL295
 14539 0fe5 0100     		.2byte	0x1
 14540 0fe7 54       		.byte	0x54
 14541 0fe8 00000000 		.4byte	0
 14542 0fec 00000000 		.4byte	0
 14543              	.LLST78:
 14544 0ff0 72000000 		.4byte	.LVL215
 14545 0ff4 84000000 		.4byte	.LVL217
 14546 0ff8 0100     		.2byte	0x1
 14547 0ffa 50       		.byte	0x50
 14548 0ffb 2A010000 		.4byte	.LVL237
 14549 0fff 36010000 		.4byte	.LVL238
 14550 1003 0200     		.2byte	0x2
 14551 1005 30       		.byte	0x30
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 357


 14552 1006 9F       		.byte	0x9f
 14553 1007 36010000 		.4byte	.LVL238
 14554 100b 2E020000 		.4byte	.LVL260
 14555 100f 0100     		.2byte	0x1
 14556 1011 57       		.byte	0x57
 14557 1012 52020000 		.4byte	.LVL272
 14558 1016 54020000 		.4byte	.LVL273
 14559 101a 0100     		.2byte	0x1
 14560 101c 50       		.byte	0x50
 14561 101d 58020000 		.4byte	.LVL274
 14562 1021 5A020000 		.4byte	.LVL275
 14563 1025 0100     		.2byte	0x1
 14564 1027 50       		.byte	0x50
 14565 1028 8E020000 		.4byte	.LVL288
 14566 102c AC020000 		.4byte	.LVL295
 14567 1030 0100     		.2byte	0x1
 14568 1032 57       		.byte	0x57
 14569 1033 00000000 		.4byte	0
 14570 1037 00000000 		.4byte	0
 14571              	.LLST79:
 14572 103b 00000000 		.4byte	.LVL296
 14573 103f 2F000000 		.4byte	.LVL301-1
 14574 1043 0100     		.2byte	0x1
 14575 1045 50       		.byte	0x50
 14576 1046 2F000000 		.4byte	.LVL301-1
 14577 104a 98000000 		.4byte	.LVL308
 14578 104e 0100     		.2byte	0x1
 14579 1050 56       		.byte	0x56
 14580 1051 98000000 		.4byte	.LVL308
 14581 1055 A1000000 		.4byte	.LVL310-1
 14582 1059 0100     		.2byte	0x1
 14583 105b 50       		.byte	0x50
 14584 105c A1000000 		.4byte	.LVL310-1
 14585 1060 BE000000 		.4byte	.LVL313
 14586 1064 0100     		.2byte	0x1
 14587 1066 56       		.byte	0x56
 14588 1067 BE000000 		.4byte	.LVL313
 14589 106b C7000000 		.4byte	.LVL315-1
 14590 106f 0100     		.2byte	0x1
 14591 1071 50       		.byte	0x50
 14592 1072 C7000000 		.4byte	.LVL315-1
 14593 1076 F4000000 		.4byte	.LVL323
 14594 107a 0100     		.2byte	0x1
 14595 107c 56       		.byte	0x56
 14596 107d F4000000 		.4byte	.LVL323
 14597 1081 FE000000 		.4byte	.LVL324
 14598 1085 0100     		.2byte	0x1
 14599 1087 50       		.byte	0x50
 14600 1088 FE000000 		.4byte	.LVL324
 14601 108c 04010000 		.4byte	.LFE15
 14602 1090 0400     		.2byte	0x4
 14603 1092 F3       		.byte	0xf3
 14604 1093 01       		.uleb128 0x1
 14605 1094 50       		.byte	0x50
 14606 1095 9F       		.byte	0x9f
 14607 1096 00000000 		.4byte	0
 14608 109a 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 358


 14609              	.LLST80:
 14610 109e 00000000 		.4byte	.LVL296
 14611 10a2 28000000 		.4byte	.LVL300
 14612 10a6 0100     		.2byte	0x1
 14613 10a8 51       		.byte	0x51
 14614 10a9 28000000 		.4byte	.LVL300
 14615 10ad 46000000 		.4byte	.LVL304
 14616 10b1 0100     		.2byte	0x1
 14617 10b3 54       		.byte	0x54
 14618 10b4 46000000 		.4byte	.LVL304
 14619 10b8 98000000 		.4byte	.LVL308
 14620 10bc 0400     		.2byte	0x4
 14621 10be F3       		.byte	0xf3
 14622 10bf 01       		.uleb128 0x1
 14623 10c0 51       		.byte	0x51
 14624 10c1 9F       		.byte	0x9f
 14625 10c2 98000000 		.4byte	.LVL308
 14626 10c6 9A000000 		.4byte	.LVL309
 14627 10ca 0100     		.2byte	0x1
 14628 10cc 51       		.byte	0x51
 14629 10cd 9A000000 		.4byte	.LVL309
 14630 10d1 BE000000 		.4byte	.LVL313
 14631 10d5 0100     		.2byte	0x1
 14632 10d7 54       		.byte	0x54
 14633 10d8 BE000000 		.4byte	.LVL313
 14634 10dc C0000000 		.4byte	.LVL314
 14635 10e0 0100     		.2byte	0x1
 14636 10e2 51       		.byte	0x51
 14637 10e3 C0000000 		.4byte	.LVL314
 14638 10e7 DC000000 		.4byte	.LVL317
 14639 10eb 0100     		.2byte	0x1
 14640 10ed 54       		.byte	0x54
 14641 10ee DC000000 		.4byte	.LVL317
 14642 10f2 F4000000 		.4byte	.LVL323
 14643 10f6 0400     		.2byte	0x4
 14644 10f8 F3       		.byte	0xf3
 14645 10f9 01       		.uleb128 0x1
 14646 10fa 51       		.byte	0x51
 14647 10fb 9F       		.byte	0x9f
 14648 10fc F4000000 		.4byte	.LVL323
 14649 1100 FE000000 		.4byte	.LVL324
 14650 1104 0100     		.2byte	0x1
 14651 1106 51       		.byte	0x51
 14652 1107 FE000000 		.4byte	.LVL324
 14653 110b 04010000 		.4byte	.LFE15
 14654 110f 0400     		.2byte	0x4
 14655 1111 F3       		.byte	0xf3
 14656 1112 01       		.uleb128 0x1
 14657 1113 51       		.byte	0x51
 14658 1114 9F       		.byte	0x9f
 14659 1115 00000000 		.4byte	0
 14660 1119 00000000 		.4byte	0
 14661              	.LLST81:
 14662 111d 00000000 		.4byte	.LVL296
 14663 1121 2F000000 		.4byte	.LVL301-1
 14664 1125 0100     		.2byte	0x1
 14665 1127 52       		.byte	0x52
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 359


 14666 1128 2F000000 		.4byte	.LVL301-1
 14667 112c 98000000 		.4byte	.LVL308
 14668 1130 0100     		.2byte	0x1
 14669 1132 57       		.byte	0x57
 14670 1133 98000000 		.4byte	.LVL308
 14671 1137 A1000000 		.4byte	.LVL310-1
 14672 113b 0100     		.2byte	0x1
 14673 113d 52       		.byte	0x52
 14674 113e A1000000 		.4byte	.LVL310-1
 14675 1142 BE000000 		.4byte	.LVL313
 14676 1146 0100     		.2byte	0x1
 14677 1148 57       		.byte	0x57
 14678 1149 BE000000 		.4byte	.LVL313
 14679 114d C7000000 		.4byte	.LVL315-1
 14680 1151 0100     		.2byte	0x1
 14681 1153 52       		.byte	0x52
 14682 1154 C7000000 		.4byte	.LVL315-1
 14683 1158 D0000000 		.4byte	.LVL316
 14684 115c 0100     		.2byte	0x1
 14685 115e 57       		.byte	0x57
 14686 115f D0000000 		.4byte	.LVL316
 14687 1163 E6000000 		.4byte	.LVL320
 14688 1167 0400     		.2byte	0x4
 14689 1169 F3       		.byte	0xf3
 14690 116a 01       		.uleb128 0x1
 14691 116b 52       		.byte	0x52
 14692 116c 9F       		.byte	0x9f
 14693 116d E6000000 		.4byte	.LVL320
 14694 1171 E8000000 		.4byte	.LVL321
 14695 1175 0600     		.2byte	0x6
 14696 1177 77       		.byte	0x77
 14697 1178 00       		.sleb128 0
 14698 1179 71       		.byte	0x71
 14699 117a 00       		.sleb128 0
 14700 117b 21       		.byte	0x21
 14701 117c 9F       		.byte	0x9f
 14702 117d E8000000 		.4byte	.LVL321
 14703 1181 ED000000 		.4byte	.LVL322-1
 14704 1185 0100     		.2byte	0x1
 14705 1187 51       		.byte	0x51
 14706 1188 F4000000 		.4byte	.LVL323
 14707 118c FE000000 		.4byte	.LVL324
 14708 1190 0100     		.2byte	0x1
 14709 1192 52       		.byte	0x52
 14710 1193 00000000 		.4byte	0
 14711 1197 00000000 		.4byte	0
 14712              	.LLST82:
 14713 119b 22000000 		.4byte	.LVL298
 14714 119f 26000000 		.4byte	.LVL299
 14715 11a3 0100     		.2byte	0x1
 14716 11a5 51       		.byte	0x51
 14717 11a6 26000000 		.4byte	.LVL299
 14718 11aa 3E000000 		.4byte	.LVL302
 14719 11ae 0100     		.2byte	0x1
 14720 11b0 58       		.byte	0x58
 14721 11b1 3E000000 		.4byte	.LVL302
 14722 11b5 78000000 		.4byte	.LVL307
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 360


 14723 11b9 0100     		.2byte	0x1
 14724 11bb 59       		.byte	0x59
 14725 11bc 78000000 		.4byte	.LVL307
 14726 11c0 98000000 		.4byte	.LVL308
 14727 11c4 0C00     		.2byte	0xc
 14728 11c6 F3       		.byte	0xf3
 14729 11c7 01       		.uleb128 0x1
 14730 11c8 51       		.byte	0x51
 14731 11c9 31       		.byte	0x31
 14732 11ca 25       		.byte	0x25
 14733 11cb F3       		.byte	0xf3
 14734 11cc 01       		.uleb128 0x1
 14735 11cd 51       		.byte	0x51
 14736 11ce 22       		.byte	0x22
 14737 11cf 23       		.byte	0x23
 14738 11d0 01       		.uleb128 0x1
 14739 11d1 9F       		.byte	0x9f
 14740 11d2 00000000 		.4byte	0
 14741 11d6 00000000 		.4byte	0
 14742              	.LLST83:
 14743 11da 42000000 		.4byte	.LVL303
 14744 11de 78000000 		.4byte	.LVL307
 14745 11e2 0600     		.2byte	0x6
 14746 11e4 7A       		.byte	0x7a
 14747 11e5 00       		.sleb128 0
 14748 11e6 78       		.byte	0x78
 14749 11e7 00       		.sleb128 0
 14750 11e8 22       		.byte	0x22
 14751 11e9 9F       		.byte	0x9f
 14752 11ea 78000000 		.4byte	.LVL307
 14753 11ee 98000000 		.4byte	.LVL308
 14754 11f2 0600     		.2byte	0x6
 14755 11f4 7A       		.byte	0x7a
 14756 11f5 00       		.sleb128 0
 14757 11f6 79       		.byte	0x79
 14758 11f7 00       		.sleb128 0
 14759 11f8 22       		.byte	0x22
 14760 11f9 9F       		.byte	0x9f
 14761 11fa 00000000 		.4byte	0
 14762 11fe 00000000 		.4byte	0
 14763              	.LLST84:
 14764 1202 04000000 		.4byte	.LVL297
 14765 1206 30000000 		.4byte	.LVL301
 14766 120a 0200     		.2byte	0x2
 14767 120c 32       		.byte	0x32
 14768 120d 9F       		.byte	0x9f
 14769 120e 30000000 		.4byte	.LVL301
 14770 1212 6A000000 		.4byte	.LVL305
 14771 1216 0100     		.2byte	0x1
 14772 1218 50       		.byte	0x50
 14773 1219 6E000000 		.4byte	.LVL306
 14774 121d 98000000 		.4byte	.LVL308
 14775 1221 0100     		.2byte	0x1
 14776 1223 50       		.byte	0x50
 14777 1224 98000000 		.4byte	.LVL308
 14778 1228 A2000000 		.4byte	.LVL310
 14779 122c 0200     		.2byte	0x2
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 361


 14780 122e 32       		.byte	0x32
 14781 122f 9F       		.byte	0x9f
 14782 1230 A2000000 		.4byte	.LVL310
 14783 1234 AA000000 		.4byte	.LVL311
 14784 1238 0100     		.2byte	0x1
 14785 123a 50       		.byte	0x50
 14786 123b BE000000 		.4byte	.LVL313
 14787 123f C8000000 		.4byte	.LVL315
 14788 1243 0200     		.2byte	0x2
 14789 1245 32       		.byte	0x32
 14790 1246 9F       		.byte	0x9f
 14791 1247 C8000000 		.4byte	.LVL315
 14792 124b DE000000 		.4byte	.LVL318
 14793 124f 0100     		.2byte	0x1
 14794 1251 50       		.byte	0x50
 14795 1252 F4000000 		.4byte	.LVL323
 14796 1256 FE000000 		.4byte	.LVL324
 14797 125a 0200     		.2byte	0x2
 14798 125c 32       		.byte	0x32
 14799 125d 9F       		.byte	0x9f
 14800 125e FE000000 		.4byte	.LVL324
 14801 1262 04010000 		.4byte	.LFE15
 14802 1266 0100     		.2byte	0x1
 14803 1268 55       		.byte	0x55
 14804 1269 00000000 		.4byte	0
 14805 126d 00000000 		.4byte	0
 14806              	.LLST85:
 14807 1271 00000000 		.4byte	.LVL325
 14808 1275 2A000000 		.4byte	.LVL331
 14809 1279 0100     		.2byte	0x1
 14810 127b 50       		.byte	0x50
 14811 127c 2A000000 		.4byte	.LVL331
 14812 1280 6C000000 		.4byte	.LVL340
 14813 1284 0400     		.2byte	0x4
 14814 1286 F3       		.byte	0xf3
 14815 1287 01       		.uleb128 0x1
 14816 1288 50       		.byte	0x50
 14817 1289 9F       		.byte	0x9f
 14818 128a 6C000000 		.4byte	.LVL340
 14819 128e 74000000 		.4byte	.LVL342
 14820 1292 0100     		.2byte	0x1
 14821 1294 50       		.byte	0x50
 14822 1295 74000000 		.4byte	.LVL342
 14823 1299 8C000000 		.4byte	.LVL345
 14824 129d 0400     		.2byte	0x4
 14825 129f F3       		.byte	0xf3
 14826 12a0 01       		.uleb128 0x1
 14827 12a1 50       		.byte	0x50
 14828 12a2 9F       		.byte	0x9f
 14829 12a3 8C000000 		.4byte	.LVL345
 14830 12a7 94000000 		.4byte	.LVL347
 14831 12ab 0100     		.2byte	0x1
 14832 12ad 50       		.byte	0x50
 14833 12ae 94000000 		.4byte	.LVL347
 14834 12b2 B0000000 		.4byte	.LVL351
 14835 12b6 0400     		.2byte	0x4
 14836 12b8 F3       		.byte	0xf3
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 362


 14837 12b9 01       		.uleb128 0x1
 14838 12ba 50       		.byte	0x50
 14839 12bb 9F       		.byte	0x9f
 14840 12bc B0000000 		.4byte	.LVL351
 14841 12c0 B2000000 		.4byte	.LVL352
 14842 12c4 0100     		.2byte	0x1
 14843 12c6 50       		.byte	0x50
 14844 12c7 B2000000 		.4byte	.LVL352
 14845 12cb B4000000 		.4byte	.LVL353
 14846 12cf 0400     		.2byte	0x4
 14847 12d1 F3       		.byte	0xf3
 14848 12d2 01       		.uleb128 0x1
 14849 12d3 50       		.byte	0x50
 14850 12d4 9F       		.byte	0x9f
 14851 12d5 B4000000 		.4byte	.LVL353
 14852 12d9 B6000000 		.4byte	.LVL354
 14853 12dd 0100     		.2byte	0x1
 14854 12df 50       		.byte	0x50
 14855 12e0 B6000000 		.4byte	.LVL354
 14856 12e4 B8000000 		.4byte	.LVL355
 14857 12e8 0400     		.2byte	0x4
 14858 12ea F3       		.byte	0xf3
 14859 12eb 01       		.uleb128 0x1
 14860 12ec 50       		.byte	0x50
 14861 12ed 9F       		.byte	0x9f
 14862 12ee B8000000 		.4byte	.LVL355
 14863 12f2 BA000000 		.4byte	.LVL356
 14864 12f6 0100     		.2byte	0x1
 14865 12f8 50       		.byte	0x50
 14866 12f9 BA000000 		.4byte	.LVL356
 14867 12fd D4000000 		.4byte	.LFE14
 14868 1301 0400     		.2byte	0x4
 14869 1303 F3       		.byte	0xf3
 14870 1304 01       		.uleb128 0x1
 14871 1305 50       		.byte	0x50
 14872 1306 9F       		.byte	0x9f
 14873 1307 00000000 		.4byte	0
 14874 130b 00000000 		.4byte	0
 14875              	.LLST86:
 14876 130f 00000000 		.4byte	.LVL325
 14877 1313 24000000 		.4byte	.LVL330
 14878 1317 0100     		.2byte	0x1
 14879 1319 51       		.byte	0x51
 14880 131a 24000000 		.4byte	.LVL330
 14881 131e 6C000000 		.4byte	.LVL340
 14882 1322 0100     		.2byte	0x1
 14883 1324 54       		.byte	0x54
 14884 1325 6C000000 		.4byte	.LVL340
 14885 1329 6E000000 		.4byte	.LVL341
 14886 132d 0100     		.2byte	0x1
 14887 132f 51       		.byte	0x51
 14888 1330 6E000000 		.4byte	.LVL341
 14889 1334 8C000000 		.4byte	.LVL345
 14890 1338 0100     		.2byte	0x1
 14891 133a 54       		.byte	0x54
 14892 133b 8C000000 		.4byte	.LVL345
 14893 133f 8E000000 		.4byte	.LVL346
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 363


 14894 1343 0100     		.2byte	0x1
 14895 1345 51       		.byte	0x51
 14896 1346 8E000000 		.4byte	.LVL346
 14897 134a B0000000 		.4byte	.LVL351
 14898 134e 0100     		.2byte	0x1
 14899 1350 54       		.byte	0x54
 14900 1351 B0000000 		.4byte	.LVL351
 14901 1355 BC000000 		.4byte	.LVL357
 14902 1359 0100     		.2byte	0x1
 14903 135b 51       		.byte	0x51
 14904 135c BC000000 		.4byte	.LVL357
 14905 1360 D4000000 		.4byte	.LFE14
 14906 1364 0100     		.2byte	0x1
 14907 1366 54       		.byte	0x54
 14908 1367 00000000 		.4byte	0
 14909 136b 00000000 		.4byte	0
 14910              	.LLST87:
 14911 136f 3E000000 		.4byte	.LVL334
 14912 1373 5C000000 		.4byte	.LVL336
 14913 1377 0100     		.2byte	0x1
 14914 1379 55       		.byte	0x55
 14915 137a 5C000000 		.4byte	.LVL336
 14916 137e 64000000 		.4byte	.LVL337
 14917 1382 0100     		.2byte	0x1
 14918 1384 50       		.byte	0x50
 14919 1385 64000000 		.4byte	.LVL337
 14920 1389 66000000 		.4byte	.LVL338
 14921 138d 0D00     		.2byte	0xd
 14922 138f 73       		.byte	0x73
 14923 1390 30       		.sleb128 48
 14924 1391 94       		.byte	0x94
 14925 1392 01       		.byte	0x1
 14926 1393 08       		.byte	0x8
 14927 1394 FF       		.byte	0xff
 14928 1395 1A       		.byte	0x1a
 14929 1396 38       		.byte	0x38
 14930 1397 24       		.byte	0x24
 14931 1398 75       		.byte	0x75
 14932 1399 00       		.sleb128 0
 14933 139a 21       		.byte	0x21
 14934 139b 9F       		.byte	0x9f
 14935 139c 66000000 		.4byte	.LVL338
 14936 13a0 6A000000 		.4byte	.LVL339
 14937 13a4 0100     		.2byte	0x1
 14938 13a6 50       		.byte	0x50
 14939 13a7 6A000000 		.4byte	.LVL339
 14940 13ab 6C000000 		.4byte	.LVL340
 14941 13af 0D00     		.2byte	0xd
 14942 13b1 73       		.byte	0x73
 14943 13b2 30       		.sleb128 48
 14944 13b3 94       		.byte	0x94
 14945 13b4 01       		.byte	0x1
 14946 13b5 08       		.byte	0x8
 14947 13b6 FF       		.byte	0xff
 14948 13b7 1A       		.byte	0x1a
 14949 13b8 38       		.byte	0x38
 14950 13b9 24       		.byte	0x24
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 364


 14951 13ba 75       		.byte	0x75
 14952 13bb 00       		.sleb128 0
 14953 13bc 21       		.byte	0x21
 14954 13bd 9F       		.byte	0x9f
 14955 13be C2000000 		.4byte	.LVL358
 14956 13c2 C8000000 		.4byte	.LVL359
 14957 13c6 0100     		.2byte	0x1
 14958 13c8 55       		.byte	0x55
 14959 13c9 00000000 		.4byte	0
 14960 13cd 00000000 		.4byte	0
 14961              	.LLST88:
 14962 13d1 1E000000 		.4byte	.LVL328
 14963 13d5 22000000 		.4byte	.LVL329
 14964 13d9 0100     		.2byte	0x1
 14965 13db 51       		.byte	0x51
 14966 13dc 22000000 		.4byte	.LVL329
 14967 13e0 34000000 		.4byte	.LVL333
 14968 13e4 0100     		.2byte	0x1
 14969 13e6 55       		.byte	0x55
 14970 13e7 34000000 		.4byte	.LVL333
 14971 13eb 6C000000 		.4byte	.LVL340
 14972 13ef 0100     		.2byte	0x1
 14973 13f1 57       		.byte	0x57
 14974 13f2 BC000000 		.4byte	.LVL357
 14975 13f6 C2000000 		.4byte	.LVL358
 14976 13fa 0100     		.2byte	0x1
 14977 13fc 55       		.byte	0x55
 14978 13fd C2000000 		.4byte	.LVL358
 14979 1401 C8000000 		.4byte	.LVL359
 14980 1405 0100     		.2byte	0x1
 14981 1407 57       		.byte	0x57
 14982 1408 00000000 		.4byte	0
 14983 140c 00000000 		.4byte	0
 14984              	.LLST89:
 14985 1410 10000000 		.4byte	.LVL327
 14986 1414 8A000000 		.4byte	.LVL344
 14987 1418 0300     		.2byte	0x3
 14988 141a 09       		.byte	0x9
 14989 141b FF       		.byte	0xff
 14990 141c 9F       		.byte	0x9f
 14991 141d 8A000000 		.4byte	.LVL344
 14992 1421 8C000000 		.4byte	.LVL345
 14993 1425 0100     		.2byte	0x1
 14994 1427 50       		.byte	0x50
 14995 1428 8C000000 		.4byte	.LVL345
 14996 142c AE000000 		.4byte	.LVL350
 14997 1430 0300     		.2byte	0x3
 14998 1432 09       		.byte	0x9
 14999 1433 FF       		.byte	0xff
 15000 1434 9F       		.byte	0x9f
 15001 1435 AE000000 		.4byte	.LVL350
 15002 1439 B0000000 		.4byte	.LVL351
 15003 143d 0100     		.2byte	0x1
 15004 143f 50       		.byte	0x50
 15005 1440 B8000000 		.4byte	.LVL355
 15006 1444 D2000000 		.4byte	.LVL361
 15007 1448 0300     		.2byte	0x3
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 365


 15008 144a 09       		.byte	0x9
 15009 144b FF       		.byte	0xff
 15010 144c 9F       		.byte	0x9f
 15011 144d D2000000 		.4byte	.LVL361
 15012 1451 D4000000 		.4byte	.LFE14
 15013 1455 0100     		.2byte	0x1
 15014 1457 50       		.byte	0x50
 15015 1458 00000000 		.4byte	0
 15016 145c 00000000 		.4byte	0
 15017              	.LLST90:
 15018 1460 00000000 		.4byte	.LVL362
 15019 1464 3E000000 		.4byte	.LVL367
 15020 1468 0100     		.2byte	0x1
 15021 146a 50       		.byte	0x50
 15022 146b 3E000000 		.4byte	.LVL367
 15023 146f 88000000 		.4byte	.LVL374
 15024 1473 0100     		.2byte	0x1
 15025 1475 56       		.byte	0x56
 15026 1476 88000000 		.4byte	.LVL374
 15027 147a 8A000000 		.4byte	.LVL375
 15028 147e 0100     		.2byte	0x1
 15029 1480 50       		.byte	0x50
 15030 1481 8A000000 		.4byte	.LVL375
 15031 1485 8E000000 		.4byte	.LVL376
 15032 1489 0400     		.2byte	0x4
 15033 148b F3       		.byte	0xf3
 15034 148c 01       		.uleb128 0x1
 15035 148d 50       		.byte	0x50
 15036 148e 9F       		.byte	0x9f
 15037 148f 8E000000 		.4byte	.LVL376
 15038 1493 90000000 		.4byte	.LVL377
 15039 1497 0100     		.2byte	0x1
 15040 1499 50       		.byte	0x50
 15041 149a 90000000 		.4byte	.LVL377
 15042 149e 94000000 		.4byte	.LVL378
 15043 14a2 0100     		.2byte	0x1
 15044 14a4 56       		.byte	0x56
 15045 14a5 94000000 		.4byte	.LVL378
 15046 14a9 96000000 		.4byte	.LVL379
 15047 14ad 0100     		.2byte	0x1
 15048 14af 50       		.byte	0x50
 15049 14b0 96000000 		.4byte	.LVL379
 15050 14b4 B2000000 		.4byte	.LFE19
 15051 14b8 0100     		.2byte	0x1
 15052 14ba 56       		.byte	0x56
 15053 14bb 00000000 		.4byte	0
 15054 14bf 00000000 		.4byte	0
 15055              	.LLST91:
 15056 14c3 00000000 		.4byte	.LVL362
 15057 14c7 3E000000 		.4byte	.LVL367
 15058 14cb 0100     		.2byte	0x1
 15059 14cd 51       		.byte	0x51
 15060 14ce 3E000000 		.4byte	.LVL367
 15061 14d2 7E000000 		.4byte	.LVL373
 15062 14d6 0100     		.2byte	0x1
 15063 14d8 54       		.byte	0x54
 15064 14d9 88000000 		.4byte	.LVL374
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 366


 15065 14dd 9A000000 		.4byte	.LVL380
 15066 14e1 0100     		.2byte	0x1
 15067 14e3 51       		.byte	0x51
 15068 14e4 9A000000 		.4byte	.LVL380
 15069 14e8 B2000000 		.4byte	.LFE19
 15070 14ec 0100     		.2byte	0x1
 15071 14ee 54       		.byte	0x54
 15072 14ef 00000000 		.4byte	0
 15073 14f3 00000000 		.4byte	0
 15074              	.LLST92:
 15075 14f7 3C000000 		.4byte	.LVL366
 15076 14fb 6A000000 		.4byte	.LVL372
 15077 14ff 0100     		.2byte	0x1
 15078 1501 58       		.byte	0x58
 15079 1502 9A000000 		.4byte	.LVL380
 15080 1506 AC000000 		.4byte	.LVL386
 15081 150a 0100     		.2byte	0x1
 15082 150c 58       		.byte	0x58
 15083 150d 00000000 		.4byte	0
 15084 1511 00000000 		.4byte	0
 15085              	.LLST93:
 15086 1515 1A000000 		.4byte	.LVL364
 15087 1519 48000000 		.4byte	.LVL369
 15088 151d 0100     		.2byte	0x1
 15089 151f 55       		.byte	0x55
 15090 1520 48000000 		.4byte	.LVL369
 15091 1524 5C000000 		.4byte	.LVL370
 15092 1528 0100     		.2byte	0x1
 15093 152a 50       		.byte	0x50
 15094 152b 5C000000 		.4byte	.LVL370
 15095 152f 88000000 		.4byte	.LVL374
 15096 1533 0100     		.2byte	0x1
 15097 1535 55       		.byte	0x55
 15098 1536 94000000 		.4byte	.LVL378
 15099 153a 9A000000 		.4byte	.LVL380
 15100 153e 0100     		.2byte	0x1
 15101 1540 55       		.byte	0x55
 15102 1541 9A000000 		.4byte	.LVL380
 15103 1545 9C000000 		.4byte	.LVL381
 15104 1549 0100     		.2byte	0x1
 15105 154b 50       		.byte	0x50
 15106 154c 9C000000 		.4byte	.LVL381
 15107 1550 A0000000 		.4byte	.LVL382
 15108 1554 0100     		.2byte	0x1
 15109 1556 55       		.byte	0x55
 15110 1557 A0000000 		.4byte	.LVL382
 15111 155b A2000000 		.4byte	.LVL383
 15112 155f 0100     		.2byte	0x1
 15113 1561 50       		.byte	0x50
 15114 1562 A2000000 		.4byte	.LVL383
 15115 1566 A6000000 		.4byte	.LVL384
 15116 156a 0100     		.2byte	0x1
 15117 156c 55       		.byte	0x55
 15118 156d A6000000 		.4byte	.LVL384
 15119 1571 A8000000 		.4byte	.LVL385
 15120 1575 0100     		.2byte	0x1
 15121 1577 50       		.byte	0x50
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 367


 15122 1578 A8000000 		.4byte	.LVL385
 15123 157c B2000000 		.4byte	.LFE19
 15124 1580 0100     		.2byte	0x1
 15125 1582 55       		.byte	0x55
 15126 1583 00000000 		.4byte	0
 15127 1587 00000000 		.4byte	0
 15128              	.LLST94:
 15129 158b 00000000 		.4byte	.LVL387
 15130 158f 1B000000 		.4byte	.LVL391-1
 15131 1593 0100     		.2byte	0x1
 15132 1595 50       		.byte	0x50
 15133 1596 1B000000 		.4byte	.LVL391-1
 15134 159a 30000000 		.4byte	.LVL392
 15135 159e 0100     		.2byte	0x1
 15136 15a0 57       		.byte	0x57
 15137 15a1 30000000 		.4byte	.LVL392
 15138 15a5 36000000 		.4byte	.LVL395
 15139 15a9 0100     		.2byte	0x1
 15140 15ab 50       		.byte	0x50
 15141 15ac 36000000 		.4byte	.LVL395
 15142 15b0 14010000 		.4byte	.LFE17
 15143 15b4 0100     		.2byte	0x1
 15144 15b6 57       		.byte	0x57
 15145 15b7 00000000 		.4byte	0
 15146 15bb 00000000 		.4byte	0
 15147              	.LLST95:
 15148 15bf 00000000 		.4byte	.LVL387
 15149 15c3 1B000000 		.4byte	.LVL391-1
 15150 15c7 0100     		.2byte	0x1
 15151 15c9 51       		.byte	0x51
 15152 15ca 1B000000 		.4byte	.LVL391-1
 15153 15ce 30000000 		.4byte	.LVL392
 15154 15d2 0100     		.2byte	0x1
 15155 15d4 58       		.byte	0x58
 15156 15d5 30000000 		.4byte	.LVL392
 15157 15d9 36000000 		.4byte	.LVL395
 15158 15dd 0100     		.2byte	0x1
 15159 15df 51       		.byte	0x51
 15160 15e0 36000000 		.4byte	.LVL395
 15161 15e4 14010000 		.4byte	.LFE17
 15162 15e8 0100     		.2byte	0x1
 15163 15ea 58       		.byte	0x58
 15164 15eb 00000000 		.4byte	0
 15165 15ef 00000000 		.4byte	0
 15166              	.LLST96:
 15167 15f3 1C000000 		.4byte	.LVL391
 15168 15f7 30000000 		.4byte	.LVL392
 15169 15fb 0100     		.2byte	0x1
 15170 15fd 50       		.byte	0x50
 15171 15fe 52000000 		.4byte	.LVL399
 15172 1602 60000000 		.4byte	.LVL400
 15173 1606 0100     		.2byte	0x1
 15174 1608 50       		.byte	0x50
 15175 1609 60000000 		.4byte	.LVL400
 15176 160d 6E000000 		.4byte	.LVL402
 15177 1611 0100     		.2byte	0x1
 15178 1613 53       		.byte	0x53
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 368


 15179 1614 72000000 		.4byte	.LVL403
 15180 1618 7A000000 		.4byte	.LVL407
 15181 161c 0100     		.2byte	0x1
 15182 161e 53       		.byte	0x53
 15183 161f 94000000 		.4byte	.LVL412
 15184 1623 A6000000 		.4byte	.LVL413
 15185 1627 0100     		.2byte	0x1
 15186 1629 50       		.byte	0x50
 15187 162a F4000000 		.4byte	.LVL420
 15188 162e F6000000 		.4byte	.LVL421
 15189 1632 0100     		.2byte	0x1
 15190 1634 50       		.byte	0x50
 15191 1635 00010000 		.4byte	.LVL423
 15192 1639 0A010000 		.4byte	.LVL426
 15193 163d 0100     		.2byte	0x1
 15194 163f 50       		.byte	0x50
 15195 1640 00000000 		.4byte	0
 15196 1644 00000000 		.4byte	0
 15197              	.LLST97:
 15198 1648 3C000000 		.4byte	.LVL396
 15199 164c 42000000 		.4byte	.LVL397
 15200 1650 0200     		.2byte	0x2
 15201 1652 30       		.byte	0x30
 15202 1653 9F       		.byte	0x9f
 15203 1654 42000000 		.4byte	.LVL397
 15204 1658 6C000000 		.4byte	.LVL401
 15205 165c 0100     		.2byte	0x1
 15206 165e 54       		.byte	0x54
 15207 165f 6E000000 		.4byte	.LVL402
 15208 1663 72000000 		.4byte	.LVL403
 15209 1667 0200     		.2byte	0x2
 15210 1669 30       		.byte	0x30
 15211 166a 9F       		.byte	0x9f
 15212 166b 72000000 		.4byte	.LVL403
 15213 166f 74000000 		.4byte	.LVL404
 15214 1673 0100     		.2byte	0x1
 15215 1675 54       		.byte	0x54
 15216 1676 76000000 		.4byte	.LVL405
 15217 167a 86000000 		.4byte	.LVL410
 15218 167e 0100     		.2byte	0x1
 15219 1680 54       		.byte	0x54
 15220 1681 86000000 		.4byte	.LVL410
 15221 1685 8C000000 		.4byte	.LVL411
 15222 1689 0200     		.2byte	0x2
 15223 168b 32       		.byte	0x32
 15224 168c 9F       		.byte	0x9f
 15225 168d 8C000000 		.4byte	.LVL411
 15226 1691 F4000000 		.4byte	.LVL420
 15227 1695 0100     		.2byte	0x1
 15228 1697 54       		.byte	0x54
 15229 1698 FA000000 		.4byte	.LVL422
 15230 169c 00010000 		.4byte	.LVL423
 15231 16a0 0200     		.2byte	0x2
 15232 16a2 32       		.byte	0x32
 15233 16a3 9F       		.byte	0x9f
 15234 16a4 00010000 		.4byte	.LVL423
 15235 16a8 10010000 		.4byte	.LVL428
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 369


 15236 16ac 0100     		.2byte	0x1
 15237 16ae 54       		.byte	0x54
 15238 16af 00000000 		.4byte	0
 15239 16b3 00000000 		.4byte	0
 15240              	.LLST98:
 15241 16b7 0E000000 		.4byte	.LVL389
 15242 16bb 18000000 		.4byte	.LVL390
 15243 16bf 0100     		.2byte	0x1
 15244 16c1 55       		.byte	0x55
 15245 16c2 30000000 		.4byte	.LVL392
 15246 16c6 32000000 		.4byte	.LVL393
 15247 16ca 0100     		.2byte	0x1
 15248 16cc 55       		.byte	0x55
 15249 16cd 32000000 		.4byte	.LVL393
 15250 16d1 34000000 		.4byte	.LVL394
 15251 16d5 0200     		.2byte	0x2
 15252 16d7 76       		.byte	0x76
 15253 16d8 0C       		.sleb128 12
 15254 16d9 34000000 		.4byte	.LVL394
 15255 16dd 78000000 		.4byte	.LVL406
 15256 16e1 0100     		.2byte	0x1
 15257 16e3 55       		.byte	0x55
 15258 16e4 7A000000 		.4byte	.LVL407
 15259 16e8 F4000000 		.4byte	.LVL420
 15260 16ec 0100     		.2byte	0x1
 15261 16ee 55       		.byte	0x55
 15262 16ef FA000000 		.4byte	.LVL422
 15263 16f3 10010000 		.4byte	.LVL428
 15264 16f7 0100     		.2byte	0x1
 15265 16f9 55       		.byte	0x55
 15266 16fa 00000000 		.4byte	0
 15267 16fe 00000000 		.4byte	0
 15268              	.LLST99:
 15269 1702 B2000000 		.4byte	.LVL414
 15270 1706 C2000000 		.4byte	.LVL415
 15271 170a 0100     		.2byte	0x1
 15272 170c 50       		.byte	0x50
 15273 170d C8000000 		.4byte	.LVL417
 15274 1711 D0000000 		.4byte	.LVL418
 15275 1715 0100     		.2byte	0x1
 15276 1717 53       		.byte	0x53
 15277 1718 E8000000 		.4byte	.LVL419
 15278 171c F4000000 		.4byte	.LVL420
 15279 1720 0100     		.2byte	0x1
 15280 1722 53       		.byte	0x53
 15281 1723 0E010000 		.4byte	.LVL427
 15282 1727 10010000 		.4byte	.LVL428
 15283 172b 0100     		.2byte	0x1
 15284 172d 53       		.byte	0x53
 15285 172e 00000000 		.4byte	0
 15286 1732 00000000 		.4byte	0
 15287              	.LLST100:
 15288 1736 00000000 		.4byte	.LVL429
 15289 173a 1C000000 		.4byte	.LVL434
 15290 173e 0100     		.2byte	0x1
 15291 1740 50       		.byte	0x50
 15292 1741 1C000000 		.4byte	.LVL434
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 370


 15293 1745 64000000 		.4byte	.LVL442
 15294 1749 0100     		.2byte	0x1
 15295 174b 57       		.byte	0x57
 15296 174c 64000000 		.4byte	.LVL442
 15297 1750 66000000 		.4byte	.LVL443
 15298 1754 0100     		.2byte	0x1
 15299 1756 50       		.byte	0x50
 15300 1757 66000000 		.4byte	.LVL443
 15301 175b 68000000 		.4byte	.LVL444
 15302 175f 0400     		.2byte	0x4
 15303 1761 F3       		.byte	0xf3
 15304 1762 01       		.uleb128 0x1
 15305 1763 50       		.byte	0x50
 15306 1764 9F       		.byte	0x9f
 15307 1765 68000000 		.4byte	.LVL444
 15308 1769 6A000000 		.4byte	.LVL445
 15309 176d 0100     		.2byte	0x1
 15310 176f 50       		.byte	0x50
 15311 1770 6A000000 		.4byte	.LVL445
 15312 1774 7C000000 		.4byte	.LFE16
 15313 1778 0100     		.2byte	0x1
 15314 177a 57       		.byte	0x57
 15315 177b 00000000 		.4byte	0
 15316 177f 00000000 		.4byte	0
 15317              	.LLST101:
 15318 1783 00000000 		.4byte	.LVL429
 15319 1787 0E000000 		.4byte	.LVL432
 15320 178b 0100     		.2byte	0x1
 15321 178d 51       		.byte	0x51
 15322 178e 0E000000 		.4byte	.LVL432
 15323 1792 5A000000 		.4byte	.LVL440
 15324 1796 0100     		.2byte	0x1
 15325 1798 56       		.byte	0x56
 15326 1799 5A000000 		.4byte	.LVL440
 15327 179d 64000000 		.4byte	.LVL442
 15328 17a1 0100     		.2byte	0x1
 15329 17a3 55       		.byte	0x55
 15330 17a4 64000000 		.4byte	.LVL442
 15331 17a8 68000000 		.4byte	.LVL444
 15332 17ac 0100     		.2byte	0x1
 15333 17ae 51       		.byte	0x51
 15334 17af 68000000 		.4byte	.LVL444
 15335 17b3 7C000000 		.4byte	.LFE16
 15336 17b7 0100     		.2byte	0x1
 15337 17b9 56       		.byte	0x56
 15338 17ba 00000000 		.4byte	0
 15339 17be 00000000 		.4byte	0
 15340              	.LLST102:
 15341 17c2 00000000 		.4byte	.LVL429
 15342 17c6 1A000000 		.4byte	.LVL433
 15343 17ca 0100     		.2byte	0x1
 15344 17cc 52       		.byte	0x52
 15345 17cd 1A000000 		.4byte	.LVL433
 15346 17d1 1F000000 		.4byte	.LVL435-1
 15347 17d5 0100     		.2byte	0x1
 15348 17d7 51       		.byte	0x51
 15349 17d8 1F000000 		.4byte	.LVL435-1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 371


 15350 17dc 64000000 		.4byte	.LVL442
 15351 17e0 0400     		.2byte	0x4
 15352 17e2 F3       		.byte	0xf3
 15353 17e3 01       		.uleb128 0x1
 15354 17e4 52       		.byte	0x52
 15355 17e5 9F       		.byte	0x9f
 15356 17e6 64000000 		.4byte	.LVL442
 15357 17ea 68000000 		.4byte	.LVL444
 15358 17ee 0100     		.2byte	0x1
 15359 17f0 52       		.byte	0x52
 15360 17f1 68000000 		.4byte	.LVL444
 15361 17f5 6C000000 		.4byte	.LVL446
 15362 17f9 0100     		.2byte	0x1
 15363 17fb 51       		.byte	0x51
 15364 17fc 6C000000 		.4byte	.LVL446
 15365 1800 7C000000 		.4byte	.LFE16
 15366 1804 0400     		.2byte	0x4
 15367 1806 F3       		.byte	0xf3
 15368 1807 01       		.uleb128 0x1
 15369 1808 52       		.byte	0x52
 15370 1809 9F       		.byte	0x9f
 15371 180a 00000000 		.4byte	0
 15372 180e 00000000 		.4byte	0
 15373              	.LLST103:
 15374 1812 04000000 		.4byte	.LVL430
 15375 1816 20000000 		.4byte	.LVL435
 15376 181a 0200     		.2byte	0x2
 15377 181c 30       		.byte	0x30
 15378 181d 9F       		.byte	0x9f
 15379 181e 20000000 		.4byte	.LVL435
 15380 1822 22000000 		.4byte	.LVL436
 15381 1826 0100     		.2byte	0x1
 15382 1828 50       		.byte	0x50
 15383 1829 42000000 		.4byte	.LVL439
 15384 182d 62000000 		.4byte	.LVL441
 15385 1831 0100     		.2byte	0x1
 15386 1833 50       		.byte	0x50
 15387 1834 64000000 		.4byte	.LVL442
 15388 1838 6C000000 		.4byte	.LVL446
 15389 183c 0200     		.2byte	0x2
 15390 183e 30       		.byte	0x30
 15391 183f 9F       		.byte	0x9f
 15392 1840 6C000000 		.4byte	.LVL446
 15393 1844 6E000000 		.4byte	.LVL447
 15394 1848 0100     		.2byte	0x1
 15395 184a 50       		.byte	0x50
 15396 184b 7A000000 		.4byte	.LVL453
 15397 184f 7C000000 		.4byte	.LFE16
 15398 1853 0100     		.2byte	0x1
 15399 1855 50       		.byte	0x50
 15400 1856 00000000 		.4byte	0
 15401 185a 00000000 		.4byte	0
 15402              	.LLST104:
 15403 185e 2A000000 		.4byte	.LVL437
 15404 1862 3E000000 		.4byte	.LVL438
 15405 1866 0100     		.2byte	0x1
 15406 1868 50       		.byte	0x50
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 372


 15407 1869 3E000000 		.4byte	.LVL438
 15408 186d 64000000 		.4byte	.LVL442
 15409 1871 0100     		.2byte	0x1
 15410 1873 55       		.byte	0x55
 15411 1874 6E000000 		.4byte	.LVL447
 15412 1878 70000000 		.4byte	.LVL448
 15413 187c 0100     		.2byte	0x1
 15414 187e 50       		.byte	0x50
 15415 187f 70000000 		.4byte	.LVL448
 15416 1883 72000000 		.4byte	.LVL449
 15417 1887 0100     		.2byte	0x1
 15418 1889 55       		.byte	0x55
 15419 188a 72000000 		.4byte	.LVL449
 15420 188e 74000000 		.4byte	.LVL450
 15421 1892 0100     		.2byte	0x1
 15422 1894 50       		.byte	0x50
 15423 1895 74000000 		.4byte	.LVL450
 15424 1899 76000000 		.4byte	.LVL451
 15425 189d 0100     		.2byte	0x1
 15426 189f 55       		.byte	0x55
 15427 18a0 76000000 		.4byte	.LVL451
 15428 18a4 78000000 		.4byte	.LVL452
 15429 18a8 0100     		.2byte	0x1
 15430 18aa 50       		.byte	0x50
 15431 18ab 78000000 		.4byte	.LVL452
 15432 18af 7C000000 		.4byte	.LFE16
 15433 18b3 0100     		.2byte	0x1
 15434 18b5 55       		.byte	0x55
 15435 18b6 00000000 		.4byte	0
 15436 18ba 00000000 		.4byte	0
 15437              	.LLST105:
 15438 18be 00000000 		.4byte	.LVL454
 15439 18c2 0A000000 		.4byte	.LVL456
 15440 18c6 0100     		.2byte	0x1
 15441 18c8 50       		.byte	0x50
 15442 18c9 0A000000 		.4byte	.LVL456
 15443 18cd 20000000 		.4byte	.LFE27
 15444 18d1 0100     		.2byte	0x1
 15445 18d3 54       		.byte	0x54
 15446 18d4 00000000 		.4byte	0
 15447 18d8 00000000 		.4byte	0
 15448              	.LLST106:
 15449 18dc 0E000000 		.4byte	.LVL457
 15450 18e0 1E000000 		.4byte	.LVL458
 15451 18e4 0100     		.2byte	0x1
 15452 18e6 50       		.byte	0x50
 15453 18e7 00000000 		.4byte	0
 15454 18eb 00000000 		.4byte	0
 15455              	.LLST107:
 15456 18ef 00000000 		.4byte	.LVL459
 15457 18f3 09000000 		.4byte	.LVL460-1
 15458 18f7 0100     		.2byte	0x1
 15459 18f9 50       		.byte	0x50
 15460 18fa 09000000 		.4byte	.LVL460-1
 15461 18fe 52000000 		.4byte	.LFE18
 15462 1902 0100     		.2byte	0x1
 15463 1904 55       		.byte	0x55
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 373


 15464 1905 00000000 		.4byte	0
 15465 1909 00000000 		.4byte	0
 15466              	.LLST108:
 15467 190d 00000000 		.4byte	.LVL459
 15468 1911 09000000 		.4byte	.LVL460-1
 15469 1915 0100     		.2byte	0x1
 15470 1917 51       		.byte	0x51
 15471 1918 09000000 		.4byte	.LVL460-1
 15472 191c 2A000000 		.4byte	.LVL465
 15473 1920 0100     		.2byte	0x1
 15474 1922 54       		.byte	0x54
 15475 1923 2A000000 		.4byte	.LVL465
 15476 1927 4E000000 		.4byte	.LVL469
 15477 192b 0400     		.2byte	0x4
 15478 192d F3       		.byte	0xf3
 15479 192e 01       		.uleb128 0x1
 15480 192f 51       		.byte	0x51
 15481 1930 9F       		.byte	0x9f
 15482 1931 4E000000 		.4byte	.LVL469
 15483 1935 52000000 		.4byte	.LFE18
 15484 1939 0100     		.2byte	0x1
 15485 193b 54       		.byte	0x54
 15486 193c 00000000 		.4byte	0
 15487 1940 00000000 		.4byte	0
 15488              	.LLST109:
 15489 1944 16000000 		.4byte	.LVL462
 15490 1948 24000000 		.4byte	.LVL463
 15491 194c 0100     		.2byte	0x1
 15492 194e 50       		.byte	0x50
 15493 194f 24000000 		.4byte	.LVL463
 15494 1953 4E000000 		.4byte	.LVL469
 15495 1957 0100     		.2byte	0x1
 15496 1959 57       		.byte	0x57
 15497 195a 00000000 		.4byte	0
 15498 195e 00000000 		.4byte	0
 15499              	.LLST110:
 15500 1962 28000000 		.4byte	.LVL464
 15501 1966 2C000000 		.4byte	.LVL466
 15502 196a 0200     		.2byte	0x2
 15503 196c 30       		.byte	0x30
 15504 196d 9F       		.byte	0x9f
 15505 196e 2C000000 		.4byte	.LVL466
 15506 1972 4E000000 		.4byte	.LVL469
 15507 1976 0100     		.2byte	0x1
 15508 1978 54       		.byte	0x54
 15509 1979 00000000 		.4byte	0
 15510 197d 00000000 		.4byte	0
 15511              	.LLST111:
 15512 1981 28000000 		.4byte	.LVL464
 15513 1985 4E000000 		.4byte	.LVL469
 15514 1989 0200     		.2byte	0x2
 15515 198b 31       		.byte	0x31
 15516 198c 9F       		.byte	0x9f
 15517 198d 00000000 		.4byte	0
 15518 1991 00000000 		.4byte	0
 15519              	.LLST112:
 15520 1995 28000000 		.4byte	.LVL464
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 374


 15521 1999 4E000000 		.4byte	.LVL469
 15522 199d 0100     		.2byte	0x1
 15523 199f 56       		.byte	0x56
 15524 19a0 00000000 		.4byte	0
 15525 19a4 00000000 		.4byte	0
 15526              	.LLST113:
 15527 19a8 00000000 		.4byte	.LVL470
 15528 19ac 3C000000 		.4byte	.LVL474
 15529 19b0 0100     		.2byte	0x1
 15530 19b2 50       		.byte	0x50
 15531 19b3 3C000000 		.4byte	.LVL474
 15532 19b7 40000000 		.4byte	.LVL475
 15533 19bb 0100     		.2byte	0x1
 15534 19bd 54       		.byte	0x54
 15535 19be 40000000 		.4byte	.LVL475
 15536 19c2 4D000000 		.4byte	.LVL476-1
 15537 19c6 0100     		.2byte	0x1
 15538 19c8 50       		.byte	0x50
 15539 19c9 4D000000 		.4byte	.LVL476-1
 15540 19cd AC000000 		.4byte	.LVL488
 15541 19d1 0100     		.2byte	0x1
 15542 19d3 54       		.byte	0x54
 15543 19d4 AC000000 		.4byte	.LVL488
 15544 19d8 AE000000 		.4byte	.LVL489
 15545 19dc 0100     		.2byte	0x1
 15546 19de 50       		.byte	0x50
 15547 19df AE000000 		.4byte	.LVL489
 15548 19e3 B2000000 		.4byte	.LVL490
 15549 19e7 0400     		.2byte	0x4
 15550 19e9 F3       		.byte	0xf3
 15551 19ea 01       		.uleb128 0x1
 15552 19eb 50       		.byte	0x50
 15553 19ec 9F       		.byte	0x9f
 15554 19ed B2000000 		.4byte	.LVL490
 15555 19f1 D6000000 		.4byte	.LFE20
 15556 19f5 0100     		.2byte	0x1
 15557 19f7 54       		.byte	0x54
 15558 19f8 00000000 		.4byte	0
 15559 19fc 00000000 		.4byte	0
 15560              	.LLST114:
 15561 1a00 00000000 		.4byte	.LVL470
 15562 1a04 2C000000 		.4byte	.LVL473
 15563 1a08 0100     		.2byte	0x1
 15564 1a0a 51       		.byte	0x51
 15565 1a0b 2C000000 		.4byte	.LVL473
 15566 1a0f AC000000 		.4byte	.LVL488
 15567 1a13 0100     		.2byte	0x1
 15568 1a15 58       		.byte	0x58
 15569 1a16 AC000000 		.4byte	.LVL488
 15570 1a1a B2000000 		.4byte	.LVL490
 15571 1a1e 0100     		.2byte	0x1
 15572 1a20 51       		.byte	0x51
 15573 1a21 B2000000 		.4byte	.LVL490
 15574 1a25 D6000000 		.4byte	.LFE20
 15575 1a29 0100     		.2byte	0x1
 15576 1a2b 58       		.byte	0x58
 15577 1a2c 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 375


 15578 1a30 00000000 		.4byte	0
 15579              	.LLST115:
 15580 1a34 50000000 		.4byte	.LVL477
 15581 1a38 6C000000 		.4byte	.LVL478
 15582 1a3c 0100     		.2byte	0x1
 15583 1a3e 50       		.byte	0x50
 15584 1a3f 6C000000 		.4byte	.LVL478
 15585 1a43 70000000 		.4byte	.LVL479
 15586 1a47 0100     		.2byte	0x1
 15587 1a49 59       		.byte	0x59
 15588 1a4a 70000000 		.4byte	.LVL479
 15589 1a4e 74000000 		.4byte	.LVL480
 15590 1a52 0100     		.2byte	0x1
 15591 1a54 50       		.byte	0x50
 15592 1a55 74000000 		.4byte	.LVL480
 15593 1a59 78000000 		.4byte	.LVL481
 15594 1a5d 0100     		.2byte	0x1
 15595 1a5f 59       		.byte	0x59
 15596 1a60 78000000 		.4byte	.LVL481
 15597 1a64 8A000000 		.4byte	.LVL482
 15598 1a68 0100     		.2byte	0x1
 15599 1a6a 50       		.byte	0x50
 15600 1a6b 8A000000 		.4byte	.LVL482
 15601 1a6f 8D000000 		.4byte	.LVL483-1
 15602 1a73 0100     		.2byte	0x1
 15603 1a75 51       		.byte	0x51
 15604 1a76 8D000000 		.4byte	.LVL483-1
 15605 1a7a 9E000000 		.4byte	.LVL485
 15606 1a7e 0100     		.2byte	0x1
 15607 1a80 59       		.byte	0x59
 15608 1a81 B2000000 		.4byte	.LVL490
 15609 1a85 B4000000 		.4byte	.LVL491
 15610 1a89 0100     		.2byte	0x1
 15611 1a8b 50       		.byte	0x50
 15612 1a8c B4000000 		.4byte	.LVL491
 15613 1a90 B8000000 		.4byte	.LVL492
 15614 1a94 0100     		.2byte	0x1
 15615 1a96 59       		.byte	0x59
 15616 1a97 B8000000 		.4byte	.LVL492
 15617 1a9b BA000000 		.4byte	.LVL493
 15618 1a9f 0100     		.2byte	0x1
 15619 1aa1 50       		.byte	0x50
 15620 1aa2 BA000000 		.4byte	.LVL493
 15621 1aa6 BE000000 		.4byte	.LVL494
 15622 1aaa 0100     		.2byte	0x1
 15623 1aac 59       		.byte	0x59
 15624 1aad BE000000 		.4byte	.LVL494
 15625 1ab1 C0000000 		.4byte	.LVL495
 15626 1ab5 0100     		.2byte	0x1
 15627 1ab7 50       		.byte	0x50
 15628 1ab8 C0000000 		.4byte	.LVL495
 15629 1abc C4000000 		.4byte	.LVL496
 15630 1ac0 0100     		.2byte	0x1
 15631 1ac2 59       		.byte	0x59
 15632 1ac3 C4000000 		.4byte	.LVL496
 15633 1ac7 C6000000 		.4byte	.LVL497
 15634 1acb 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 376


 15635 1acd 50       		.byte	0x50
 15636 1ace C6000000 		.4byte	.LVL497
 15637 1ad2 CA000000 		.4byte	.LVL498
 15638 1ad6 0100     		.2byte	0x1
 15639 1ad8 59       		.byte	0x59
 15640 1ad9 CA000000 		.4byte	.LVL498
 15641 1add CC000000 		.4byte	.LVL499
 15642 1ae1 0100     		.2byte	0x1
 15643 1ae3 50       		.byte	0x50
 15644 1ae4 CC000000 		.4byte	.LVL499
 15645 1ae8 D6000000 		.4byte	.LFE20
 15646 1aec 0100     		.2byte	0x1
 15647 1aee 59       		.byte	0x59
 15648 1aef 00000000 		.4byte	0
 15649 1af3 00000000 		.4byte	0
 15650              	.LLST116:
 15651 1af7 06000000 		.4byte	.LVL471
 15652 1afb A2000000 		.4byte	.LVL486
 15653 1aff 0100     		.2byte	0x1
 15654 1b01 56       		.byte	0x56
 15655 1b02 A2000000 		.4byte	.LVL486
 15656 1b06 A4000000 		.4byte	.LVL487
 15657 1b0a 0300     		.2byte	0x3
 15658 1b0c 76       		.byte	0x76
 15659 1b0d 50       		.sleb128 -48
 15660 1b0e 9F       		.byte	0x9f
 15661 1b0f AC000000 		.4byte	.LVL488
 15662 1b13 D6000000 		.4byte	.LFE20
 15663 1b17 0100     		.2byte	0x1
 15664 1b19 56       		.byte	0x56
 15665 1b1a 00000000 		.4byte	0
 15666 1b1e 00000000 		.4byte	0
 15667              	.LLST117:
 15668 1b22 00000000 		.4byte	.LVL501
 15669 1b26 0B000000 		.4byte	.LVL503-1
 15670 1b2a 0100     		.2byte	0x1
 15671 1b2c 50       		.byte	0x50
 15672 1b2d 0B000000 		.4byte	.LVL503-1
 15673 1b31 56000000 		.4byte	.LFE25
 15674 1b35 0100     		.2byte	0x1
 15675 1b37 54       		.byte	0x54
 15676 1b38 00000000 		.4byte	0
 15677 1b3c 00000000 		.4byte	0
 15678              	.LLST118:
 15679 1b40 0C000000 		.4byte	.LVL503
 15680 1b44 12000000 		.4byte	.LVL504
 15681 1b48 0100     		.2byte	0x1
 15682 1b4a 50       		.byte	0x50
 15683 1b4b 16000000 		.4byte	.LVL505
 15684 1b4f 1C000000 		.4byte	.LVL506
 15685 1b53 0100     		.2byte	0x1
 15686 1b55 50       		.byte	0x50
 15687 1b56 44000000 		.4byte	.LVL511
 15688 1b5a 4E000000 		.4byte	.LVL514
 15689 1b5e 0100     		.2byte	0x1
 15690 1b60 50       		.byte	0x50
 15691 1b61 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 377


 15692 1b65 00000000 		.4byte	0
 15693              	.LLST119:
 15694 1b69 1E000000 		.4byte	.LVL507
 15695 1b6d 22000000 		.4byte	.LVL508
 15696 1b71 0100     		.2byte	0x1
 15697 1b73 53       		.byte	0x53
 15698 1b74 22000000 		.4byte	.LVL508
 15699 1b78 28000000 		.4byte	.LVL509
 15700 1b7c 0200     		.2byte	0x2
 15701 1b7e 70       		.byte	0x70
 15702 1b7f 00       		.sleb128 0
 15703 1b80 4E000000 		.4byte	.LVL514
 15704 1b84 52000000 		.4byte	.LVL515
 15705 1b88 0100     		.2byte	0x1
 15706 1b8a 53       		.byte	0x53
 15707 1b8b 00000000 		.4byte	0
 15708 1b8f 00000000 		.4byte	0
 15709              	.LLST120:
 15710 1b93 00000000 		.4byte	.LVL516
 15711 1b97 30000000 		.4byte	.LVL519
 15712 1b9b 0100     		.2byte	0x1
 15713 1b9d 50       		.byte	0x50
 15714 1b9e 30000000 		.4byte	.LVL519
 15715 1ba2 8E000000 		.4byte	.LFE30
 15716 1ba6 0100     		.2byte	0x1
 15717 1ba8 54       		.byte	0x54
 15718 1ba9 00000000 		.4byte	0
 15719 1bad 00000000 		.4byte	0
 15720              	.LLST121:
 15721 1bb1 00000000 		.4byte	.LVL516
 15722 1bb5 2E000000 		.4byte	.LVL518
 15723 1bb9 0100     		.2byte	0x1
 15724 1bbb 51       		.byte	0x51
 15725 1bbc 2E000000 		.4byte	.LVL518
 15726 1bc0 38000000 		.4byte	.LVL522
 15727 1bc4 0400     		.2byte	0x4
 15728 1bc6 F3       		.byte	0xf3
 15729 1bc7 01       		.uleb128 0x1
 15730 1bc8 51       		.byte	0x51
 15731 1bc9 9F       		.byte	0x9f
 15732 1bca 00000000 		.4byte	0
 15733 1bce 00000000 		.4byte	0
 15734              	.LLST122:
 15735 1bd2 36000000 		.4byte	.LVL521
 15736 1bd6 38000000 		.4byte	.LVL522
 15737 1bda 0100     		.2byte	0x1
 15738 1bdc 53       		.byte	0x53
 15739 1bdd 40000000 		.4byte	.LVL523
 15740 1be1 46000000 		.4byte	.LVL524
 15741 1be5 0100     		.2byte	0x1
 15742 1be7 50       		.byte	0x50
 15743 1be8 4A000000 		.4byte	.LVL525
 15744 1bec 7A000000 		.4byte	.LVL527
 15745 1bf0 0100     		.2byte	0x1
 15746 1bf2 50       		.byte	0x50
 15747 1bf3 82000000 		.4byte	.LVL529
 15748 1bf7 88000000 		.4byte	.LVL530
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 378


 15749 1bfb 0100     		.2byte	0x1
 15750 1bfd 50       		.byte	0x50
 15751 1bfe 88000000 		.4byte	.LVL530
 15752 1c02 8E000000 		.4byte	.LFE30
 15753 1c06 0100     		.2byte	0x1
 15754 1c08 53       		.byte	0x53
 15755 1c09 00000000 		.4byte	0
 15756 1c0d 00000000 		.4byte	0
 15757              	.LLST123:
 15758 1c11 4E000000 		.4byte	.LVL526
 15759 1c15 7D000000 		.4byte	.LVL528-1
 15760 1c19 0100     		.2byte	0x1
 15761 1c1b 52       		.byte	0x52
 15762 1c1c 82000000 		.4byte	.LVL529
 15763 1c20 88000000 		.4byte	.LVL530
 15764 1c24 0100     		.2byte	0x1
 15765 1c26 52       		.byte	0x52
 15766 1c27 00000000 		.4byte	0
 15767 1c2b 00000000 		.4byte	0
 15768              	.LLST124:
 15769 1c2f 00000000 		.4byte	.LVL531
 15770 1c33 0D000000 		.4byte	.LVL534-1
 15771 1c37 0100     		.2byte	0x1
 15772 1c39 50       		.byte	0x50
 15773 1c3a 0D000000 		.4byte	.LVL534-1
 15774 1c3e 4C000000 		.4byte	.LFE21
 15775 1c42 0100     		.2byte	0x1
 15776 1c44 54       		.byte	0x54
 15777 1c45 00000000 		.4byte	0
 15778 1c49 00000000 		.4byte	0
 15779              	.LLST125:
 15780 1c4d 00000000 		.4byte	.LVL531
 15781 1c51 0A000000 		.4byte	.LVL533
 15782 1c55 0100     		.2byte	0x1
 15783 1c57 51       		.byte	0x51
 15784 1c58 0A000000 		.4byte	.LVL533
 15785 1c5c 4C000000 		.4byte	.LFE21
 15786 1c60 0100     		.2byte	0x1
 15787 1c62 57       		.byte	0x57
 15788 1c63 00000000 		.4byte	0
 15789 1c67 00000000 		.4byte	0
 15790              	.LLST126:
 15791 1c6b 0E000000 		.4byte	.LVL534
 15792 1c6f 18000000 		.4byte	.LVL536
 15793 1c73 0100     		.2byte	0x1
 15794 1c75 50       		.byte	0x50
 15795 1c76 1C000000 		.4byte	.LVL537
 15796 1c7a 38000000 		.4byte	.LVL540
 15797 1c7e 0100     		.2byte	0x1
 15798 1c80 50       		.byte	0x50
 15799 1c81 3C000000 		.4byte	.LVL541
 15800 1c85 42000000 		.4byte	.LVL542
 15801 1c89 0100     		.2byte	0x1
 15802 1c8b 50       		.byte	0x50
 15803 1c8c 42000000 		.4byte	.LVL542
 15804 1c90 4C000000 		.4byte	.LFE21
 15805 1c94 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 379


 15806 1c96 52       		.byte	0x52
 15807 1c97 00000000 		.4byte	0
 15808 1c9b 00000000 		.4byte	0
 15809              	.LLST127:
 15810 1c9f 14000000 		.4byte	.LVL535
 15811 1ca3 42000000 		.4byte	.LVL542
 15812 1ca7 0100     		.2byte	0x1
 15813 1ca9 55       		.byte	0x55
 15814 1caa 00000000 		.4byte	0
 15815 1cae 00000000 		.4byte	0
 15816              	.LLST128:
 15817 1cb2 00000000 		.4byte	.LVL544
 15818 1cb6 0B000000 		.4byte	.LVL546-1
 15819 1cba 0100     		.2byte	0x1
 15820 1cbc 50       		.byte	0x50
 15821 1cbd 0B000000 		.4byte	.LVL546-1
 15822 1cc1 3A000000 		.4byte	.LFE26
 15823 1cc5 0100     		.2byte	0x1
 15824 1cc7 54       		.byte	0x54
 15825 1cc8 00000000 		.4byte	0
 15826 1ccc 00000000 		.4byte	0
 15827              	.LLST129:
 15828 1cd0 0C000000 		.4byte	.LVL546
 15829 1cd4 14000000 		.4byte	.LVL547
 15830 1cd8 0100     		.2byte	0x1
 15831 1cda 50       		.byte	0x50
 15832 1cdb 18000000 		.4byte	.LVL548
 15833 1cdf 22000000 		.4byte	.LVL549
 15834 1ce3 0100     		.2byte	0x1
 15835 1ce5 50       		.byte	0x50
 15836 1ce6 36000000 		.4byte	.LVL552
 15837 1cea 3A000000 		.4byte	.LFE26
 15838 1cee 0100     		.2byte	0x1
 15839 1cf0 55       		.byte	0x55
 15840 1cf1 00000000 		.4byte	0
 15841 1cf5 00000000 		.4byte	0
 15842              	.LLST130:
 15843 1cf9 00000000 		.4byte	.LVL553
 15844 1cfd 0C000000 		.4byte	.LVL556
 15845 1d01 0100     		.2byte	0x1
 15846 1d03 50       		.byte	0x50
 15847 1d04 0C000000 		.4byte	.LVL556
 15848 1d08 60000000 		.4byte	.LFE24
 15849 1d0c 0100     		.2byte	0x1
 15850 1d0e 54       		.byte	0x54
 15851 1d0f 00000000 		.4byte	0
 15852 1d13 00000000 		.4byte	0
 15853              	.LLST131:
 15854 1d17 00000000 		.4byte	.LVL553
 15855 1d1b 0C000000 		.4byte	.LVL556
 15856 1d1f 0100     		.2byte	0x1
 15857 1d21 51       		.byte	0x51
 15858 1d22 0C000000 		.4byte	.LVL556
 15859 1d26 60000000 		.4byte	.LFE24
 15860 1d2a 0100     		.2byte	0x1
 15861 1d2c 56       		.byte	0x56
 15862 1d2d 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 380


 15863 1d31 00000000 		.4byte	0
 15864              	.LLST132:
 15865 1d35 06000000 		.4byte	.LVL554
 15866 1d39 0C000000 		.4byte	.LVL556
 15867 1d3d 0200     		.2byte	0x2
 15868 1d3f 34       		.byte	0x34
 15869 1d40 9F       		.byte	0x9f
 15870 1d41 0C000000 		.4byte	.LVL556
 15871 1d45 12000000 		.4byte	.LVL557
 15872 1d49 0100     		.2byte	0x1
 15873 1d4b 57       		.byte	0x57
 15874 1d4c 12000000 		.4byte	.LVL557
 15875 1d50 44000000 		.4byte	.LVL561
 15876 1d54 0100     		.2byte	0x1
 15877 1d56 50       		.byte	0x50
 15878 1d57 48000000 		.4byte	.LVL562
 15879 1d5b 4C000000 		.4byte	.LVL563
 15880 1d5f 0100     		.2byte	0x1
 15881 1d61 50       		.byte	0x50
 15882 1d62 4C000000 		.4byte	.LVL563
 15883 1d66 54000000 		.4byte	.LVL564
 15884 1d6a 0100     		.2byte	0x1
 15885 1d6c 57       		.byte	0x57
 15886 1d6d 54000000 		.4byte	.LVL564
 15887 1d71 56000000 		.4byte	.LVL565
 15888 1d75 0100     		.2byte	0x1
 15889 1d77 50       		.byte	0x50
 15890 1d78 56000000 		.4byte	.LVL565
 15891 1d7c 60000000 		.4byte	.LFE24
 15892 1d80 0100     		.2byte	0x1
 15893 1d82 57       		.byte	0x57
 15894 1d83 00000000 		.4byte	0
 15895 1d87 00000000 		.4byte	0
 15896              	.LLST133:
 15897 1d8b 22000000 		.4byte	.LVL559
 15898 1d8f 34000000 		.4byte	.LVL560
 15899 1d93 0100     		.2byte	0x1
 15900 1d95 53       		.byte	0x53
 15901 1d96 34000000 		.4byte	.LVL560
 15902 1d9a 47000000 		.4byte	.LVL562-1
 15903 1d9e 0200     		.2byte	0x2
 15904 1da0 74       		.byte	0x74
 15905 1da1 06       		.sleb128 6
 15906 1da2 00000000 		.4byte	0
 15907 1da6 00000000 		.4byte	0
 15908              	.LLST134:
 15909 1daa 1A000000 		.4byte	.LVL558
 15910 1dae 47000000 		.4byte	.LVL562-1
 15911 1db2 0100     		.2byte	0x1
 15912 1db4 52       		.byte	0x52
 15913 1db5 54000000 		.4byte	.LVL564
 15914 1db9 56000000 		.4byte	.LVL565
 15915 1dbd 0100     		.2byte	0x1
 15916 1dbf 52       		.byte	0x52
 15917 1dc0 00000000 		.4byte	0
 15918 1dc4 00000000 		.4byte	0
 15919              	.LLST135:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 381


 15920 1dc8 00000000 		.4byte	.LVL566
 15921 1dcc 07000000 		.4byte	.LVL567-1
 15922 1dd0 0100     		.2byte	0x1
 15923 1dd2 50       		.byte	0x50
 15924 1dd3 07000000 		.4byte	.LVL567-1
 15925 1dd7 82000000 		.4byte	.LVL578
 15926 1ddb 0100     		.2byte	0x1
 15927 1ddd 54       		.byte	0x54
 15928 1dde 82000000 		.4byte	.LVL578
 15929 1de2 8C000000 		.4byte	.LFE12
 15930 1de6 0400     		.2byte	0x4
 15931 1de8 F3       		.byte	0xf3
 15932 1de9 01       		.uleb128 0x1
 15933 1dea 50       		.byte	0x50
 15934 1deb 9F       		.byte	0x9f
 15935 1dec 00000000 		.4byte	0
 15936 1df0 00000000 		.4byte	0
 15937              	.LLST136:
 15938 1df4 08000000 		.4byte	.LVL567
 15939 1df8 26000000 		.4byte	.LVL568
 15940 1dfc 0100     		.2byte	0x1
 15941 1dfe 50       		.byte	0x50
 15942 1dff 7E000000 		.4byte	.LVL577
 15943 1e03 82000000 		.4byte	.LVL578
 15944 1e07 0100     		.2byte	0x1
 15945 1e09 55       		.byte	0x55
 15946 1e0a 00000000 		.4byte	0
 15947 1e0e 00000000 		.4byte	0
 15948              	.LLST137:
 15949 1e12 00000000 		.4byte	.LVL579
 15950 1e16 0C000000 		.4byte	.LVL580
 15951 1e1a 0100     		.2byte	0x1
 15952 1e1c 50       		.byte	0x50
 15953 1e1d 0C000000 		.4byte	.LVL580
 15954 1e21 3A000000 		.4byte	.LVL584
 15955 1e25 0200     		.2byte	0x2
 15956 1e27 91       		.byte	0x91
 15957 1e28 6C       		.sleb128 -20
 15958 1e29 3A000000 		.4byte	.LVL584
 15959 1e2d 3F000000 		.4byte	.LVL586-1
 15960 1e31 0200     		.2byte	0x2
 15961 1e33 71       		.byte	0x71
 15962 1e34 00       		.sleb128 0
 15963 1e35 3F000000 		.4byte	.LVL586-1
 15964 1e39 4C000000 		.4byte	.LVL592
 15965 1e3d 0200     		.2byte	0x2
 15966 1e3f 91       		.byte	0x91
 15967 1e40 6C       		.sleb128 -20
 15968 1e41 4C000000 		.4byte	.LVL592
 15969 1e45 50000000 		.4byte	.LFE36
 15970 1e49 0200     		.2byte	0x2
 15971 1e4b 7D       		.byte	0x7d
 15972 1e4c 6C       		.sleb128 -20
 15973 1e4d 00000000 		.4byte	0
 15974 1e51 00000000 		.4byte	0
 15975              	.LLST138:
 15976 1e55 00000000 		.4byte	.LVL579
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 382


 15977 1e59 13000000 		.4byte	.LVL581-1
 15978 1e5d 0100     		.2byte	0x1
 15979 1e5f 51       		.byte	0x51
 15980 1e60 13000000 		.4byte	.LVL581-1
 15981 1e64 4A000000 		.4byte	.LVL591
 15982 1e68 0200     		.2byte	0x2
 15983 1e6a 7D       		.byte	0x7d
 15984 1e6b 00       		.sleb128 0
 15985 1e6c 4A000000 		.4byte	.LVL591
 15986 1e70 4C000000 		.4byte	.LVL592
 15987 1e74 0200     		.2byte	0x2
 15988 1e76 91       		.byte	0x91
 15989 1e77 68       		.sleb128 -24
 15990 1e78 4C000000 		.4byte	.LVL592
 15991 1e7c 50000000 		.4byte	.LFE36
 15992 1e80 0200     		.2byte	0x2
 15993 1e82 7D       		.byte	0x7d
 15994 1e83 68       		.sleb128 -24
 15995 1e84 00000000 		.4byte	0
 15996 1e88 00000000 		.4byte	0
 15997              	.LLST139:
 15998 1e8c 00000000 		.4byte	.LVL579
 15999 1e90 13000000 		.4byte	.LVL581-1
 16000 1e94 0100     		.2byte	0x1
 16001 1e96 52       		.byte	0x52
 16002 1e97 13000000 		.4byte	.LVL581-1
 16003 1e9b 50000000 		.4byte	.LFE36
 16004 1e9f 0400     		.2byte	0x4
 16005 1ea1 F3       		.byte	0xf3
 16006 1ea2 01       		.uleb128 0x1
 16007 1ea3 52       		.byte	0x52
 16008 1ea4 9F       		.byte	0x9f
 16009 1ea5 00000000 		.4byte	0
 16010 1ea9 00000000 		.4byte	0
 16011              	.LLST140:
 16012 1ead 1E000000 		.4byte	.LVL582
 16013 1eb1 26000000 		.4byte	.LVL583
 16014 1eb5 0100     		.2byte	0x1
 16015 1eb7 53       		.byte	0x53
 16016 1eb8 00000000 		.4byte	0
 16017 1ebc 00000000 		.4byte	0
 16018              	.LLST141:
 16019 1ec0 14000000 		.4byte	.LVL581
 16020 1ec4 3C000000 		.4byte	.LVL585
 16021 1ec8 0100     		.2byte	0x1
 16022 1eca 50       		.byte	0x50
 16023 1ecb 42000000 		.4byte	.LVL587
 16024 1ecf 44000000 		.4byte	.LVL588
 16025 1ed3 0100     		.2byte	0x1
 16026 1ed5 50       		.byte	0x50
 16027 1ed6 46000000 		.4byte	.LVL589
 16028 1eda 48000000 		.4byte	.LVL590
 16029 1ede 0100     		.2byte	0x1
 16030 1ee0 50       		.byte	0x50
 16031 1ee1 00000000 		.4byte	0
 16032 1ee5 00000000 		.4byte	0
 16033              	.LLST142:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 383


 16034 1ee9 40000000 		.4byte	.LVL586
 16035 1eed 42000000 		.4byte	.LVL587
 16036 1ef1 0100     		.2byte	0x1
 16037 1ef3 50       		.byte	0x50
 16038 1ef4 00000000 		.4byte	0
 16039 1ef8 00000000 		.4byte	0
 16040              	.LLST143:
 16041 1efc 00000000 		.4byte	.LVL593
 16042 1f00 1C000000 		.4byte	.LVL596
 16043 1f04 0100     		.2byte	0x1
 16044 1f06 50       		.byte	0x50
 16045 1f07 1C000000 		.4byte	.LVL596
 16046 1f0b C2010000 		.4byte	.LVL642
 16047 1f0f 0100     		.2byte	0x1
 16048 1f11 55       		.byte	0x55
 16049 1f12 C2010000 		.4byte	.LVL642
 16050 1f16 C4010000 		.4byte	.LVL643
 16051 1f1a 0100     		.2byte	0x1
 16052 1f1c 50       		.byte	0x50
 16053 1f1d C4010000 		.4byte	.LVL643
 16054 1f21 C6010000 		.4byte	.LVL644
 16055 1f25 0400     		.2byte	0x4
 16056 1f27 F3       		.byte	0xf3
 16057 1f28 01       		.uleb128 0x1
 16058 1f29 50       		.byte	0x50
 16059 1f2a 9F       		.byte	0x9f
 16060 1f2b C6010000 		.4byte	.LVL644
 16061 1f2f C8010000 		.4byte	.LVL645
 16062 1f33 0100     		.2byte	0x1
 16063 1f35 55       		.byte	0x55
 16064 1f36 C8010000 		.4byte	.LVL645
 16065 1f3a CE010000 		.4byte	.LFE37
 16066 1f3e 0400     		.2byte	0x4
 16067 1f40 F3       		.byte	0xf3
 16068 1f41 01       		.uleb128 0x1
 16069 1f42 50       		.byte	0x50
 16070 1f43 9F       		.byte	0x9f
 16071 1f44 00000000 		.4byte	0
 16072 1f48 00000000 		.4byte	0
 16073              	.LLST144:
 16074 1f4c 00000000 		.4byte	.LVL593
 16075 1f50 1A000000 		.4byte	.LVL595
 16076 1f54 0100     		.2byte	0x1
 16077 1f56 51       		.byte	0x51
 16078 1f57 1A000000 		.4byte	.LVL595
 16079 1f5b 1C000000 		.4byte	.LVL596
 16080 1f5f 0300     		.2byte	0x3
 16081 1f61 91       		.byte	0x91
 16082 1f62 B47F     		.sleb128 -76
 16083 1f64 1C000000 		.4byte	.LVL596
 16084 1f68 1F000000 		.4byte	.LVL597-1
 16085 1f6c 0200     		.2byte	0x2
 16086 1f6e 70       		.byte	0x70
 16087 1f6f 00       		.sleb128 0
 16088 1f70 1F000000 		.4byte	.LVL597-1
 16089 1f74 C2010000 		.4byte	.LVL642
 16090 1f78 0300     		.2byte	0x3
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 384


 16091 1f7a 91       		.byte	0x91
 16092 1f7b B47F     		.sleb128 -76
 16093 1f7d C2010000 		.4byte	.LVL642
 16094 1f81 C6010000 		.4byte	.LVL644
 16095 1f85 0100     		.2byte	0x1
 16096 1f87 51       		.byte	0x51
 16097 1f88 C6010000 		.4byte	.LVL644
 16098 1f8c CE010000 		.4byte	.LFE37
 16099 1f90 0300     		.2byte	0x3
 16100 1f92 91       		.byte	0x91
 16101 1f93 B47F     		.sleb128 -76
 16102 1f95 00000000 		.4byte	0
 16103 1f99 00000000 		.4byte	0
 16104              	.LLST145:
 16105 1f9d 00000000 		.4byte	.LVL593
 16106 1fa1 16000000 		.4byte	.LVL594
 16107 1fa5 0100     		.2byte	0x1
 16108 1fa7 52       		.byte	0x52
 16109 1fa8 16000000 		.4byte	.LVL594
 16110 1fac 66010000 		.4byte	.LVL626
 16111 1fb0 0100     		.2byte	0x1
 16112 1fb2 57       		.byte	0x57
 16113 1fb3 C2010000 		.4byte	.LVL642
 16114 1fb7 C6010000 		.4byte	.LVL644
 16115 1fbb 0100     		.2byte	0x1
 16116 1fbd 52       		.byte	0x52
 16117 1fbe 00000000 		.4byte	0
 16118 1fc2 00000000 		.4byte	0
 16119              	.LLST146:
 16120 1fc6 20000000 		.4byte	.LVL597
 16121 1fca 30000000 		.4byte	.LVL598
 16122 1fce 0100     		.2byte	0x1
 16123 1fd0 50       		.byte	0x50
 16124 1fd1 34000000 		.4byte	.LVL599
 16125 1fd5 42000000 		.4byte	.LVL600
 16126 1fd9 0100     		.2byte	0x1
 16127 1fdb 50       		.byte	0x50
 16128 1fdc 42000000 		.4byte	.LVL600
 16129 1fe0 70000000 		.4byte	.LVL604
 16130 1fe4 0100     		.2byte	0x1
 16131 1fe6 54       		.byte	0x54
 16132 1fe7 72000000 		.4byte	.LVL605
 16133 1feb CC000000 		.4byte	.LVL614
 16134 1fef 0100     		.2byte	0x1
 16135 1ff1 54       		.byte	0x54
 16136 1ff2 CC000000 		.4byte	.LVL614
 16137 1ff6 D4000000 		.4byte	.LVL615
 16138 1ffa 0100     		.2byte	0x1
 16139 1ffc 50       		.byte	0x50
 16140 1ffd DA000000 		.4byte	.LVL617
 16141 2001 00010000 		.4byte	.LVL619
 16142 2005 0100     		.2byte	0x1
 16143 2007 54       		.byte	0x54
 16144 2008 02010000 		.4byte	.LVL620
 16145 200c B4010000 		.4byte	.LVL639
 16146 2010 0100     		.2byte	0x1
 16147 2012 54       		.byte	0x54
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 385


 16148 2013 B6010000 		.4byte	.LVL640
 16149 2017 C2010000 		.4byte	.LVL642
 16150 201b 0100     		.2byte	0x1
 16151 201d 54       		.byte	0x54
 16152 201e C6010000 		.4byte	.LVL644
 16153 2022 C8010000 		.4byte	.LVL645
 16154 2026 0100     		.2byte	0x1
 16155 2028 54       		.byte	0x54
 16156 2029 00000000 		.4byte	0
 16157 202d 00000000 		.4byte	0
 16158              	.LLST147:
 16159 2031 8A000000 		.4byte	.LVL608
 16160 2035 8D000000 		.4byte	.LVL609-1
 16161 2039 0100     		.2byte	0x1
 16162 203b 50       		.byte	0x50
 16163 203c 8D000000 		.4byte	.LVL609-1
 16164 2040 E4000000 		.4byte	.LVL618
 16165 2044 0100     		.2byte	0x1
 16166 2046 58       		.byte	0x58
 16167 2047 00000000 		.4byte	0
 16168 204b 00000000 		.4byte	0
 16169              	.LLST148:
 16170 204f 68010000 		.4byte	.LVL627
 16171 2053 96010000 		.4byte	.LVL634
 16172 2057 0100     		.2byte	0x1
 16173 2059 57       		.byte	0x57
 16174 205a 00000000 		.4byte	0
 16175 205e 00000000 		.4byte	0
 16176              	.LLST149:
 16177 2062 6A010000 		.4byte	.LVL628
 16178 2066 71010000 		.4byte	.LVL629-1
 16179 206a 0100     		.2byte	0x1
 16180 206c 51       		.byte	0x51
 16181 206d 74010000 		.4byte	.LVL630
 16182 2071 84010000 		.4byte	.LVL633
 16183 2075 0100     		.2byte	0x1
 16184 2077 50       		.byte	0x50
 16185 2078 84010000 		.4byte	.LVL633
 16186 207c 9B010000 		.4byte	.LVL635-1
 16187 2080 0100     		.2byte	0x1
 16188 2082 51       		.byte	0x51
 16189 2083 00000000 		.4byte	0
 16190 2087 00000000 		.4byte	0
 16191              	.LLST150:
 16192 208b C2000000 		.4byte	.LVL613
 16193 208f E4000000 		.4byte	.LVL618
 16194 2093 0100     		.2byte	0x1
 16195 2095 56       		.byte	0x56
 16196 2096 9C010000 		.4byte	.LVL635
 16197 209a AA010000 		.4byte	.LVL636
 16198 209e 0100     		.2byte	0x1
 16199 20a0 50       		.byte	0x50
 16200 20a1 B2010000 		.4byte	.LVL638
 16201 20a5 B6010000 		.4byte	.LVL640
 16202 20a9 0100     		.2byte	0x1
 16203 20ab 50       		.byte	0x50
 16204 20ac 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 386


 16205 20b0 00000000 		.4byte	0
 16206              	.LLST151:
 16207 20b4 6A010000 		.4byte	.LVL628
 16208 20b8 B8010000 		.4byte	.LVL641
 16209 20bc 0100     		.2byte	0x1
 16210 20be 56       		.byte	0x56
 16211 20bf 00000000 		.4byte	0
 16212 20c3 00000000 		.4byte	0
 16213              	.LLST152:
 16214 20c7 00000000 		.4byte	.LVL646
 16215 20cb 19000000 		.4byte	.LVL650-1
 16216 20cf 0100     		.2byte	0x1
 16217 20d1 50       		.byte	0x50
 16218 20d2 19000000 		.4byte	.LVL650-1
 16219 20d6 74010000 		.4byte	.LFE38
 16220 20da 0100     		.2byte	0x1
 16221 20dc 54       		.byte	0x54
 16222 20dd 00000000 		.4byte	0
 16223 20e1 00000000 		.4byte	0
 16224              	.LLST153:
 16225 20e5 00000000 		.4byte	.LVL646
 16226 20e9 16000000 		.4byte	.LVL649
 16227 20ed 0100     		.2byte	0x1
 16228 20ef 51       		.byte	0x51
 16229 20f0 16000000 		.4byte	.LVL649
 16230 20f4 42000000 		.4byte	.LVL654
 16231 20f8 0100     		.2byte	0x1
 16232 20fa 58       		.byte	0x58
 16233 20fb 42000000 		.4byte	.LVL654
 16234 20ff 6A010000 		.4byte	.LVL685
 16235 2103 0400     		.2byte	0x4
 16236 2105 F3       		.byte	0xf3
 16237 2106 01       		.uleb128 0x1
 16238 2107 51       		.byte	0x51
 16239 2108 9F       		.byte	0x9f
 16240 2109 6A010000 		.4byte	.LVL685
 16241 210d 6E010000 		.4byte	.LVL686
 16242 2111 0100     		.2byte	0x1
 16243 2113 58       		.byte	0x58
 16244 2114 6E010000 		.4byte	.LVL686
 16245 2118 74010000 		.4byte	.LFE38
 16246 211c 0400     		.2byte	0x4
 16247 211e F3       		.byte	0xf3
 16248 211f 01       		.uleb128 0x1
 16249 2120 51       		.byte	0x51
 16250 2121 9F       		.byte	0x9f
 16251 2122 00000000 		.4byte	0
 16252 2126 00000000 		.4byte	0
 16253              	.LLST154:
 16254 212a 00000000 		.4byte	.LVL646
 16255 212e 19000000 		.4byte	.LVL650-1
 16256 2132 0100     		.2byte	0x1
 16257 2134 52       		.byte	0x52
 16258 2135 19000000 		.4byte	.LVL650-1
 16259 2139 42000000 		.4byte	.LVL654
 16260 213d 0100     		.2byte	0x1
 16261 213f 55       		.byte	0x55
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 387


 16262 2140 42000000 		.4byte	.LVL654
 16263 2144 6A010000 		.4byte	.LVL685
 16264 2148 0100     		.2byte	0x1
 16265 214a 56       		.byte	0x56
 16266 214b 6A010000 		.4byte	.LVL685
 16267 214f 6E010000 		.4byte	.LVL686
 16268 2153 0100     		.2byte	0x1
 16269 2155 55       		.byte	0x55
 16270 2156 00000000 		.4byte	0
 16271 215a 00000000 		.4byte	0
 16272              	.LLST155:
 16273 215e 00000000 		.4byte	.LVL646
 16274 2162 10000000 		.4byte	.LVL648
 16275 2166 0100     		.2byte	0x1
 16276 2168 53       		.byte	0x53
 16277 2169 10000000 		.4byte	.LVL648
 16278 216d 74010000 		.4byte	.LFE38
 16279 2171 0100     		.2byte	0x1
 16280 2173 57       		.byte	0x57
 16281 2174 00000000 		.4byte	0
 16282 2178 00000000 		.4byte	0
 16283              	.LLST156:
 16284 217c 1A000000 		.4byte	.LVL650
 16285 2180 42000000 		.4byte	.LVL654
 16286 2184 0100     		.2byte	0x1
 16287 2186 50       		.byte	0x50
 16288 2187 6A010000 		.4byte	.LVL685
 16289 218b 6E010000 		.4byte	.LVL686
 16290 218f 0100     		.2byte	0x1
 16291 2191 50       		.byte	0x50
 16292 2192 00000000 		.4byte	0
 16293 2196 00000000 		.4byte	0
 16294              	.LLST157:
 16295 219a 60000000 		.4byte	.LVL657
 16296 219e 62000000 		.4byte	.LVL658
 16297 21a2 0100     		.2byte	0x1
 16298 21a4 50       		.byte	0x50
 16299 21a5 6A000000 		.4byte	.LVL659
 16300 21a9 70000000 		.4byte	.LVL660
 16301 21ad 0100     		.2byte	0x1
 16302 21af 50       		.byte	0x50
 16303 21b0 74000000 		.4byte	.LVL661
 16304 21b4 7C000000 		.4byte	.LVL662
 16305 21b8 0100     		.2byte	0x1
 16306 21ba 50       		.byte	0x50
 16307 21bb 80000000 		.4byte	.LVL663
 16308 21bf 82000000 		.4byte	.LVL664
 16309 21c3 0100     		.2byte	0x1
 16310 21c5 50       		.byte	0x50
 16311 21c6 00000000 		.4byte	0
 16312 21ca 00000000 		.4byte	0
 16313              	.LLST158:
 16314 21ce 8E000000 		.4byte	.LVL665
 16315 21d2 94000000 		.4byte	.LVL666
 16316 21d6 0100     		.2byte	0x1
 16317 21d8 50       		.byte	0x50
 16318 21d9 94000000 		.4byte	.LVL666
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 388


 16319 21dd 98000000 		.4byte	.LVL667
 16320 21e1 0100     		.2byte	0x1
 16321 21e3 5A       		.byte	0x5a
 16322 21e4 98000000 		.4byte	.LVL667
 16323 21e8 9A000000 		.4byte	.LVL668
 16324 21ec 0100     		.2byte	0x1
 16325 21ee 50       		.byte	0x50
 16326 21ef 9A000000 		.4byte	.LVL668
 16327 21f3 32010000 		.4byte	.LVL677
 16328 21f7 0100     		.2byte	0x1
 16329 21f9 5A       		.byte	0x5a
 16330 21fa 00000000 		.4byte	0
 16331 21fe 00000000 		.4byte	0
 16332              	.LLST159:
 16333 2202 38000000 		.4byte	.LVL652
 16334 2206 40000000 		.4byte	.LVL653
 16335 220a 0100     		.2byte	0x1
 16336 220c 56       		.byte	0x56
 16337 220d 40000000 		.4byte	.LVL653
 16338 2211 42000000 		.4byte	.LVL654
 16339 2215 0700     		.2byte	0x7
 16340 2217 74       		.byte	0x74
 16341 2218 0C       		.sleb128 12
 16342 2219 06       		.byte	0x6
 16343 221a 73       		.byte	0x73
 16344 221b 00       		.sleb128 0
 16345 221c 1C       		.byte	0x1c
 16346 221d 9F       		.byte	0x9f
 16347 221e 00000000 		.4byte	0
 16348 2222 00000000 		.4byte	0
 16349              	.LLST160:
 16350 2226 E8000000 		.4byte	.LVL673
 16351 222a EA000000 		.4byte	.LVL674
 16352 222e 0100     		.2byte	0x1
 16353 2230 55       		.byte	0x55
 16354 2231 3C010000 		.4byte	.LVL678
 16355 2235 5E010000 		.4byte	.LVL683
 16356 2239 0100     		.2byte	0x1
 16357 223b 55       		.byte	0x55
 16358 223c 00000000 		.4byte	0
 16359 2240 00000000 		.4byte	0
 16360              	.LLST161:
 16361 2244 9A000000 		.4byte	.LVL668
 16362 2248 9C000000 		.4byte	.LVL669
 16363 224c 0500     		.2byte	0x5
 16364 224e 76       		.byte	0x76
 16365 224f 00       		.sleb128 0
 16366 2250 39       		.byte	0x39
 16367 2251 25       		.byte	0x25
 16368 2252 9F       		.byte	0x9f
 16369 2253 9C000000 		.4byte	.LVL669
 16370 2257 E8000000 		.4byte	.LVL673
 16371 225b 0100     		.2byte	0x1
 16372 225d 55       		.byte	0x55
 16373 225e EA000000 		.4byte	.LVL674
 16374 2262 32010000 		.4byte	.LVL677
 16375 2266 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 389


 16376 2268 55       		.byte	0x55
 16377 2269 00000000 		.4byte	0
 16378 226d 00000000 		.4byte	0
 16379              	.LLST162:
 16380 2271 56000000 		.4byte	.LVL655
 16381 2275 5A000000 		.4byte	.LVL656
 16382 2279 0800     		.2byte	0x8
 16383 227b 73       		.byte	0x73
 16384 227c 00       		.sleb128 0
 16385 227d 39       		.byte	0x39
 16386 227e 25       		.byte	0x25
 16387 227f 79       		.byte	0x79
 16388 2280 00       		.sleb128 0
 16389 2281 1A       		.byte	0x1a
 16390 2282 9F       		.byte	0x9f
 16391 2283 5A000000 		.4byte	.LVL656
 16392 2287 32010000 		.4byte	.LVL677
 16393 228b 0100     		.2byte	0x1
 16394 228d 59       		.byte	0x59
 16395 228e 00000000 		.4byte	0
 16396 2292 00000000 		.4byte	0
 16397              	.LLST163:
 16398 2296 0E000000 		.4byte	.LVL647
 16399 229a 16000000 		.4byte	.LVL649
 16400 229e 0100     		.2byte	0x1
 16401 22a0 51       		.byte	0x51
 16402 22a1 16000000 		.4byte	.LVL649
 16403 22a5 74010000 		.4byte	.LFE38
 16404 22a9 0100     		.2byte	0x1
 16405 22ab 58       		.byte	0x58
 16406 22ac 00000000 		.4byte	0
 16407 22b0 00000000 		.4byte	0
 16408              	.LLST164:
 16409 22b4 00000000 		.4byte	.LVL687
 16410 22b8 19000000 		.4byte	.LVL691-1
 16411 22bc 0100     		.2byte	0x1
 16412 22be 50       		.byte	0x50
 16413 22bf 19000000 		.4byte	.LVL691-1
 16414 22c3 AC010000 		.4byte	.LFE39
 16415 22c7 0100     		.2byte	0x1
 16416 22c9 54       		.byte	0x54
 16417 22ca 00000000 		.4byte	0
 16418 22ce 00000000 		.4byte	0
 16419              	.LLST165:
 16420 22d2 00000000 		.4byte	.LVL687
 16421 22d6 16000000 		.4byte	.LVL690
 16422 22da 0100     		.2byte	0x1
 16423 22dc 51       		.byte	0x51
 16424 22dd 16000000 		.4byte	.LVL690
 16425 22e1 3E000000 		.4byte	.LVL694
 16426 22e5 0100     		.2byte	0x1
 16427 22e7 58       		.byte	0x58
 16428 22e8 3E000000 		.4byte	.LVL694
 16429 22ec A2010000 		.4byte	.LVL726
 16430 22f0 0400     		.2byte	0x4
 16431 22f2 F3       		.byte	0xf3
 16432 22f3 01       		.uleb128 0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 390


 16433 22f4 51       		.byte	0x51
 16434 22f5 9F       		.byte	0x9f
 16435 22f6 A2010000 		.4byte	.LVL726
 16436 22fa A6010000 		.4byte	.LVL727
 16437 22fe 0100     		.2byte	0x1
 16438 2300 58       		.byte	0x58
 16439 2301 A6010000 		.4byte	.LVL727
 16440 2305 AC010000 		.4byte	.LFE39
 16441 2309 0400     		.2byte	0x4
 16442 230b F3       		.byte	0xf3
 16443 230c 01       		.uleb128 0x1
 16444 230d 51       		.byte	0x51
 16445 230e 9F       		.byte	0x9f
 16446 230f 00000000 		.4byte	0
 16447 2313 00000000 		.4byte	0
 16448              	.LLST166:
 16449 2317 00000000 		.4byte	.LVL687
 16450 231b 19000000 		.4byte	.LVL691-1
 16451 231f 0100     		.2byte	0x1
 16452 2321 52       		.byte	0x52
 16453 2322 19000000 		.4byte	.LVL691-1
 16454 2326 AC010000 		.4byte	.LFE39
 16455 232a 0100     		.2byte	0x1
 16456 232c 56       		.byte	0x56
 16457 232d 00000000 		.4byte	0
 16458 2331 00000000 		.4byte	0
 16459              	.LLST167:
 16460 2335 00000000 		.4byte	.LVL687
 16461 2339 10000000 		.4byte	.LVL689
 16462 233d 0100     		.2byte	0x1
 16463 233f 53       		.byte	0x53
 16464 2340 10000000 		.4byte	.LVL689
 16465 2344 AC010000 		.4byte	.LFE39
 16466 2348 0100     		.2byte	0x1
 16467 234a 57       		.byte	0x57
 16468 234b 00000000 		.4byte	0
 16469 234f 00000000 		.4byte	0
 16470              	.LLST168:
 16471 2353 1A000000 		.4byte	.LVL691
 16472 2357 3E000000 		.4byte	.LVL694
 16473 235b 0100     		.2byte	0x1
 16474 235d 50       		.byte	0x50
 16475 235e A2010000 		.4byte	.LVL726
 16476 2362 A6010000 		.4byte	.LVL727
 16477 2366 0100     		.2byte	0x1
 16478 2368 50       		.byte	0x50
 16479 2369 00000000 		.4byte	0
 16480 236d 00000000 		.4byte	0
 16481              	.LLST169:
 16482 2371 5E000000 		.4byte	.LVL697
 16483 2375 64000000 		.4byte	.LVL698
 16484 2379 0100     		.2byte	0x1
 16485 237b 50       		.byte	0x50
 16486 237c 64000000 		.4byte	.LVL698
 16487 2380 67000000 		.4byte	.LVL699-1
 16488 2384 0200     		.2byte	0x2
 16489 2386 74       		.byte	0x74
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 391


 16490 2387 08       		.sleb128 8
 16491 2388 68000000 		.4byte	.LVL699
 16492 238c 6A000000 		.4byte	.LVL700
 16493 2390 0100     		.2byte	0x1
 16494 2392 50       		.byte	0x50
 16495 2393 72000000 		.4byte	.LVL701
 16496 2397 7E000000 		.4byte	.LVL702
 16497 239b 0100     		.2byte	0x1
 16498 239d 50       		.byte	0x50
 16499 239e 82000000 		.4byte	.LVL703
 16500 23a2 8A000000 		.4byte	.LVL704
 16501 23a6 0100     		.2byte	0x1
 16502 23a8 50       		.byte	0x50
 16503 23a9 8E000000 		.4byte	.LVL705
 16504 23ad 96000000 		.4byte	.LVL706
 16505 23b1 0100     		.2byte	0x1
 16506 23b3 50       		.byte	0x50
 16507 23b4 00000000 		.4byte	0
 16508 23b8 00000000 		.4byte	0
 16509              	.LLST170:
 16510 23bc CA000000 		.4byte	.LVL708
 16511 23c0 D0000000 		.4byte	.LVL709
 16512 23c4 0100     		.2byte	0x1
 16513 23c6 50       		.byte	0x50
 16514 23c7 D0000000 		.4byte	.LVL709
 16515 23cb D4000000 		.4byte	.LVL710
 16516 23cf 0100     		.2byte	0x1
 16517 23d1 5A       		.byte	0x5a
 16518 23d2 D4000000 		.4byte	.LVL710
 16519 23d6 D6000000 		.4byte	.LVL711
 16520 23da 0100     		.2byte	0x1
 16521 23dc 50       		.byte	0x50
 16522 23dd D6000000 		.4byte	.LVL711
 16523 23e1 50010000 		.4byte	.LVL719
 16524 23e5 0100     		.2byte	0x1
 16525 23e7 5A       		.byte	0x5a
 16526 23e8 00000000 		.4byte	0
 16527 23ec 00000000 		.4byte	0
 16528              	.LLST171:
 16529 23f0 24010000 		.4byte	.LVL716
 16530 23f4 26010000 		.4byte	.LVL717
 16531 23f8 0100     		.2byte	0x1
 16532 23fa 55       		.byte	0x55
 16533 23fb 5A010000 		.4byte	.LVL720
 16534 23ff 84010000 		.4byte	.LVL725
 16535 2403 0100     		.2byte	0x1
 16536 2405 55       		.byte	0x55
 16537 2406 00000000 		.4byte	0
 16538 240a 00000000 		.4byte	0
 16539              	.LLST172:
 16540 240e D6000000 		.4byte	.LVL711
 16541 2412 D8000000 		.4byte	.LVL712
 16542 2416 0500     		.2byte	0x5
 16543 2418 76       		.byte	0x76
 16544 2419 00       		.sleb128 0
 16545 241a 39       		.byte	0x39
 16546 241b 25       		.byte	0x25
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 392


 16547 241c 9F       		.byte	0x9f
 16548 241d D8000000 		.4byte	.LVL712
 16549 2421 24010000 		.4byte	.LVL716
 16550 2425 0100     		.2byte	0x1
 16551 2427 55       		.byte	0x55
 16552 2428 26010000 		.4byte	.LVL717
 16553 242c 50010000 		.4byte	.LVL719
 16554 2430 0100     		.2byte	0x1
 16555 2432 55       		.byte	0x55
 16556 2433 00000000 		.4byte	0
 16557 2437 00000000 		.4byte	0
 16558              	.LLST173:
 16559 243b 54000000 		.4byte	.LVL695
 16560 243f 58000000 		.4byte	.LVL696
 16561 2443 0800     		.2byte	0x8
 16562 2445 73       		.byte	0x73
 16563 2446 00       		.sleb128 0
 16564 2447 39       		.byte	0x39
 16565 2448 25       		.byte	0x25
 16566 2449 79       		.byte	0x79
 16567 244a 00       		.sleb128 0
 16568 244b 1A       		.byte	0x1a
 16569 244c 9F       		.byte	0x9f
 16570 244d 58000000 		.4byte	.LVL696
 16571 2451 50010000 		.4byte	.LVL719
 16572 2455 0100     		.2byte	0x1
 16573 2457 59       		.byte	0x59
 16574 2458 00000000 		.4byte	0
 16575 245c 00000000 		.4byte	0
 16576              	.LLST174:
 16577 2460 0E000000 		.4byte	.LVL688
 16578 2464 16000000 		.4byte	.LVL690
 16579 2468 0100     		.2byte	0x1
 16580 246a 51       		.byte	0x51
 16581 246b 16000000 		.4byte	.LVL690
 16582 246f AC010000 		.4byte	.LFE39
 16583 2473 0100     		.2byte	0x1
 16584 2475 58       		.byte	0x58
 16585 2476 00000000 		.4byte	0
 16586 247a 00000000 		.4byte	0
 16587              	.LLST175:
 16588 247e 00000000 		.4byte	.LVL728
 16589 2482 0B000000 		.4byte	.LVL729-1
 16590 2486 0100     		.2byte	0x1
 16591 2488 50       		.byte	0x50
 16592 2489 0B000000 		.4byte	.LVL729-1
 16593 248d 9C000000 		.4byte	.LFE40
 16594 2491 0100     		.2byte	0x1
 16595 2493 54       		.byte	0x54
 16596 2494 00000000 		.4byte	0
 16597 2498 00000000 		.4byte	0
 16598              	.LLST176:
 16599 249c 0C000000 		.4byte	.LVL729
 16600 24a0 28000000 		.4byte	.LVL730
 16601 24a4 0100     		.2byte	0x1
 16602 24a6 50       		.byte	0x50
 16603 24a7 46000000 		.4byte	.LVL735
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 393


 16604 24ab 58000000 		.4byte	.LVL737
 16605 24af 0100     		.2byte	0x1
 16606 24b1 50       		.byte	0x50
 16607 24b2 86000000 		.4byte	.LVL742
 16608 24b6 94000000 		.4byte	.LVL744
 16609 24ba 0100     		.2byte	0x1
 16610 24bc 50       		.byte	0x50
 16611 24bd 00000000 		.4byte	0
 16612 24c1 00000000 		.4byte	0
 16613              	.LLST177:
 16614 24c5 3E000000 		.4byte	.LVL733
 16615 24c9 42000000 		.4byte	.LVL734
 16616 24cd 0100     		.2byte	0x1
 16617 24cf 50       		.byte	0x50
 16618 24d0 42000000 		.4byte	.LVL734
 16619 24d4 90000000 		.4byte	.LVL743
 16620 24d8 0100     		.2byte	0x1
 16621 24da 56       		.byte	0x56
 16622 24db 00000000 		.4byte	0
 16623 24df 00000000 		.4byte	0
 16624              	.LLST178:
 16625 24e3 4A000000 		.4byte	.LVL736
 16626 24e7 90000000 		.4byte	.LVL743
 16627 24eb 0100     		.2byte	0x1
 16628 24ed 55       		.byte	0x55
 16629 24ee 00000000 		.4byte	0
 16630 24f2 00000000 		.4byte	0
 16631              	.LLST179:
 16632 24f6 00000000 		.4byte	.LVL746
 16633 24fa 09000000 		.4byte	.LVL747-1
 16634 24fe 0100     		.2byte	0x1
 16635 2500 50       		.byte	0x50
 16636 2501 09000000 		.4byte	.LVL747-1
 16637 2505 24000000 		.4byte	.LFE41
 16638 2509 0100     		.2byte	0x1
 16639 250b 54       		.byte	0x54
 16640 250c 00000000 		.4byte	0
 16641 2510 00000000 		.4byte	0
 16642              	.LLST180:
 16643 2514 0A000000 		.4byte	.LVL747
 16644 2518 12000000 		.4byte	.LVL748
 16645 251c 0100     		.2byte	0x1
 16646 251e 50       		.byte	0x50
 16647 251f 16000000 		.4byte	.LVL749
 16648 2523 1E000000 		.4byte	.LVL750
 16649 2527 0100     		.2byte	0x1
 16650 2529 50       		.byte	0x50
 16651 252a 1E000000 		.4byte	.LVL750
 16652 252e 24000000 		.4byte	.LFE41
 16653 2532 0100     		.2byte	0x1
 16654 2534 53       		.byte	0x53
 16655 2535 00000000 		.4byte	0
 16656 2539 00000000 		.4byte	0
 16657              	.LLST181:
 16658 253d 00000000 		.4byte	.LVL751
 16659 2541 11000000 		.4byte	.LVL753-1
 16660 2545 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 394


 16661 2547 50       		.byte	0x50
 16662 2548 11000000 		.4byte	.LVL753-1
 16663 254c 7A010000 		.4byte	.LFE42
 16664 2550 0100     		.2byte	0x1
 16665 2552 54       		.byte	0x54
 16666 2553 00000000 		.4byte	0
 16667 2557 00000000 		.4byte	0
 16668              	.LLST182:
 16669 255b 00000000 		.4byte	.LVL751
 16670 255f 0E000000 		.4byte	.LVL752
 16671 2563 0100     		.2byte	0x1
 16672 2565 51       		.byte	0x51
 16673 2566 0E000000 		.4byte	.LVL752
 16674 256a 8A000000 		.4byte	.LVL773
 16675 256e 0100     		.2byte	0x1
 16676 2570 55       		.byte	0x55
 16677 2571 8C000000 		.4byte	.LVL774
 16678 2575 FC000000 		.4byte	.LVL793
 16679 2579 0100     		.2byte	0x1
 16680 257b 55       		.byte	0x55
 16681 257c FE000000 		.4byte	.LVL794
 16682 2580 00010000 		.4byte	.LVL795
 16683 2584 0100     		.2byte	0x1
 16684 2586 55       		.byte	0x55
 16685 2587 02010000 		.4byte	.LVL796
 16686 258b 04010000 		.4byte	.LVL797
 16687 258f 0100     		.2byte	0x1
 16688 2591 55       		.byte	0x55
 16689 2592 6A010000 		.4byte	.LVL804
 16690 2596 6E010000 		.4byte	.LVL805
 16691 259a 0100     		.2byte	0x1
 16692 259c 55       		.byte	0x55
 16693 259d 00000000 		.4byte	0
 16694 25a1 00000000 		.4byte	0
 16695              	.LLST183:
 16696 25a5 12000000 		.4byte	.LVL753
 16697 25a9 18000000 		.4byte	.LVL754
 16698 25ad 0100     		.2byte	0x1
 16699 25af 50       		.byte	0x50
 16700 25b0 18000000 		.4byte	.LVL754
 16701 25b4 6E000000 		.4byte	.LVL766
 16702 25b8 0100     		.2byte	0x1
 16703 25ba 56       		.byte	0x56
 16704 25bb 74000000 		.4byte	.LVL768
 16705 25bf 7C000000 		.4byte	.LVL769
 16706 25c3 0100     		.2byte	0x1
 16707 25c5 56       		.byte	0x56
 16708 25c6 82000000 		.4byte	.LVL771
 16709 25ca B8000000 		.4byte	.LVL780
 16710 25ce 0100     		.2byte	0x1
 16711 25d0 56       		.byte	0x56
 16712 25d1 BE000000 		.4byte	.LVL782
 16713 25d5 CC000000 		.4byte	.LVL783
 16714 25d9 0100     		.2byte	0x1
 16715 25db 56       		.byte	0x56
 16716 25dc D2000000 		.4byte	.LVL785
 16717 25e0 F2000000 		.4byte	.LVL790
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 395


 16718 25e4 0100     		.2byte	0x1
 16719 25e6 56       		.byte	0x56
 16720 25e7 F8000000 		.4byte	.LVL792
 16721 25eb 3C010000 		.4byte	.LVL799
 16722 25ef 0100     		.2byte	0x1
 16723 25f1 56       		.byte	0x56
 16724 25f2 42010000 		.4byte	.LVL800
 16725 25f6 5E010000 		.4byte	.LVL802
 16726 25fa 0100     		.2byte	0x1
 16727 25fc 56       		.byte	0x56
 16728 25fd 64010000 		.4byte	.LVL803
 16729 2601 74010000 		.4byte	.LVL806
 16730 2605 0100     		.2byte	0x1
 16731 2607 56       		.byte	0x56
 16732 2608 00000000 		.4byte	0
 16733 260c 00000000 		.4byte	0
 16734              	.LLST184:
 16735 2610 5A000000 		.4byte	.LVL761
 16736 2614 5C000000 		.4byte	.LVL762
 16737 2618 0100     		.2byte	0x1
 16738 261a 51       		.byte	0x51
 16739 261b 5E000000 		.4byte	.LVL763
 16740 261f 65000000 		.4byte	.LVL764-1
 16741 2623 0100     		.2byte	0x1
 16742 2625 51       		.byte	0x51
 16743 2626 68000000 		.4byte	.LVL765
 16744 262a 72000000 		.4byte	.LVL767
 16745 262e 0100     		.2byte	0x1
 16746 2630 50       		.byte	0x50
 16747 2631 72000000 		.4byte	.LVL767
 16748 2635 74000000 		.4byte	.LVL768
 16749 2639 0100     		.2byte	0x1
 16750 263b 51       		.byte	0x51
 16751 263c 74000000 		.4byte	.LVL768
 16752 2640 80000000 		.4byte	.LVL770
 16753 2644 0100     		.2byte	0x1
 16754 2646 50       		.byte	0x50
 16755 2647 80000000 		.4byte	.LVL770
 16756 264b 82000000 		.4byte	.LVL771
 16757 264f 0100     		.2byte	0x1
 16758 2651 51       		.byte	0x51
 16759 2652 82000000 		.4byte	.LVL771
 16760 2656 84000000 		.4byte	.LVL772
 16761 265a 0100     		.2byte	0x1
 16762 265c 50       		.byte	0x50
 16763 265d 84000000 		.4byte	.LVL772
 16764 2661 A1000000 		.4byte	.LVL776-1
 16765 2665 0100     		.2byte	0x1
 16766 2667 51       		.byte	0x51
 16767 2668 A2000000 		.4byte	.LVL776
 16768 266c A8000000 		.4byte	.LVL777
 16769 2670 0100     		.2byte	0x1
 16770 2672 50       		.byte	0x50
 16771 2673 A8000000 		.4byte	.LVL777
 16772 2677 AD000000 		.4byte	.LVL778-1
 16773 267b 0100     		.2byte	0x1
 16774 267d 51       		.byte	0x51
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 396


 16775 267e B0000000 		.4byte	.LVL779
 16776 2682 BC000000 		.4byte	.LVL781
 16777 2686 0100     		.2byte	0x1
 16778 2688 50       		.byte	0x50
 16779 2689 BC000000 		.4byte	.LVL781
 16780 268d BE000000 		.4byte	.LVL782
 16781 2691 0100     		.2byte	0x1
 16782 2693 51       		.byte	0x51
 16783 2694 BE000000 		.4byte	.LVL782
 16784 2698 D0000000 		.4byte	.LVL784
 16785 269c 0100     		.2byte	0x1
 16786 269e 50       		.byte	0x50
 16787 269f D0000000 		.4byte	.LVL784
 16788 26a3 D2000000 		.4byte	.LVL785
 16789 26a7 0100     		.2byte	0x1
 16790 26a9 51       		.byte	0x51
 16791 26aa D2000000 		.4byte	.LVL785
 16792 26ae D4000000 		.4byte	.LVL786
 16793 26b2 0100     		.2byte	0x1
 16794 26b4 50       		.byte	0x50
 16795 26b5 D4000000 		.4byte	.LVL786
 16796 26b9 DA000000 		.4byte	.LVL787
 16797 26bd 0100     		.2byte	0x1
 16798 26bf 51       		.byte	0x51
 16799 26c0 DA000000 		.4byte	.LVL787
 16800 26c4 DC000000 		.4byte	.LVL788
 16801 26c8 0100     		.2byte	0x1
 16802 26ca 50       		.byte	0x50
 16803 26cb DC000000 		.4byte	.LVL788
 16804 26cf ED000000 		.4byte	.LVL789-1
 16805 26d3 0100     		.2byte	0x1
 16806 26d5 51       		.byte	0x51
 16807 26d6 02010000 		.4byte	.LVL796
 16808 26da 04010000 		.4byte	.LVL797
 16809 26de 0100     		.2byte	0x1
 16810 26e0 51       		.byte	0x51
 16811 26e1 00000000 		.4byte	0
 16812 26e5 00000000 		.4byte	0
 16813              	.LLST185:
 16814 26e9 3E000000 		.4byte	.LVL757
 16815 26ed FE000000 		.4byte	.LVL794
 16816 26f1 0100     		.2byte	0x1
 16817 26f3 57       		.byte	0x57
 16818 26f4 02010000 		.4byte	.LVL796
 16819 26f8 04010000 		.4byte	.LVL797
 16820 26fc 0100     		.2byte	0x1
 16821 26fe 57       		.byte	0x57
 16822 26ff 00000000 		.4byte	0
 16823 2703 00000000 		.4byte	0
 16824              	.LLST186:
 16825 2707 30000000 		.4byte	.LVL756
 16826 270b EE000000 		.4byte	.LVL789
 16827 270f 0200     		.2byte	0x2
 16828 2711 30       		.byte	0x30
 16829 2712 9F       		.byte	0x9f
 16830 2713 EE000000 		.4byte	.LVL789
 16831 2717 F6000000 		.4byte	.LVL791
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 397


 16832 271b 0100     		.2byte	0x1
 16833 271d 50       		.byte	0x50
 16834 271e F8000000 		.4byte	.LVL792
 16835 2722 FC000000 		.4byte	.LVL793
 16836 2726 0100     		.2byte	0x1
 16837 2728 50       		.byte	0x50
 16838 2729 FC000000 		.4byte	.LVL793
 16839 272d FE000000 		.4byte	.LVL794
 16840 2731 0100     		.2byte	0x1
 16841 2733 55       		.byte	0x55
 16842 2734 FE000000 		.4byte	.LVL794
 16843 2738 04010000 		.4byte	.LVL797
 16844 273c 0200     		.2byte	0x2
 16845 273e 30       		.byte	0x30
 16846 273f 9F       		.byte	0x9f
 16847 2740 04010000 		.4byte	.LVL797
 16848 2744 6A010000 		.4byte	.LVL804
 16849 2748 0100     		.2byte	0x1
 16850 274a 55       		.byte	0x55
 16851 274b 6E010000 		.4byte	.LVL805
 16852 274f 74010000 		.4byte	.LVL806
 16853 2753 0100     		.2byte	0x1
 16854 2755 55       		.byte	0x55
 16855 2756 00000000 		.4byte	0
 16856 275a 00000000 		.4byte	0
 16857              	.LLST187:
 16858 275e 30000000 		.4byte	.LVL756
 16859 2762 48000000 		.4byte	.LVL758
 16860 2766 0100     		.2byte	0x1
 16861 2768 53       		.byte	0x53
 16862 2769 48000000 		.4byte	.LVL758
 16863 276d 54000000 		.4byte	.LVL759
 16864 2771 0300     		.2byte	0x3
 16865 2773 73       		.byte	0x73
 16866 2774 01       		.sleb128 1
 16867 2775 9F       		.byte	0x9f
 16868 2776 FE000000 		.4byte	.LVL794
 16869 277a 02010000 		.4byte	.LVL796
 16870 277e 0100     		.2byte	0x1
 16871 2780 53       		.byte	0x53
 16872 2781 00000000 		.4byte	0
 16873 2785 00000000 		.4byte	0
 16874              	.LLST188:
 16875 2789 00000000 		.4byte	.LVL807
 16876 278d 10000000 		.4byte	.LVL809
 16877 2791 0100     		.2byte	0x1
 16878 2793 50       		.byte	0x50
 16879 2794 10000000 		.4byte	.LVL809
 16880 2798 68000000 		.4byte	.LVL820
 16881 279c 0100     		.2byte	0x1
 16882 279e 55       		.byte	0x55
 16883 279f 68000000 		.4byte	.LVL820
 16884 27a3 6A000000 		.4byte	.LVL821
 16885 27a7 0100     		.2byte	0x1
 16886 27a9 50       		.byte	0x50
 16887 27aa 6A000000 		.4byte	.LVL821
 16888 27ae 6C000000 		.4byte	.LVL822
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 398


 16889 27b2 0400     		.2byte	0x4
 16890 27b4 F3       		.byte	0xf3
 16891 27b5 01       		.uleb128 0x1
 16892 27b6 50       		.byte	0x50
 16893 27b7 9F       		.byte	0x9f
 16894 27b8 6C000000 		.4byte	.LVL822
 16895 27bc 6E000000 		.4byte	.LVL823
 16896 27c0 0100     		.2byte	0x1
 16897 27c2 55       		.byte	0x55
 16898 27c3 6E000000 		.4byte	.LVL823
 16899 27c7 72000000 		.4byte	.LFE43
 16900 27cb 0400     		.2byte	0x4
 16901 27cd F3       		.byte	0xf3
 16902 27ce 01       		.uleb128 0x1
 16903 27cf 50       		.byte	0x50
 16904 27d0 9F       		.byte	0x9f
 16905 27d1 00000000 		.4byte	0
 16906 27d5 00000000 		.4byte	0
 16907              	.LLST189:
 16908 27d9 00000000 		.4byte	.LVL807
 16909 27dd 0E000000 		.4byte	.LVL808
 16910 27e1 0100     		.2byte	0x1
 16911 27e3 51       		.byte	0x51
 16912 27e4 0E000000 		.4byte	.LVL808
 16913 27e8 10000000 		.4byte	.LVL809
 16914 27ec 0200     		.2byte	0x2
 16915 27ee 91       		.byte	0x91
 16916 27ef 64       		.sleb128 -28
 16917 27f0 10000000 		.4byte	.LVL809
 16918 27f4 13000000 		.4byte	.LVL810-1
 16919 27f8 0200     		.2byte	0x2
 16920 27fa 70       		.byte	0x70
 16921 27fb 00       		.sleb128 0
 16922 27fc 13000000 		.4byte	.LVL810-1
 16923 2800 68000000 		.4byte	.LVL820
 16924 2804 0200     		.2byte	0x2
 16925 2806 91       		.byte	0x91
 16926 2807 64       		.sleb128 -28
 16927 2808 68000000 		.4byte	.LVL820
 16928 280c 6C000000 		.4byte	.LVL822
 16929 2810 0100     		.2byte	0x1
 16930 2812 51       		.byte	0x51
 16931 2813 6C000000 		.4byte	.LVL822
 16932 2817 72000000 		.4byte	.LFE43
 16933 281b 0200     		.2byte	0x2
 16934 281d 91       		.byte	0x91
 16935 281e 64       		.sleb128 -28
 16936 281f 00000000 		.4byte	0
 16937 2823 00000000 		.4byte	0
 16938              	.LLST190:
 16939 2827 14000000 		.4byte	.LVL810
 16940 282b 20000000 		.4byte	.LVL811
 16941 282f 0100     		.2byte	0x1
 16942 2831 50       		.byte	0x50
 16943 2832 24000000 		.4byte	.LVL812
 16944 2836 3C000000 		.4byte	.LVL813
 16945 283a 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 399


 16946 283c 50       		.byte	0x50
 16947 283d 44000000 		.4byte	.LVL815
 16948 2841 46000000 		.4byte	.LVL816
 16949 2845 0100     		.2byte	0x1
 16950 2847 50       		.byte	0x50
 16951 2848 46000000 		.4byte	.LVL816
 16952 284c 68000000 		.4byte	.LVL820
 16953 2850 0100     		.2byte	0x1
 16954 2852 54       		.byte	0x54
 16955 2853 6C000000 		.4byte	.LVL822
 16956 2857 6E000000 		.4byte	.LVL823
 16957 285b 0100     		.2byte	0x1
 16958 285d 54       		.byte	0x54
 16959 285e 00000000 		.4byte	0
 16960 2862 00000000 		.4byte	0
 16961              	.LLST191:
 16962 2866 00000000 		.4byte	.LVL824
 16963 286a 0B000000 		.4byte	.LVL825-1
 16964 286e 0100     		.2byte	0x1
 16965 2870 50       		.byte	0x50
 16966 2871 0B000000 		.4byte	.LVL825-1
 16967 2875 1A000000 		.4byte	.LFE44
 16968 2879 0100     		.2byte	0x1
 16969 287b 54       		.byte	0x54
 16970 287c 00000000 		.4byte	0
 16971 2880 00000000 		.4byte	0
 16972              	.LLST192:
 16973 2884 0C000000 		.4byte	.LVL825
 16974 2888 16000000 		.4byte	.LVL826
 16975 288c 0100     		.2byte	0x1
 16976 288e 50       		.byte	0x50
 16977 288f 00000000 		.4byte	0
 16978 2893 00000000 		.4byte	0
 16979              	.LLST193:
 16980 2897 00000000 		.4byte	.LVL827
 16981 289b 0D000000 		.4byte	.LVL829-1
 16982 289f 0100     		.2byte	0x1
 16983 28a1 50       		.byte	0x50
 16984 28a2 0D000000 		.4byte	.LVL829-1
 16985 28a6 4C000000 		.4byte	.LFE45
 16986 28aa 0100     		.2byte	0x1
 16987 28ac 55       		.byte	0x55
 16988 28ad 00000000 		.4byte	0
 16989 28b1 00000000 		.4byte	0
 16990              	.LLST194:
 16991 28b5 00000000 		.4byte	.LVL827
 16992 28b9 0A000000 		.4byte	.LVL828
 16993 28bd 0100     		.2byte	0x1
 16994 28bf 51       		.byte	0x51
 16995 28c0 0A000000 		.4byte	.LVL828
 16996 28c4 4C000000 		.4byte	.LFE45
 16997 28c8 0100     		.2byte	0x1
 16998 28ca 56       		.byte	0x56
 16999 28cb 00000000 		.4byte	0
 17000 28cf 00000000 		.4byte	0
 17001              	.LLST195:
 17002 28d3 0E000000 		.4byte	.LVL829
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 400


 17003 28d7 18000000 		.4byte	.LVL830
 17004 28db 0100     		.2byte	0x1
 17005 28dd 50       		.byte	0x50
 17006 28de 1E000000 		.4byte	.LVL832
 17007 28e2 20000000 		.4byte	.LVL833
 17008 28e6 0100     		.2byte	0x1
 17009 28e8 54       		.byte	0x54
 17010 28e9 20000000 		.4byte	.LVL833
 17011 28ed 24000000 		.4byte	.LVL834
 17012 28f1 0100     		.2byte	0x1
 17013 28f3 50       		.byte	0x50
 17014 28f4 28000000 		.4byte	.LVL835
 17015 28f8 2E000000 		.4byte	.LVL836
 17016 28fc 0100     		.2byte	0x1
 17017 28fe 50       		.byte	0x50
 17018 28ff 2E000000 		.4byte	.LVL836
 17019 2903 40000000 		.4byte	.LVL838
 17020 2907 0100     		.2byte	0x1
 17021 2909 54       		.byte	0x54
 17022 290a 40000000 		.4byte	.LVL838
 17023 290e 46000000 		.4byte	.LVL839
 17024 2912 0100     		.2byte	0x1
 17025 2914 50       		.byte	0x50
 17026 2915 46000000 		.4byte	.LVL839
 17027 2919 4C000000 		.4byte	.LFE45
 17028 291d 0100     		.2byte	0x1
 17029 291f 54       		.byte	0x54
 17030 2920 00000000 		.4byte	0
 17031 2924 00000000 		.4byte	0
 17032              	.LLST196:
 17033 2928 00000000 		.4byte	.LVL840
 17034 292c 0E000000 		.4byte	.LVL842
 17035 2930 0100     		.2byte	0x1
 17036 2932 50       		.byte	0x50
 17037 2933 0E000000 		.4byte	.LVL842
 17038 2937 11000000 		.4byte	.LVL843-1
 17039 293b 0200     		.2byte	0x2
 17040 293d 70       		.byte	0x70
 17041 293e 00       		.sleb128 0
 17042 293f 11000000 		.4byte	.LVL843-1
 17043 2943 3E000000 		.4byte	.LFE46
 17044 2947 0300     		.2byte	0x3
 17045 2949 91       		.byte	0x91
 17046 294a BC7F     		.sleb128 -68
 17047 294c 00000000 		.4byte	0
 17048 2950 00000000 		.4byte	0
 17049              	.LLST197:
 17050 2954 00000000 		.4byte	.LVL840
 17051 2958 0C000000 		.4byte	.LVL841
 17052 295c 0100     		.2byte	0x1
 17053 295e 51       		.byte	0x51
 17054 295f 0C000000 		.4byte	.LVL841
 17055 2963 3E000000 		.4byte	.LFE46
 17056 2967 0100     		.2byte	0x1
 17057 2969 55       		.byte	0x55
 17058 296a 00000000 		.4byte	0
 17059 296e 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 401


 17060              	.LLST198:
 17061 2972 12000000 		.4byte	.LVL843
 17062 2976 1A000000 		.4byte	.LVL844
 17063 297a 0100     		.2byte	0x1
 17064 297c 50       		.byte	0x50
 17065 297d 1E000000 		.4byte	.LVL845
 17066 2981 30000000 		.4byte	.LVL846
 17067 2985 0100     		.2byte	0x1
 17068 2987 50       		.byte	0x50
 17069 2988 36000000 		.4byte	.LVL848
 17070 298c 38000000 		.4byte	.LVL849
 17071 2990 0100     		.2byte	0x1
 17072 2992 50       		.byte	0x50
 17073 2993 38000000 		.4byte	.LVL849
 17074 2997 3E000000 		.4byte	.LFE46
 17075 299b 0100     		.2byte	0x1
 17076 299d 54       		.byte	0x54
 17077 299e 00000000 		.4byte	0
 17078 29a2 00000000 		.4byte	0
 17079              	.LLST199:
 17080 29a6 00000000 		.4byte	.LVL850
 17081 29aa 12000000 		.4byte	.LVL853
 17082 29ae 0100     		.2byte	0x1
 17083 29b0 50       		.byte	0x50
 17084 29b1 12000000 		.4byte	.LVL853
 17085 29b5 15000000 		.4byte	.LVL854-1
 17086 29b9 0200     		.2byte	0x2
 17087 29bb 70       		.byte	0x70
 17088 29bc 00       		.sleb128 0
 17089 29bd 15000000 		.4byte	.LVL854-1
 17090 29c1 CE000000 		.4byte	.LFE47
 17091 29c5 0200     		.2byte	0x2
 17092 29c7 91       		.byte	0x91
 17093 29c8 44       		.sleb128 -60
 17094 29c9 00000000 		.4byte	0
 17095 29cd 00000000 		.4byte	0
 17096              	.LLST200:
 17097 29d1 00000000 		.4byte	.LVL850
 17098 29d5 10000000 		.4byte	.LVL852
 17099 29d9 0100     		.2byte	0x1
 17100 29db 51       		.byte	0x51
 17101 29dc 10000000 		.4byte	.LVL852
 17102 29e0 CE000000 		.4byte	.LFE47
 17103 29e4 0100     		.2byte	0x1
 17104 29e6 59       		.byte	0x59
 17105 29e7 00000000 		.4byte	0
 17106 29eb 00000000 		.4byte	0
 17107              	.LLST201:
 17108 29ef 00000000 		.4byte	.LVL850
 17109 29f3 0E000000 		.4byte	.LVL851
 17110 29f7 0100     		.2byte	0x1
 17111 29f9 52       		.byte	0x52
 17112 29fa 0E000000 		.4byte	.LVL851
 17113 29fe 3A000000 		.4byte	.LVL857
 17114 2a02 0100     		.2byte	0x1
 17115 2a04 54       		.byte	0x54
 17116 2a05 3A000000 		.4byte	.LVL857
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 402


 17117 2a09 5E000000 		.4byte	.LVL862
 17118 2a0d 0400     		.2byte	0x4
 17119 2a0f F3       		.byte	0xf3
 17120 2a10 01       		.uleb128 0x1
 17121 2a11 52       		.byte	0x52
 17122 2a12 9F       		.byte	0x9f
 17123 2a13 5E000000 		.4byte	.LVL862
 17124 2a17 62000000 		.4byte	.LVL864
 17125 2a1b 0100     		.2byte	0x1
 17126 2a1d 54       		.byte	0x54
 17127 2a1e 62000000 		.4byte	.LVL864
 17128 2a22 CE000000 		.4byte	.LFE47
 17129 2a26 0400     		.2byte	0x4
 17130 2a28 F3       		.byte	0xf3
 17131 2a29 01       		.uleb128 0x1
 17132 2a2a 52       		.byte	0x52
 17133 2a2b 9F       		.byte	0x9f
 17134 2a2c 00000000 		.4byte	0
 17135 2a30 00000000 		.4byte	0
 17136              	.LLST202:
 17137 2a34 16000000 		.4byte	.LVL854
 17138 2a38 3C000000 		.4byte	.LVL858
 17139 2a3c 0100     		.2byte	0x1
 17140 2a3e 50       		.byte	0x50
 17141 2a3f 5E000000 		.4byte	.LVL862
 17142 2a43 64000000 		.4byte	.LVL865
 17143 2a47 0100     		.2byte	0x1
 17144 2a49 50       		.byte	0x50
 17145 2a4a 64000000 		.4byte	.LVL865
 17146 2a4e 72000000 		.4byte	.LVL867
 17147 2a52 0100     		.2byte	0x1
 17148 2a54 58       		.byte	0x58
 17149 2a55 72000000 		.4byte	.LVL867
 17150 2a59 78000000 		.4byte	.LVL868
 17151 2a5d 0100     		.2byte	0x1
 17152 2a5f 50       		.byte	0x50
 17153 2a60 78000000 		.4byte	.LVL868
 17154 2a64 AC000000 		.4byte	.LVL877
 17155 2a68 0100     		.2byte	0x1
 17156 2a6a 58       		.byte	0x58
 17157 2a6b B6000000 		.4byte	.LVL878
 17158 2a6f CE000000 		.4byte	.LFE47
 17159 2a73 0100     		.2byte	0x1
 17160 2a75 58       		.byte	0x58
 17161 2a76 00000000 		.4byte	0
 17162 2a7a 00000000 		.4byte	0
 17163              	.LLST203:
 17164 2a7e 30000000 		.4byte	.LVL855
 17165 2a82 3C000000 		.4byte	.LVL858
 17166 2a86 0200     		.2byte	0x2
 17167 2a88 30       		.byte	0x30
 17168 2a89 9F       		.byte	0x9f
 17169 2a8a 3C000000 		.4byte	.LVL858
 17170 2a8e 5E000000 		.4byte	.LVL862
 17171 2a92 0100     		.2byte	0x1
 17172 2a94 56       		.byte	0x56
 17173 2a95 5E000000 		.4byte	.LVL862
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 403


 17174 2a99 64000000 		.4byte	.LVL865
 17175 2a9d 0200     		.2byte	0x2
 17176 2a9f 30       		.byte	0x30
 17177 2aa0 9F       		.byte	0x9f
 17178 2aa1 64000000 		.4byte	.LVL865
 17179 2aa5 C6000000 		.4byte	.LVL879
 17180 2aa9 0100     		.2byte	0x1
 17181 2aab 56       		.byte	0x56
 17182 2aac 00000000 		.4byte	0
 17183 2ab0 00000000 		.4byte	0
 17184              	.LLST204:
 17185 2ab4 36000000 		.4byte	.LVL856
 17186 2ab8 3C000000 		.4byte	.LVL858
 17187 2abc 0200     		.2byte	0x2
 17188 2abe 32       		.byte	0x32
 17189 2abf 9F       		.byte	0x9f
 17190 2ac0 3C000000 		.4byte	.LVL858
 17191 2ac4 5E000000 		.4byte	.LVL862
 17192 2ac8 0100     		.2byte	0x1
 17193 2aca 54       		.byte	0x54
 17194 2acb 5E000000 		.4byte	.LVL862
 17195 2acf A6000000 		.4byte	.LVL875
 17196 2ad3 0100     		.2byte	0x1
 17197 2ad5 55       		.byte	0x55
 17198 2ad6 A6000000 		.4byte	.LVL875
 17199 2ada A8000000 		.4byte	.LVL876
 17200 2ade 0300     		.2byte	0x3
 17201 2ae0 75       		.byte	0x75
 17202 2ae1 7F       		.sleb128 -1
 17203 2ae2 9F       		.byte	0x9f
 17204 2ae3 A8000000 		.4byte	.LVL876
 17205 2ae7 AC000000 		.4byte	.LVL877
 17206 2aeb 0100     		.2byte	0x1
 17207 2aed 55       		.byte	0x55
 17208 2aee AC000000 		.4byte	.LVL877
 17209 2af2 B6000000 		.4byte	.LVL878
 17210 2af6 0100     		.2byte	0x1
 17211 2af8 54       		.byte	0x54
 17212 2af9 00000000 		.4byte	0
 17213 2afd 00000000 		.4byte	0
 17214              	.LLST205:
 17215 2b01 44000000 		.4byte	.LVL859
 17216 2b05 5E000000 		.4byte	.LVL862
 17217 2b09 0100     		.2byte	0x1
 17218 2b0b 50       		.byte	0x50
 17219 2b0c AC000000 		.4byte	.LVL877
 17220 2b10 B6000000 		.4byte	.LVL878
 17221 2b14 0100     		.2byte	0x1
 17222 2b16 50       		.byte	0x50
 17223 2b17 00000000 		.4byte	0
 17224 2b1b 00000000 		.4byte	0
 17225              	.LLST206:
 17226 2b1f 60000000 		.4byte	.LVL863
 17227 2b23 6A000000 		.4byte	.LVL866
 17228 2b27 0100     		.2byte	0x1
 17229 2b29 57       		.byte	0x57
 17230 2b2a 6A000000 		.4byte	.LVL866
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 404


 17231 2b2e 78000000 		.4byte	.LVL868
 17232 2b32 0100     		.2byte	0x1
 17233 2b34 5A       		.byte	0x5a
 17234 2b35 78000000 		.4byte	.LVL868
 17235 2b39 AC000000 		.4byte	.LVL877
 17236 2b3d 0100     		.2byte	0x1
 17237 2b3f 57       		.byte	0x57
 17238 2b40 00000000 		.4byte	0
 17239 2b44 00000000 		.4byte	0
 17240              	.LLST207:
 17241 2b48 60000000 		.4byte	.LVL863
 17242 2b4c 64000000 		.4byte	.LVL865
 17243 2b50 0200     		.2byte	0x2
 17244 2b52 30       		.byte	0x30
 17245 2b53 9F       		.byte	0x9f
 17246 2b54 64000000 		.4byte	.LVL865
 17247 2b58 AC000000 		.4byte	.LVL877
 17248 2b5c 0100     		.2byte	0x1
 17249 2b5e 54       		.byte	0x54
 17250 2b5f 00000000 		.4byte	0
 17251 2b63 00000000 		.4byte	0
 17252              	.LLST208:
 17253 2b67 00000000 		.4byte	.LVL880
 17254 2b6b 0B000000 		.4byte	.LVL881-1
 17255 2b6f 0100     		.2byte	0x1
 17256 2b71 50       		.byte	0x50
 17257 2b72 0B000000 		.4byte	.LVL881-1
 17258 2b76 B4000000 		.4byte	.LFE48
 17259 2b7a 0100     		.2byte	0x1
 17260 2b7c 55       		.byte	0x55
 17261 2b7d 00000000 		.4byte	0
 17262 2b81 00000000 		.4byte	0
 17263              	.LLST209:
 17264 2b85 0C000000 		.4byte	.LVL881
 17265 2b89 12000000 		.4byte	.LVL882
 17266 2b8d 0100     		.2byte	0x1
 17267 2b8f 50       		.byte	0x50
 17268 2b90 12000000 		.4byte	.LVL882
 17269 2b94 42000000 		.4byte	.LVL885
 17270 2b98 0100     		.2byte	0x1
 17271 2b9a 54       		.byte	0x54
 17272 2b9b 42000000 		.4byte	.LVL885
 17273 2b9f 4A000000 		.4byte	.LVL886
 17274 2ba3 0200     		.2byte	0x2
 17275 2ba5 30       		.byte	0x30
 17276 2ba6 9F       		.byte	0x9f
 17277 2ba7 4A000000 		.4byte	.LVL886
 17278 2bab A0000000 		.4byte	.LVL893
 17279 2baf 0100     		.2byte	0x1
 17280 2bb1 54       		.byte	0x54
 17281 2bb2 A0000000 		.4byte	.LVL893
 17282 2bb6 A2000000 		.4byte	.LVL894
 17283 2bba 0100     		.2byte	0x1
 17284 2bbc 50       		.byte	0x50
 17285 2bbd A2000000 		.4byte	.LVL894
 17286 2bc1 B0000000 		.4byte	.LVL895
 17287 2bc5 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 405


 17288 2bc7 54       		.byte	0x54
 17289 2bc8 00000000 		.4byte	0
 17290 2bcc 00000000 		.4byte	0
 17291              	.LLST210:
 17292 2bd0 42000000 		.4byte	.LVL885
 17293 2bd4 60000000 		.4byte	.LVL888
 17294 2bd8 0100     		.2byte	0x1
 17295 2bda 50       		.byte	0x50
 17296 2bdb 60000000 		.4byte	.LVL888
 17297 2bdf 63000000 		.4byte	.LVL889-1
 17298 2be3 0100     		.2byte	0x1
 17299 2be5 51       		.byte	0x51
 17300 2be6 00000000 		.4byte	0
 17301 2bea 00000000 		.4byte	0
 17302              	.LLST211:
 17303 2bee 00000000 		.4byte	.LVL896
 17304 2bf2 0C000000 		.4byte	.LVL898
 17305 2bf6 0100     		.2byte	0x1
 17306 2bf8 50       		.byte	0x50
 17307 2bf9 0C000000 		.4byte	.LVL898
 17308 2bfd 0F000000 		.4byte	.LVL899-1
 17309 2c01 0200     		.2byte	0x2
 17310 2c03 70       		.byte	0x70
 17311 2c04 00       		.sleb128 0
 17312 2c05 0F000000 		.4byte	.LVL899-1
 17313 2c09 AC000000 		.4byte	.LFE49
 17314 2c0d 0300     		.2byte	0x3
 17315 2c0f 91       		.byte	0x91
 17316 2c10 8C7F     		.sleb128 -116
 17317 2c12 00000000 		.4byte	0
 17318 2c16 00000000 		.4byte	0
 17319              	.LLST212:
 17320 2c1a 10000000 		.4byte	.LVL899
 17321 2c1e 1E000000 		.4byte	.LVL900
 17322 2c22 0100     		.2byte	0x1
 17323 2c24 50       		.byte	0x50
 17324 2c25 22000000 		.4byte	.LVL901
 17325 2c29 42000000 		.4byte	.LVL902
 17326 2c2d 0100     		.2byte	0x1
 17327 2c2f 50       		.byte	0x50
 17328 2c30 42000000 		.4byte	.LVL902
 17329 2c34 66000000 		.4byte	.LVL906
 17330 2c38 0100     		.2byte	0x1
 17331 2c3a 54       		.byte	0x54
 17332 2c3b 66000000 		.4byte	.LVL906
 17333 2c3f 6E000000 		.4byte	.LVL907
 17334 2c43 0100     		.2byte	0x1
 17335 2c45 50       		.byte	0x50
 17336 2c46 72000000 		.4byte	.LVL908
 17337 2c4a 78000000 		.4byte	.LVL909
 17338 2c4e 0100     		.2byte	0x1
 17339 2c50 50       		.byte	0x50
 17340 2c51 78000000 		.4byte	.LVL909
 17341 2c55 80000000 		.4byte	.LVL910
 17342 2c59 0100     		.2byte	0x1
 17343 2c5b 53       		.byte	0x53
 17344 2c5c 80000000 		.4byte	.LVL910
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 406


 17345 2c60 8A000000 		.4byte	.LVL912
 17346 2c64 0100     		.2byte	0x1
 17347 2c66 54       		.byte	0x54
 17348 2c67 8A000000 		.4byte	.LVL912
 17349 2c6b 96000000 		.4byte	.LVL913
 17350 2c6f 0100     		.2byte	0x1
 17351 2c71 50       		.byte	0x50
 17352 2c72 9C000000 		.4byte	.LVL915
 17353 2c76 AC000000 		.4byte	.LFE49
 17354 2c7a 0100     		.2byte	0x1
 17355 2c7c 54       		.byte	0x54
 17356 2c7d 00000000 		.4byte	0
 17357 2c81 00000000 		.4byte	0
 17358              	.LLST213:
 17359 2c85 06000000 		.4byte	.LVL897
 17360 2c89 50000000 		.4byte	.LVL904
 17361 2c8d 0200     		.2byte	0x2
 17362 2c8f 30       		.byte	0x30
 17363 2c90 9F       		.byte	0x9f
 17364 2c91 50000000 		.4byte	.LVL904
 17365 2c95 62000000 		.4byte	.LVL905
 17366 2c99 0100     		.2byte	0x1
 17367 2c9b 50       		.byte	0x50
 17368 2c9c 62000000 		.4byte	.LVL905
 17369 2ca0 80000000 		.4byte	.LVL910
 17370 2ca4 0100     		.2byte	0x1
 17371 2ca6 55       		.byte	0x55
 17372 2ca7 80000000 		.4byte	.LVL910
 17373 2cab 82000000 		.4byte	.LVL911
 17374 2caf 0200     		.2byte	0x2
 17375 2cb1 30       		.byte	0x30
 17376 2cb2 9F       		.byte	0x9f
 17377 2cb3 82000000 		.4byte	.LVL911
 17378 2cb7 A6000000 		.4byte	.LVL917
 17379 2cbb 0100     		.2byte	0x1
 17380 2cbd 55       		.byte	0x55
 17381 2cbe 00000000 		.4byte	0
 17382 2cc2 00000000 		.4byte	0
 17383              	.LLST214:
 17384 2cc6 00000000 		.4byte	.LVL918
 17385 2cca 0C000000 		.4byte	.LVL919
 17386 2cce 0100     		.2byte	0x1
 17387 2cd0 50       		.byte	0x50
 17388 2cd1 0C000000 		.4byte	.LVL919
 17389 2cd5 0F000000 		.4byte	.LVL920-1
 17390 2cd9 0200     		.2byte	0x2
 17391 2cdb 70       		.byte	0x70
 17392 2cdc 00       		.sleb128 0
 17393 2cdd 0F000000 		.4byte	.LVL920-1
 17394 2ce1 FE000000 		.4byte	.LFE50
 17395 2ce5 0300     		.2byte	0x3
 17396 2ce7 91       		.byte	0x91
 17397 2ce8 AC7F     		.sleb128 -84
 17398 2cea 00000000 		.4byte	0
 17399 2cee 00000000 		.4byte	0
 17400              	.LLST215:
 17401 2cf2 10000000 		.4byte	.LVL920
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 407


 17402 2cf6 1E000000 		.4byte	.LVL921
 17403 2cfa 0100     		.2byte	0x1
 17404 2cfc 50       		.byte	0x50
 17405 2cfd 22000000 		.4byte	.LVL922
 17406 2d01 28000000 		.4byte	.LVL923
 17407 2d05 0100     		.2byte	0x1
 17408 2d07 50       		.byte	0x50
 17409 2d08 28000000 		.4byte	.LVL923
 17410 2d0c 30000000 		.4byte	.LVL924
 17411 2d10 0100     		.2byte	0x1
 17412 2d12 53       		.byte	0x53
 17413 2d13 3A000000 		.4byte	.LVL925
 17414 2d17 40000000 		.4byte	.LVL926
 17415 2d1b 0200     		.2byte	0x2
 17416 2d1d 30       		.byte	0x30
 17417 2d1e 9F       		.byte	0x9f
 17418 2d1f 40000000 		.4byte	.LVL926
 17419 2d23 5E000000 		.4byte	.LVL932
 17420 2d27 0100     		.2byte	0x1
 17421 2d29 54       		.byte	0x54
 17422 2d2a 5E000000 		.4byte	.LVL932
 17423 2d2e 68000000 		.4byte	.LVL933
 17424 2d32 0100     		.2byte	0x1
 17425 2d34 50       		.byte	0x50
 17426 2d35 BC000000 		.4byte	.LVL941
 17427 2d39 F6000000 		.4byte	.LVL947
 17428 2d3d 0100     		.2byte	0x1
 17429 2d3f 54       		.byte	0x54
 17430 2d40 F6000000 		.4byte	.LVL947
 17431 2d44 F8000000 		.4byte	.LVL948
 17432 2d48 0100     		.2byte	0x1
 17433 2d4a 53       		.byte	0x53
 17434 2d4b F8000000 		.4byte	.LVL948
 17435 2d4f FE000000 		.4byte	.LFE50
 17436 2d53 0100     		.2byte	0x1
 17437 2d55 54       		.byte	0x54
 17438 2d56 00000000 		.4byte	0
 17439 2d5a 00000000 		.4byte	0
 17440              	.LLST216:
 17441 2d5e 3A000000 		.4byte	.LVL925
 17442 2d62 51000000 		.4byte	.LVL929-1
 17443 2d66 0100     		.2byte	0x1
 17444 2d68 50       		.byte	0x50
 17445 2d69 51000000 		.4byte	.LVL929-1
 17446 2d6d F6000000 		.4byte	.LVL947
 17447 2d71 0100     		.2byte	0x1
 17448 2d73 55       		.byte	0x55
 17449 2d74 00000000 		.4byte	0
 17450 2d78 00000000 		.4byte	0
 17451              	.LLST217:
 17452 2d7c A4000000 		.4byte	.LVL938
 17453 2d80 AD000000 		.4byte	.LVL939-1
 17454 2d84 0200     		.2byte	0x2
 17455 2d86 91       		.byte	0x91
 17456 2d87 4C       		.sleb128 -52
 17457 2d88 00000000 		.4byte	0
 17458 2d8c 00000000 		.4byte	0
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 408


 17459              	.LLST218:
 17460 2d90 54000000 		.4byte	.LVL930
 17461 2d94 5A000000 		.4byte	.LVL931
 17462 2d98 0100     		.2byte	0x1
 17463 2d9a 50       		.byte	0x50
 17464 2d9b 5A000000 		.4byte	.LVL931
 17465 2d9f F6000000 		.4byte	.LVL947
 17466 2da3 0100     		.2byte	0x1
 17467 2da5 56       		.byte	0x56
 17468 2da6 00000000 		.4byte	0
 17469 2daa 00000000 		.4byte	0
 17470              	.LLST219:
 17471 2dae 00000000 		.4byte	.LVL949
 17472 2db2 08000000 		.4byte	.LVL950
 17473 2db6 0100     		.2byte	0x1
 17474 2db8 50       		.byte	0x50
 17475 2db9 08000000 		.4byte	.LVL950
 17476 2dbd 16000000 		.4byte	.LVL952
 17477 2dc1 0300     		.2byte	0x3
 17478 2dc3 91       		.byte	0x91
 17479 2dc4 EC7E     		.sleb128 -148
 17480 2dc6 16000000 		.4byte	.LVL952
 17481 2dca 19000000 		.4byte	.LVL953-1
 17482 2dce 0200     		.2byte	0x2
 17483 2dd0 70       		.byte	0x70
 17484 2dd1 00       		.sleb128 0
 17485 2dd2 19000000 		.4byte	.LVL953-1
 17486 2dd6 1C010000 		.4byte	.LFE51
 17487 2dda 0300     		.2byte	0x3
 17488 2ddc 91       		.byte	0x91
 17489 2ddd EC7E     		.sleb128 -148
 17490 2ddf 00000000 		.4byte	0
 17491 2de3 00000000 		.4byte	0
 17492              	.LLST220:
 17493 2de7 00000000 		.4byte	.LVL949
 17494 2deb 0F000000 		.4byte	.LVL951-1
 17495 2def 0100     		.2byte	0x1
 17496 2df1 51       		.byte	0x51
 17497 2df2 0F000000 		.4byte	.LVL951-1
 17498 2df6 1C010000 		.4byte	.LFE51
 17499 2dfa 0300     		.2byte	0x3
 17500 2dfc 91       		.byte	0x91
 17501 2dfd E87E     		.sleb128 -152
 17502 2dff 00000000 		.4byte	0
 17503 2e03 00000000 		.4byte	0
 17504              	.LLST221:
 17505 2e07 1A000000 		.4byte	.LVL953
 17506 2e0b 28000000 		.4byte	.LVL954
 17507 2e0f 0100     		.2byte	0x1
 17508 2e11 50       		.byte	0x50
 17509 2e12 2C000000 		.4byte	.LVL955
 17510 2e16 3C000000 		.4byte	.LVL956
 17511 2e1a 0100     		.2byte	0x1
 17512 2e1c 50       		.byte	0x50
 17513 2e1d 3C000000 		.4byte	.LVL956
 17514 2e21 5C000000 		.4byte	.LVL959
 17515 2e25 0100     		.2byte	0x1
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 409


 17516 2e27 54       		.byte	0x54
 17517 2e28 5C000000 		.4byte	.LVL959
 17518 2e2c 7A000000 		.4byte	.LVL960
 17519 2e30 0100     		.2byte	0x1
 17520 2e32 50       		.byte	0x50
 17521 2e33 7A000000 		.4byte	.LVL960
 17522 2e37 84000000 		.4byte	.LVL961
 17523 2e3b 0100     		.2byte	0x1
 17524 2e3d 54       		.byte	0x54
 17525 2e3e 84000000 		.4byte	.LVL961
 17526 2e42 96000000 		.4byte	.LVL963
 17527 2e46 0100     		.2byte	0x1
 17528 2e48 50       		.byte	0x50
 17529 2e49 DE000000 		.4byte	.LVL968
 17530 2e4d F4000000 		.4byte	.LVL970
 17531 2e51 0100     		.2byte	0x1
 17532 2e53 50       		.byte	0x50
 17533 2e54 02010000 		.4byte	.LVL973
 17534 2e58 0A010000 		.4byte	.LVL974
 17535 2e5c 0100     		.2byte	0x1
 17536 2e5e 54       		.byte	0x54
 17537 2e5f 0A010000 		.4byte	.LVL974
 17538 2e63 10010000 		.4byte	.LVL975
 17539 2e67 0100     		.2byte	0x1
 17540 2e69 50       		.byte	0x50
 17541 2e6a 16010000 		.4byte	.LVL977
 17542 2e6e 1C010000 		.4byte	.LFE51
 17543 2e72 0100     		.2byte	0x1
 17544 2e74 54       		.byte	0x54
 17545 2e75 00000000 		.4byte	0
 17546 2e79 00000000 		.4byte	0
 17547              	.LLST222:
 17548 2e7d 8C000000 		.4byte	.LVL962
 17549 2e81 E4000000 		.4byte	.LVL969
 17550 2e85 0100     		.2byte	0x1
 17551 2e87 55       		.byte	0x55
 17552 2e88 E4000000 		.4byte	.LVL969
 17553 2e8c F7000000 		.4byte	.LVL971-1
 17554 2e90 0100     		.2byte	0x1
 17555 2e92 51       		.byte	0x51
 17556 2e93 00010000 		.4byte	.LVL972
 17557 2e97 02010000 		.4byte	.LVL973
 17558 2e9b 0100     		.2byte	0x1
 17559 2e9d 55       		.byte	0x55
 17560 2e9e 00000000 		.4byte	0
 17561 2ea2 00000000 		.4byte	0
 17562              	.LLST223:
 17563 2ea6 D4000000 		.4byte	.LVL966
 17564 2eaa DA000000 		.4byte	.LVL967
 17565 2eae 0100     		.2byte	0x1
 17566 2eb0 50       		.byte	0x50
 17567 2eb1 DA000000 		.4byte	.LVL967
 17568 2eb5 DD000000 		.4byte	.LVL968-1
 17569 2eb9 0100     		.2byte	0x1
 17570 2ebb 51       		.byte	0x51
 17571 2ebc 00010000 		.4byte	.LVL972
 17572 2ec0 02010000 		.4byte	.LVL973
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 410


 17573 2ec4 0100     		.2byte	0x1
 17574 2ec6 50       		.byte	0x50
 17575 2ec7 00000000 		.4byte	0
 17576 2ecb 00000000 		.4byte	0
 17577              		.section	.debug_aranges,"",%progbits
 17578 0000 B4010000 		.4byte	0x1b4
 17579 0004 0200     		.2byte	0x2
 17580 0006 00000000 		.4byte	.Ldebug_info0
 17581 000a 04       		.byte	0x4
 17582 000b 00       		.byte	0
 17583 000c 0000     		.2byte	0
 17584 000e 0000     		.2byte	0
 17585 0010 00000000 		.4byte	.LFB0
 17586 0014 0A000000 		.4byte	.LFE0-.LFB0
 17587 0018 00000000 		.4byte	.LFB1
 17588 001c 16000000 		.4byte	.LFE1-.LFB1
 17589 0020 00000000 		.4byte	.LFB2
 17590 0024 08000000 		.4byte	.LFE2-.LFB2
 17591 0028 00000000 		.4byte	.LFB3
 17592 002c 14000000 		.4byte	.LFE3-.LFB3
 17593 0030 00000000 		.4byte	.LFB4
 17594 0034 12000000 		.4byte	.LFE4-.LFB4
 17595 0038 00000000 		.4byte	.LFB5
 17596 003c 0A000000 		.4byte	.LFE5-.LFB5
 17597 0040 00000000 		.4byte	.LFB6
 17598 0044 1E000000 		.4byte	.LFE6-.LFB6
 17599 0048 00000000 		.4byte	.LFB7
 17600 004c 10000000 		.4byte	.LFE7-.LFB7
 17601 0050 00000000 		.4byte	.LFB8
 17602 0054 24000000 		.4byte	.LFE8-.LFB8
 17603 0058 00000000 		.4byte	.LFB9
 17604 005c 26000000 		.4byte	.LFE9-.LFB9
 17605 0060 00000000 		.4byte	.LFB13
 17606 0064 18000000 		.4byte	.LFE13-.LFB13
 17607 0068 00000000 		.4byte	.LFB22
 17608 006c 24000000 		.4byte	.LFE22-.LFB22
 17609 0070 00000000 		.4byte	.LFB23
 17610 0074 24000000 		.4byte	.LFE23-.LFB23
 17611 0078 00000000 		.4byte	.LFB28
 17612 007c 6A000000 		.4byte	.LFE28-.LFB28
 17613 0080 00000000 		.4byte	.LFB29
 17614 0084 00010000 		.4byte	.LFE29-.LFB29
 17615 0088 00000000 		.4byte	.LFB31
 17616 008c 52000000 		.4byte	.LFE31-.LFB31
 17617 0090 00000000 		.4byte	.LFB35
 17618 0094 46000000 		.4byte	.LFE35-.LFB35
 17619 0098 00000000 		.4byte	.LFB10
 17620 009c 50000000 		.4byte	.LFE10-.LFB10
 17621 00a0 00000000 		.4byte	.LFB11
 17622 00a4 34000000 		.4byte	.LFE11-.LFB11
 17623 00a8 00000000 		.4byte	.LFB32
 17624 00ac 70000000 		.4byte	.LFE32-.LFB32
 17625 00b0 00000000 		.4byte	.LFB33
 17626 00b4 6C000000 		.4byte	.LFE33-.LFB33
 17627 00b8 00000000 		.4byte	.LFB34
 17628 00bc BC020000 		.4byte	.LFE34-.LFB34
 17629 00c0 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 411


 17630 00c4 04010000 		.4byte	.LFE15-.LFB15
 17631 00c8 00000000 		.4byte	.LFB14
 17632 00cc D4000000 		.4byte	.LFE14-.LFB14
 17633 00d0 00000000 		.4byte	.LFB19
 17634 00d4 B2000000 		.4byte	.LFE19-.LFB19
 17635 00d8 00000000 		.4byte	.LFB17
 17636 00dc 14010000 		.4byte	.LFE17-.LFB17
 17637 00e0 00000000 		.4byte	.LFB16
 17638 00e4 7C000000 		.4byte	.LFE16-.LFB16
 17639 00e8 00000000 		.4byte	.LFB27
 17640 00ec 20000000 		.4byte	.LFE27-.LFB27
 17641 00f0 00000000 		.4byte	.LFB18
 17642 00f4 52000000 		.4byte	.LFE18-.LFB18
 17643 00f8 00000000 		.4byte	.LFB20
 17644 00fc D6000000 		.4byte	.LFE20-.LFB20
 17645 0100 00000000 		.4byte	.LFB25
 17646 0104 56000000 		.4byte	.LFE25-.LFB25
 17647 0108 00000000 		.4byte	.LFB30
 17648 010c 8E000000 		.4byte	.LFE30-.LFB30
 17649 0110 00000000 		.4byte	.LFB21
 17650 0114 4C000000 		.4byte	.LFE21-.LFB21
 17651 0118 00000000 		.4byte	.LFB26
 17652 011c 3A000000 		.4byte	.LFE26-.LFB26
 17653 0120 00000000 		.4byte	.LFB24
 17654 0124 60000000 		.4byte	.LFE24-.LFB24
 17655 0128 00000000 		.4byte	.LFB12
 17656 012c 8C000000 		.4byte	.LFE12-.LFB12
 17657 0130 00000000 		.4byte	.LFB36
 17658 0134 50000000 		.4byte	.LFE36-.LFB36
 17659 0138 00000000 		.4byte	.LFB37
 17660 013c CE010000 		.4byte	.LFE37-.LFB37
 17661 0140 00000000 		.4byte	.LFB38
 17662 0144 74010000 		.4byte	.LFE38-.LFB38
 17663 0148 00000000 		.4byte	.LFB39
 17664 014c AC010000 		.4byte	.LFE39-.LFB39
 17665 0150 00000000 		.4byte	.LFB40
 17666 0154 9C000000 		.4byte	.LFE40-.LFB40
 17667 0158 00000000 		.4byte	.LFB41
 17668 015c 24000000 		.4byte	.LFE41-.LFB41
 17669 0160 00000000 		.4byte	.LFB42
 17670 0164 7A010000 		.4byte	.LFE42-.LFB42
 17671 0168 00000000 		.4byte	.LFB43
 17672 016c 72000000 		.4byte	.LFE43-.LFB43
 17673 0170 00000000 		.4byte	.LFB44
 17674 0174 1A000000 		.4byte	.LFE44-.LFB44
 17675 0178 00000000 		.4byte	.LFB45
 17676 017c 4C000000 		.4byte	.LFE45-.LFB45
 17677 0180 00000000 		.4byte	.LFB46
 17678 0184 3E000000 		.4byte	.LFE46-.LFB46
 17679 0188 00000000 		.4byte	.LFB47
 17680 018c CE000000 		.4byte	.LFE47-.LFB47
 17681 0190 00000000 		.4byte	.LFB48
 17682 0194 B4000000 		.4byte	.LFE48-.LFB48
 17683 0198 00000000 		.4byte	.LFB49
 17684 019c AC000000 		.4byte	.LFE49-.LFB49
 17685 01a0 00000000 		.4byte	.LFB50
 17686 01a4 FE000000 		.4byte	.LFE50-.LFB50
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 412


 17687 01a8 00000000 		.4byte	.LFB51
 17688 01ac 1C010000 		.4byte	.LFE51-.LFB51
 17689 01b0 00000000 		.4byte	0
 17690 01b4 00000000 		.4byte	0
 17691              		.section	.debug_ranges,"",%progbits
 17692              	.Ldebug_ranges0:
 17693 0000 00000000 		.4byte	.LFB0
 17694 0004 0A000000 		.4byte	.LFE0
 17695 0008 00000000 		.4byte	.LFB1
 17696 000c 16000000 		.4byte	.LFE1
 17697 0010 00000000 		.4byte	.LFB2
 17698 0014 08000000 		.4byte	.LFE2
 17699 0018 00000000 		.4byte	.LFB3
 17700 001c 14000000 		.4byte	.LFE3
 17701 0020 00000000 		.4byte	.LFB4
 17702 0024 12000000 		.4byte	.LFE4
 17703 0028 00000000 		.4byte	.LFB5
 17704 002c 0A000000 		.4byte	.LFE5
 17705 0030 00000000 		.4byte	.LFB6
 17706 0034 1E000000 		.4byte	.LFE6
 17707 0038 00000000 		.4byte	.LFB7
 17708 003c 10000000 		.4byte	.LFE7
 17709 0040 00000000 		.4byte	.LFB8
 17710 0044 24000000 		.4byte	.LFE8
 17711 0048 00000000 		.4byte	.LFB9
 17712 004c 26000000 		.4byte	.LFE9
 17713 0050 00000000 		.4byte	.LFB13
 17714 0054 18000000 		.4byte	.LFE13
 17715 0058 00000000 		.4byte	.LFB22
 17716 005c 24000000 		.4byte	.LFE22
 17717 0060 00000000 		.4byte	.LFB23
 17718 0064 24000000 		.4byte	.LFE23
 17719 0068 00000000 		.4byte	.LFB28
 17720 006c 6A000000 		.4byte	.LFE28
 17721 0070 00000000 		.4byte	.LFB29
 17722 0074 00010000 		.4byte	.LFE29
 17723 0078 00000000 		.4byte	.LFB31
 17724 007c 52000000 		.4byte	.LFE31
 17725 0080 00000000 		.4byte	.LFB35
 17726 0084 46000000 		.4byte	.LFE35
 17727 0088 00000000 		.4byte	.LFB10
 17728 008c 50000000 		.4byte	.LFE10
 17729 0090 00000000 		.4byte	.LFB11
 17730 0094 34000000 		.4byte	.LFE11
 17731 0098 00000000 		.4byte	.LFB32
 17732 009c 70000000 		.4byte	.LFE32
 17733 00a0 00000000 		.4byte	.LFB33
 17734 00a4 6C000000 		.4byte	.LFE33
 17735 00a8 00000000 		.4byte	.LFB34
 17736 00ac BC020000 		.4byte	.LFE34
 17737 00b0 00000000 		.4byte	.LFB15
 17738 00b4 04010000 		.4byte	.LFE15
 17739 00b8 00000000 		.4byte	.LFB14
 17740 00bc D4000000 		.4byte	.LFE14
 17741 00c0 00000000 		.4byte	.LFB19
 17742 00c4 B2000000 		.4byte	.LFE19
 17743 00c8 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 413


 17744 00cc 14010000 		.4byte	.LFE17
 17745 00d0 00000000 		.4byte	.LFB16
 17746 00d4 7C000000 		.4byte	.LFE16
 17747 00d8 00000000 		.4byte	.LFB27
 17748 00dc 20000000 		.4byte	.LFE27
 17749 00e0 00000000 		.4byte	.LFB18
 17750 00e4 52000000 		.4byte	.LFE18
 17751 00e8 00000000 		.4byte	.LFB20
 17752 00ec D6000000 		.4byte	.LFE20
 17753 00f0 00000000 		.4byte	.LFB25
 17754 00f4 56000000 		.4byte	.LFE25
 17755 00f8 00000000 		.4byte	.LFB30
 17756 00fc 8E000000 		.4byte	.LFE30
 17757 0100 00000000 		.4byte	.LFB21
 17758 0104 4C000000 		.4byte	.LFE21
 17759 0108 00000000 		.4byte	.LFB26
 17760 010c 3A000000 		.4byte	.LFE26
 17761 0110 00000000 		.4byte	.LFB24
 17762 0114 60000000 		.4byte	.LFE24
 17763 0118 00000000 		.4byte	.LFB12
 17764 011c 8C000000 		.4byte	.LFE12
 17765 0120 00000000 		.4byte	.LFB36
 17766 0124 50000000 		.4byte	.LFE36
 17767 0128 00000000 		.4byte	.LFB37
 17768 012c CE010000 		.4byte	.LFE37
 17769 0130 00000000 		.4byte	.LFB38
 17770 0134 74010000 		.4byte	.LFE38
 17771 0138 00000000 		.4byte	.LFB39
 17772 013c AC010000 		.4byte	.LFE39
 17773 0140 00000000 		.4byte	.LFB40
 17774 0144 9C000000 		.4byte	.LFE40
 17775 0148 00000000 		.4byte	.LFB41
 17776 014c 24000000 		.4byte	.LFE41
 17777 0150 00000000 		.4byte	.LFB42
 17778 0154 7A010000 		.4byte	.LFE42
 17779 0158 00000000 		.4byte	.LFB43
 17780 015c 72000000 		.4byte	.LFE43
 17781 0160 00000000 		.4byte	.LFB44
 17782 0164 1A000000 		.4byte	.LFE44
 17783 0168 00000000 		.4byte	.LFB45
 17784 016c 4C000000 		.4byte	.LFE45
 17785 0170 00000000 		.4byte	.LFB46
 17786 0174 3E000000 		.4byte	.LFE46
 17787 0178 00000000 		.4byte	.LFB47
 17788 017c CE000000 		.4byte	.LFE47
 17789 0180 00000000 		.4byte	.LFB48
 17790 0184 B4000000 		.4byte	.LFE48
 17791 0188 00000000 		.4byte	.LFB49
 17792 018c AC000000 		.4byte	.LFE49
 17793 0190 00000000 		.4byte	.LFB50
 17794 0194 FE000000 		.4byte	.LFE50
 17795 0198 00000000 		.4byte	.LFB51
 17796 019c 1C010000 		.4byte	.LFE51
 17797 01a0 00000000 		.4byte	0
 17798 01a4 00000000 		.4byte	0
 17799              		.section	.debug_line,"",%progbits
 17800              	.Ldebug_line0:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 414


 17801 0000 300D0000 		.section	.debug_str,"MS",%progbits,1
 17801      02003E01 
 17801      00000201 
 17801      FB0E0D00 
 17801      01010101 
 17802              	.LASF80:
 17803 0000 5245535F 		.ascii	"RES_WRPRT\000"
 17803      57525052 
 17803      5400
 17804              	.LASF74:
 17805 000a 46525F54 		.ascii	"FR_TOO_MANY_OPEN_FILES\000"
 17805      4F4F5F4D 
 17805      414E595F 
 17805      4F50454E 
 17805      5F46494C 
 17806              	.LASF117:
 17807 0021 7075745F 		.ascii	"put_fat\000"
 17807      66617400 
 17808              	.LASF21:
 17809 0029 66735F74 		.ascii	"fs_type\000"
 17809      79706500 
 17810              	.LASF141:
 17811 0031 63736563 		.ascii	"csect\000"
 17811      7400
 17812              	.LASF90:
 17813 0037 63686B5F 		.ascii	"chk_chr\000"
 17813      63687200 
 17814              	.LASF166:
 17815 003f 46617446 		.ascii	"FatFs\000"
 17815      7300
 17816              	.LASF150:
 17817 0045 69667074 		.ascii	"ifptr\000"
 17817      7200
 17818              	.LASF137:
 17819 004b 665F7265 		.ascii	"f_read\000"
 17819      616400
 17820              	.LASF81:
 17821 0052 5245535F 		.ascii	"RES_NOTRDY\000"
 17821      4E4F5452 
 17821      445900
 17822              	.LASF26:
 17823 005d 6E5F726F 		.ascii	"n_rootdir\000"
 17823      6F746469 
 17823      7200
 17824              	.LASF99:
 17825 0067 70617468 		.ascii	"path\000"
 17825      00
 17826              	.LASF132:
 17827 006c 6469725F 		.ascii	"dir_register\000"
 17827      72656769 
 17827      73746572 
 17827      00
 17828              	.LASF142:
 17829 0079 72627566 		.ascii	"rbuff\000"
 17829      6600
 17830              	.LASF9:
 17831 007f 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 415


 17831      206C6F6E 
 17831      6720756E 
 17831      7369676E 
 17831      65642069 
 17832              	.LASF128:
 17833 0096 6469725F 		.ascii	"dir_find\000"
 17833      66696E64 
 17833      00
 17834              	.LASF47:
 17835 009f 73656374 		.ascii	"sect\000"
 17835      00
 17836              	.LASF113:
 17837 00a4 66617369 		.ascii	"fasize\000"
 17837      7A6500
 17838              	.LASF116:
 17839 00ab 6E727376 		.ascii	"nrsv\000"
 17839      00
 17840              	.LASF106:
 17841 00b0 70617274 		.ascii	"part\000"
 17841      00
 17842              	.LASF48:
 17843 00b5 6469725F 		.ascii	"dir_sect\000"
 17843      73656374 
 17843      00
 17844              	.LASF34:
 17845 00be 64697262 		.ascii	"dirbase\000"
 17845      61736500 
 17846              	.LASF8:
 17847 00c6 6C6F6E67 		.ascii	"long long int\000"
 17847      206C6F6E 
 17847      6720696E 
 17847      7400
 17848              	.LASF0:
 17849 00d4 7369676E 		.ascii	"signed char\000"
 17849      65642063 
 17849      68617200 
 17850              	.LASF162:
 17851 00e0 736F626A 		.ascii	"sobj\000"
 17851      00
 17852              	.LASF75:
 17853 00e5 46525F49 		.ascii	"FR_INVALID_PARAMETER\000"
 17853      4E56414C 
 17853      49445F50 
 17853      4152414D 
 17853      45544552 
 17854              	.LASF31:
 17855 00fa 6673697A 		.ascii	"fsize\000"
 17855      6500
 17856              	.LASF30:
 17857 0100 6E5F6661 		.ascii	"n_fatent\000"
 17857      74656E74 
 17857      00
 17858              	.LASF174:
 17859 0109 6765745F 		.ascii	"get_fattime\000"
 17859      66617474 
 17859      696D6500 
 17860              	.LASF65:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 416


 17861 0115 46525F49 		.ascii	"FR_INVALID_OBJECT\000"
 17861      4E56414C 
 17861      49445F4F 
 17861      424A4543 
 17861      5400
 17862              	.LASF4:
 17863 0127 6C6F6E67 		.ascii	"long int\000"
 17863      20696E74 
 17863      00
 17864              	.LASF123:
 17865 0130 6469725F 		.ascii	"dir_remove\000"
 17865      72656D6F 
 17865      766500
 17866              	.LASF82:
 17867 013b 5245535F 		.ascii	"RES_PARERR\000"
 17867      50415245 
 17867      525200
 17868              	.LASF23:
 17869 0146 6E5F6661 		.ascii	"n_fats\000"
 17869      747300
 17870              	.LASF177:
 17871 014d 433A5C55 		.ascii	"C:\\Users\\wa2n8\\Desktop\\PSoC\\PSoC5LP-FatFs-with"
 17871      73657273 
 17871      5C776132 
 17871      6E385C44 
 17871      65736B74 
 17872 017b 2D467265 		.ascii	"-FreeRTOS\\PSoC_FatFs\\FatFs.cylib\000"
 17872      6552544F 
 17872      535C5053 
 17872      6F435F46 
 17872      61744673 
 17873              	.LASF138:
 17874 019c 62756666 		.ascii	"buff\000"
 17874      00
 17875              	.LASF96:
 17876 01a1 73745F63 		.ascii	"st_clust\000"
 17876      6C757374 
 17876      00
 17877              	.LASF69:
 17878 01aa 46525F4E 		.ascii	"FR_NO_FILESYSTEM\000"
 17878      4F5F4649 
 17878      4C455359 
 17878      5354454D 
 17878      00
 17879              	.LASF11:
 17880 01bb 75696E74 		.ascii	"uint16_t\000"
 17880      31365F74 
 17880      00
 17881              	.LASF73:
 17882 01c4 46525F4E 		.ascii	"FR_NOT_ENOUGH_CORE\000"
 17882      4F545F45 
 17882      4E4F5547 
 17882      485F434F 
 17882      524500
 17883              	.LASF64:
 17884 01d7 46525F45 		.ascii	"FR_EXIST\000"
 17884      58495354 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 417


 17884      00
 17885              	.LASF33:
 17886 01e0 66617462 		.ascii	"fatbase\000"
 17886      61736500 
 17887              	.LASF16:
 17888 01e8 44574F52 		.ascii	"DWORD\000"
 17888      4400
 17889              	.LASF143:
 17890 01ee 665F7772 		.ascii	"f_write\000"
 17890      69746500 
 17891              	.LASF19:
 17892 01f6 4653495A 		.ascii	"FSIZE_t\000"
 17892      455F7400 
 17893              	.LASF154:
 17894 01fe 665F7374 		.ascii	"f_stat\000"
 17894      617400
 17895              	.LASF102:
 17896 0205 73796E63 		.ascii	"sync_window\000"
 17896      5F77696E 
 17896      646F7700 
 17897              	.LASF6:
 17898 0211 5F5F7569 		.ascii	"__uint32_t\000"
 17898      6E743332 
 17898      5F7400
 17899              	.LASF127:
 17900 021c 73747265 		.ascii	"stretch\000"
 17900      74636800 
 17901              	.LASF27:
 17902 0224 6373697A 		.ascii	"csize\000"
 17902      6500
 17903              	.LASF172:
 17904 022a 6469736B 		.ascii	"disk_initialize\000"
 17904      5F696E69 
 17904      7469616C 
 17904      697A6500 
 17905              	.LASF176:
 17906 023a 2E2E5C2E 		.ascii	"..\\..\\ff14\\source\\ff.c\000"
 17906      2E5C6666 
 17906      31345C73 
 17906      6F757263 
 17906      655C6666 
 17907              	.LASF22:
 17908 0251 70647276 		.ascii	"pdrv\000"
 17908      00
 17909              	.LASF29:
 17910 0256 66726565 		.ascii	"free_clst\000"
 17910      5F636C73 
 17910      7400
 17911              	.LASF14:
 17912 0260 42595445 		.ascii	"BYTE\000"
 17912      00
 17913              	.LASF49:
 17914 0265 6469725F 		.ascii	"dir_ptr\000"
 17914      70747200 
 17915              	.LASF39:
 17916 026d 61747472 		.ascii	"attr\000"
 17916      00
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 418


 17917              	.LASF109:
 17918 0272 6D6F6465 		.ascii	"mode\000"
 17918      00
 17919              	.LASF93:
 17920 0277 636C7374 		.ascii	"clst2sect\000"
 17920      32736563 
 17920      7400
 17921              	.LASF119:
 17922 0281 6469725F 		.ascii	"dir_sdi\000"
 17922      73646900 
 17923              	.LASF10:
 17924 0289 756E7369 		.ascii	"unsigned int\000"
 17924      676E6564 
 17924      20696E74 
 17924      00
 17925              	.LASF13:
 17926 0296 55494E54 		.ascii	"UINT\000"
 17926      00
 17927              	.LASF52:
 17928 029b 6674696D 		.ascii	"ftime\000"
 17928      6500
 17929              	.LASF7:
 17930 02a1 6C6F6E67 		.ascii	"long unsigned int\000"
 17930      20756E73 
 17930      69676E65 
 17930      6420696E 
 17930      7400
 17931              	.LASF169:
 17932 02b3 6469736B 		.ascii	"disk_status\000"
 17932      5F737461 
 17932      74757300 
 17933              	.LASF147:
 17934 02bf 665F636C 		.ascii	"f_close\000"
 17934      6F736500 
 17935              	.LASF110:
 17936 02c7 62736563 		.ascii	"bsect\000"
 17936      7400
 17937              	.LASF112:
 17938 02cd 73797365 		.ascii	"sysect\000"
 17938      637400
 17939              	.LASF3:
 17940 02d4 73686F72 		.ascii	"short unsigned int\000"
 17940      7420756E 
 17940      7369676E 
 17940      65642069 
 17940      6E7400
 17941              	.LASF35:
 17942 02e7 64617461 		.ascii	"database\000"
 17942      62617365 
 17942      00
 17943              	.LASF163:
 17944 02f0 665F7265 		.ascii	"f_rename\000"
 17944      6E616D65 
 17944      00
 17945              	.LASF94:
 17946 02f9 636C7374 		.ascii	"clst\000"
 17946      00
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 419


 17947              	.LASF58:
 17948 02fe 46525F49 		.ascii	"FR_INT_ERR\000"
 17948      4E545F45 
 17948      525200
 17949              	.LASF165:
 17950 0309 70617468 		.ascii	"path_new\000"
 17950      5F6E6577 
 17950      00
 17951              	.LASF57:
 17952 0312 46525F44 		.ascii	"FR_DISK_ERR\000"
 17952      49534B5F 
 17952      45525200 
 17953              	.LASF36:
 17954 031e 77696E73 		.ascii	"winsect\000"
 17954      65637400 
 17955              	.LASF89:
 17956 0326 6D656D5F 		.ascii	"mem_cmp\000"
 17956      636D7000 
 17957              	.LASF115:
 17958 032e 737A6266 		.ascii	"szbfat\000"
 17958      617400
 17959              	.LASF126:
 17960 0335 6469725F 		.ascii	"dir_next\000"
 17960      6E657874 
 17960      00
 17961              	.LASF157:
 17962 033e 6E667265 		.ascii	"nfree\000"
 17962      6500
 17963              	.LASF168:
 17964 0344 44626354 		.ascii	"DbcTbl\000"
 17964      626C00
 17965              	.LASF54:
 17966 034b 666E616D 		.ascii	"fname\000"
 17966      6500
 17967              	.LASF66:
 17968 0351 46525F57 		.ascii	"FR_WRITE_PROTECTED\000"
 17968      52495445 
 17968      5F50524F 
 17968      54454354 
 17968      454400
 17969              	.LASF173:
 17970 0364 6469736B 		.ascii	"disk_ioctl\000"
 17970      5F696F63 
 17970      746C00
 17971              	.LASF38:
 17972 036f 46415446 		.ascii	"FATFS\000"
 17972      5300
 17973              	.LASF161:
 17974 0375 665F6D6B 		.ascii	"f_mkdir\000"
 17974      64697200 
 17975              	.LASF51:
 17976 037d 66646174 		.ascii	"fdate\000"
 17976      6500
 17977              	.LASF146:
 17978 0383 665F7379 		.ascii	"f_sync\000"
 17978      6E6300
 17979              	.LASF144:
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 420


 17980 038a 77636E74 		.ascii	"wcnt\000"
 17980      00
 17981              	.LASF45:
 17982 038f 66707472 		.ascii	"fptr\000"
 17982      00
 17983              	.LASF107:
 17984 0394 6D62725F 		.ascii	"mbr_pt\000"
 17984      707400
 17985              	.LASF88:
 17986 039b 6D656D5F 		.ascii	"mem_set\000"
 17986      73657400 
 17987              	.LASF37:
 17988 03a3 73697A65 		.ascii	"sizetype\000"
 17988      74797065 
 17988      00
 17989              	.LASF97:
 17990 03ac 6765745F 		.ascii	"get_fileinfo\000"
 17990      66696C65 
 17990      696E666F 
 17990      00
 17991              	.LASF114:
 17992 03b9 6E636C73 		.ascii	"nclst\000"
 17992      7400
 17993              	.LASF71:
 17994 03bf 46525F54 		.ascii	"FR_TIMEOUT\000"
 17994      494D454F 
 17994      555400
 17995              	.LASF15:
 17996 03ca 574F5244 		.ascii	"WORD\000"
 17996      00
 17997              	.LASF41:
 17998 03cf 73636C75 		.ascii	"sclust\000"
 17998      737400
 17999              	.LASF78:
 18000 03d6 5245535F 		.ascii	"RES_OK\000"
 18000      4F4B00
 18001              	.LASF60:
 18002 03dd 46525F4E 		.ascii	"FR_NO_FILE\000"
 18002      4F5F4649 
 18002      4C4500
 18003              	.LASF156:
 18004 03e8 66617466 		.ascii	"fatfs\000"
 18004      7300
 18005              	.LASF17:
 18006 03ee 54434841 		.ascii	"TCHAR\000"
 18006      5200
 18007              	.LASF124:
 18008 03f4 6469725F 		.ascii	"dir_clear\000"
 18008      636C6561 
 18008      7200
 18009              	.LASF86:
 18010 03fe 73745F64 		.ascii	"st_dword\000"
 18010      776F7264 
 18010      00
 18011              	.LASF134:
 18012 0407 73796E63 		.ascii	"sync_fs\000"
 18012      5F667300 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 421


 18013              	.LASF68:
 18014 040f 46525F4E 		.ascii	"FR_NOT_ENABLED\000"
 18014      4F545F45 
 18014      4E41424C 
 18014      454400
 18015              	.LASF28:
 18016 041e 6C617374 		.ascii	"last_clst\000"
 18016      5F636C73 
 18016      7400
 18017              	.LASF155:
 18018 0428 665F6765 		.ascii	"f_getfree\000"
 18018      74667265 
 18018      6500
 18019              	.LASF100:
 18020 0432 6765745F 		.ascii	"get_ldnumber\000"
 18020      6C646E75 
 18020      6D626572 
 18020      00
 18021              	.LASF125:
 18022 043f 69627566 		.ascii	"ibuf\000"
 18022      00
 18023              	.LASF42:
 18024 0444 6F626A73 		.ascii	"objsize\000"
 18024      697A6500 
 18025              	.LASF135:
 18026 044c 665F6D6F 		.ascii	"f_mount\000"
 18026      756E7400 
 18027              	.LASF160:
 18028 0454 64636C73 		.ascii	"dclst\000"
 18028      7400
 18029              	.LASF118:
 18030 045a 6765745F 		.ascii	"get_fat\000"
 18030      66617400 
 18031              	.LASF120:
 18032 0462 63726561 		.ascii	"create_chain\000"
 18032      74655F63 
 18032      6861696E 
 18032      00
 18033              	.LASF148:
 18034 046f 665F6C73 		.ascii	"f_lseek\000"
 18034      65656B00 
 18035              	.LASF108:
 18036 0477 6D6F756E 		.ascii	"mount_volume\000"
 18036      745F766F 
 18036      6C756D65 
 18036      00
 18037              	.LASF1:
 18038 0484 756E7369 		.ascii	"unsigned char\000"
 18038      676E6564 
 18038      20636861 
 18038      7200
 18039              	.LASF159:
 18040 0492 665F756E 		.ascii	"f_unlink\000"
 18040      6C696E6B 
 18040      00
 18041              	.LASF145:
 18042 049b 77627566 		.ascii	"wbuff\000"
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 422


 18042      6600
 18043              	.LASF2:
 18044 04a1 73686F72 		.ascii	"short int\000"
 18044      7420696E 
 18044      7400
 18045              	.LASF105:
 18046 04ab 66696E64 		.ascii	"find_volume\000"
 18046      5F766F6C 
 18046      756D6500 
 18047              	.LASF91:
 18048 04b7 6462635F 		.ascii	"dbc_1st\000"
 18048      31737400 
 18049              	.LASF44:
 18050 04bf 666C6167 		.ascii	"flag\000"
 18050      00
 18051              	.LASF129:
 18052 04c4 666F6C6C 		.ascii	"follow_path\000"
 18052      6F775F70 
 18052      61746800 
 18053              	.LASF104:
 18054 04d0 63686563 		.ascii	"check_fs\000"
 18054      6B5F6673 
 18054      00
 18055              	.LASF67:
 18056 04d9 46525F49 		.ascii	"FR_INVALID_DRIVE\000"
 18056      4E56414C 
 18056      49445F44 
 18056      52495645 
 18056      00
 18057              	.LASF175:
 18058 04ea 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 18058      43313120 
 18058      352E342E 
 18058      31203230 
 18058      31363036 
 18059 051d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 18059      20726576 
 18059      6973696F 
 18059      6E203233 
 18059      37373135 
 18060 0550 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 18060      66756E63 
 18060      74696F6E 
 18060      2D736563 
 18060      74696F6E 
 18061              	.LASF101:
 18062 0578 76616C69 		.ascii	"validate\000"
 18062      64617465 
 18062      00
 18063              	.LASF50:
 18064 0581 64707472 		.ascii	"dptr\000"
 18064      00
 18065              	.LASF70:
 18066 0586 46525F4D 		.ascii	"FR_MKFS_ABORTED\000"
 18066      4B46535F 
 18066      41424F52 
 18066      54454400 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 423


 18067              	.LASF153:
 18068 0596 665F7265 		.ascii	"f_readdir\000"
 18068      61646469 
 18068      7200
 18069              	.LASF72:
 18070 05a0 46525F4C 		.ascii	"FR_LOCKED\000"
 18070      4F434B45 
 18070      4400
 18071              	.LASF24:
 18072 05aa 77666C61 		.ascii	"wflag\000"
 18072      6700
 18073              	.LASF12:
 18074 05b0 75696E74 		.ascii	"uint32_t\000"
 18074      33325F74 
 18074      00
 18075              	.LASF95:
 18076 05b9 6C645F63 		.ascii	"ld_clust\000"
 18076      6C757374 
 18076      00
 18077              	.LASF18:
 18078 05c2 63686172 		.ascii	"char\000"
 18078      00
 18079              	.LASF98:
 18080 05c7 63726561 		.ascii	"create_name\000"
 18080      74655F6E 
 18080      616D6500 
 18081              	.LASF5:
 18082 05d3 5F5F7569 		.ascii	"__uint16_t\000"
 18082      6E743136 
 18082      5F7400
 18083              	.LASF56:
 18084 05de 46525F4F 		.ascii	"FR_OK\000"
 18084      4B00
 18085              	.LASF122:
 18086 05e4 70636C73 		.ascii	"pclst\000"
 18086      7400
 18087              	.LASF130:
 18088 05ea 6469725F 		.ascii	"dir_alloc\000"
 18088      616C6C6F 
 18088      6300
 18089              	.LASF121:
 18090 05f4 72656D6F 		.ascii	"remove_chain\000"
 18090      76655F63 
 18090      6861696E 
 18090      00
 18091              	.LASF77:
 18092 0601 44535441 		.ascii	"DSTATUS\000"
 18092      54555300 
 18093              	.LASF131:
 18094 0609 6E656E74 		.ascii	"nent\000"
 18094      00
 18095              	.LASF92:
 18096 060e 6462635F 		.ascii	"dbc_2nd\000"
 18096      326E6400 
 18097              	.LASF32:
 18098 0616 766F6C62 		.ascii	"volbase\000"
 18098      61736500 
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 424


 18099              	.LASF83:
 18100 061e 6C645F77 		.ascii	"ld_word\000"
 18100      6F726400 
 18101              	.LASF151:
 18102 0626 665F6F70 		.ascii	"f_opendir\000"
 18102      656E6469 
 18102      7200
 18103              	.LASF62:
 18104 0630 46525F49 		.ascii	"FR_INVALID_NAME\000"
 18104      4E56414C 
 18104      49445F4E 
 18104      414D4500 
 18105              	.LASF170:
 18106 0640 6469736B 		.ascii	"disk_write\000"
 18106      5F777269 
 18106      746500
 18107              	.LASF103:
 18108 064b 6D6F7665 		.ascii	"move_window\000"
 18108      5F77696E 
 18108      646F7700 
 18109              	.LASF84:
 18110 0657 6C645F64 		.ascii	"ld_dword\000"
 18110      776F7264 
 18110      00
 18111              	.LASF25:
 18112 0660 6673695F 		.ascii	"fsi_flag\000"
 18112      666C6167 
 18112      00
 18113              	.LASF87:
 18114 0669 6D656D5F 		.ascii	"mem_cpy\000"
 18114      63707900 
 18115              	.LASF139:
 18116 0671 72656D61 		.ascii	"remain\000"
 18116      696E00
 18117              	.LASF53:
 18118 0678 66617474 		.ascii	"fattrib\000"
 18118      72696200 
 18119              	.LASF164:
 18120 0680 70617468 		.ascii	"path_old\000"
 18120      5F6F6C64 
 18120      00
 18121              	.LASF85:
 18122 0689 73745F77 		.ascii	"st_word\000"
 18122      6F726400 
 18123              	.LASF55:
 18124 0691 46494C49 		.ascii	"FILINFO\000"
 18124      4E464F00 
 18125              	.LASF158:
 18126 0699 665F7472 		.ascii	"f_truncate\000"
 18126      756E6361 
 18126      746500
 18127              	.LASF140:
 18128 06a4 72636E74 		.ascii	"rcnt\000"
 18128      00
 18129              	.LASF20:
 18130 06a9 4C42415F 		.ascii	"LBA_t\000"
 18130      7400
ARM GAS  C:\Users\wa2n8\AppData\Local\Temp\cc4CkfVL.s 			page 425


 18131              	.LASF149:
 18132 06af 6E736563 		.ascii	"nsect\000"
 18132      7400
 18133              	.LASF40:
 18134 06b5 73746174 		.ascii	"stat\000"
 18134      00
 18135              	.LASF76:
 18136 06ba 46524553 		.ascii	"FRESULT\000"
 18136      554C5400 
 18137              	.LASF79:
 18138 06c2 5245535F 		.ascii	"RES_ERROR\000"
 18138      4552524F 
 18138      5200
 18139              	.LASF133:
 18140 06cc 6469725F 		.ascii	"dir_read\000"
 18140      72656164 
 18140      00
 18141              	.LASF136:
 18142 06d5 665F6F70 		.ascii	"f_open\000"
 18142      656E00
 18143              	.LASF61:
 18144 06dc 46525F4E 		.ascii	"FR_NO_PATH\000"
 18144      4F5F5041 
 18144      544800
 18145              	.LASF152:
 18146 06e7 665F636C 		.ascii	"f_closedir\000"
 18146      6F736564 
 18146      697200
 18147              	.LASF59:
 18148 06f2 46525F4E 		.ascii	"FR_NOT_READY\000"
 18148      4F545F52 
 18148      45414459 
 18148      00
 18149              	.LASF43:
 18150 06ff 46464F42 		.ascii	"FFOBJID\000"
 18150      4A494400 
 18151              	.LASF171:
 18152 0707 6469736B 		.ascii	"disk_read\000"
 18152      5F726561 
 18152      6400
 18153              	.LASF63:
 18154 0711 46525F44 		.ascii	"FR_DENIED\000"
 18154      454E4945 
 18154      4400
 18155              	.LASF167:
 18156 071b 46736964 		.ascii	"Fsid\000"
 18156      00
 18157              	.LASF46:
 18158 0720 636C7573 		.ascii	"clust\000"
 18158      7400
 18159              	.LASF111:
 18160 0726 74736563 		.ascii	"tsect\000"
 18160      7400
 18161              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
